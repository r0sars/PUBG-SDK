// Enum Engine.ETextGender
enum class ETextGender : uint8_t
{
	Masculine                      = 0, 
	Feminine                       = 1, 
	Neuter                         = 2, 

};

// Enum Engine.EFormatArgumentType
enum class EFormatArgumentType : uint8_t
{
	Int                            = 0, 
	UInt                           = 1, 
	Float                          = 2, 
	Double                         = 3, 
	Text                           = 4, 
	Gender                         = 5, 

};

// Enum Engine.EEndPlayReason
enum class EEndPlayReason : uint8_t
{
	Destroyed                      = 0, 
	LevelTransition                = 1, 
	EndPlayInEditor                = 2, 
	RemovedFromWorld               = 3, 
	Quit                           = 4, 

};

// Enum Engine.ENavPathEvent
enum class ENavPathEvent : uint8_t
{
	Cleared                        = 0, 
	NewPath                        = 1, 
	UpdatedDueToGoalMoved          = 2, 
	UpdatedDueToNavigationChanged  = 3, 
	Invalidated                    = 4, 
	RePathFailed                   = 5, 
	MetaPathUpdate                 = 6, 
	Custom                         = 7, 

};

// Enum Engine.ETickingGroup
enum class ETickingGroup : uint8_t
{
	TG_PrePhysics                  = 0, 
	TG_PrePhysics                  = 0, 
	TG_StartPhysics                = 1, 
	TG_StartPhysics                = 1, 
	TG_DuringPhysics               = 2, 
	TG_DuringPhysics               = 2, 
	TG_EndPhysics                  = 3, 
	TG_EndPhysics                  = 3, 
	TG_PostPhysics                 = 4, 
	TG_PostPhysics                 = 4, 
	TG_PostUpdateWork              = 5, 
	TG_PostUpdateWork              = 5, 
	TG_LastDemotable               = 6, 
	TG_LastDemotable               = 6, 
	TG_NewlySpawned                = 7, 
	TG_NewlySpawned                = 7, 
	TG_MAX                         = 8, 
	TG_MAX                         = 8, 

};

// Enum Engine.EComponentCreationMethod
enum class EComponentCreationMethod : uint8_t
{
	Native                         = 0, 
	SimpleConstructionScript       = 1, 
	UserConstructionScript         = 2, 
	Instance                       = 3, 

};

// Enum Engine.EPlaneConstraintAxisSetting
enum class EPlaneConstraintAxisSetting : uint8_t
{
	Custom                         = 0, 
	X                              = 1, 
	Y                              = 2, 
	Z                              = 3, 
	UseGlobalPhysicsSetting        = 4, 

};

// Enum Engine.EInterpToBehaviourType
enum class EInterpToBehaviourType : uint8_t
{
	OneShot                        = 0, 
	OneShot_Reverse                = 1, 
	Loop_Reset                     = 2, 
	PingPong                       = 3, 

};

// Enum Engine.EPlatformInterfaceDataType
enum class EPlatformInterfaceDataType : uint8_t
{
	PIDT_None                      = 0, 
	PIDT_None                      = 0, 
	PIDT_Int                       = 1, 
	PIDT_Int                       = 1, 
	PIDT_Float                     = 2, 
	PIDT_Float                     = 2, 
	PIDT_String                    = 3, 
	PIDT_String                    = 3, 
	PIDT_Object                    = 4, 
	PIDT_Object                    = 4, 
	PIDT_Custom                    = 5, 
	PIDT_Custom                    = 5, 
	PIDT_MAX                       = 6, 
	PIDT_MAX                       = 6, 

};

// Enum Engine.ENetworkFailure
enum class ENetworkFailure : uint8_t
{
	NetDriverAlreadyExists         = 0, 
	NetDriverCreateFailure         = 1, 
	NetDriverListenFailure         = 2, 
	ConnectionLost                 = 3, 
	ConnectionTimeout              = 4, 
	FailureReceived                = 5, 
	OutdatedClient                 = 6, 
	OutdatedServer                 = 7, 
	PendingConnectionFailure       = 8, 
	NetGuidMismatch                = 9, 
	NetChecksumMismatch            = 10, 

};

// Enum Engine.ETravelFailure
enum class ETravelFailure : uint8_t
{
	NoLevel                        = 0, 
	LoadMapFailure                 = 1, 
	InvalidURL                     = 2, 
	PackageMissing                 = 3, 
	PackageVersion                 = 4, 
	NoDownload                     = 5, 
	TravelFailure                  = 6, 
	CheatCommands                  = 7, 
	PendingNetGameCreateFailure    = 8, 
	CloudSaveFailure               = 9, 
	ServerTravelFailure            = 10, 
	ClientTravelFailure            = 11, 

};

// Enum Engine.EMovementMode
enum class EMovementMode : uint8_t
{
	MOVE_None                      = 0, 
	MOVE_None                      = 0, 
	MOVE_Walking                   = 1, 
	MOVE_Walking                   = 1, 
	MOVE_NavWalking                = 2, 
	MOVE_NavWalking                = 2, 
	MOVE_Falling                   = 3, 
	MOVE_Falling                   = 3, 
	MOVE_Swimming                  = 4, 
	MOVE_Swimming                  = 4, 
	MOVE_Flying                    = 5, 
	MOVE_Flying                    = 5, 
	MOVE_Custom                    = 6, 
	MOVE_Custom                    = 6, 
	MOVE_MAX                       = 7, 
	MOVE_MAX                       = 7, 

};

// Enum Engine.EScreenOrientation
enum class EScreenOrientation : uint8_t
{
	Unknown                        = 0, 
	Portrait                       = 1, 
	PortraitUpsideDown             = 2, 
	LandscapeLeft                  = 3, 
	LandscapeRight                 = 4, 
	FaceUp                         = 5, 
	FaceDown                       = 6, 

};

// Enum Engine.EObjectTypeQuery
enum class EObjectTypeQuery : uint8_t
{
	ObjectTypeQuery1               = 0, 
	ObjectTypeQuery1               = 0, 
	ObjectTypeQuery2               = 1, 
	ObjectTypeQuery2               = 1, 
	ObjectTypeQuery3               = 2, 
	ObjectTypeQuery3               = 2, 
	ObjectTypeQuery4               = 3, 
	ObjectTypeQuery4               = 3, 
	ObjectTypeQuery5               = 4, 
	ObjectTypeQuery5               = 4, 
	ObjectTypeQuery6               = 5, 
	ObjectTypeQuery6               = 5, 
	ObjectTypeQuery7               = 6, 
	ObjectTypeQuery7               = 6, 
	ObjectTypeQuery8               = 7, 
	ObjectTypeQuery8               = 7, 
	ObjectTypeQuery9               = 8, 
	ObjectTypeQuery9               = 8, 
	ObjectTypeQuery10              = 9, 
	ObjectTypeQuery10              = 9, 
	ObjectTypeQuery11              = 10, 
	ObjectTypeQuery11              = 10, 
	ObjectTypeQuery12              = 11, 
	ObjectTypeQuery12              = 11, 
	ObjectTypeQuery13              = 12, 
	ObjectTypeQuery13              = 12, 
	ObjectTypeQuery14              = 13, 
	ObjectTypeQuery14              = 13, 
	ObjectTypeQuery15              = 14, 
	ObjectTypeQuery15              = 14, 
	ObjectTypeQuery16              = 15, 
	ObjectTypeQuery16              = 15, 
	ObjectTypeQuery17              = 16, 
	ObjectTypeQuery17              = 16, 
	ObjectTypeQuery18              = 17, 
	ObjectTypeQuery18              = 17, 
	ObjectTypeQuery19              = 18, 
	ObjectTypeQuery19              = 18, 
	ObjectTypeQuery20              = 19, 
	ObjectTypeQuery20              = 19, 
	ObjectTypeQuery21              = 20, 
	ObjectTypeQuery21              = 20, 
	ObjectTypeQuery22              = 21, 
	ObjectTypeQuery22              = 21, 
	ObjectTypeQuery23              = 22, 
	ObjectTypeQuery23              = 22, 
	ObjectTypeQuery24              = 23, 
	ObjectTypeQuery24              = 23, 
	ObjectTypeQuery25              = 24, 
	ObjectTypeQuery25              = 24, 
	ObjectTypeQuery26              = 25, 
	ObjectTypeQuery26              = 25, 
	ObjectTypeQuery27              = 26, 
	ObjectTypeQuery27              = 26, 
	ObjectTypeQuery28              = 27, 
	ObjectTypeQuery28              = 27, 
	ObjectTypeQuery29              = 28, 
	ObjectTypeQuery29              = 28, 
	ObjectTypeQuery30              = 29, 
	ObjectTypeQuery30              = 29, 
	ObjectTypeQuery31              = 30, 
	ObjectTypeQuery31              = 30, 
	ObjectTypeQuery32              = 31, 
	ObjectTypeQuery32              = 31, 
	ObjectTypeQuery_MAX            = 32, 
	ObjectTypeQuery_MAX            = 32, 

};

// Enum Engine.EDrawDebugTrace
enum class EDrawDebugTrace : uint8_t
{
	None                           = 0, 
	ForOneFrame                    = 1, 
	ForDuration                    = 2, 
	Persistent                     = 3, 

};

// Enum Engine.ETraceTypeQuery
enum class ETraceTypeQuery : uint8_t
{
	TraceTypeQuery1                = 0, 
	TraceTypeQuery1                = 0, 
	TraceTypeQuery2                = 1, 
	TraceTypeQuery2                = 1, 
	TraceTypeQuery3                = 2, 
	TraceTypeQuery3                = 2, 
	TraceTypeQuery4                = 3, 
	TraceTypeQuery4                = 3, 
	TraceTypeQuery5                = 4, 
	TraceTypeQuery5                = 4, 
	TraceTypeQuery6                = 5, 
	TraceTypeQuery6                = 5, 
	TraceTypeQuery7                = 6, 
	TraceTypeQuery7                = 6, 
	TraceTypeQuery8                = 7, 
	TraceTypeQuery8                = 7, 
	TraceTypeQuery9                = 8, 
	TraceTypeQuery9                = 8, 
	TraceTypeQuery10               = 9, 
	TraceTypeQuery10               = 9, 
	TraceTypeQuery11               = 10, 
	TraceTypeQuery11               = 10, 
	TraceTypeQuery12               = 11, 
	TraceTypeQuery12               = 11, 
	TraceTypeQuery13               = 12, 
	TraceTypeQuery13               = 12, 
	TraceTypeQuery14               = 13, 
	TraceTypeQuery14               = 13, 
	TraceTypeQuery15               = 14, 
	TraceTypeQuery15               = 14, 
	TraceTypeQuery16               = 15, 
	TraceTypeQuery16               = 15, 
	TraceTypeQuery17               = 16, 
	TraceTypeQuery17               = 16, 
	TraceTypeQuery18               = 17, 
	TraceTypeQuery18               = 17, 
	TraceTypeQuery19               = 18, 
	TraceTypeQuery19               = 18, 
	TraceTypeQuery20               = 19, 
	TraceTypeQuery20               = 19, 
	TraceTypeQuery21               = 20, 
	TraceTypeQuery21               = 20, 
	TraceTypeQuery22               = 21, 
	TraceTypeQuery22               = 21, 
	TraceTypeQuery23               = 22, 
	TraceTypeQuery23               = 22, 
	TraceTypeQuery24               = 23, 
	TraceTypeQuery24               = 23, 
	TraceTypeQuery25               = 24, 
	TraceTypeQuery25               = 24, 
	TraceTypeQuery26               = 25, 
	TraceTypeQuery26               = 25, 
	TraceTypeQuery27               = 26, 
	TraceTypeQuery27               = 26, 
	TraceTypeQuery28               = 27, 
	TraceTypeQuery28               = 27, 
	TraceTypeQuery29               = 28, 
	TraceTypeQuery29               = 28, 
	TraceTypeQuery30               = 29, 
	TraceTypeQuery30               = 29, 
	TraceTypeQuery31               = 30, 
	TraceTypeQuery31               = 30, 
	TraceTypeQuery32               = 31, 
	TraceTypeQuery32               = 31, 
	TraceTypeQuery_MAX             = 32, 
	TraceTypeQuery_MAX             = 32, 

};

// Enum Engine.EMoveComponentAction
enum class EMoveComponentAction : uint8_t
{
	Move                           = 0, 
	Stop                           = 1, 
	Return                         = 2, 

};

// Enum Engine.EQuitPreference
enum class EQuitPreference : uint8_t
{
	Quit                           = 0, 
	Background                     = 1, 

};

// Enum Engine.ELinearConstraintMotion
enum class ELinearConstraintMotion : uint8_t
{
	LCM_Free                       = 0, 
	LCM_Free                       = 0, 
	LCM_Limited                    = 1, 
	LCM_Limited                    = 1, 
	LCM_Locked                     = 2, 
	LCM_Locked                     = 2, 
	LCM_MAX                        = 3, 
	LCM_MAX                        = 3, 

};

// Enum Engine.EAngularDriveMode
enum class EAngularDriveMode : uint8_t
{
	SLERP                          = 0, 
	TwistAndSwing                  = 1, 

};

// Enum Engine.EAttenuationShape
enum class EAttenuationShape : uint8_t
{
	Sphere                         = 0, 
	Capsule                        = 1, 
	Box                            = 2, 
	Cone                           = 3, 

};

// Enum Engine.EAttenuationDistanceModel
enum class EAttenuationDistanceModel : uint8_t
{
	Linear                         = 0, 
	Logarithmic                    = 1, 
	Inverse                        = 2, 
	LogReverse                     = 3, 
	NaturalSound                   = 4, 
	Custom                         = 5, 

};

// Enum Engine.ESoundSpatializationAlgorithm
enum class ESoundSpatializationAlgorithm : uint8_t
{
	SPATIALIZATION_Default         = 0, 
	SPATIALIZATION_Default         = 0, 
	SPATIALIZATION_HRTF            = 1, 
	SPATIALIZATION_HRTF            = 1, 
	SPATIALIZATION_MAX             = 2, 
	SPATIALIZATION_MAX             = 2, 

};

// Enum Engine.ESoundDistanceCalc
enum class ESoundDistanceCalc : uint8_t
{
	SOUNDDISTANCE_Normal           = 0, 
	SOUNDDISTANCE_Normal           = 0, 
	SOUNDDISTANCE_InfiniteXYPlane  = 1, 
	SOUNDDISTANCE_InfiniteXYPlane  = 1, 
	SOUNDDISTANCE_InfiniteXZPlane  = 2, 
	SOUNDDISTANCE_InfiniteXZPlane  = 2, 
	SOUNDDISTANCE_InfiniteYZPlane  = 3, 
	SOUNDDISTANCE_InfiniteYZPlane  = 3, 
	SOUNDDISTANCE_MAX              = 4, 
	SOUNDDISTANCE_MAX              = 4, 

};

// Enum Engine.EPreviewIndexType
enum class EPreviewIndexType : uint8_t
{
	RandomSeed                     = 0, 
	VariantIndex                   = 1, 
	PermutationIndex               = 2, 

};

// Enum Engine.ESpawnPointRollType
enum class ESpawnPointRollType : uint8_t
{
	Probability                    = 0, 
	LocalRatio                     = 1, 
	GlobalRatio                    = 2, 

};

// Enum Engine.ESkyLightSourceType
enum class ESkyLightSourceType : uint8_t
{
	SLS_CapturedScene              = 0, 
	SLS_CapturedScene              = 0, 
	SLS_SpecifiedCubemap           = 1, 
	SLS_SpecifiedCubemap           = 1, 
	SLS_MAX                        = 2, 
	SLS_MAX                        = 2, 

};

// Enum Engine.EBoneSpaces
enum class EBoneSpaces : uint8_t
{
	WorldSpace                     = 0, 
	ComponentSpace                 = 1, 

};

// Enum Engine.EMeshComponentUpdateFlag
enum class EMeshComponentUpdateFlag : uint8_t
{
	AlwaysTickPoseAndRefreshBones  = 0, 
	AlwaysTickPose                 = 1, 
	OnlyTickPoseWhenRendered       = 2, 

};

// Enum Engine.EPhysBodyOp
enum class EPhysBodyOp : uint8_t
{
	PBO_None                       = 0, 
	PBO_None                       = 0, 
	PBO_Term                       = 1, 
	PBO_Term                       = 1, 
	PBO_MAX                        = 2, 
	PBO_MAX                        = 2, 

};

// Enum Engine.EBoneVisibilityStatus
enum class EBoneVisibilityStatus : uint8_t
{
	BVS_HiddenByParent             = 0, 
	BVS_HiddenByParent             = 0, 
	BVS_Visible                    = 1, 
	BVS_Visible                    = 1, 
	BVS_ExplicitlyHidden           = 2, 
	BVS_ExplicitlyHidden           = 2, 
	BVS_MAX                        = 3, 
	BVS_MAX                        = 3, 

};

// Enum Engine.EPhysicsTransformUpdateMode
enum class EPhysicsTransformUpdateMode : uint8_t
{
	SimulationUpatesComponentTransform = 0, 
	ComponentTransformIsKinematic  = 1, 

};

// Enum Engine.EAnimationMode
enum class EAnimationMode : uint8_t
{
	AnimationBlueprint             = 0, 
	AnimationSingleNode            = 1, 
	AnimationCustomMode            = 2, 

};

// Enum Engine.EKinematicBonesUpdateToPhysics
enum class EKinematicBonesUpdateToPhysics : uint8_t
{
	SkipSimulatingBones            = 0, 
	SkipAllBones                   = 1, 

};

// Enum Engine.ESplineMeshAxis
enum class ESplineMeshAxis : uint8_t
{
	X                              = 0, 
	Y                              = 1, 
	Z                              = 2, 

};

// Enum Engine.ETextureSamplerFilter
enum class ETextureSamplerFilter : uint8_t
{
	Point                          = 0, 
	Bilinear                       = 1, 
	Trilinear                      = 2, 
	AnisotropicPoint               = 3, 
	AnisotropicLinear              = 4, 

};

// Enum Engine.ETexturePowerOfTwoSetting
enum class ETexturePowerOfTwoSetting : uint8_t
{
	None                           = 0, 
	PadToPowerOfTwo                = 1, 
	PadToSquarePowerOfTwo          = 2, 

};

// Enum Engine.TextureMipGenSettings
enum class ETextureMipGenSettings : uint8_t
{
	TMGS_FromTextureGroup          = 0, 
	TMGS_FromTextureGroup          = 0, 
	TMGS_SimpleAverage             = 1, 
	TMGS_SimpleAverage             = 1, 
	TMGS_Sharpen0                  = 2, 
	TMGS_Sharpen0                  = 2, 
	TMGS_Sharpen1                  = 3, 
	TMGS_Sharpen1                  = 3, 
	TMGS_Sharpen2                  = 4, 
	TMGS_Sharpen2                  = 4, 
	TMGS_Sharpen3                  = 5, 
	TMGS_Sharpen3                  = 5, 
	TMGS_Sharpen4                  = 6, 
	TMGS_Sharpen4                  = 6, 
	TMGS_Sharpen5                  = 7, 
	TMGS_Sharpen5                  = 7, 
	TMGS_Sharpen6                  = 8, 
	TMGS_Sharpen6                  = 8, 
	TMGS_Sharpen7                  = 9, 
	TMGS_Sharpen7                  = 9, 
	TMGS_Sharpen8                  = 10, 
	TMGS_Sharpen8                  = 10, 
	TMGS_Sharpen9                  = 11, 
	TMGS_Sharpen9                  = 11, 
	TMGS_Sharpen10                 = 12, 
	TMGS_Sharpen10                 = 12, 
	TMGS_NoMipmaps                 = 13, 
	TMGS_NoMipmaps                 = 13, 
	TMGS_LeaveExistingMips         = 14, 
	TMGS_LeaveExistingMips         = 14, 
	TMGS_Blur1                     = 15, 
	TMGS_Blur1                     = 15, 
	TMGS_Blur2                     = 16, 
	TMGS_Blur2                     = 16, 
	TMGS_Blur3                     = 17, 
	TMGS_Blur3                     = 17, 
	TMGS_Blur4                     = 18, 
	TMGS_Blur4                     = 18, 
	TMGS_Blur5                     = 19, 
	TMGS_Blur5                     = 19, 
	TMGS_MAX                       = 20, 
	TMGS_MAX                       = 20, 

};

// Enum Engine.TextureGroup
enum class ETextureGroup : uint8_t
{
	TEXTUREGROUP_World             = 0, 
	TEXTUREGROUP_World             = 0, 
	TEXTUREGROUP_WorldNormalMap    = 1, 
	TEXTUREGROUP_WorldNormalMap    = 1, 
	TEXTUREGROUP_WorldSpecular     = 2, 
	TEXTUREGROUP_WorldSpecular     = 2, 
	TEXTUREGROUP_Character         = 3, 
	TEXTUREGROUP_Character         = 3, 
	TEXTUREGROUP_CharacterNormalMap = 4, 
	TEXTUREGROUP_CharacterNormalMap = 4, 
	TEXTUREGROUP_CharacterSpecular = 5, 
	TEXTUREGROUP_CharacterSpecular = 5, 
	TEXTUREGROUP_Weapon            = 6, 
	TEXTUREGROUP_Weapon            = 6, 
	TEXTUREGROUP_WeaponNormalMap   = 7, 
	TEXTUREGROUP_WeaponNormalMap   = 7, 
	TEXTUREGROUP_WeaponSpecular    = 8, 
	TEXTUREGROUP_WeaponSpecular    = 8, 
	TEXTUREGROUP_Vehicle           = 9, 
	TEXTUREGROUP_Vehicle           = 9, 
	TEXTUREGROUP_VehicleNormalMap  = 10, 
	TEXTUREGROUP_VehicleNormalMap  = 10, 
	TEXTUREGROUP_VehicleSpecular   = 11, 
	TEXTUREGROUP_VehicleSpecular   = 11, 
	TEXTUREGROUP_Landscape         = 12, 
	TEXTUREGROUP_Landscape         = 12, 
	TEXTUREGROUP_LandscapeNormalMap = 13, 
	TEXTUREGROUP_LandscapeNormalMap = 13, 
	TEXTUREGROUP_LandscapeSpecular = 14, 
	TEXTUREGROUP_LandscapeSpecular = 14, 
	TEXTUREGROUP_Cinematic         = 15, 
	TEXTUREGROUP_Cinematic         = 15, 
	TEXTUREGROUP_Effects           = 16, 
	TEXTUREGROUP_Effects           = 16, 
	TEXTUREGROUP_EffectsNotFiltered = 17, 
	TEXTUREGROUP_EffectsNotFiltered = 17, 
	TEXTUREGROUP_Skybox            = 18, 
	TEXTUREGROUP_Skybox            = 18, 
	TEXTUREGROUP_UI                = 19, 
	TEXTUREGROUP_UI                = 19, 
	TEXTUREGROUP_Lightmap          = 20, 
	TEXTUREGROUP_Lightmap          = 20, 
	TEXTUREGROUP_RenderTarget      = 21, 
	TEXTUREGROUP_RenderTarget      = 21, 
	TEXTUREGROUP_MobileFlattened   = 22, 
	TEXTUREGROUP_MobileFlattened   = 22, 
	TEXTUREGROUP_ProcBuilding_Face = 23, 
	TEXTUREGROUP_ProcBuilding_Face = 23, 
	TEXTUREGROUP_ProcBuilding_LightMap = 24, 
	TEXTUREGROUP_ProcBuilding_LightMap = 24, 
	TEXTUREGROUP_Shadowmap         = 25, 
	TEXTUREGROUP_Shadowmap         = 25, 
	TEXTUREGROUP_ColorLookupTable  = 26, 
	TEXTUREGROUP_ColorLookupTable  = 26, 
	TEXTUREGROUP_Terrain_Heightmap = 27, 
	TEXTUREGROUP_Terrain_Heightmap = 27, 
	TEXTUREGROUP_Terrain_Weightmap = 28, 
	TEXTUREGROUP_Terrain_Weightmap = 28, 
	TEXTUREGROUP_Bokeh             = 29, 
	TEXTUREGROUP_Bokeh             = 29, 
	TEXTUREGROUP_IESLightProfile   = 30, 
	TEXTUREGROUP_IESLightProfile   = 30, 
	TEXTUREGROUP_Pixels2D          = 31, 
	TEXTUREGROUP_Pixels2D          = 31, 
	TEXTUREGROUP_HierarchicalLOD   = 32, 
	TEXTUREGROUP_HierarchicalLOD   = 32, 
	TEXTUREGROUP_MAX               = 33, 
	TEXTUREGROUP_MAX               = 33, 

};

// Enum Engine.ETextureSourceFormat
enum class ETextureSourceFormat : uint8_t
{
	TSF_Invalid                    = 0, 
	TSF_Invalid                    = 0, 
	TSF_G8                         = 1, 
	TSF_G8                         = 1, 
	TSF_BGRA8                      = 2, 
	TSF_BGRA8                      = 2, 
	TSF_BGRE8                      = 3, 
	TSF_BGRE8                      = 3, 
	TSF_RGBA16                     = 4, 
	TSF_RGBA16                     = 4, 
	TSF_RGBA16F                    = 5, 
	TSF_RGBA16F                    = 5, 
	TSF_RGBA8                      = 6, 
	TSF_RGBA8                      = 6, 
	TSF_RGBE8                      = 7, 
	TSF_RGBE8                      = 7, 
	TSF_MAX                        = 8, 
	TSF_MAX                        = 8, 

};

// Enum Engine.ETextureSourceArtType
enum class ETextureSourceArtType : uint8_t
{
	TSAT_Uncompressed              = 0, 
	TSAT_Uncompressed              = 0, 
	TSAT_PNGCompressed             = 1, 
	TSAT_PNGCompressed             = 1, 
	TSAT_DDSFile                   = 2, 
	TSAT_DDSFile                   = 2, 
	TSAT_MAX                       = 3, 
	TSAT_MAX                       = 3, 

};

// Enum Engine.ETextureMipCount
enum class ETextureMipCount : uint8_t
{
	TMC_ResidentMips               = 0, 
	TMC_ResidentMips               = 0, 
	TMC_AllMips                    = 1, 
	TMC_AllMips                    = 1, 
	TMC_AllMipsBiased              = 2, 
	TMC_AllMipsBiased              = 2, 
	TMC_MAX                        = 3, 
	TMC_MAX                        = 3, 

};

// Enum Engine.ECompositeTextureMode
enum class ECompositeTextureMode : uint8_t
{
	CTM_Disabled                   = 0, 
	CTM_Disabled                   = 0, 
	CTM_NormalRoughnessToRed       = 1, 
	CTM_NormalRoughnessToRed       = 1, 
	CTM_NormalRoughnessToGreen     = 2, 
	CTM_NormalRoughnessToGreen     = 2, 
	CTM_NormalRoughnessToBlue      = 3, 
	CTM_NormalRoughnessToBlue      = 3, 
	CTM_NormalRoughnessToAlpha     = 4, 
	CTM_NormalRoughnessToAlpha     = 4, 
	CTM_MAX                        = 5, 
	CTM_MAX                        = 5, 

};

// Enum Engine.TextureAddress
enum class ETextureAddress : uint8_t
{
	TA_Wrap                        = 0, 
	TA_Wrap                        = 0, 
	TA_Clamp                       = 1, 
	TA_Clamp                       = 1, 
	TA_Mirror                      = 2, 
	TA_Mirror                      = 2, 
	TA_MAX                         = 3, 
	TA_MAX                         = 3, 

};

// Enum Engine.TextureFilter
enum class ETextureFilter : uint8_t
{
	TF_Nearest                     = 0, 
	TF_Nearest                     = 0, 
	TF_Bilinear                    = 1, 
	TF_Bilinear                    = 1, 
	TF_Trilinear                   = 2, 
	TF_Trilinear                   = 2, 
	TF_Default                     = 3, 
	TF_Default                     = 3, 
	TF_MAX                         = 4, 
	TF_MAX                         = 4, 

};

// Enum Engine.TextureCompressionSettings
enum class ETextureCompressionSettings : uint8_t
{
	TC_Default                     = 0, 
	TC_Default                     = 0, 
	TC_Normalmap                   = 1, 
	TC_Normalmap                   = 1, 
	TC_Masks                       = 2, 
	TC_Masks                       = 2, 
	TC_Grayscale                   = 3, 
	TC_Grayscale                   = 3, 
	TC_Displacementmap             = 4, 
	TC_Displacementmap             = 4, 
	TC_VectorDisplacementmap       = 5, 
	TC_VectorDisplacementmap       = 5, 
	TC_HDR                         = 6, 
	TC_HDR                         = 6, 
	TC_EditorIcon                  = 7, 
	TC_EditorIcon                  = 7, 
	TC_Alpha                       = 8, 
	TC_Alpha                       = 8, 
	TC_DistanceFieldFont           = 9, 
	TC_DistanceFieldFont           = 9, 
	TC_HDR_Compressed              = 10, 
	TC_HDR_Compressed              = 10, 
	TC_BC7                         = 11, 
	TC_BC7                         = 11, 
	TC_MAX                         = 12, 
	TC_MAX                         = 12, 

};

// Enum Engine.ESplineCoordinateSpace
enum class ESplineCoordinateSpace : uint8_t
{
	Local                          = 0, 
	World                          = 1, 

};

// Enum Engine.ESplinePointType
enum class ESplinePointType : uint8_t
{
	Linear                         = 0, 
	Curve                          = 1, 
	Constant                       = 2, 
	CurveClamped                   = 3, 
	CurveCustomTangent             = 4, 

};

// Enum Engine.EVerticalTextAligment
enum class EVerticalTextAligment : uint8_t
{
	EVRTA_TextTop                  = 0, 
	EVRTA_TextTop                  = 0, 
	EVRTA_TextCenter               = 1, 
	EVRTA_TextCenter               = 1, 
	EVRTA_TextBottom               = 2, 
	EVRTA_TextBottom               = 2, 
	EVRTA_QuadTop                  = 3, 
	EVRTA_QuadTop                  = 3, 
	EVRTA_MAX                      = 4, 
	EVRTA_MAX                      = 4, 

};

// Enum Engine.EHorizTextAligment
enum class EHorizTextAligment : uint8_t
{
	EHTA_Left                      = 0, 
	EHTA_Left                      = 0, 
	EHTA_Center                    = 1, 
	EHTA_Center                    = 1, 
	EHTA_Right                     = 2, 
	EHTA_Right                     = 2, 
	EHTA_MAX                       = 3, 
	EHTA_MAX                       = 3, 

};

// Enum Engine.EReflectionSourceType
enum class EReflectionSourceType : uint8_t
{
	CapturedScene                  = 0, 
	SpecifiedCubemap               = 1, 

};

// Enum Engine.EStereoLayerShape
enum class EStereoLayerShape : uint8_t
{
	SLSH_QuadLayer                 = 0, 
	SLSH_QuadLayer                 = 0, 
	SLSH_CylinderLayer             = 1, 
	SLSH_CylinderLayer             = 1, 
	SLSH_CubemapLayer              = 2, 
	SLSH_CubemapLayer              = 2, 
	SLSH_MAX                       = 3, 
	SLSH_MAX                       = 3, 

};

// Enum Engine.EStereoLayerType
enum class EStereoLayerType : uint8_t
{
	SLT_WorldLocked                = 0, 
	SLT_WorldLocked                = 0, 
	SLT_TrackerLocked              = 1, 
	SLT_TrackerLocked              = 1, 
	SLT_FaceLocked                 = 2, 
	SLT_FaceLocked                 = 2, 
	SLT_MAX                        = 3, 
	SLT_MAX                        = 3, 

};

// Enum Engine.EWindSourceType
enum class EWindSourceType : uint8_t
{
	Directional                    = 0, 
	Point                          = 1, 

};

// Enum Engine.ETimelineDirection
enum class ETimelineDirection : uint8_t
{
	Forward                        = 0, 
	Backward                       = 1, 

};

// Enum Engine.ETimelineLengthMode
enum class ETimelineLengthMode : uint8_t
{
	TL_TimelineLength              = 0, 
	TL_TimelineLength              = 0, 
	TL_LastKeyFrame                = 1, 
	TL_LastKeyFrame                = 1, 
	TL_MAX                         = 2, 
	TL_MAX                         = 2, 

};

// Enum Engine.AnimationKeyFormat
enum class EAnimationKeyFormat : uint8_t
{
	AKF_ConstantKeyLerp            = 0, 
	AKF_ConstantKeyLerp            = 0, 
	AKF_VariableKeyLerp            = 1, 
	AKF_VariableKeyLerp            = 1, 
	AKF_PerTrackCompression        = 2, 
	AKF_PerTrackCompression        = 2, 
	AKF_MAX                        = 3, 
	AKF_MAX                        = 3, 

};

// Enum Engine.ENotifyTriggerMode
enum class ENotifyTriggerMode : uint8_t
{
	AllAnimations                  = 0, 
	HighestWeightedAnimation       = 1, 
	None                           = 2, 

};

// Enum Engine.EBlendSpaceAxis
enum class EBlendSpaceAxis : uint8_t
{
	BSA_None                       = 0, 
	BSA_None                       = 0, 
	BSA_X                          = 1, 
	BSA_X                          = 1, 
	BSA_Y                          = 2, 
	BSA_Y                          = 2, 
	BSA_Max                        = 3, 
	BSA_Max                        = 3, 

};

// Enum Engine.ETransitionLogicType
enum class ETransitionLogicType : uint8_t
{
	TLT_StandardBlend              = 0, 
	TLT_Custom                     = 1, 
	TLT_MAX                        = 2, 

};

// Enum Engine.ETransitionBlendMode
enum class ETransitionBlendMode : uint8_t
{
	TBM_Linear                     = 0, 
	TBM_Cubic                      = 1, 
	TBM_MAX                        = 2, 

};

// Enum Engine.EMontagePlayReturnType
enum class EMontagePlayReturnType : uint8_t
{
	MontageLength                  = 0, 
	Duration                       = 1, 

};

// Enum Engine.EAnimCurveType
enum class EAnimCurveType : uint8_t
{
	AttributeCurve                 = 0, 
	MaterialCurve                  = 1, 
	MorphTargetCurve               = 2, 
	MaxAnimCurveType               = 3, 

};

// Enum Engine.EPrimaryAssetCookRule
enum class EPrimaryAssetCookRule : uint8_t
{
	Unknown                        = 0, 
	NeverCook                      = 1, 
	DevelopmentCook                = 2, 
	AlwaysCook                     = 3, 

};

// Enum Engine.EBlueprintNativizationFlag
enum class EBlueprintNativizationFlag : uint8_t
{
	Disabled                       = 0, 
	Dependency                     = 1, 
	ExplicitlyEnabled              = 2, 

};

// Enum Engine.EBlueprintCompileMode
enum class EBlueprintCompileMode : uint8_t
{
	Default                        = 0, 
	Development                    = 1, 
	FinalRelease                   = 2, 

};

// Enum Engine.EBlueprintType
enum class EBlueprintType : uint8_t
{
	BPTYPE_Normal                  = 0, 
	BPTYPE_Normal                  = 0, 
	BPTYPE_Const                   = 1, 
	BPTYPE_Const                   = 1, 
	BPTYPE_MacroLibrary            = 2, 
	BPTYPE_MacroLibrary            = 2, 
	BPTYPE_Interface               = 3, 
	BPTYPE_Interface               = 3, 
	BPTYPE_LevelScript             = 4, 
	BPTYPE_LevelScript             = 4, 
	BPTYPE_FunctionLibrary         = 5, 
	BPTYPE_FunctionLibrary         = 5, 
	BPTYPE_MAX                     = 6, 
	BPTYPE_MAX                     = 6, 

};

// Enum Engine.EBlueprintStatus
enum class EBlueprintStatus : uint8_t
{
	BS_Unknown                     = 0, 
	BS_Unknown                     = 0, 
	BS_Dirty                       = 1, 
	BS_Dirty                       = 1, 
	BS_Error                       = 2, 
	BS_Error                       = 2, 
	BS_UpToDate                    = 3, 
	BS_UpToDate                    = 3, 
	BS_BeingCreated                = 4, 
	BS_BeingCreated                = 4, 
	BS_UpToDateWithWarnings        = 5, 
	BS_UpToDateWithWarnings        = 5, 
	BS_MAX                         = 6, 
	BS_MAX                         = 6, 

};

// Enum Engine.EEvaluateCurveTableResult
enum class EEvaluateCurveTableResult : uint8_t
{
	RowFound                       = 0, 
	RowNotFound                    = 1, 

};

// Enum Engine.EGrammaticalNumber
enum class EGrammaticalNumber : uint8_t
{
	Singular                       = 0, 
	Plural                         = 1, 

};

// Enum Engine.EGrammaticalGender
enum class EGrammaticalGender : uint8_t
{
	Neuter                         = 0, 
	Masculine                      = 1, 
	Feminine                       = 2, 
	Mixed                          = 3, 

};

// Enum Engine.ESuggestProjVelocityTraceOption
enum class ESuggestProjVelocityTraceOption : uint8_t
{
	DoNotTrace                     = 0, 
	TraceFullPath                  = 1, 
	OnlyTraceWhileAscending        = 2, 

};

// Enum Engine.EHMDWornState
enum class EHMDWornState : uint8_t
{
	Unknown                        = 0, 
	Worn                           = 1, 
	NotWorn                        = 2, 

};

// Enum Engine.EHMDTrackingOrigin
enum class EHMDTrackingOrigin : uint8_t
{
	Floor                          = 0, 
	Eye                            = 1, 

};

// Enum Engine.EOrientPositionSelector
enum class EOrientPositionSelector : uint8_t
{
	Orientation                    = 0, 
	Position                       = 1, 
	OrientationAndPosition         = 2, 

};

// Enum Engine.ELerpInterpolationMode
enum class ELerpInterpolationMode : uint8_t
{
	QuatInterp                     = 0, 
	EulerInterp                    = 1, 
	DualQuatInterp                 = 2, 

};

// Enum Engine.EEasingFunc
enum class EEasingFunc : uint8_t
{
	Linear                         = 0, 
	Step                           = 1, 
	SinusoidalIn                   = 2, 
	SinusoidalOut                  = 3, 
	SinusoidalInOut                = 4, 
	EaseIn                         = 5, 
	EaseOut                        = 6, 
	EaseInOut                      = 7, 
	ExpoIn                         = 8, 
	ExpoOut                        = 9, 
	ExpoInOut                      = 10, 
	CircularIn                     = 11, 
	CircularOut                    = 12, 
	CircularInOut                  = 13, 

};

// Enum Engine.EViewModeIndex
enum class EViewModeIndex : uint8_t
{
	VMI_BrushWireframe             = 0, 
	VMI_BrushWireframe             = 0, 
	VMI_Wireframe                  = 1, 
	VMI_Wireframe                  = 1, 
	VMI_Unlit                      = 2, 
	VMI_Unlit                      = 2, 
	VMI_Lit                        = 3, 
	VMI_Lit                        = 3, 
	VMI_Lit_DetailLighting         = 4, 
	VMI_Lit_DetailLighting         = 4, 
	VMI_LightingOnly               = 5, 
	VMI_LightingOnly               = 5, 
	VMI_LightComplexity            = 6, 
	VMI_LightComplexity            = 6, 
	VMI_ShaderComplexity           = 7, 
	VMI_ShaderComplexity           = 7, 
	VMI_LightmapDensity            = 8, 
	VMI_LightmapDensity            = 8, 
	VMI_LitLightmapDensity         = 9, 
	VMI_LitLightmapDensity         = 9, 
	VMI_ReflectionOverride         = 10, 
	VMI_ReflectionOverride         = 10, 
	VMI_VisualizeBuffer            = 11, 
	VMI_VisualizeBuffer            = 11, 
	VMI_StationaryLightOverlap     = 12, 
	VMI_StationaryLightOverlap     = 12, 
	VMI_CollisionPawn              = 13, 
	VMI_CollisionPawn              = 13, 
	VMI_CollisionVisibility        = 14, 
	VMI_CollisionVisibility        = 14, 
	VMI_LODColoration              = 15, 
	VMI_LODColoration              = 15, 
	VMI_QuadOverdraw               = 16, 
	VMI_QuadOverdraw               = 16, 
	VMI_PrimitiveDistanceAccuracy  = 17, 
	VMI_PrimitiveDistanceAccuracy  = 17, 
	VMI_MeshUVDensityAccuracy      = 18, 
	VMI_MeshUVDensityAccuracy      = 18, 
	VMI_ShaderComplexityWithQuadOverdraw = 19, 
	VMI_ShaderComplexityWithQuadOverdraw = 19, 
	VMI_HLODColoration             = 20, 
	VMI_HLODColoration             = 20, 
	VMI_GroupLODColoration         = 21, 
	VMI_GroupLODColoration         = 21, 
	VMI_MaterialTextureScaleAccuracy = 22, 
	VMI_MaterialTextureScaleAccuracy = 22, 
	VMI_RequiredTextureResolution  = 23, 
	VMI_RequiredTextureResolution  = 23, 
	VMI_Max                        = 24, 
	VMI_Max                        = 24, 
	VMI_Unknown                    = 25, 
	VMI_Unknown                    = 25, 

};

// Enum Engine.EDemoFailure
enum class EDemoFailure : uint8_t
{
	None                           = 0, 
	PlayCommand                    = 1, 
	PlayNoWorld                    = 2, 
	PlayPIE                        = 3, 
	PlayCreateDemoDriver           = 4, 
	Connect                        = 5, 
	ConnectNoWorld                 = 6, 
	ConnectNoGameInstance          = 7, 
	ConnectInitBase                = 8, 
	ConnectStreamingReady          = 9, 
	ConnectDemoNotFound            = 10, 
	ConnectCorrupt                 = 11, 
	ConnectSpecificCorrupt         = 12, 
	ConnectPostNoWorld             = 13, 
	ConnectLoadMap                 = 14, 
	TickDispatchStreamer           = 15, 
	TickDispatchFileAr             = 16, 
	ConditionallyReadFrame         = 17, 
	ConditionallyReadFrameFileAr   = 18, 
	ConditionallyReadFrameStreamer = 19, 
	ConditionallyReadFrameTimeChecksum = 20, 
	ConditionallyReadFrameFileAr2  = 21, 
	ConditionallyReadFrameExternalData = 22, 
	ConditionallyReadFramePacket   = 23, 
	ConditionallyProcessPacket     = 24, 
	DownloadHeader                 = 25, 
	DownloadHeaderDemoNotFound     = 26, 
	DownloadHeaderCorrupt          = 27, 
	DownloadHeaderSpecificCorrupt  = 28, 
	DownloadHeaderLevelNamesAndTimes = 29, 
	CheckpointReady                = 30, 
	CheckpointArchiveEmpty         = 31, 
	CheckpointReadFrame            = 32, 
	CheckpointReadFrameFileAr      = 33, 
	CheckpointReadFrameStreamer    = 34, 
	CheckpointReadFrameTimeChecksum = 35, 
	CheckpointReadFrameFileAr2     = 36, 
	CheckpointReadFrameExternalData = 37, 
	CheckpointReadFramePacket      = 38, 
	CheckpointProcessPacket        = 39, 
	RecCommand                     = 40, 
	RecNoReplays                   = 41, 
	RecNoWorld                     = 42, 
	RecPIE                         = 43, 
	RecAlreadyPlay                 = 44, 
	RecCreateDemoDriver            = 45, 
	Listen                         = 46, 
	ListenInitBase                 = 47, 
	ListenNoWorldSettings          = 48, 
	ListenWriteHeader              = 49, 
	ListenStreamingReady           = 50, 
	TickFlushStreamer              = 51, 
	TickFlushFileAr                = 52, 
	SeamlessTravelWriteHeader      = 53, 

};

// Enum Engine.ETravelType
enum class ETravelType : uint8_t
{
	TRAVEL_Absolute                = 0, 
	TRAVEL_Absolute                = 0, 
	TRAVEL_Partial                 = 1, 
	TRAVEL_Partial                 = 1, 
	TRAVEL_Relative                = 2, 
	TRAVEL_Relative                = 2, 
	TRAVEL_MAX                     = 3, 
	TRAVEL_MAX                     = 3, 

};

// Enum Engine.ENetworkLagState
enum class ENetworkLagState : uint8_t
{
	NotLagging                     = 0, 
	Lagging                        = 1, 

};

// Enum Engine.EMouseLockMode
enum class EMouseLockMode : uint8_t
{
	DoNotLock                      = 0, 
	LockOnCapture                  = 1, 
	LockAlways                     = 2, 

};

// Enum Engine.EMouseCaptureMode
enum class EMouseCaptureMode : uint8_t
{
	NoCapture                      = 0, 
	CapturePermanently             = 1, 
	CapturePermanently_IncludingInitialMouseDown = 2, 
	CaptureDuringMouseDown         = 3, 
	CaptureDuringRightMouseDown    = 4, 

};

// Enum Engine.EInputEvent
enum class EInputEvent : uint8_t
{
	IE_Pressed                     = 0, 
	IE_Pressed                     = 0, 
	IE_Released                    = 1, 
	IE_Released                    = 1, 
	IE_Repeat                      = 2, 
	IE_Repeat                      = 2, 
	IE_DoubleClick                 = 3, 
	IE_DoubleClick                 = 3, 
	IE_Axis                        = 4, 
	IE_Axis                        = 4, 
	IE_MAX                         = 5, 
	IE_MAX                         = 5, 

};

// Enum Engine.ENodeEnabledState
enum class ENodeEnabledState : uint8_t
{
	Enabled                        = 0, 
	Disabled                       = 1, 
	DevelopmentOnly                = 2, 

};

// Enum Engine.ENodeAdvancedPins
enum class ENodeAdvancedPins : uint8_t
{
	NoPins                         = 0, 
	Shown                          = 1, 
	Hidden                         = 2, 

};

// Enum Engine.ENodeTitleType
enum class ENodeTitleType : uint8_t
{
	FullTitle                      = 0, 
	ListView                       = 1, 
	EditableTitle                  = 2, 
	MenuTitle                      = 3, 
	MAX_TitleTypes                 = 4, 

};

// Enum Engine.EEdGraphPinDirection
enum class EEdGraphPinDirection : uint8_t
{
	EGPD_Input                     = 0, 
	EGPD_Input                     = 0, 
	EGPD_Output                    = 1, 
	EGPD_Output                    = 1, 
	EGPD_MAX                       = 2, 
	EGPD_MAX                       = 2, 

};

// Enum Engine.EBlueprintPinStyleType
enum class EBlueprintPinStyleType : uint8_t
{
	BPST_Original                  = 0, 
	BPST_Original                  = 0, 
	BPST_VariantA                  = 1, 
	BPST_VariantA                  = 1, 
	BPST_MAX                       = 2, 
	BPST_MAX                       = 2, 

};

// Enum Engine.ERelativeTransformSpace
enum class ERelativeTransformSpace : uint8_t
{
	RTS_World                      = 0, 
	RTS_World                      = 0, 
	RTS_Actor                      = 1, 
	RTS_Actor                      = 1, 
	RTS_Component                  = 2, 
	RTS_Component                  = 2, 
	RTS_ParentBoneSpace            = 3, 
	RTS_ParentBoneSpace            = 3, 
	RTS_MAX                        = 4, 
	RTS_MAX                        = 4, 

};

// Enum Engine.EDetailMode
enum class EDetailMode : uint8_t
{
	DM_Low                         = 0, 
	DM_Low                         = 0, 
	DM_Medium                      = 1, 
	DM_Medium                      = 1, 
	DM_High                        = 2, 
	DM_High                        = 2, 
	DM_MAX                         = 3, 
	DM_MAX                         = 3, 

};

// Enum Engine.ESimplygonMaterialChannel
enum class ESimplygonMaterialChannel : uint8_t
{
	SG_MATERIAL_CHANNEL_AMBIENT    = 0, 
	SG_MATERIAL_CHANNEL_DIFFUSE    = 1, 
	SG_MATERIAL_CHANNEL_SPECULAR   = 2, 
	SG_MATERIAL_CHANNEL_OPACITY    = 3, 
	SG_MATERIAL_CHANNEL_EMISSIVE   = 4, 
	SG_MATERIAL_CHANNEL_NORMALS    = 5, 
	SG_MATERIAL_CHANNEL_DISPLACEMENT = 6, 
	SG_MATERIAL_CHANNEL_BASECOLOR  = 7, 
	SG_MATERIAL_CHANNEL_ROUGHNESS  = 8, 
	SG_MATERIAL_CHANNEL_METALLIC   = 9, 
	SG_MATERIAL_CHANNEL_AO         = 10, 
	SG_MATERIAL_CHANNEL_SUBSURFACE = 11, 
	SG_MATERIAL_CHANNEL_OPACITYMASK = 12, 
	SG_MATERIAL_CHANNEL_MAX        = 13, 

};

// Enum Engine.ESimplygonTextureResolution
enum class ESimplygonTextureResolution : uint8_t
{
	TextureResolution              = 0, 
	TextureResolution              = 1, 
	TextureResolution              = 2, 
	TextureResolution              = 3, 
	TextureResolution              = 4, 
	TextureResolution              = 5, 
	TextureResolution              = 6, 
	TextureResolution              = 7, 
	TextureResolution_MAX          = 8, 

};

// Enum Engine.ESimplygonColorChannels
enum class ESimplygonColorChannels : uint8_t
{
	RGBA                           = 0, 
	RGB                            = 1, 
	L                              = 2, 

};

// Enum Engine.ESimplygonTextureSamplingQuality
enum class ESimplygonTextureSamplingQuality : uint8_t
{
	Poor                           = 0, 
	Low                            = 1, 
	Medium                         = 2, 
	High                           = 3, 

};

// Enum Engine.ESimplygonCasterType
enum class ESimplygonCasterType : uint8_t
{
	None                           = 0, 
	Color                          = 1, 
	Normals                        = 2, 
	Opacity                        = 3, 

};

// Enum Engine.ESimplygonTextureStrech
enum class ESimplygonTextureStrech : uint8_t
{
	None                           = 0, 
	VerySmall                      = 1, 
	Small                          = 2, 
	Medium                         = 3, 
	Large                          = 4, 
	VeryLarge                      = 5, 

};

// Enum Engine.EMaterialLODType
enum class EMaterialLODType : uint8_t
{
	Off                            = 0, 
	BakeTexture                    = 1, 
	BakeVertexColor                = 2, 
	Replace                        = 3, 

};

// Enum Engine.ESimplygonLODType
enum class ESimplygonLODType : uint8_t
{
	Reduction                      = 0, 
	Remeshing                      = 1, 

};

// Enum Engine.EOptimizationMetric
enum class EOptimizationMetric : uint8_t
{
	TrianglePercentage             = 0, 
	OnScreenSize                   = 1, 
	MaxDeviation                   = 2, 

};

// Enum Engine.EMaterialProxySmaplingQuality
enum class EMaterialProxySmaplingQuality : uint8_t
{
	Poor                           = 0, 
	Low                            = 1, 
	Medium                         = 2, 
	High                           = 3, 

};

// Enum Engine.EUVStrech
enum class EUVStrech : uint8_t
{
	Small                          = 0, 
	Medium                         = 1, 
	Large                          = 2, 
	VeryLarge                      = 3, 

};

// Enum Engine.EMaterialMergeType
enum class EMaterialMergeType : uint8_t
{
	MaterialMergeType_Default      = 0, 
	MaterialMergeType_Default      = 0, 
	MaterialMergeType_Simplygon    = 1, 
	MaterialMergeType_Simplygon    = 1, 
	MaterialMergeType_MAX          = 2, 
	MaterialMergeType_MAX          = 2, 

};

// Enum Engine.ETextureSizingType
enum class ETextureSizingType : uint8_t
{
	TextureSizingType_UseSingleTextureSize = 0, 
	TextureSizingType_UseSingleTextureSize = 0, 
	TextureSizingType_UseAutomaticBiasedSizes = 1, 
	TextureSizingType_UseAutomaticBiasedSizes = 1, 
	TextureSizingType_UseManualOverrideTextureSize = 2, 
	TextureSizingType_UseManualOverrideTextureSize = 2, 
	TextureSizingType_UseSimplygonAutomaticSizing = 3, 
	TextureSizingType_UseSimplygonAutomaticSizing = 3, 
	TextureSizingType_MAX          = 4, 
	TextureSizingType_MAX          = 4, 

};

// Enum Engine.EMeshMergeType
enum class EMeshMergeType : uint8_t
{
	MeshMergeType_Default          = 0, 
	MeshMergeType_MergeActor       = 1, 
	MeshMergeType_MAX              = 2, 

};

// Enum Engine.EMeshLODSelectionType
enum class EMeshLODSelectionType : uint8_t
{
	AllLODs                        = 0, 
	SpecificLOD                    = 1, 
	CalculateLOD                   = 2, 
	LowestDetailLOD                = 3, 

};

// Enum Engine.EProxyNormalComputationMethod
enum class EProxyNormalComputationMethod : uint8_t
{
	AngleWeighted                  = 0, 
	AreaWeighted                   = 1, 
	EqualWeighted                  = 2, 

};

// Enum Engine.ELandscapeCullingPrecision
enum class ELandscapeCullingPrecision : uint8_t
{
	High                           = 0, 
	Medium                         = 1, 
	Low                            = 2, 

};

// Enum Engine.EPhysXAggregationMode
enum class EPhysXAggregationMode : uint8_t
{
	NoCollision                    = 0, 
	BlockAllWithComplexAsSimple    = 1, 

};

// Enum Engine.EChartAggregationMode
enum class EChartAggregationMode : uint8_t
{
	TextureSize                    = 0, 
	SurfaceArea                    = 1, 
	PixelDensity                   = 2, 
	UVSize                         = 3, 

};

// Enum Engine.EStaticMeshReductionTerimationCriterion
enum class EStaticMeshReductionTerimationCriterion : uint8_t
{
	Triangles                      = 0, 
	Vertices                       = 1, 
	Any                            = 2, 

};

// Enum Engine.EImposterCaptureType
enum class EImposterCaptureType : uint8_t
{
	No                             = 0, 
	Quarter                        = 1, 
	Half                           = 2, 
	Full                           = 3, 

};

// Enum Engine.EMeshFeatureImportance
enum class EMeshFeatureImportance : uint8_t
{
	Off                            = 0, 
	Lowest                         = 1, 
	Low                            = 2, 
	Normal                         = 3, 
	High                           = 4, 
	Highest                        = 5, 

};

// Enum Engine.EActorUpdateOverlapsMethod
enum class EActorUpdateOverlapsMethod : uint8_t
{
	UseConfigDefault               = 0, 
	AlwaysUpdate                   = 1, 
	OnlyUpdateMovable              = 2, 
	NeverUpdate                    = 3, 

};

// Enum Engine.EBrushType
enum class EBrushType : uint8_t
{
	Brush_Default                  = 0, 
	Brush_Default                  = 0, 
	Brush_Add                      = 1, 
	Brush_Add                      = 1, 
	Brush_Subtract                 = 2, 
	Brush_Subtract                 = 2, 
	Brush_MAX                      = 3, 
	Brush_MAX                      = 3, 

};

// Enum Engine.ECsgOper
enum class ECsgOper : uint8_t
{
	CSG_Active                     = 0, 
	CSG_Active                     = 0, 
	CSG_Add                        = 1, 
	CSG_Add                        = 1, 
	CSG_Subtract                   = 2, 
	CSG_Subtract                   = 2, 
	CSG_Intersect                  = 3, 
	CSG_Intersect                  = 3, 
	CSG_Deintersect                = 4, 
	CSG_Deintersect                = 4, 
	CSG_None                       = 5, 
	CSG_None                       = 5, 
	CSG_MAX                        = 6, 
	CSG_MAX                        = 6, 

};

// Enum Engine.ReverbPreset
enum class EReverbPreset : uint8_t
{
	REVERB_Default                 = 0, 
	REVERB_Default                 = 0, 
	REVERB_Bathroom                = 1, 
	REVERB_Bathroom                = 1, 
	REVERB_StoneRoom               = 2, 
	REVERB_StoneRoom               = 2, 
	REVERB_Auditorium              = 3, 
	REVERB_Auditorium              = 3, 
	REVERB_ConcertHall             = 4, 
	REVERB_ConcertHall             = 4, 
	REVERB_Cave                    = 5, 
	REVERB_Cave                    = 5, 
	REVERB_Hallway                 = 6, 
	REVERB_Hallway                 = 6, 
	REVERB_StoneCorridor           = 7, 
	REVERB_StoneCorridor           = 7, 
	REVERB_Alley                   = 8, 
	REVERB_Alley                   = 8, 
	REVERB_Forest                  = 9, 
	REVERB_Forest                  = 9, 
	REVERB_City                    = 10, 
	REVERB_City                    = 10, 
	REVERB_Mountains               = 11, 
	REVERB_Mountains               = 11, 
	REVERB_Quarry                  = 12, 
	REVERB_Quarry                  = 12, 
	REVERB_Plain                   = 13, 
	REVERB_Plain                   = 13, 
	REVERB_ParkingLot              = 14, 
	REVERB_ParkingLot              = 14, 
	REVERB_SewerPipe               = 15, 
	REVERB_SewerPipe               = 15, 
	REVERB_Underwater              = 16, 
	REVERB_Underwater              = 16, 
	REVERB_SmallRoom               = 17, 
	REVERB_SmallRoom               = 17, 
	REVERB_MediumRoom              = 18, 
	REVERB_MediumRoom              = 18, 
	REVERB_LargeRoom               = 19, 
	REVERB_LargeRoom               = 19, 
	REVERB_MediumHall              = 20, 
	REVERB_MediumHall              = 20, 
	REVERB_LargeHall               = 21, 
	REVERB_LargeHall               = 21, 
	REVERB_Plate                   = 22, 
	REVERB_Plate                   = 22, 
	REVERB_MAX                     = 23, 
	REVERB_MAX                     = 23, 

};

// Enum Engine.EStreamingVolumeUsage
enum class EStreamingVolumeUsage : uint8_t
{
	SVB_Loading                    = 0, 
	SVB_Loading                    = 0, 
	SVB_LoadingAndVisibility       = 1, 
	SVB_LoadingAndVisibility       = 1, 
	SVB_VisibilityBlockingOnLoad   = 2, 
	SVB_VisibilityBlockingOnLoad   = 2, 
	SVB_BlockingOnLoad             = 3, 
	SVB_BlockingOnLoad             = 3, 
	SVB_LoadingNotVisible          = 4, 
	SVB_LoadingNotVisible          = 4, 
	SVB_MAX                        = 5, 
	SVB_MAX                        = 5, 

};

// Enum Engine.ENavigationQueryResult
enum class ENavigationQueryResult : uint8_t
{
	Invalid                        = 0, 
	Error                          = 1, 
	Fail                           = 2, 
	Success                        = 3, 

};

// Enum Engine.ENavDataGatheringModeConfig
enum class ENavDataGatheringModeConfig : uint8_t
{
	Invalid                        = 0, 
	Instant                        = 1, 
	Lazy                           = 2, 

};

// Enum Engine.ENavDataGatheringMode
enum class ENavDataGatheringMode : uint8_t
{
	Default                        = 0, 
	Instant                        = 1, 
	Lazy                           = 2, 

};

// Enum Engine.ENavigationOptionFlag
enum class ENavigationOptionFlag : uint8_t
{
	Default                        = 0, 
	Enable                         = 1, 
	Disable                        = 2, 
	MAX                            = 3, 

};

// Enum Engine.EBlendableLocation
enum class EBlendableLocation : uint8_t
{
	BL_AfterTonemapping            = 0, 
	BL_AfterTonemapping            = 0, 
	BL_BeforeTonemapping           = 1, 
	BL_BeforeTonemapping           = 1, 
	BL_BeforeTranslucency          = 2, 
	BL_BeforeTranslucency          = 2, 
	BL_ReplacingTonemapper         = 3, 
	BL_ReplacingTonemapper         = 3, 
	BL_MAX                         = 4, 
	BL_MAX                         = 4, 

};

// Enum Engine.EHBAOBlurRadius
enum class EHBAOBlurRadius : uint8_t
{
	AOBR_BlurRadius0               = 0, 
	AOBR_BlurRadius0               = 0, 
	AOBR_BlurRadius4               = 1, 
	AOBR_BlurRadius4               = 1, 
	AOBR_BlurRadius8               = 2, 
	AOBR_BlurRadius8               = 2, 
	AOBR_MAX                       = 3, 
	AOBR_MAX                       = 3, 

};

// Enum Engine.EBloomMethod
enum class EBloomMethod : uint8_t
{
	BM_SOG                         = 0, 
	BM_SOG                         = 0, 
	BM_FFT                         = 1, 
	BM_FFT                         = 1, 
	BM_MAX                         = 2, 
	BM_MAX                         = 2, 

};

// Enum Engine.EAutoExposureMethod
enum class EAutoExposureMethod : uint8_t
{
	AEM_Histogram                  = 0, 
	AEM_Histogram                  = 0, 
	AEM_Basic                      = 1, 
	AEM_Basic                      = 1, 
	AEM_MAX                        = 2, 
	AEM_MAX                        = 2, 

};

// Enum Engine.EAntiAliasingMethod
enum class EAntiAliasingMethod : uint8_t
{
	AAM_None                       = 0, 
	AAM_None                       = 0, 
	AAM_FXAA                       = 1, 
	AAM_FXAA                       = 1, 
	AAM_TemporalAA                 = 2, 
	AAM_TemporalAA                 = 2, 
	AAM_MSAA                       = 3, 
	AAM_MSAA                       = 3, 
	AAM_MAX                        = 4, 
	AAM_MAX                        = 4, 

};

// Enum Engine.EDepthOfFieldMethod
enum class EDepthOfFieldMethod : uint8_t
{
	DOFM_BokehDOF                  = 0, 
	DOFM_BokehDOF                  = 0, 
	DOFM_Gaussian                  = 1, 
	DOFM_Gaussian                  = 1, 
	DOFM_CircleDOF                 = 2, 
	DOFM_CircleDOF                 = 2, 
	DOFM_MAX                       = 3, 
	DOFM_MAX                       = 3, 

};

// Enum Engine.EMaterialProperty
enum class EMaterialProperty : uint8_t
{
	MP_EmissiveColor               = 0, 
	MP_EmissiveColor               = 0, 
	MP_Opacity                     = 1, 
	MP_Opacity                     = 1, 
	MP_OpacityMask                 = 2, 
	MP_OpacityMask                 = 2, 
	MP_DiffuseColor                = 3, 
	MP_DiffuseColor                = 3, 
	MP_SpecularColor               = 4, 
	MP_SpecularColor               = 4, 
	MP_BaseColor                   = 5, 
	MP_BaseColor                   = 5, 
	MP_Metallic                    = 6, 
	MP_Metallic                    = 6, 
	MP_Specular                    = 7, 
	MP_Specular                    = 7, 
	MP_Roughness                   = 8, 
	MP_Roughness                   = 8, 
	MP_Normal                      = 9, 
	MP_Normal                      = 9, 
	MP_WorldPositionOffset         = 10, 
	MP_WorldPositionOffset         = 10, 
	MP_WorldDisplacement           = 11, 
	MP_WorldDisplacement           = 11, 
	MP_TessellationMultiplier      = 12, 
	MP_TessellationMultiplier      = 12, 
	MP_SubsurfaceColor             = 13, 
	MP_SubsurfaceColor             = 13, 
	MP_SubsurfaceProfile           = 14, 
	MP_SubsurfaceProfile           = 14, 
	MP_CustomData0                 = 15, 
	MP_CustomData0                 = 15, 
	MP_CustomData1                 = 16, 
	MP_CustomData1                 = 16, 
	MP_AmbientOcclusion            = 17, 
	MP_AmbientOcclusion            = 17, 
	MP_Refraction                  = 18, 
	MP_Refraction                  = 18, 
	MP_CustomizedUVs0              = 19, 
	MP_CustomizedUVs0              = 19, 
	MP_CustomizedUVs1              = 20, 
	MP_CustomizedUVs1              = 20, 
	MP_CustomizedUVs2              = 21, 
	MP_CustomizedUVs2              = 21, 
	MP_CustomizedUVs3              = 22, 
	MP_CustomizedUVs3              = 22, 
	MP_CustomizedUVs4              = 23, 
	MP_CustomizedUVs4              = 23, 
	MP_CustomizedUVs5              = 24, 
	MP_CustomizedUVs5              = 24, 
	MP_CustomizedUVs6              = 25, 
	MP_CustomizedUVs6              = 25, 
	MP_CustomizedUVs7              = 26, 
	MP_CustomizedUVs7              = 26, 
	MP_PixelDepthOffset            = 27, 
	MP_PixelDepthOffset            = 27, 
	MP_MaterialAttributes          = 28, 
	MP_MaterialAttributes          = 28, 
	MP_CustomOutput                = 29, 
	MP_CustomOutput                = 29, 
	MP_MAX                         = 30, 
	MP_MAX                         = 30, 

};

// Enum Engine.ECameraAnimPlaySpace
enum class ECameraAnimPlaySpace : uint8_t
{
	CameraLocal                    = 0, 
	World                          = 1, 
	UserDefined                    = 2, 

};

// Enum Engine.ECameraProjectionMode
enum class ECameraProjectionMode : uint8_t
{
	Perspective                    = 0, 
	Orthographic                   = 1, 

};

// Enum Engine.EInitialOscillatorOffset
enum class EInitialOscillatorOffset : uint8_t
{
	EOO_OffsetRandom               = 0, 
	EOO_OffsetRandom               = 0, 
	EOO_OffsetZero                 = 1, 
	EOO_OffsetZero                 = 1, 
	EOO_MAX                        = 2, 
	EOO_MAX                        = 2, 

};

// Enum Engine.EViewTargetBlendFunction
enum class EViewTargetBlendFunction : uint8_t
{
	VTBlend_Linear                 = 0, 
	VTBlend_Linear                 = 0, 
	VTBlend_Cubic                  = 1, 
	VTBlend_Cubic                  = 1, 
	VTBlend_EaseIn                 = 2, 
	VTBlend_EaseIn                 = 2, 
	VTBlend_EaseOut                = 3, 
	VTBlend_EaseOut                = 3, 
	VTBlend_EaseInOut              = 4, 
	VTBlend_EaseInOut              = 4, 
	VTBlend_MAX                    = 5, 
	VTBlend_MAX                    = 5, 

};

// Enum Engine.EControllerAnalogStick
enum class EControllerAnalogStick : uint8_t
{
	CAS_LeftStick                  = 0, 
	CAS_RightStick                 = 1, 
	CAS_MAX                        = 2, 

};

// Enum Engine.ERichCurveExtrapolation
enum class ERichCurveExtrapolation : uint8_t
{
	RCCE_Cycle                     = 0, 
	RCCE_Cycle                     = 0, 
	RCCE_CycleWithOffset           = 1, 
	RCCE_CycleWithOffset           = 1, 
	RCCE_Oscillate                 = 2, 
	RCCE_Oscillate                 = 2, 
	RCCE_Linear                    = 3, 
	RCCE_Linear                    = 3, 
	RCCE_Constant                  = 4, 
	RCCE_Constant                  = 4, 
	RCCE_None                      = 5, 
	RCCE_None                      = 5, 
	RCCE_MAX                       = 6, 
	RCCE_MAX                       = 6, 

};

// Enum Engine.ERichCurveTangentWeightMode
enum class ERichCurveTangentWeightMode : uint8_t
{
	RCTWM_WeightedNone             = 0, 
	RCTWM_WeightedNone             = 0, 
	RCTWM_WeightedArrive           = 1, 
	RCTWM_WeightedArrive           = 1, 
	RCTWM_WeightedLeave            = 2, 
	RCTWM_WeightedLeave            = 2, 
	RCTWM_WeightedBoth             = 3, 
	RCTWM_WeightedBoth             = 3, 
	RCTWM_MAX                      = 4, 
	RCTWM_MAX                      = 4, 

};

// Enum Engine.ERichCurveTangentMode
enum class ERichCurveTangentMode : uint8_t
{
	RCTM_Auto                      = 0, 
	RCTM_Auto                      = 0, 
	RCTM_User                      = 1, 
	RCTM_User                      = 1, 
	RCTM_Break                     = 2, 
	RCTM_Break                     = 2, 
	RCTM_None                      = 3, 
	RCTM_None                      = 3, 
	RCTM_MAX                       = 4, 
	RCTM_MAX                       = 4, 

};

// Enum Engine.ERichCurveInterpMode
enum class ERichCurveInterpMode : uint8_t
{
	RCIM_Linear                    = 0, 
	RCIM_Linear                    = 0, 
	RCIM_Constant                  = 1, 
	RCIM_Constant                  = 1, 
	RCIM_Cubic                     = 2, 
	RCIM_Cubic                     = 2, 
	RCIM_None                      = 3, 
	RCIM_None                      = 3, 
	RCIM_MAX                       = 4, 
	RCIM_MAX                       = 4, 

};

// Enum Engine.EDynamicForceFeedbackAction
enum class EDynamicForceFeedbackAction : uint8_t
{
	Start                          = 0, 
	Update                         = 1, 
	Stop                           = 2, 

};

// Enum Engine.EStandbyType
enum class EStandbyType : uint8_t
{
	STDBY_Rx                       = 0, 
	STDBY_Rx                       = 0, 
	STDBY_Tx                       = 1, 
	STDBY_Tx                       = 1, 
	STDBY_BadPing                  = 2, 
	STDBY_BadPing                  = 2, 
	STDBY_MAX                      = 3, 
	STDBY_MAX                      = 3, 

};

// Enum Engine.EVisibilityAggressiveness
enum class EVisibilityAggressiveness : uint8_t
{
	VIS_LeastAggressive            = 0, 
	VIS_LeastAggressive            = 0, 
	VIS_ModeratelyAggressive       = 1, 
	VIS_ModeratelyAggressive       = 1, 
	VIS_MostAggressive             = 2, 
	VIS_MostAggressive             = 2, 
	VIS_Max                        = 3, 
	VIS_Max                        = 3, 

};

// Enum Engine.EDOFMode
enum class EDOFMode : uint8_t
{
	Default                        = 0, 
	SixDOF                         = 1, 
	YZPlane                        = 2, 
	XZPlane                        = 3, 
	XYPlane                        = 4, 
	CustomPlane                    = 5, 
	None                           = 6, 

};

// Enum Engine.ERendererStencilMask
enum class ERendererStencilMask : uint8_t
{
	ERSM_Default                   = 0, 
	ERSM                           = 1, 
	ERSM                           = 2, 
	ERSM                           = 3, 
	ERSM                           = 4, 
	ERSM                           = 5, 
	ERSM                           = 6, 
	ERSM                           = 7, 
	ERSM                           = 8, 
	ERSM                           = 9, 
	ERSM_MAX                       = 10, 

};

// Enum Engine.EHasCustomNavigableGeometry
enum class EHasCustomNavigableGeometry : uint8_t
{
	No                             = 0, 
	Yes                            = 1, 
	EvenIfNotCollidable            = 2, 
	DontExport                     = 3, 

};

// Enum Engine.ECanBeCharacterBase
enum class ECanBeCharacterBase : uint8_t
{
	ECB_No                         = 0, 
	ECB_No                         = 0, 
	ECB_Yes                        = 1, 
	ECB_Yes                        = 1, 
	ECB_Owner                      = 2, 
	ECB_Owner                      = 2, 
	ECB_MAX                        = 3, 
	ECB_MAX                        = 3, 

};

// Enum Engine.EMaterialClipVolumeImportance
enum class EMaterialClipVolumeImportance : uint8_t
{
	MCVI_Low                       = 0, 
	MCVI_Low                       = 0, 
	MCVI_Medium                    = 1, 
	MCVI_Medium                    = 1, 
	MCVI_High                      = 2, 
	MCVI_High                      = 2, 
	MCVI_Critical                  = 3, 
	MCVI_Critical                  = 3, 
	MCVI_MAX                       = 4, 
	MCVI_MAX                       = 4, 

};

// Enum Engine.EMaterialDomain
enum class EMaterialDomain : uint8_t
{
	MD_Surface                     = 0, 
	MD_Surface                     = 0, 
	MD_DeferredDecal               = 1, 
	MD_DeferredDecal               = 1, 
	MD_LightFunction               = 2, 
	MD_LightFunction               = 2, 
	MD_Volume                      = 3, 
	MD_Volume                      = 3, 
	MD_PostProcess                 = 4, 
	MD_PostProcess                 = 4, 
	MD_UI                          = 5, 
	MD_UI                          = 5, 
	MD_MAX                         = 6, 
	MD_MAX                         = 6, 

};

// Enum Engine.ERuntimeGenerationType
enum class ERuntimeGenerationType : uint8_t
{
	Static                         = 0, 
	DynamicModifiersOnly           = 1, 
	Dynamic                        = 2, 
	LegacyGeneration               = 3, 

};

// Enum Engine.ERecastPartitioning
enum class ERecastPartitioning : uint8_t
{
	Monotone                       = 0, 
	Watershed                      = 1, 
	ChunkyMonotone                 = 2, 

};

// Enum Engine.ENavCostDisplay
enum class ENavCostDisplay : uint8_t
{
	TotalCost                      = 0, 
	HeuristicOnly                  = 1, 
	RealCostOnly                   = 2, 

};

// Enum Engine.ENavLinkDirection
enum class ENavLinkDirection : uint8_t
{
	BothWays                       = 0, 
	LeftToRight                    = 1, 
	RightToLeft                    = 2, 

};

// Enum Engine.EParticleSystemOcclusionBoundsMethod
enum class EParticleSystemOcclusionBoundsMethod : uint8_t
{
	EPSOBM_None                    = 0, 
	EPSOBM_None                    = 0, 
	EPSOBM_ParticleBounds          = 1, 
	EPSOBM_ParticleBounds          = 1, 
	EPSOBM_CustomBounds            = 2, 
	EPSOBM_CustomBounds            = 2, 
	EPSOBM_MAX                     = 3, 
	EPSOBM_MAX                     = 3, 

};

// Enum Engine.ParticleSystemLODMethod
enum class EParticleSystemLODMethod : uint8_t
{
	PARTICLESYSTEMLODMETHOD_Automatic = 0, 
	PARTICLESYSTEMLODMETHOD_Automatic = 0, 
	PARTICLESYSTEMLODMETHOD_DirectSet = 1, 
	PARTICLESYSTEMLODMETHOD_DirectSet = 1, 
	PARTICLESYSTEMLODMETHOD_ActivateAutomatic = 2, 
	PARTICLESYSTEMLODMETHOD_ActivateAutomatic = 2, 
	PARTICLESYSTEMLODMETHOD_MAX    = 3, 
	PARTICLESYSTEMLODMETHOD_MAX    = 3, 

};

// Enum Engine.EParticleSystemUpdateMode
enum class EParticleSystemUpdateMode : uint8_t
{
	EPSUM_RealTime                 = 0, 
	EPSUM_RealTime                 = 0, 
	EPSUM_FixedTime                = 1, 
	EPSUM_FixedTime                = 1, 
	EPSUM_MAX                      = 2, 
	EPSUM_MAX                      = 2, 

};

// Enum Engine.EParticleEventType
enum class EParticleEventType : uint8_t
{
	EPET_Any                       = 0, 
	EPET_Any                       = 0, 
	EPET_Spawn                     = 1, 
	EPET_Spawn                     = 1, 
	EPET_Death                     = 2, 
	EPET_Death                     = 2, 
	EPET_Collision                 = 3, 
	EPET_Collision                 = 3, 
	EPET_Burst                     = 4, 
	EPET_Burst                     = 4, 
	EPET_Blueprint                 = 5, 
	EPET_Blueprint                 = 5, 
	EPET_MAX                       = 6, 
	EPET_MAX                       = 6, 

};

// Enum Engine.ParticleReplayState
enum class EParticleReplayState : uint8_t
{
	PRS_Disabled                   = 0, 
	PRS_Disabled                   = 0, 
	PRS_Capturing                  = 1, 
	PRS_Capturing                  = 1, 
	PRS_Replaying                  = 2, 
	PRS_Replaying                  = 2, 
	PRS_MAX                        = 3, 
	PRS_MAX                        = 3, 

};

// Enum Engine.EParticleSysParamType
enum class EParticleSysParamType : uint8_t
{
	PSPT_None                      = 0, 
	PSPT_None                      = 0, 
	PSPT_Scalar                    = 1, 
	PSPT_Scalar                    = 1, 
	PSPT_ScalarRand                = 2, 
	PSPT_ScalarRand                = 2, 
	PSPT_Vector                    = 3, 
	PSPT_Vector                    = 3, 
	PSPT_VectorRand                = 4, 
	PSPT_VectorRand                = 4, 
	PSPT_Color                     = 5, 
	PSPT_Color                     = 5, 
	PSPT_Actor                     = 6, 
	PSPT_Actor                     = 6, 
	PSPT_Material                  = 7, 
	PSPT_Material                  = 7, 
	PSPT_MAX                       = 8, 
	PSPT_MAX                       = 8, 

};

// Enum Engine.EAnimLinkMethod
enum class EAnimLinkMethod : uint8_t
{
	Absolute                       = 0, 
	Relative                       = 1, 
	Proportional                   = 2, 

};

// Enum Engine.EAxisOption
enum class EAxisOption : uint8_t
{
	X                              = 0, 
	Y                              = 1, 
	Z                              = 2, 
	X_Neg                          = 3, 
	Y_Neg                          = 4, 
	Z_Neg                          = 5, 
	Custom                         = 6, 

};

// Enum Engine.EAnimInterpolationType
enum class EAnimInterpolationType : uint8_t
{
	Linear                         = 0, 
	Step                           = 1, 

};

// Enum Engine.ECurveBlendOption
enum class ECurveBlendOption : uint8_t
{
	MaxWeight                      = 0, 
	NormalizeByWeight              = 1, 
	BlendByWeight                  = 2, 

};

// Enum Engine.EAdditiveAnimationType
enum class EAdditiveAnimationType : uint8_t
{
	AAT_None                       = 0, 
	AAT_None                       = 0, 
	AAT_LocalSpaceBase             = 1, 
	AAT_LocalSpaceBase             = 1, 
	AAT_RotationOffsetMeshSpace    = 2, 
	AAT_RotationOffsetMeshSpace    = 2, 
	AAT_MAX                        = 3, 
	AAT_MAX                        = 3, 

};

// Enum Engine.ENotifyFilterType
enum class ENotifyFilterType : uint8_t
{
	NoFiltering                    = 0, 
	LOD                            = 1, 

};

// Enum Engine.EMontageNotifyTickType
enum class EMontageNotifyTickType : uint8_t
{
	Queued                         = 0, 
	BranchingPoint                 = 1, 

};

// Enum Engine.EBoneRotationSource
enum class EBoneRotationSource : uint8_t
{
	BRS_KeepComponentSpaceRotation = 0, 
	BRS_KeepComponentSpaceRotation = 0, 
	BRS_KeepLocalSpaceRotation     = 1, 
	BRS_KeepLocalSpaceRotation     = 1, 
	BRS_CopyFromTarget             = 2, 
	BRS_CopyFromTarget             = 2, 
	BRS_MAX                        = 3, 
	BRS_MAX                        = 3, 

};

// Enum Engine.EBoneControlSpace
enum class EBoneControlSpace : uint8_t
{
	BCS_WorldSpace                 = 0, 
	BCS_WorldSpace                 = 0, 
	BCS_ComponentSpace             = 1, 
	BCS_ComponentSpace             = 1, 
	BCS_ParentBoneSpace            = 2, 
	BCS_ParentBoneSpace            = 2, 
	BCS_BoneSpace                  = 3, 
	BCS_BoneSpace                  = 3, 
	BCS_MAX                        = 4, 
	BCS_MAX                        = 4, 

};

// Enum Engine.EBoneAxis
enum class EBoneAxis : uint8_t
{
	BA_X                           = 0, 
	BA_X                           = 0, 
	BA_Y                           = 1, 
	BA_Y                           = 1, 
	BA_Z                           = 2, 
	BA_Z                           = 2, 
	BA_MAX                         = 3, 
	BA_MAX                         = 3, 

};

// Enum Engine.ESkeletalMeshLODType
enum class ESkeletalMeshLODType : uint8_t
{
	Reduction                      = 0, 
	Proxy                          = 1, 

};

// Enum Engine.SkeletalMeshOptimizationType
enum class ESkeletalMeshOptimizationType : uint8_t
{
	SMOT_NumOfTriangles            = 0, 
	SMOT_NumOfTriangles            = 0, 
	SMOT_MaxDeviation              = 1, 
	SMOT_MaxDeviation              = 1, 
	SMOT_ScreenSize                = 2, 
	SMOT_ScreenSize                = 2, 
	SMOT_MAX                       = 3, 
	SMOT_MAX                       = 3, 

};

// Enum Engine.SkeletalMeshOptimizationImportance
enum class ESkeletalMeshOptimizationImportance : uint8_t
{
	SMOI_Off                       = 0, 
	SMOI_Off                       = 0, 
	SMOI_Lowest                    = 1, 
	SMOI_Lowest                    = 1, 
	SMOI_Low                       = 2, 
	SMOI_Low                       = 2, 
	SMOI_Normal                    = 3, 
	SMOI_Normal                    = 3, 
	SMOI_High                      = 4, 
	SMOI_High                      = 4, 
	SMOI_Highest                   = 5, 
	SMOI_Highest                   = 5, 
	SMOI_MAX                       = 6, 
	SMOI_MAX                       = 6, 

};

// Enum Engine.SkeletalMeshTerminationCriterion
enum class ESkeletalMeshTerminationCriterion : uint8_t
{
	SMTC_NumOfTriangles            = 0, 
	SMTC_NumOfTriangles            = 0, 
	SMTC_NumOfVerts                = 1, 
	SMTC_NumOfVerts                = 1, 
	SMTC_TriangleOrVert            = 2, 
	SMTC_TriangleOrVert            = 2, 
	SMTC_AbsNumOfTriangles         = 3, 
	SMTC_AbsNumOfTriangles         = 3, 
	SMTC_AbsNumOfVerts             = 4, 
	SMTC_AbsNumOfVerts             = 4, 
	SMTC_AbsTriangleOrVert         = 5, 
	SMTC_AbsTriangleOrVert         = 5, 
	SMTC_MAX                       = 6, 
	SMTC_MAX                       = 6, 

};

// Enum Engine.AnimationCompressionFormat
enum class EAnimationCompressionFormat : uint8_t
{
	ACF_None                       = 0, 
	ACF_None                       = 0, 
	ACF_Float96NoW                 = 1, 
	ACF_Float96NoW                 = 1, 
	ACF_Fixed48NoW                 = 2, 
	ACF_Fixed48NoW                 = 2, 
	ACF_IntervalFixed32NoW         = 3, 
	ACF_IntervalFixed32NoW         = 3, 
	ACF_Fixed32NoW                 = 4, 
	ACF_Fixed32NoW                 = 4, 
	ACF_Float32NoW                 = 5, 
	ACF_Float32NoW                 = 5, 
	ACF_Identity                   = 6, 
	ACF_Identity                   = 6, 
	ACF_MAX                        = 7, 
	ACF_MAX                        = 7, 

};

// Enum Engine.EAdditiveBasePoseType
enum class EAdditiveBasePoseType : uint8_t
{
	ABPT_None                      = 0, 
	ABPT_None                      = 0, 
	ABPT_RefPose                   = 1, 
	ABPT_RefPose                   = 1, 
	ABPT_AnimScaled                = 2, 
	ABPT_AnimScaled                = 2, 
	ABPT_AnimFrame                 = 3, 
	ABPT_AnimFrame                 = 3, 
	ABPT_MAX                       = 4, 
	ABPT_MAX                       = 4, 

};

// Enum Engine.ERootMotionMode
enum class ERootMotionMode : uint8_t
{
	NoRootMotionExtraction         = 0, 
	IgnoreRootMotion               = 1, 
	RootMotionFromEverything       = 2, 
	RootMotionFromMontagesOnly     = 3, 

};

// Enum Engine.ERootMotionRootLock
enum class ERootMotionRootLock : uint8_t
{
	RefPose                        = 0, 
	AnimFirstFrame                 = 1, 
	Zero                           = 2, 

};

// Enum Engine.EAnimGroupRole
enum class EAnimGroupRole : uint8_t
{
	CanBeLeader                    = 0, 
	AlwaysFollower                 = 1, 
	AlwaysLeader                   = 2, 
	TransitionLeader               = 3, 

};

// Enum Engine.ERootMotionFinishVelocityMode
enum class ERootMotionFinishVelocityMode : uint8_t
{
	MaintainLastRootMotionVelocity = 0, 
	SetVelocity                    = 1, 
	ClampVelocity                  = 2, 

};

// Enum Engine.ERootMotionSourceSettingsFlags
enum class ERootMotionSourceSettingsFlags : uint8_t
{
	UseSensitiveLiftoffCheck       = 0, 
	DisablePartialEndTick          = 1, 

};

// Enum Engine.ERootMotionSourceStatusFlags
enum class ERootMotionSourceStatusFlags : uint8_t
{
	Prepared                       = 0, 
	Finished                       = 1, 
	MarkedForRemoval               = 2, 

};

// Enum Engine.ERootMotionAccumulateMode
enum class ERootMotionAccumulateMode : uint8_t
{
	Override                       = 0, 
	Additive                       = 1, 

};

// Enum Engine.EStaticMeshLODType
enum class EStaticMeshLODType : uint8_t
{
	Reduction                      = 0, 
	Proxy                          = 1, 

};

// Enum Engine.EOptimizationType
enum class EOptimizationType : uint8_t
{
	OT_NumOfTriangles              = 0, 
	OT_NumOfTriangles              = 0, 
	OT_MaxDeviation                = 1, 
	OT_MaxDeviation                = 1, 
	OT_MAX                         = 2, 
	OT_MAX                         = 2, 

};

// Enum Engine.EImportanceLevel
enum class EImportanceLevel : uint8_t
{
	IL_Off                         = 0, 
	IL_Off                         = 0, 
	IL_Lowest                      = 1, 
	IL_Lowest                      = 1, 
	IL_Low                         = 2, 
	IL_Low                         = 2, 
	IL_Normal                      = 3, 
	IL_Normal                      = 3, 
	IL_High                        = 4, 
	IL_High                        = 4, 
	IL_Highest                     = 5, 
	IL_Highest                     = 5, 
	TEMP_BROKEN2                   = 6, 
	TEMP_BROKEN2                   = 6, 

};

// Enum Engine.ENormalMode
enum class ENormalMode : uint8_t
{
	NM_PreserveSmoothingGroups     = 0, 
	NM_PreserveSmoothingGroups     = 0, 
	NM_RecalculateNormals          = 1, 
	NM_RecalculateNormals          = 1, 
	NM_RecalculateNormalsSmooth    = 2, 
	NM_RecalculateNormalsSmooth    = 2, 
	NM_RecalculateNormalsHard      = 3, 
	NM_RecalculateNormalsHard      = 3, 
	TEMP_BROKEN                    = 4, 
	TEMP_BROKEN                    = 4, 

};

// Enum Engine.EBoneTranslationRetargetingMode
enum class EBoneTranslationRetargetingMode : uint8_t
{
	Animation                      = 0, 
	Skeleton                       = 1, 
	AnimationScaled                = 2, 
	AnimationRelative              = 3, 

};

// Enum Engine.EAlphaBlendOption
enum class EAlphaBlendOption : uint8_t
{
	Linear                         = 0, 
	Cubic                          = 1, 
	HermiteCubic                   = 2, 
	Sinusoidal                     = 3, 
	QuadraticInOut                 = 4, 
	CubicInOut                     = 5, 
	QuarticInOut                   = 6, 
	QuinticInOut                   = 7, 
	CircularIn                     = 8, 
	CircularOut                    = 9, 
	CircularInOut                  = 10, 
	ExpIn                          = 11, 
	ExpOut                         = 12, 
	ExpInOut                       = 13, 
	Custom                         = 14, 

};

// Enum Engine.ERawCurveTrackTypes
enum class ERawCurveTrackTypes : uint8_t
{
	RCT_Float                      = 0, 
	RCT_Vector                     = 1, 
	RCT_Transform                  = 2, 
	RCT_MAX                        = 3, 

};

// Enum Engine.EAnimAssetCurveFlags
enum class EAnimAssetCurveFlags : uint8_t
{
	AACF_DriveMorphTarget_DEPRECATED = 0, 
	AACF_DriveMorphTarget_DEPRECATED = 0, 
	AACF_DriveAttribute_DEPRECATED = 1, 
	AACF_DriveAttribute_DEPRECATED = 1, 
	AACF_Editable                  = 2, 
	AACF_Editable                  = 2, 
	AACF_DriveMaterial_DEPRECATED  = 3, 
	AACF_DriveMaterial_DEPRECATED  = 3, 
	AACF_Metadata                  = 4, 
	AACF_Metadata                  = 4, 
	AACF_DriveTrack                = 5, 
	AACF_DriveTrack                = 5, 
	AACF_Disabled                  = 6, 
	AACF_Disabled                  = 6, 
	AACF_MAX                       = 7, 
	AACF_MAX                       = 7, 

};

// Enum Engine.ETypeAdvanceAnim
enum class ETypeAdvanceAnim : uint8_t
{
	ETAA_Default                   = 0, 
	ETAA_Default                   = 0, 
	ETAA_Finished                  = 1, 
	ETAA_Finished                  = 1, 
	ETAA_Looped                    = 2, 
	ETAA_Looped                    = 2, 
	ETAA_MAX                       = 3, 
	ETAA_MAX                       = 3, 

};

// Enum Engine.EAnimNotifyEventType
enum class EAnimNotifyEventType : uint8_t
{
	Begin                          = 0, 
	End                            = 1, 

};

// Enum Engine.ERoundingMode
enum class ERoundingMode : uint8_t
{
	HalfToEven                     = 0, 
	HalfToEven                     = 0, 
	HalfFromZero                   = 1, 
	HalfFromZero                   = 1, 
	HalfToZero                     = 2, 
	HalfToZero                     = 2, 
	FromZero                       = 3, 
	FromZero                       = 3, 
	ToZero                         = 4, 
	ToZero                         = 4, 
	ToNegativeInfinity             = 5, 
	ToNegativeInfinity             = 5, 
	ToPositiveInfinity             = 6, 
	ToPositiveInfinity             = 6, 

};

// Enum Engine.FNavigationSystemRunMode
enum class EFNavigationSystemRunMode : uint8_t
{
	FNavigationSystemRunMode::InvalidMode = 0, 
	FNavigationSystemRunMode__InvalidMode = 0, 
	FNavigationSystemRunMode::GameMode = 1, 
	FNavigationSystemRunMode__GameMode = 1, 
	FNavigationSystemRunMode::EditorMode = 2, 
	FNavigationSystemRunMode__EditorMode = 2, 
	FNavigationSystemRunMode::SimulationMode = 3, 
	FNavigationSystemRunMode__SimulationMode = 3, 
	FNavigationSystemRunMode::PIEMode = 4, 
	FNavigationSystemRunMode__PIEMode = 4, 
	FNavigationSystemRunMode::FNavigationSystemRunMode_MAX = 5, 
	FNavigationSystemRunMode__FNavigationSystemRunMode_MAX = 5, 

};

// Enum Engine.EBodyCollisionResponse
enum class EBodyCollisionResponse : uint8_t
{
	BodyCollision_Enabled          = 0, 
	BodyCollision_Disabled         = 1, 
	BodyCollision_MAX              = 2, 

};

// Enum Engine.EPhysicsType
enum class EPhysicsType : uint8_t
{
	PhysType_Default               = 0, 
	PhysType_Default               = 0, 
	PhysType_Kinematic             = 1, 
	PhysType_Kinematic             = 1, 
	PhysType_Simulated             = 2, 
	PhysType_Simulated             = 2, 
	PhysType_MAX                   = 3, 
	PhysType_MAX                   = 3, 

};

// Enum Engine.ECollisionTraceFlag
enum class ECollisionTraceFlag : uint8_t
{
	CTF_UseDefault                 = 0, 
	CTF_UseDefault                 = 0, 
	CTF_UseSimpleAndComplex        = 1, 
	CTF_UseSimpleAndComplex        = 1, 
	CTF_UseSimpleAsComplex         = 2, 
	CTF_UseSimpleAsComplex         = 2, 
	CTF_UseComplexAsSimple         = 3, 
	CTF_UseComplexAsSimple         = 3, 
	CTF_MAX                        = 4, 
	CTF_MAX                        = 4, 

};

// Enum Engine.EFrictionCombineMode
enum class EFrictionCombineMode : uint8_t
{
	Average                        = 0, 
	Min                            = 1, 
	Multiply                       = 2, 
	Max                            = 3, 

};

// Enum Engine.ESettingsLockedAxis
enum class ESettingsLockedAxis : uint8_t
{
	None                           = 0, 
	X                              = 1, 
	Y                              = 2, 
	Z                              = 3, 
	Invalid                        = 4, 

};

// Enum Engine.ESettingsDOF
enum class ESettingsDOF : uint8_t
{
	Full3D                         = 0, 
	YZPlane                        = 1, 
	XZPlane                        = 2, 
	XYPlane                        = 3, 

};

// Enum Engine.EAutoExposureMethodUI
enum class EAutoExposureMethodUI : uint8_t
{
	AEM_Histogram                  = 0, 
	AEM_Basic                      = 1, 
	AEM_MAX                        = 2, 

};

// Enum Engine.EEarlyZPass
enum class EEarlyZPass : uint8_t
{
	None                           = 0, 
	OpaqueOnly                     = 1, 
	OpaqueAndMasked                = 2, 
	Auto                           = 3, 

};

// Enum Engine.ECustomDepthStencil
enum class ECustomDepthStencil : uint8_t
{
	Disabled                       = 0, 
	Enabled                        = 1, 
	EnabledOnDemand                = 2, 
	EnabledWithStencil             = 3, 

};

// Enum Engine.EMobileMSAASampleCount
enum class EMobileMSAASampleCount : uint8_t
{
	One                            = 0, 
	Two                            = 1, 
	Four                           = 2, 
	Eight                          = 3, 

};

// Enum Engine.ECompositingSampleCount
enum class ECompositingSampleCount : uint8_t
{
	One                            = 0, 
	Two                            = 1, 
	Four                           = 2, 
	Eight                          = 3, 

};

// Enum Engine.EClearSceneOptions
enum class EClearSceneOptions : uint8_t
{
	NoClear                        = 0, 
	HardwareClear                  = 1, 
	QuadAtMaxZ                     = 2, 

};

// Enum Engine.EUIScalingRule
enum class EUIScalingRule : uint8_t
{
	ShortestSide                   = 0, 
	LongestSide                    = 1, 
	Horizontal                     = 2, 
	Vertical                       = 3, 
	Custom                         = 4, 

};

// Enum Engine.ERenderFocusRule
enum class ERenderFocusRule : uint8_t
{
	Always                         = 0, 
	NonPointer                     = 1, 
	NavigationOnly                 = 2, 
	Never                          = 3, 

};

// Enum Engine.DistributionParamMode
enum class EDistributionParamMode : uint8_t
{
	DPM_Normal                     = 0, 
	DPM_Normal                     = 0, 
	DPM_Abs                        = 1, 
	DPM_Abs                        = 1, 
	DPM_Direct                     = 2, 
	DPM_Direct                     = 2, 
	DPM_MAX                        = 3, 
	DPM_MAX                        = 3, 

};

// Enum Engine.EDistributionVectorMirrorFlags
enum class EDistributionVectorMirrorFlags : uint8_t
{
	EDVMF_Same                     = 0, 
	EDVMF_Same                     = 0, 
	EDVMF_Different                = 1, 
	EDVMF_Different                = 1, 
	EDVMF_Mirror                   = 2, 
	EDVMF_Mirror                   = 2, 
	EDVMF_MAX                      = 3, 
	EDVMF_MAX                      = 3, 

};

// Enum Engine.EDistributionVectorLockFlags
enum class EDistributionVectorLockFlags : uint8_t
{
	EDVLF_None                     = 0, 
	EDVLF_None                     = 0, 
	EDVLF_XY                       = 1, 
	EDVLF_XY                       = 1, 
	EDVLF_XZ                       = 2, 
	EDVLF_XZ                       = 2, 
	EDVLF_YZ                       = 3, 
	EDVLF_YZ                       = 3, 
	EDVLF_XYZ                      = 4, 
	EDVLF_XYZ                      = 4, 
	EDVLF_MAX                      = 5, 
	EDVLF_MAX                      = 5, 

};

// Enum Engine.ECanCreateConnectionResponse
enum class ECanCreateConnectionResponse : uint8_t
{
	CONNECT_RESPONSE_MAKE          = 0, 
	CONNECT_RESPONSE_MAKE          = 0, 
	CONNECT_RESPONSE_DISALLOW      = 1, 
	CONNECT_RESPONSE_DISALLOW      = 1, 
	CONNECT_RESPONSE_BREAK_OTHERS_A = 2, 
	CONNECT_RESPONSE_BREAK_OTHERS_A = 2, 
	CONNECT_RESPONSE_BREAK_OTHERS_B = 3, 
	CONNECT_RESPONSE_BREAK_OTHERS_B = 3, 
	CONNECT_RESPONSE_BREAK_OTHERS_AB = 4, 
	CONNECT_RESPONSE_BREAK_OTHERS_AB = 4, 
	CONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE = 5, 
	CONNECT_RESPONSE_MAKE_WITH_CONVERSION_NODE = 5, 
	CONNECT_RESPONSE_MAX           = 6, 
	CONNECT_RESPONSE_MAX           = 6, 

};

// Enum Engine.EGraphType
enum class EGraphType : uint8_t
{
	GT_Function                    = 0, 
	GT_Function                    = 0, 
	GT_Ubergraph                   = 1, 
	GT_Ubergraph                   = 1, 
	GT_Macro                       = 2, 
	GT_Macro                       = 2, 
	GT_Animation                   = 3, 
	GT_Animation                   = 3, 
	GT_StateMachine                = 4, 
	GT_StateMachine                = 4, 
	GT_MAX                         = 5, 
	GT_MAX                         = 5, 

};

// Enum Engine.EBackgroundTask
enum class EBackgroundTask : uint8_t
{
	BT_ShaderCompile               = 0, 
	BT_ShaderCompile               = 0, 
	BT_RenderGrassMap              = 1, 
	BT_RenderGrassMap              = 1, 
	BT_BuildLighting               = 2, 
	BT_BuildLighting               = 2, 
	BT_MAX                         = 3, 
	BT_MAX                         = 3, 

};

// Enum Engine.EConsoleType
enum class EConsoleType : uint8_t
{
	CONSOLE_Any                    = 0, 
	CONSOLE_Any                    = 0, 
	CONSOLE_Mobile                 = 1, 
	CONSOLE_Mobile                 = 1, 
	CONSOLE_MAX                    = 2, 
	CONSOLE_MAX                    = 2, 

};

// Enum Engine.ETransitionType
enum class ETransitionType : uint8_t
{
	TT_None                        = 0, 
	TT_None                        = 0, 
	TT_Paused                      = 1, 
	TT_Paused                      = 1, 
	TT_Loading                     = 2, 
	TT_Loading                     = 2, 
	TT_Saving                      = 3, 
	TT_Saving                      = 3, 
	TT_Connecting                  = 4, 
	TT_Connecting                  = 4, 
	TT_Precaching                  = 5, 
	TT_Precaching                  = 5, 
	TT_WaitingToConnect            = 6, 
	TT_WaitingToConnect            = 6, 
	TT_MAX                         = 7, 
	TT_MAX                         = 7, 

};

// Enum Engine.EFullyLoadPackageType
enum class EFullyLoadPackageType : uint8_t
{
	FULLYLOAD_Map                  = 0, 
	FULLYLOAD_Map                  = 0, 
	FULLYLOAD_Game_PreLoadClass    = 1, 
	FULLYLOAD_Game_PreLoadClass    = 1, 
	FULLYLOAD_Game_PostLoadClass   = 2, 
	FULLYLOAD_Game_PostLoadClass   = 2, 
	FULLYLOAD_Always               = 3, 
	FULLYLOAD_Always               = 3, 
	FULLYLOAD_Mutator              = 4, 
	FULLYLOAD_Mutator              = 4, 
	FULLYLOAD_MAX                  = 5, 
	FULLYLOAD_MAX                  = 5, 

};

// Enum Engine.EFontImportCharacterSet
enum class EFontImportCharacterSet : uint8_t
{
	FontICS_Default                = 0, 
	FontICS_Default                = 0, 
	FontICS_Ansi                   = 1, 
	FontICS_Ansi                   = 1, 
	FontICS_Symbol                 = 2, 
	FontICS_Symbol                 = 2, 
	FontICS_MAX                    = 3, 
	FontICS_MAX                    = 3, 

};

// Enum Engine.EFontCacheType
enum class EFontCacheType : uint8_t
{
	Offline                        = 0, 
	Runtime                        = 1, 

};

// Enum Engine.EWindowMode
enum class EWindowMode : uint8_t
{
	Fullscreen                     = 0, 
	WindowedFullscreen             = 1, 
	Windowed                       = 2, 

};

// Enum Engine.ETrackActiveCondition
enum class ETrackActiveCondition : uint8_t
{
	ETAC_Always                    = 0, 
	ETAC_Always                    = 0, 
	ETAC_GoreEnabled               = 1, 
	ETAC_GoreEnabled               = 1, 
	ETAC_GoreDisabled              = 2, 
	ETAC_GoreDisabled              = 2, 
	ETAC_MAX                       = 3, 
	ETAC_MAX                       = 3, 

};

// Enum Engine.EInterpTrackMoveRotMode
enum class EInterpTrackMoveRotMode : uint8_t
{
	IMR_Keyframed                  = 0, 
	IMR_Keyframed                  = 0, 
	IMR_LookAtGroup                = 1, 
	IMR_LookAtGroup                = 1, 
	IMR_Ignore                     = 2, 
	IMR_Ignore                     = 2, 
	IMR_MAX                        = 3, 
	IMR_MAX                        = 3, 

};

// Enum Engine.EInterpMoveAxis
enum class EInterpMoveAxis : uint8_t
{
	AXIS_TranslationX              = 0, 
	AXIS_TranslationX              = 0, 
	AXIS_TranslationY              = 1, 
	AXIS_TranslationY              = 1, 
	AXIS_TranslationZ              = 2, 
	AXIS_TranslationZ              = 2, 
	AXIS_RotationX                 = 3, 
	AXIS_RotationX                 = 3, 
	AXIS_RotationY                 = 4, 
	AXIS_RotationY                 = 4, 
	AXIS_RotationZ                 = 5, 
	AXIS_RotationZ                 = 5, 
	AXIS_MAX                       = 6, 
	AXIS_MAX                       = 6, 

};

// Enum Engine.ETrackToggleAction
enum class ETrackToggleAction : uint8_t
{
	ETTA_Off                       = 0, 
	ETTA_Off                       = 0, 
	ETTA_On                        = 1, 
	ETTA_On                        = 1, 
	ETTA_Toggle                    = 2, 
	ETTA_Toggle                    = 2, 
	ETTA_Trigger                   = 3, 
	ETTA_Trigger                   = 3, 
	ETTA_MAX                       = 4, 
	ETTA_MAX                       = 4, 

};

// Enum Engine.EVisibilityTrackCondition
enum class EVisibilityTrackCondition : uint8_t
{
	EVTC_Always                    = 0, 
	EVTC_Always                    = 0, 
	EVTC_GoreEnabled               = 1, 
	EVTC_GoreEnabled               = 1, 
	EVTC_GoreDisabled              = 2, 
	EVTC_GoreDisabled              = 2, 
	EVTC_MAX                       = 3, 
	EVTC_MAX                       = 3, 

};

// Enum Engine.EVisibilityTrackAction
enum class EVisibilityTrackAction : uint8_t
{
	EVTA_Hide                      = 0, 
	EVTA_Hide                      = 0, 
	EVTA_Show                      = 1, 
	EVTA_Show                      = 1, 
	EVTA_Toggle                    = 2, 
	EVTA_Toggle                    = 2, 
	EVTA_MAX                       = 3, 
	EVTA_MAX                       = 3, 

};

// Enum Engine.EMaterialAttributeBlend
enum class EMaterialAttributeBlend : uint8_t
{
	Blend                          = 0, 
	UseA                           = 1, 
	UseB                           = 2, 

};

// Enum Engine.EClampMode
enum class EClampMode : uint8_t
{
	CMODE_Clamp                    = 0, 
	CMODE_Clamp                    = 0, 
	CMODE_ClampMin                 = 1, 
	CMODE_ClampMin                 = 1, 
	CMODE_ClampMax                 = 2, 
	CMODE_ClampMax                 = 2, 
	CMODE_MAX                      = 3, 
	CMODE_MAX                      = 3, 

};

// Enum Engine.ECustomMaterialOutputType
enum class ECustomMaterialOutputType : uint8_t
{
	CMOT_Float1                    = 0, 
	CMOT_Float1                    = 0, 
	CMOT_Float2                    = 1, 
	CMOT_Float2                    = 1, 
	CMOT_Float3                    = 2, 
	CMOT_Float3                    = 2, 
	CMOT_Float4                    = 3, 
	CMOT_Float4                    = 3, 
	CMOT_MAX                       = 4, 
	CMOT_MAX                       = 4, 

};

// Enum Engine.EDepthOfFieldFunctionValue
enum class EDepthOfFieldFunctionValue : uint8_t
{
	TDOF_NearAndFarMask            = 0, 
	TDOF_NearAndFarMask            = 0, 
	TDOF_NearMask                  = 1, 
	TDOF_NearMask                  = 1, 
	TDOF_FarMask                   = 2, 
	TDOF_FarMask                   = 2, 
	TDOF_CircleOfConfusionRadius   = 3, 
	TDOF_CircleOfConfusionRadius   = 3, 
	TDOF_MAX                       = 4, 
	TDOF_MAX                       = 4, 

};

// Enum Engine.EFunctionInputType
enum class EFunctionInputType : uint8_t
{
	FunctionInput_Scalar           = 0, 
	FunctionInput_Scalar           = 0, 
	FunctionInput_Vector2          = 1, 
	FunctionInput_Vector2          = 1, 
	FunctionInput_Vector3          = 2, 
	FunctionInput_Vector3          = 2, 
	FunctionInput_Vector4          = 3, 
	FunctionInput_Vector4          = 3, 
	FunctionInput_Texture2D        = 4, 
	FunctionInput_Texture2D        = 4, 
	FunctionInput_TextureCube      = 5, 
	FunctionInput_TextureCube      = 5, 
	FunctionInput_Texture2DArray   = 6, 
	FunctionInput_Texture2DArray   = 6, 
	FunctionInput_StaticBool       = 7, 
	FunctionInput_StaticBool       = 7, 
	FunctionInput_MaterialAttributes = 8, 
	FunctionInput_MaterialAttributes = 8, 
	FunctionInput_MAX              = 9, 
	FunctionInput_MAX              = 9, 

};

// Enum Engine.ENoiseFunction
enum class ENoiseFunction : uint8_t
{
	NOISEFUNCTION_SimplexTex       = 0, 
	NOISEFUNCTION_SimplexTex       = 0, 
	NOISEFUNCTION_GradientTex      = 1, 
	NOISEFUNCTION_GradientTex      = 1, 
	NOISEFUNCTION_GradientTex3D    = 2, 
	NOISEFUNCTION_GradientTex3D    = 2, 
	NOISEFUNCTION_GradientALU      = 3, 
	NOISEFUNCTION_GradientALU      = 3, 
	NOISEFUNCTION_ValueALU         = 4, 
	NOISEFUNCTION_ValueALU         = 4, 
	NOISEFUNCTION_VoronoiALU       = 5, 
	NOISEFUNCTION_VoronoiALU       = 5, 
	NOISEFUNCTION_MAX              = 6, 
	NOISEFUNCTION_MAX              = 6, 

};

// Enum Engine.EObjectPositionIncludedOffsets
enum class EObjectPositionIncludedOffsets : uint8_t
{
	OPT_Default                    = 0, 
	OPT_Default                    = 0, 
	OPT_Full                       = 1, 
	OPT_Full                       = 1, 
	OPT_MAX                        = 2, 
	OPT_MAX                        = 2, 

};

// Enum Engine.EMaterialSceneAttributeInputMode
enum class EMaterialSceneAttributeInputMode : uint8_t
{
	Coordinates                    = 0, 
	OffsetFraction                 = 1, 

};

// Enum Engine.ESceneTextureId
enum class ESceneTextureId : uint8_t
{
	PPI_SceneColor                 = 0, 
	PPI_SceneColor                 = 0, 
	PPI_SceneDepth                 = 1, 
	PPI_SceneDepth                 = 1, 
	PPI_DiffuseColor               = 2, 
	PPI_DiffuseColor               = 2, 
	PPI_SpecularColor              = 3, 
	PPI_SpecularColor              = 3, 
	PPI_SubsurfaceColor            = 4, 
	PPI_SubsurfaceColor            = 4, 
	PPI_BaseColor                  = 5, 
	PPI_BaseColor                  = 5, 
	PPI_Specular                   = 6, 
	PPI_Specular                   = 6, 
	PPI_Metallic                   = 7, 
	PPI_Metallic                   = 7, 
	PPI_WorldNormal                = 8, 
	PPI_WorldNormal                = 8, 
	PPI_SeparateTranslucency       = 9, 
	PPI_SeparateTranslucency       = 9, 
	PPI_Opacity                    = 10, 
	PPI_Opacity                    = 10, 
	PPI_Roughness                  = 11, 
	PPI_Roughness                  = 11, 
	PPI_MaterialAO                 = 12, 
	PPI_MaterialAO                 = 12, 
	PPI_CustomDepth                = 13, 
	PPI_CustomDepth                = 13, 
	PPI_PostProcessInput0          = 14, 
	PPI_PostProcessInput0          = 14, 
	PPI_PostProcessInput1          = 15, 
	PPI_PostProcessInput1          = 15, 
	PPI_PostProcessInput2          = 16, 
	PPI_PostProcessInput2          = 16, 
	PPI_PostProcessInput3          = 17, 
	PPI_PostProcessInput3          = 17, 
	PPI_PostProcessInput4          = 18, 
	PPI_PostProcessInput4          = 18, 
	PPI_PostProcessInput5          = 19, 
	PPI_PostProcessInput5          = 19, 
	PPI_PostProcessInput6          = 20, 
	PPI_PostProcessInput6          = 20, 
	PPI_DecalMask                  = 21, 
	PPI_DecalMask                  = 21, 
	PPI_ShadingModel               = 22, 
	PPI_ShadingModel               = 22, 
	PPI_AmbientOcclusion           = 23, 
	PPI_AmbientOcclusion           = 23, 
	PPI_CustomStencil              = 24, 
	PPI_CustomStencil              = 24, 
	PPI_StoredBaseColor            = 25, 
	PPI_StoredBaseColor            = 25, 
	PPI_StoredSpecular             = 26, 
	PPI_StoredSpecular             = 26, 
	PPI_ScreenCopy                 = 27, 
	PPI_ScreenCopy                 = 27, 
	PPI_SceneStencil               = 28, 
	PPI_SceneStencil               = 28, 
	PPI_MAX                        = 29, 
	PPI_MAX                        = 29, 

};

// Enum Engine.ESpeedTreeLODType
enum class ESpeedTreeLODType : uint8_t
{
	STLOD_Pop                      = 0, 
	STLOD_Pop                      = 0, 
	STLOD_Smooth                   = 1, 
	STLOD_Smooth                   = 1, 
	STLOD_MAX                      = 2, 
	STLOD_MAX                      = 2, 

};

// Enum Engine.ESpeedTreeWindType
enum class ESpeedTreeWindType : uint8_t
{
	STW_None                       = 0, 
	STW_None                       = 0, 
	STW_Fastest                    = 1, 
	STW_Fastest                    = 1, 
	STW_Fast                       = 2, 
	STW_Fast                       = 2, 
	STW_Better                     = 3, 
	STW_Better                     = 3, 
	STW_Best                       = 4, 
	STW_Best                       = 4, 
	STW_Palm                       = 5, 
	STW_Palm                       = 5, 
	STW_BestPlus                   = 6, 
	STW_BestPlus                   = 6, 
	STW_MAX                        = 7, 
	STW_MAX                        = 7, 

};

// Enum Engine.ESpeedTreeGeometryType
enum class ESpeedTreeGeometryType : uint8_t
{
	STG_Branch                     = 0, 
	STG_Branch                     = 0, 
	STG_Frond                      = 1, 
	STG_Frond                      = 1, 
	STG_Leaf                       = 2, 
	STG_Leaf                       = 2, 
	STG_FacingLeaf                 = 3, 
	STG_FacingLeaf                 = 3, 
	STG_Billboard                  = 4, 
	STG_Billboard                  = 4, 
	STG_MAX                        = 5, 
	STG_MAX                        = 5, 

};

// Enum Engine.ETextureChannel
enum class ETextureChannel : uint8_t
{
	R                              = 0, 
	G                              = 1, 
	B                              = 2, 
	A                              = 3, 

};

// Enum Engine.ETextureMipValueMode
enum class ETextureMipValueMode : uint8_t
{
	TMVM_None                      = 0, 
	TMVM_None                      = 0, 
	TMVM_MipLevel                  = 1, 
	TMVM_MipLevel                  = 1, 
	TMVM_MipBias                   = 2, 
	TMVM_MipBias                   = 2, 
	TMVM_Derivative                = 3, 
	TMVM_Derivative                = 3, 
	TMVM_MAX                       = 4, 
	TMVM_MAX                       = 4, 

};

// Enum Engine.ETextureColorChannel
enum class ETextureColorChannel : uint8_t
{
	TCC_Red                        = 0, 
	TCC_Red                        = 0, 
	TCC_Green                      = 1, 
	TCC_Green                      = 1, 
	TCC_Blue                       = 2, 
	TCC_Blue                       = 2, 
	TCC_Alpha                      = 3, 
	TCC_Alpha                      = 3, 
	TCC_MAX                        = 4, 
	TCC_MAX                        = 4, 

};

// Enum Engine.EMaterialExposedTextureProperty
enum class EMaterialExposedTextureProperty : uint8_t
{
	TMTM_TextureSize               = 0, 
	TMTM_TextureSize               = 0, 
	TMTM_TexelSize                 = 1, 
	TMTM_TexelSize                 = 1, 
	TMTM_MAX                       = 2, 
	TMTM_MAX                       = 2, 

};

// Enum Engine.EMaterialVectorCoordTransform
enum class EMaterialVectorCoordTransform : uint8_t
{
	TRANSFORM_Tangent              = 0, 
	TRANSFORM_Tangent              = 0, 
	TRANSFORM_Local                = 1, 
	TRANSFORM_Local                = 1, 
	TRANSFORM_World                = 2, 
	TRANSFORM_World                = 2, 
	TRANSFORM_View                 = 3, 
	TRANSFORM_View                 = 3, 
	TRANSFORM_Camera               = 4, 
	TRANSFORM_Camera               = 4, 
	TRANSFORM_ParticleWorld        = 5, 
	TRANSFORM_ParticleWorld        = 5, 
	TRANSFORM_MAX                  = 6, 
	TRANSFORM_MAX                  = 6, 

};

// Enum Engine.EMaterialVectorCoordTransformSource
enum class EMaterialVectorCoordTransformSource : uint8_t
{
	TRANSFORMSOURCE_Tangent        = 0, 
	TRANSFORMSOURCE_Tangent        = 0, 
	TRANSFORMSOURCE_Local          = 1, 
	TRANSFORMSOURCE_Local          = 1, 
	TRANSFORMSOURCE_World          = 2, 
	TRANSFORMSOURCE_World          = 2, 
	TRANSFORMSOURCE_View           = 3, 
	TRANSFORMSOURCE_View           = 3, 
	TRANSFORMSOURCE_Camera         = 4, 
	TRANSFORMSOURCE_Camera         = 4, 
	TRANSFORMSOURCE_ParticleWorld  = 5, 
	TRANSFORMSOURCE_ParticleWorld  = 5, 
	TRANSFORMSOURCE_MAX            = 6, 
	TRANSFORMSOURCE_MAX            = 6, 

};

// Enum Engine.EMaterialPositionTransformSource
enum class EMaterialPositionTransformSource : uint8_t
{
	TRANSFORMPOSSOURCE_Local       = 0, 
	TRANSFORMPOSSOURCE_Local       = 0, 
	TRANSFORMPOSSOURCE_World       = 1, 
	TRANSFORMPOSSOURCE_World       = 1, 
	TRANSFORMPOSSOURCE_TranslatedWorld = 2, 
	TRANSFORMPOSSOURCE_TranslatedWorld = 2, 
	TRANSFORMPOSSOURCE_View        = 3, 
	TRANSFORMPOSSOURCE_View        = 3, 
	TRANSFORMPOSSOURCE_Camera      = 4, 
	TRANSFORMPOSSOURCE_Camera      = 4, 
	TRANSFORMPOSSOURCE_Particle    = 5, 
	TRANSFORMPOSSOURCE_Particle    = 5, 
	TRANSFORMPOSSOURCE_MAX         = 6, 
	TRANSFORMPOSSOURCE_MAX         = 6, 

};

// Enum Engine.EVectorNoiseFunction
enum class EVectorNoiseFunction : uint8_t
{
	VNF_CellnoiseALU               = 0, 
	VNF_CellnoiseALU               = 0, 
	VNF_VectorALU                  = 1, 
	VNF_VectorALU                  = 1, 
	VNF_GradientALU                = 2, 
	VNF_GradientALU                = 2, 
	VNF_CurlALU                    = 3, 
	VNF_CurlALU                    = 3, 
	VNF_VoronoiALU                 = 4, 
	VNF_VoronoiALU                 = 4, 
	VNF_MAX                        = 5, 
	VNF_MAX                        = 5, 

};

// Enum Engine.EMaterialExposedViewProperty
enum class EMaterialExposedViewProperty : uint8_t
{
	MEVP_BufferSize                = 0, 
	MEVP_BufferSize                = 0, 
	MEVP_FieldOfView               = 1, 
	MEVP_FieldOfView               = 1, 
	MEVP_TanHalfFieldOfView        = 2, 
	MEVP_TanHalfFieldOfView        = 2, 
	MEVP_ViewSize                  = 3, 
	MEVP_ViewSize                  = 3, 
	MEVP_WorldSpaceViewPosition    = 4, 
	MEVP_WorldSpaceViewPosition    = 4, 
	MEVP_WorldSpaceCameraPosition  = 5, 
	MEVP_WorldSpaceCameraPosition  = 5, 
	MEVP_ViewportOffset            = 6, 
	MEVP_ViewportOffset            = 6, 
	MEVP_MAX                       = 7, 
	MEVP_MAX                       = 7, 

};

// Enum Engine.EWorldPositionIncludedOffsets
enum class EWorldPositionIncludedOffsets : uint8_t
{
	WPT_Default                    = 0, 
	WPT_Default                    = 0, 
	WPT_Full                       = 1, 
	WPT_Full                       = 1, 
	WPT_ExcludeAllShaderOffsets    = 2, 
	WPT_ExcludeAllShaderOffsets    = 2, 
	WPT_FullNoOffsets              = 3, 
	WPT_FullNoOffsets              = 3, 
	WPT_CameraRelative             = 4, 
	WPT_CameraRelative             = 4, 
	WPT_CameraRelativeNoOffsets    = 5, 
	WPT_CameraRelativeNoOffsets    = 5, 
	WPT_MAX                        = 6, 
	WPT_MAX                        = 6, 

};

// Enum Engine.EMaterialDecalResponse
enum class EMaterialDecalResponse : uint8_t
{
	MDR_None                       = 0, 
	MDR_None                       = 0, 
	MDR_ColorNormalRoughness       = 1, 
	MDR_ColorNormalRoughness       = 1, 
	MDR_Color                      = 2, 
	MDR_Color                      = 2, 
	MDR_ColorNormal                = 3, 
	MDR_ColorNormal                = 3, 
	MDR_ColorRoughness             = 4, 
	MDR_ColorRoughness             = 4, 
	MDR_Normal                     = 5, 
	MDR_Normal                     = 5, 
	MDR_NormalRoughness            = 6, 
	MDR_NormalRoughness            = 6, 
	MDR_Roughness                  = 7, 
	MDR_Roughness                  = 7, 
	MDR_MAX                        = 8, 
	MDR_MAX                        = 8, 

};

// Enum Engine.EDecalBlendMode
enum class EDecalBlendMode : uint8_t
{
	DBM_Translucent                = 0, 
	DBM_Translucent                = 0, 
	DBM_Stain                      = 1, 
	DBM_Stain                      = 1, 
	DBM_Normal                     = 2, 
	DBM_Normal                     = 2, 
	DBM_Emissive                   = 3, 
	DBM_Emissive                   = 3, 
	DBM_DBuffer_ColorNormalRoughness = 4, 
	DBM_DBuffer_ColorNormalRoughness = 4, 
	DBM_DBuffer_Color              = 5, 
	DBM_DBuffer_Color              = 5, 
	DBM_DBuffer_ColorNormal        = 6, 
	DBM_DBuffer_ColorNormal        = 6, 
	DBM_DBuffer_ColorRoughness     = 7, 
	DBM_DBuffer_ColorRoughness     = 7, 
	DBM_DBuffer_Normal             = 8, 
	DBM_DBuffer_Normal             = 8, 
	DBM_DBuffer_NormalRoughness    = 9, 
	DBM_DBuffer_NormalRoughness    = 9, 
	DBM_DBuffer_Roughness          = 10, 
	DBM_DBuffer_Roughness          = 10, 
	DBM_Volumetric_DistanceFunction = 11, 
	DBM_Volumetric_DistanceFunction = 11, 
	DBM_MAX                        = 12, 
	DBM_MAX                        = 12, 

};

// Enum Engine.EEmitterRenderMode
enum class EEmitterRenderMode : uint8_t
{
	ERM_Normal                     = 0, 
	ERM_Normal                     = 0, 
	ERM_Point                      = 1, 
	ERM_Point                      = 1, 
	ERM_Cross                      = 2, 
	ERM_Cross                      = 2, 
	ERM_LightsOnly                 = 3, 
	ERM_LightsOnly                 = 3, 
	ERM_None                       = 4, 
	ERM_None                       = 4, 
	ERM_MAX                        = 5, 
	ERM_MAX                        = 5, 

};

// Enum Engine.EParticleSubUVInterpMethod
enum class EParticleSubUVInterpMethod : uint8_t
{
	PSUVIM_None                    = 0, 
	PSUVIM_None                    = 0, 
	PSUVIM_Linear                  = 1, 
	PSUVIM_Linear                  = 1, 
	PSUVIM_Linear_Blend            = 2, 
	PSUVIM_Linear_Blend            = 2, 
	PSUVIM_Random                  = 3, 
	PSUVIM_Random                  = 3, 
	PSUVIM_Random_Blend            = 4, 
	PSUVIM_Random_Blend            = 4, 
	PSUVIM_MAX                     = 5, 
	PSUVIM_MAX                     = 5, 

};

// Enum Engine.EParticleBurstMethod
enum class EParticleBurstMethod : uint8_t
{
	EPBM_Instant                   = 0, 
	EPBM_Instant                   = 0, 
	EPBM_Interpolated              = 1, 
	EPBM_Interpolated              = 1, 
	EPBM_MAX                       = 2, 
	EPBM_MAX                       = 2, 

};

// Enum Engine.EParticleScreenAlignment
enum class EParticleScreenAlignment : uint8_t
{
	PSA_FacingCameraPosition       = 0, 
	PSA_FacingCameraPosition       = 0, 
	PSA_Square                     = 1, 
	PSA_Square                     = 1, 
	PSA_Rectangle                  = 2, 
	PSA_Rectangle                  = 2, 
	PSA_Velocity                   = 3, 
	PSA_Velocity                   = 3, 
	PSA_AwayFromCenter             = 4, 
	PSA_AwayFromCenter             = 4, 
	PSA_TypeSpecific               = 5, 
	PSA_TypeSpecific               = 5, 
	PSA_FacingCameraDistanceBlend  = 6, 
	PSA_FacingCameraDistanceBlend  = 6, 
	PSA_MAX                        = 7, 
	PSA_MAX                        = 7, 

};

// Enum Engine.EParticleSystemInsignificanceReaction
enum class EParticleSystemInsignificanceReaction : uint8_t
{
	Auto                           = 0, 
	Complete                       = 1, 
	DisableTick                    = 2, 
	DisableTickAndKill             = 3, 
	Num                            = 4, 

};

// Enum Engine.EParticleSignificanceLevel
enum class EParticleSignificanceLevel : uint8_t
{
	Low                            = 0, 
	Medium                         = 1, 
	High                           = 2, 
	Critical                       = 3, 
	Num                            = 4, 

};

// Enum Engine.EParticleSourceSelectionMethod
enum class EParticleSourceSelectionMethod : uint8_t
{
	EPSSM_Random                   = 0, 
	EPSSM_Random                   = 0, 
	EPSSM_Sequential               = 1, 
	EPSSM_Sequential               = 1, 
	EPSSM_MAX                      = 2, 
	EPSSM_MAX                      = 2, 

};

// Enum Engine.EModuleType
enum class EModuleType : uint8_t
{
	EPMT_General                   = 0, 
	EPMT_General                   = 0, 
	EPMT_TypeData                  = 1, 
	EPMT_TypeData                  = 1, 
	EPMT_Beam                      = 2, 
	EPMT_Beam                      = 2, 
	EPMT_Trail                     = 3, 
	EPMT_Trail                     = 3, 
	EPMT_Spawn                     = 4, 
	EPMT_Spawn                     = 4, 
	EPMT_Required                  = 5, 
	EPMT_Required                  = 5, 
	EPMT_Event                     = 6, 
	EPMT_Event                     = 6, 
	EPMT_Light                     = 7, 
	EPMT_Light                     = 7, 
	EPMT_SubUV                     = 8, 
	EPMT_SubUV                     = 8, 
	EPMT_MAX                       = 9, 
	EPMT_MAX                       = 9, 

};

// Enum Engine.EAttractorParticleSelectionMethod
enum class EAttractorParticleSelectionMethod : uint8_t
{
	EAPSM_Random                   = 0, 
	EAPSM_Random                   = 0, 
	EAPSM_Sequential               = 1, 
	EAPSM_Sequential               = 1, 
	EAPSM_MAX                      = 2, 
	EAPSM_MAX                      = 2, 

};

// Enum Engine.Beam2SourceTargetTangentMethod
enum class EBeam2SourceTargetTangentMethod : uint8_t
{
	PEB2STTM_Direct                = 0, 
	PEB2STTM_Direct                = 0, 
	PEB2STTM_UserSet               = 1, 
	PEB2STTM_UserSet               = 1, 
	PEB2STTM_Distribution          = 2, 
	PEB2STTM_Distribution          = 2, 
	PEB2STTM_Emitter               = 3, 
	PEB2STTM_Emitter               = 3, 
	PEB2STTM_MAX                   = 4, 
	PEB2STTM_MAX                   = 4, 

};

// Enum Engine.Beam2SourceTargetMethod
enum class EBeam2SourceTargetMethod : uint8_t
{
	PEB2STM_Default                = 0, 
	PEB2STM_Default                = 0, 
	PEB2STM_UserSet                = 1, 
	PEB2STM_UserSet                = 1, 
	PEB2STM_Emitter                = 2, 
	PEB2STM_Emitter                = 2, 
	PEB2STM_Particle               = 3, 
	PEB2STM_Particle               = 3, 
	PEB2STM_Actor                  = 4, 
	PEB2STM_Actor                  = 4, 
	PEB2STM_MAX                    = 5, 
	PEB2STM_MAX                    = 5, 

};

// Enum Engine.BeamModifierType
enum class EBeamModifierType : uint8_t
{
	PEB2MT_Source                  = 0, 
	PEB2MT_Source                  = 0, 
	PEB2MT_Target                  = 1, 
	PEB2MT_Target                  = 1, 
	PEB2MT_MAX                     = 2, 
	PEB2MT_MAX                     = 2, 

};

// Enum Engine.EParticleCameraOffsetUpdateMethod
enum class EParticleCameraOffsetUpdateMethod : uint8_t
{
	EPCOUM_DirectSet               = 0, 
	EPCOUM_DirectSet               = 0, 
	EPCOUM_Additive                = 1, 
	EPCOUM_Additive                = 1, 
	EPCOUM_Scalar                  = 2, 
	EPCOUM_Scalar                  = 2, 
	EPCOUM_MAX                     = 3, 
	EPCOUM_MAX                     = 3, 

};

// Enum Engine.EParticleCollisionComplete
enum class EParticleCollisionComplete : uint8_t
{
	EPCC_Kill                      = 0, 
	EPCC_Kill                      = 0, 
	EPCC_Freeze                    = 1, 
	EPCC_Freeze                    = 1, 
	EPCC_HaltCollisions            = 2, 
	EPCC_HaltCollisions            = 2, 
	EPCC_FreezeTranslation         = 3, 
	EPCC_FreezeTranslation         = 3, 
	EPCC_FreezeRotation            = 4, 
	EPCC_FreezeRotation            = 4, 
	EPCC_FreezeMovement            = 5, 
	EPCC_FreezeMovement            = 5, 
	EPCC_MAX                       = 6, 
	EPCC_MAX                       = 6, 

};

// Enum Engine.EParticleCollisionResponse
enum class EParticleCollisionResponse : uint8_t
{
	Bounce                         = 0, 
	Stop                           = 1, 
	Kill                           = 2, 

};

// Enum Engine.ELocationBoneSocketSelectionMethod
enum class ELocationBoneSocketSelectionMethod : uint8_t
{
	BONESOCKETSEL_Sequential       = 0, 
	BONESOCKETSEL_Sequential       = 0, 
	BONESOCKETSEL_Random           = 1, 
	BONESOCKETSEL_Random           = 1, 
	BONESOCKETSEL_MAX              = 2, 
	BONESOCKETSEL_MAX              = 2, 

};

// Enum Engine.ELocationBoneSocketSource
enum class ELocationBoneSocketSource : uint8_t
{
	BONESOCKETSOURCE_Bones         = 0, 
	BONESOCKETSOURCE_Bones         = 0, 
	BONESOCKETSOURCE_Sockets       = 1, 
	BONESOCKETSOURCE_Sockets       = 1, 
	BONESOCKETSOURCE_MAX           = 2, 
	BONESOCKETSOURCE_MAX           = 2, 

};

// Enum Engine.ELocationEmitterSelectionMethod
enum class ELocationEmitterSelectionMethod : uint8_t
{
	ELESM_Random                   = 0, 
	ELESM_Random                   = 0, 
	ELESM_Sequential               = 1, 
	ELESM_Sequential               = 1, 
	ELESM_MAX                      = 2, 
	ELESM_MAX                      = 2, 

};

// Enum Engine.CylinderHeightAxis
enum class ECylinderHeightAxis : uint8_t
{
	PMLPC_HEIGHTAXIS_X             = 0, 
	PMLPC_HEIGHTAXIS_X             = 0, 
	PMLPC_HEIGHTAXIS_Y             = 1, 
	PMLPC_HEIGHTAXIS_Y             = 1, 
	PMLPC_HEIGHTAXIS_Z             = 2, 
	PMLPC_HEIGHTAXIS_Z             = 2, 
	PMLPC_HEIGHTAXIS_MAX           = 3, 
	PMLPC_HEIGHTAXIS_MAX           = 3, 

};

// Enum Engine.ELocationSkelVertSurfaceSource
enum class ELocationSkelVertSurfaceSource : uint8_t
{
	VERTSURFACESOURCE_Vert         = 0, 
	VERTSURFACESOURCE_Vert         = 0, 
	VERTSURFACESOURCE_Surface      = 1, 
	VERTSURFACESOURCE_Surface      = 1, 
	VERTSURFACESOURCE_MAX          = 2, 
	VERTSURFACESOURCE_MAX          = 2, 

};

// Enum Engine.EOrbitChainMode
enum class EOrbitChainMode : uint8_t
{
	EOChainMode_Add                = 0, 
	EOChainMode_Add                = 0, 
	EOChainMode_Scale              = 1, 
	EOChainMode_Scale              = 1, 
	EOChainMode_Link               = 2, 
	EOChainMode_Link               = 2, 
	EOChainMode_MAX                = 3, 
	EOChainMode_MAX                = 3, 

};

// Enum Engine.EParticleAxisLock
enum class EParticleAxisLock : uint8_t
{
	EPAL_NONE                      = 0, 
	EPAL_NONE                      = 0, 
	EPAL_X                         = 1, 
	EPAL_X                         = 1, 
	EPAL_Y                         = 2, 
	EPAL_Y                         = 2, 
	EPAL_Z                         = 3, 
	EPAL_Z                         = 3, 
	EPAL_NEGATIVE_X                = 4, 
	EPAL_NEGATIVE_X                = 4, 
	EPAL_NEGATIVE_Y                = 5, 
	EPAL_NEGATIVE_Y                = 5, 
	EPAL_NEGATIVE_Z                = 6, 
	EPAL_NEGATIVE_Z                = 6, 
	EPAL_ROTATE_X                  = 7, 
	EPAL_ROTATE_X                  = 7, 
	EPAL_ROTATE_Y                  = 8, 
	EPAL_ROTATE_Y                  = 8, 
	EPAL_ROTATE_Z                  = 9, 
	EPAL_ROTATE_Z                  = 9, 
	EPAL_MAX                       = 10, 
	EPAL_MAX                       = 10, 

};

// Enum Engine.EEmitterDynamicParameterValue
enum class EEmitterDynamicParameterValue : uint8_t
{
	EDPV_UserSet                   = 0, 
	EDPV_UserSet                   = 0, 
	EDPV_AutoSet                   = 1, 
	EDPV_AutoSet                   = 1, 
	EDPV_VelocityX                 = 2, 
	EDPV_VelocityX                 = 2, 
	EDPV_VelocityY                 = 3, 
	EDPV_VelocityY                 = 3, 
	EDPV_VelocityZ                 = 4, 
	EDPV_VelocityZ                 = 4, 
	EDPV_VelocityMag               = 5, 
	EDPV_VelocityMag               = 5, 
	EDPV_MAX                       = 6, 
	EDPV_MAX                       = 6, 

};

// Enum Engine.EOpacitySourceMode
enum class EOpacitySourceMode : uint8_t
{
	OSM_Alpha                      = 0, 
	OSM_Alpha                      = 0, 
	OSM_ColorBrightness            = 1, 
	OSM_ColorBrightness            = 1, 
	OSM_RedChannel                 = 2, 
	OSM_RedChannel                 = 2, 
	OSM_GreenChannel               = 3, 
	OSM_GreenChannel               = 3, 
	OSM_BlueChannel                = 4, 
	OSM_BlueChannel                = 4, 
	OSM_MAX                        = 5, 
	OSM_MAX                        = 5, 

};

// Enum Engine.ESubUVBoundingVertexCount
enum class ESubUVBoundingVertexCount : uint8_t
{
	BVC_FourVertices               = 0, 
	BVC_FourVertices               = 0, 
	BVC_EightVertices              = 1, 
	BVC_EightVertices              = 1, 
	BVC_MAX                        = 2, 
	BVC_MAX                        = 2, 

};

// Enum Engine.EEmitterNormalsMode
enum class EEmitterNormalsMode : uint8_t
{
	ENM_CameraFacing               = 0, 
	ENM_CameraFacing               = 0, 
	ENM_Spherical                  = 1, 
	ENM_Spherical                  = 1, 
	ENM_Cylindrical                = 2, 
	ENM_Cylindrical                = 2, 
	ENM_MAX                        = 3, 
	ENM_MAX                        = 3, 

};

// Enum Engine.EParticleSortMode
enum class EParticleSortMode : uint8_t
{
	PSORTMODE_None                 = 0, 
	PSORTMODE_None                 = 0, 
	PSORTMODE_ViewProjDepth        = 1, 
	PSORTMODE_ViewProjDepth        = 1, 
	PSORTMODE_DistanceToView       = 2, 
	PSORTMODE_DistanceToView       = 2, 
	PSORTMODE_Age_OldestFirst      = 3, 
	PSORTMODE_Age_OldestFirst      = 3, 
	PSORTMODE_Age_NewestFirst      = 4, 
	PSORTMODE_Age_NewestFirst      = 4, 
	PSORTMODE_MAX                  = 5, 
	PSORTMODE_MAX                  = 5, 

};

// Enum Engine.EParticleUVFlipMode
enum class EParticleUVFlipMode : uint8_t
{
	None                           = 0, 
	FlipUV                         = 1, 
	FlipUOnly                      = 2, 
	FlipVOnly                      = 3, 
	RandomFlipUV                   = 4, 
	RandomFlipUOnly                = 5, 
	RandomFlipVOnly                = 6, 
	RandomFlipUVIndependent        = 7, 

};

// Enum Engine.ETrail2SourceMethod
enum class ETrail2SourceMethod : uint8_t
{
	PET2SRCM_Default               = 0, 
	PET2SRCM_Default               = 0, 
	PET2SRCM_Particle              = 1, 
	PET2SRCM_Particle              = 1, 
	PET2SRCM_Actor                 = 2, 
	PET2SRCM_Actor                 = 2, 
	PET2SRCM_MAX                   = 3, 
	PET2SRCM_MAX                   = 3, 

};

// Enum Engine.EBeamTaperMethod
enum class EBeamTaperMethod : uint8_t
{
	PEBTM_None                     = 0, 
	PEBTM_None                     = 0, 
	PEBTM_Full                     = 1, 
	PEBTM_Full                     = 1, 
	PEBTM_Partial                  = 2, 
	PEBTM_Partial                  = 2, 
	PEBTM_MAX                      = 3, 
	PEBTM_MAX                      = 3, 

};

// Enum Engine.EBeam2Method
enum class EBeam2Method : uint8_t
{
	PEB2M_Distance                 = 0, 
	PEB2M_Distance                 = 0, 
	PEB2M_Target                   = 1, 
	PEB2M_Target                   = 1, 
	PEB2M_Branch                   = 2, 
	PEB2M_Branch                   = 2, 
	PEB2M_MAX                      = 3, 
	PEB2M_MAX                      = 3, 

};

// Enum Engine.EMeshCameraFacingOptions
enum class EMeshCameraFacingOptions : uint8_t
{
	XAxisFacing_NoUp               = 0, 
	XAxisFacing_NoUp               = 0, 
	XAxisFacing_ZUp                = 1, 
	XAxisFacing_ZUp                = 1, 
	XAxisFacing_NegativeZUp        = 2, 
	XAxisFacing_NegativeZUp        = 2, 
	XAxisFacing_YUp                = 3, 
	XAxisFacing_YUp                = 3, 
	XAxisFacing_NegativeYUp        = 4, 
	XAxisFacing_NegativeYUp        = 4, 
	LockedAxis_ZAxisFacing         = 5, 
	LockedAxis_ZAxisFacing         = 5, 
	LockedAxis_NegativeZAxisFacing = 6, 
	LockedAxis_NegativeZAxisFacing = 6, 
	LockedAxis_YAxisFacing         = 7, 
	LockedAxis_YAxisFacing         = 7, 
	LockedAxis_NegativeYAxisFacing = 8, 
	LockedAxis_NegativeYAxisFacing = 8, 
	VelocityAligned_ZAxisFacing    = 9, 
	VelocityAligned_ZAxisFacing    = 9, 
	VelocityAligned_NegativeZAxisFacing = 10, 
	VelocityAligned_NegativeZAxisFacing = 10, 
	VelocityAligned_YAxisFacing    = 11, 
	VelocityAligned_YAxisFacing    = 11, 
	VelocityAligned_NegativeYAxisFacing = 12, 
	VelocityAligned_NegativeYAxisFacing = 12, 

};

// Enum Engine.EMeshCameraFacingUpAxis
enum class EMeshCameraFacingUpAxis : uint8_t
{
	CameraFacing_NoneUP            = 0, 
	CameraFacing_NoneUP            = 0, 
	CameraFacing_ZUp               = 1, 
	CameraFacing_ZUp               = 1, 
	CameraFacing_NegativeZUp       = 2, 
	CameraFacing_NegativeZUp       = 2, 
	CameraFacing_YUp               = 3, 
	CameraFacing_YUp               = 3, 
	CameraFacing_NegativeYUp       = 4, 
	CameraFacing_NegativeYUp       = 4, 
	CameraFacing_MAX               = 5, 
	CameraFacing_MAX               = 5, 

};

// Enum Engine.EMeshScreenAlignment
enum class EMeshScreenAlignment : uint8_t
{
	PSMA_MeshFaceCameraWithRoll    = 0, 
	PSMA_MeshFaceCameraWithRoll    = 0, 
	PSMA_MeshFaceCameraWithSpin    = 1, 
	PSMA_MeshFaceCameraWithSpin    = 1, 
	PSMA_MeshFaceCameraWithLockedAxis = 2, 
	PSMA_MeshFaceCameraWithLockedAxis = 2, 
	PSMA_MAX                       = 3, 
	PSMA_MAX                       = 3, 

};

// Enum Engine.ETrailsRenderAxisOption
enum class ETrailsRenderAxisOption : uint8_t
{
	Trails_CameraUp                = 0, 
	Trails_CameraUp                = 0, 
	Trails_SourceUp                = 1, 
	Trails_SourceUp                = 1, 
	Trails_WorldUp                 = 2, 
	Trails_WorldUp                 = 2, 
	Trails_MAX                     = 3, 
	Trails_MAX                     = 3, 

};

// Enum Engine.ECloudStorageDelegate
enum class ECloudStorageDelegate : uint8_t
{
	CSD_KeyValueReadComplete       = 0, 
	CSD_KeyValueReadComplete       = 0, 
	CSD_KeyValueWriteComplete      = 1, 
	CSD_KeyValueWriteComplete      = 1, 
	CSD_ValueChanged               = 2, 
	CSD_ValueChanged               = 2, 
	CSD_DocumentQueryComplete      = 3, 
	CSD_DocumentQueryComplete      = 3, 
	CSD_DocumentReadComplete       = 4, 
	CSD_DocumentReadComplete       = 4, 
	CSD_DocumentWriteComplete      = 5, 
	CSD_DocumentWriteComplete      = 5, 
	CSD_DocumentConflictDetected   = 6, 
	CSD_DocumentConflictDetected   = 6, 
	CSD_MAX                        = 7, 
	CSD_MAX                        = 7, 

};

// Enum Engine.EAdManagerDelegate
enum class EAdManagerDelegate : uint8_t
{
	AMD_ClickedBanner              = 0, 
	AMD_ClickedBanner              = 0, 
	AMD_UserClosedAd               = 1, 
	AMD_UserClosedAd               = 1, 
	AMD_MAX                        = 2, 
	AMD_MAX                        = 2, 

};

// Enum Engine.EMicroTransactionResult
enum class EMicroTransactionResult : uint8_t
{
	MTR_Succeeded                  = 0, 
	MTR_Succeeded                  = 0, 
	MTR_Failed                     = 1, 
	MTR_Failed                     = 1, 
	MTR_Canceled                   = 2, 
	MTR_Canceled                   = 2, 
	MTR_RestoredFromServer         = 3, 
	MTR_RestoredFromServer         = 3, 
	MTR_MAX                        = 4, 
	MTR_MAX                        = 4, 

};

// Enum Engine.EMicroTransactionDelegate
enum class EMicroTransactionDelegate : uint8_t
{
	MTD_PurchaseQueryComplete      = 0, 
	MTD_PurchaseQueryComplete      = 0, 
	MTD_PurchaseComplete           = 1, 
	MTD_PurchaseComplete           = 1, 
	MTD_MAX                        = 2, 
	MTD_MAX                        = 2, 

};

// Enum Engine.ETwitterIntegrationDelegate
enum class ETwitterIntegrationDelegate : uint8_t
{
	TID_AuthorizeComplete          = 0, 
	TID_AuthorizeComplete          = 0, 
	TID_TweetUIComplete            = 1, 
	TID_TweetUIComplete            = 1, 
	TID_RequestComplete            = 2, 
	TID_RequestComplete            = 2, 
	TID_MAX                        = 3, 
	TID_MAX                        = 3, 

};

// Enum Engine.ETwitterRequestMethod
enum class ETwitterRequestMethod : uint8_t
{
	TRM_Get                        = 0, 
	TRM_Get                        = 0, 
	TRM_Post                       = 1, 
	TRM_Post                       = 1, 
	TRM_Delete                     = 2, 
	TRM_Delete                     = 2, 
	TRM_MAX                        = 3, 
	TRM_MAX                        = 3, 

};

// Enum Engine.EReporterLineStyle
enum class EReporterLineStyle : uint8_t
{
	Line                           = 0, 
	Dash                           = 1, 

};

// Enum Engine.ELegendPosition
enum class ELegendPosition : uint8_t
{
	Outside                        = 0, 
	Inside                         = 1, 

};

// Enum Engine.EGraphDataStyle
enum class EGraphDataStyle : uint8_t
{
	Lines                          = 0, 
	Filled                         = 1, 

};

// Enum Engine.EGraphAxisStyle
enum class EGraphAxisStyle : uint8_t
{
	Lines                          = 0, 
	Notches                        = 1, 
	Grid                           = 2, 

};

// Enum Engine.EConstraintTransform
enum class EConstraintTransform : uint8_t
{
	Absolute                       = 0, 
	Relative                       = 1, 

};

// Enum Engine.EControlConstraint
enum class EControlConstraint : uint8_t
{
	Orientation                    = 0, 
	Translation                    = 1, 
	Max                            = 2, 

};

// Enum Engine.EImpactDamageOverride
enum class EImpactDamageOverride : uint8_t
{
	IDO_None                       = 0, 
	IDO_None                       = 0, 
	IDO_On                         = 1, 
	IDO_On                         = 1, 
	IDO_Off                        = 2, 
	IDO_Off                        = 2, 
	IDO_MAX                        = 3, 
	IDO_MAX                        = 3, 

};

// Enum Engine.EMaxConcurrentResolutionRule
enum class EMaxConcurrentResolutionRule : uint8_t
{
	PreventNew                     = 0, 
	StopOldest                     = 1, 
	StopFarthestThenPreventNew     = 2, 
	StopFarthestThenOldest         = 3, 
	StopLowestPriority             = 4, 
	StopQuietest                   = 5, 
	StopLowestPriorityThenPreventNew = 6, 

};

// Enum Engine.ESoundGroup
enum class ESoundGroup : uint8_t
{
	SOUNDGROUP_Default             = 0, 
	SOUNDGROUP_Default             = 0, 
	SOUNDGROUP_Effects             = 1, 
	SOUNDGROUP_Effects             = 1, 
	SOUNDGROUP_UI                  = 2, 
	SOUNDGROUP_UI                  = 2, 
	SOUNDGROUP_Music               = 3, 
	SOUNDGROUP_Music               = 3, 
	SOUNDGROUP_Voice               = 4, 
	SOUNDGROUP_Voice               = 4, 
	SOUNDGROUP_GameSoundGroup1     = 5, 
	SOUNDGROUP_GameSoundGroup1     = 5, 
	SOUNDGROUP_GameSoundGroup2     = 6, 
	SOUNDGROUP_GameSoundGroup2     = 6, 
	SOUNDGROUP_GameSoundGroup3     = 7, 
	SOUNDGROUP_GameSoundGroup3     = 7, 
	SOUNDGROUP_GameSoundGroup4     = 8, 
	SOUNDGROUP_GameSoundGroup4     = 8, 
	SOUNDGROUP_GameSoundGroup5     = 9, 
	SOUNDGROUP_GameSoundGroup5     = 9, 
	SOUNDGROUP_GameSoundGroup6     = 10, 
	SOUNDGROUP_GameSoundGroup6     = 10, 
	SOUNDGROUP_GameSoundGroup7     = 11, 
	SOUNDGROUP_GameSoundGroup7     = 11, 
	SOUNDGROUP_GameSoundGroup8     = 12, 
	SOUNDGROUP_GameSoundGroup8     = 12, 
	SOUNDGROUP_GameSoundGroup9     = 13, 
	SOUNDGROUP_GameSoundGroup9     = 13, 
	SOUNDGROUP_GameSoundGroup10    = 14, 
	SOUNDGROUP_GameSoundGroup10    = 14, 
	SOUNDGROUP_GameSoundGroup11    = 15, 
	SOUNDGROUP_GameSoundGroup11    = 15, 
	SOUNDGROUP_GameSoundGroup12    = 16, 
	SOUNDGROUP_GameSoundGroup12    = 16, 
	SOUNDGROUP_GameSoundGroup13    = 17, 
	SOUNDGROUP_GameSoundGroup13    = 17, 
	SOUNDGROUP_GameSoundGroup14    = 18, 
	SOUNDGROUP_GameSoundGroup14    = 18, 
	SOUNDGROUP_GameSoundGroup15    = 19, 
	SOUNDGROUP_GameSoundGroup15    = 19, 
	SOUNDGROUP_GameSoundGroup16    = 20, 
	SOUNDGROUP_GameSoundGroup16    = 20, 
	SOUNDGROUP_GameSoundGroup17    = 21, 
	SOUNDGROUP_GameSoundGroup17    = 21, 
	SOUNDGROUP_GameSoundGroup18    = 22, 
	SOUNDGROUP_GameSoundGroup18    = 22, 
	SOUNDGROUP_GameSoundGroup19    = 23, 
	SOUNDGROUP_GameSoundGroup19    = 23, 
	SOUNDGROUP_GameSoundGroup20    = 24, 
	SOUNDGROUP_GameSoundGroup20    = 24, 
	SOUNDGROUP_MAX                 = 25, 
	SOUNDGROUP_MAX                 = 25, 

};

// Enum Engine.EDecompressionType
enum class EDecompressionType : uint8_t
{
	DTYPE_Setup                    = 0, 
	DTYPE_Setup                    = 0, 
	DTYPE_Invalid                  = 1, 
	DTYPE_Invalid                  = 1, 
	DTYPE_Preview                  = 2, 
	DTYPE_Preview                  = 2, 
	DTYPE_Native                   = 3, 
	DTYPE_Native                   = 3, 
	DTYPE_RealTime                 = 4, 
	DTYPE_RealTime                 = 4, 
	DTYPE_Procedural               = 5, 
	DTYPE_Procedural               = 5, 
	DTYPE_Xenon                    = 6, 
	DTYPE_Xenon                    = 6, 
	DTYPE_Streaming                = 7, 
	DTYPE_Streaming                = 7, 
	DTYPE_MAX                      = 8, 
	DTYPE_MAX                      = 8, 

};

// Enum Engine.EAudioOutputTarget
enum class EAudioOutputTarget : uint8_t
{
	Speaker                        = 0, 
	Controller                     = 1, 
	ControllerFallbackToSpeaker    = 2, 

};

// Enum Engine.ModulationParamMode
enum class EModulationParamMode : uint8_t
{
	MPM_Normal                     = 0, 
	MPM_Normal                     = 0, 
	MPM_Abs                        = 1, 
	MPM_Abs                        = 1, 
	MPM_Direct                     = 2, 
	MPM_Direct                     = 2, 
	MPM_MAX                        = 3, 
	MPM_MAX                        = 3, 

};

// Enum Engine.EStanceMode
enum class EStanceMode : uint8_t
{
	STANCE_None                    = 0, 
	STANCE_None                    = 0, 
	STANCE_Stand                   = 1, 
	STANCE_Stand                   = 1, 
	STANCE_Crouch                  = 2, 
	STANCE_Crouch                  = 2, 
	STANCE_Prone                   = 3, 
	STANCE_Prone                   = 3, 
	STANCE_MAX                     = 4, 
	STANCE_MAX                     = 4, 

};

// Enum Engine.ENetRole
enum class ENetRole : uint8_t
{
	ROLE_None                      = 0, 
	ROLE_None                      = 0, 
	ROLE_SimulatedProxy            = 1, 
	ROLE_SimulatedProxy            = 1, 
	ROLE_AutonomousProxy           = 2, 
	ROLE_AutonomousProxy           = 2, 
	ROLE_Authority                 = 3, 
	ROLE_Authority                 = 3, 
	ROLE_MAX                       = 4, 
	ROLE_MAX                       = 4, 

};

// Enum Engine.EAttachLocation
enum class EAttachLocation : uint8_t
{
	KeepRelativeOffset             = 0, 
	KeepWorldPosition              = 1, 
	SnapToTarget                   = 2, 
	SnapToTargetIncludingScale     = 3, 

};

// Enum Engine.EAttachmentRule
enum class EAttachmentRule : uint8_t
{
	KeepRelative                   = 0, 
	KeepWorld                      = 1, 
	SnapToTarget                   = 2, 

};

// Enum Engine.EDetachmentRule
enum class EDetachmentRule : uint8_t
{
	KeepRelative                   = 0, 
	KeepWorld                      = 1, 

};

// Enum Engine.ESpawnActorCollisionHandlingMethod
enum class ESpawnActorCollisionHandlingMethod : uint8_t
{
	Undefined                      = 0, 
	AlwaysSpawn                    = 1, 
	AdjustIfPossibleButAlwaysSpawn = 2, 
	AdjustIfPossibleButDontSpawnIfColliding = 3, 
	DontSpawnIfColliding           = 4, 

};

// Enum Engine.EAutoReceiveInput
enum class EAutoReceiveInput : uint8_t
{
	Disabled                       = 0, 
	Player0                        = 1, 
	Player1                        = 2, 
	Player2                        = 3, 
	Player3                        = 4, 
	Player4                        = 5, 
	Player5                        = 6, 
	Player6                        = 7, 
	Player7                        = 8, 

};

// Enum Engine.EInputConsumeOptions
enum class EInputConsumeOptions : uint8_t
{
	ICO_ConsumeAll                 = 0, 
	ICO_ConsumeAll                 = 0, 
	ICO_ConsumeBoundKeys           = 1, 
	ICO_ConsumeBoundKeys           = 1, 
	ICO_ConsumeNone                = 2, 
	ICO_ConsumeNone                = 2, 
	ICO_MAX                        = 3, 
	ICO_MAX                        = 3, 

};

// Enum Engine.ERotatorQuantization
enum class ERotatorQuantization : uint8_t
{
	ByteComponents                 = 0, 
	ShortComponents                = 1, 

};

// Enum Engine.EVectorQuantization
enum class EVectorQuantization : uint8_t
{
	RoundWholeNumber               = 0, 
	RoundOneDecimal                = 1, 
	RoundTwoDecimals               = 2, 

};

// Enum Engine.EAutoPossessAI
enum class EAutoPossessAI : uint8_t
{
	Disabled                       = 0, 
	PlacedInWorld                  = 1, 
	Spawned                        = 2, 
	PlacedInWorldOrSpawned         = 3, 

};

// Enum Engine.EIndoorOutdoorMask
enum class EIndoorOutdoorMask : uint8_t
{
	IOM_NONE                       = 0, 
	IOM_NONE                       = 0, 
	IOM_INDOOR                     = 1, 
	IOM_INDOOR                     = 1, 
	IOM_OUTDOOR                    = 2, 
	IOM_OUTDOOR                    = 2, 
	IOM_BOTH                       = 3, 
	IOM_BOTH                       = 3, 
	IOM_MAX                        = 4, 
	IOM_MAX                        = 4, 

};

// Enum Engine.EMeshBufferAccess
enum class EMeshBufferAccess : uint8_t
{
	Default                        = 0, 
	ForceCPUAndGPU                 = 1, 

};

// Enum Engine.EConstraintFrame
enum class EConstraintFrame : uint8_t
{
	Frame1                         = 0, 
	Frame2                         = 1, 

};

// Enum Engine.EAngularConstraintMotion
enum class EAngularConstraintMotion : uint8_t
{
	ACM_Free                       = 0, 
	ACM_Free                       = 0, 
	ACM_Limited                    = 1, 
	ACM_Limited                    = 1, 
	ACM_Locked                     = 2, 
	ACM_Locked                     = 2, 
	ACM_MAX                        = 3, 
	ACM_MAX                        = 3, 

};

// Enum Engine.EComponentSocketType
enum class EComponentSocketType : uint8_t
{
	Invalid                        = 0, 
	Bone                           = 1, 
	Socket                         = 2, 

};

// Enum Engine.EComponentMobility
enum class EComponentMobility : uint8_t
{
	Static                         = 0, 
	Stationary                     = 1, 
	Movable                        = 2, 

};

// Enum Engine.EPhysicalSurface
enum class EPhysicalSurface : uint8_t
{
	SurfaceType_Default            = 0, 
	SurfaceType_Default            = 0, 
	SurfaceType1                   = 1, 
	SurfaceType1                   = 1, 
	SurfaceType2                   = 2, 
	SurfaceType2                   = 2, 
	SurfaceType3                   = 3, 
	SurfaceType3                   = 3, 
	SurfaceType4                   = 4, 
	SurfaceType4                   = 4, 
	SurfaceType5                   = 5, 
	SurfaceType5                   = 5, 
	SurfaceType6                   = 6, 
	SurfaceType6                   = 6, 
	SurfaceType7                   = 7, 
	SurfaceType7                   = 7, 
	SurfaceType8                   = 8, 
	SurfaceType8                   = 8, 
	SurfaceType9                   = 9, 
	SurfaceType9                   = 9, 
	SurfaceType10                  = 10, 
	SurfaceType10                  = 10, 
	SurfaceType11                  = 11, 
	SurfaceType11                  = 11, 
	SurfaceType12                  = 12, 
	SurfaceType12                  = 12, 
	SurfaceType13                  = 13, 
	SurfaceType13                  = 13, 
	SurfaceType14                  = 14, 
	SurfaceType14                  = 14, 
	SurfaceType15                  = 15, 
	SurfaceType15                  = 15, 
	SurfaceType16                  = 16, 
	SurfaceType16                  = 16, 
	SurfaceType17                  = 17, 
	SurfaceType17                  = 17, 
	SurfaceType18                  = 18, 
	SurfaceType18                  = 18, 
	SurfaceType19                  = 19, 
	SurfaceType19                  = 19, 
	SurfaceType20                  = 20, 
	SurfaceType20                  = 20, 
	SurfaceType21                  = 21, 
	SurfaceType21                  = 21, 
	SurfaceType22                  = 22, 
	SurfaceType22                  = 22, 
	SurfaceType23                  = 23, 
	SurfaceType23                  = 23, 
	SurfaceType24                  = 24, 
	SurfaceType24                  = 24, 
	SurfaceType25                  = 25, 
	SurfaceType25                  = 25, 
	SurfaceType26                  = 26, 
	SurfaceType26                  = 26, 
	SurfaceType27                  = 27, 
	SurfaceType27                  = 27, 
	SurfaceType28                  = 28, 
	SurfaceType28                  = 28, 
	SurfaceType29                  = 29, 
	SurfaceType29                  = 29, 
	SurfaceType30                  = 30, 
	SurfaceType30                  = 30, 
	SurfaceType31                  = 31, 
	SurfaceType31                  = 31, 
	SurfaceType32                  = 32, 
	SurfaceType32                  = 32, 
	SurfaceType33                  = 33, 
	SurfaceType33                  = 33, 
	SurfaceType34                  = 34, 
	SurfaceType34                  = 34, 
	SurfaceType35                  = 35, 
	SurfaceType35                  = 35, 
	SurfaceType36                  = 36, 
	SurfaceType36                  = 36, 
	SurfaceType37                  = 37, 
	SurfaceType37                  = 37, 
	SurfaceType38                  = 38, 
	SurfaceType38                  = 38, 
	SurfaceType39                  = 39, 
	SurfaceType39                  = 39, 
	SurfaceType40                  = 40, 
	SurfaceType40                  = 40, 
	SurfaceType41                  = 41, 
	SurfaceType41                  = 41, 
	SurfaceType42                  = 42, 
	SurfaceType42                  = 42, 
	SurfaceType43                  = 43, 
	SurfaceType43                  = 43, 
	SurfaceType44                  = 44, 
	SurfaceType44                  = 44, 
	SurfaceType45                  = 45, 
	SurfaceType45                  = 45, 
	SurfaceType46                  = 46, 
	SurfaceType46                  = 46, 
	SurfaceType47                  = 47, 
	SurfaceType47                  = 47, 
	SurfaceType48                  = 48, 
	SurfaceType48                  = 48, 
	SurfaceType49                  = 49, 
	SurfaceType49                  = 49, 
	SurfaceType50                  = 50, 
	SurfaceType50                  = 50, 
	SurfaceType51                  = 51, 
	SurfaceType51                  = 51, 
	SurfaceType52                  = 52, 
	SurfaceType52                  = 52, 
	SurfaceType53                  = 53, 
	SurfaceType53                  = 53, 
	SurfaceType54                  = 54, 
	SurfaceType54                  = 54, 
	SurfaceType55                  = 55, 
	SurfaceType55                  = 55, 
	SurfaceType56                  = 56, 
	SurfaceType56                  = 56, 
	SurfaceType57                  = 57, 
	SurfaceType57                  = 57, 
	SurfaceType58                  = 58, 
	SurfaceType58                  = 58, 
	SurfaceType59                  = 59, 
	SurfaceType59                  = 59, 
	SurfaceType60                  = 60, 
	SurfaceType60                  = 60, 
	SurfaceType61                  = 61, 
	SurfaceType61                  = 61, 
	SurfaceType62                  = 62, 
	SurfaceType62                  = 62, 
	SurfaceType_Max                = 63, 
	SurfaceType_Max                = 63, 

};

// Enum Engine.EWalkableSlopeBehavior
enum class EWalkableSlopeBehavior : uint8_t
{
	WalkableSlope_Default          = 0, 
	WalkableSlope_Default          = 0, 
	WalkableSlope_Increase         = 1, 
	WalkableSlope_Increase         = 1, 
	WalkableSlope_Decrease         = 2, 
	WalkableSlope_Decrease         = 2, 
	WalkableSlope_Unwalkable       = 3, 
	WalkableSlope_Unwalkable       = 3, 
	WalkableSlope_Max              = 4, 
	WalkableSlope_Max              = 4, 

};

// Enum Engine.ENetDormancy
enum class ENetDormancy : uint8_t
{
	DORM_Never                     = 0, 
	DORM_Never                     = 0, 
	DORM_Awake                     = 1, 
	DORM_Awake                     = 1, 
	DORM_DormantAll                = 2, 
	DORM_DormantAll                = 2, 
	DORM_DormantPartial            = 3, 
	DORM_DormantPartial            = 3, 
	DORM_Initial                   = 4, 
	DORM_Initial                   = 4, 
	DORN_MAX                       = 5, 
	DORN_MAX                       = 5, 

};

// Enum Engine.EUpdateRateShiftBucket
enum class EUpdateRateShiftBucket : uint8_t
{
	ShiftBucket0                   = 0, 
	ShiftBucket1                   = 1, 
	ShiftBucket2                   = 2, 
	ShiftBucket3                   = 3, 
	ShiftBucket4                   = 4, 
	ShiftBucket5                   = 5, 
	ShiftBucketMax                 = 6, 

};

// Enum Engine.EShadowMapFlags
enum class EShadowMapFlags : uint8_t
{
	SMF_None                       = 0, 
	SMF_None                       = 0, 
	SMF_Streamed                   = 1, 
	SMF_Streamed                   = 1, 
	SMF_MAX                        = 2, 
	SMF_MAX                        = 2, 

};

// Enum Engine.ELightMapPaddingType
enum class ELightMapPaddingType : uint8_t
{
	LMPT_NormalPadding             = 0, 
	LMPT_NormalPadding             = 0, 
	LMPT_PrePadding                = 1, 
	LMPT_PrePadding                = 1, 
	LMPT_NoPadding                 = 2, 
	LMPT_NoPadding                 = 2, 
	LMPT_MAX                       = 3, 
	LMPT_MAX                       = 3, 

};

// Enum Engine.ECollisionEnabled
enum class ECollisionEnabled : uint8_t
{
	NoCollision                    = 0, 
	QueryOnly                      = 1, 
	PhysicsOnly                    = 2, 
	QueryAndPhysics                = 3, 

};

// Enum Engine.ETimelineSigType
enum class ETimelineSigType : uint8_t
{
	ETS_EventSignature             = 0, 
	ETS_EventSignature             = 0, 
	ETS_FloatSignature             = 1, 
	ETS_FloatSignature             = 1, 
	ETS_VectorSignature            = 2, 
	ETS_VectorSignature            = 2, 
	ETS_LinearColorSignature       = 3, 
	ETS_LinearColorSignature       = 3, 
	ETS_InvalidSignature           = 4, 
	ETS_InvalidSignature           = 4, 
	ETS_MAX                        = 5, 
	ETS_MAX                        = 5, 

};

// Enum Engine.ESleepFamily
enum class ESleepFamily : uint8_t
{
	Normal                         = 0, 
	Sensitive                      = 1, 
	Custom                         = 2, 

};

// Enum Engine.ERadialImpulseFalloff
enum class ERadialImpulseFalloff : uint8_t
{
	RIF_Constant                   = 0, 
	RIF_Constant                   = 0, 
	RIF_Linear                     = 1, 
	RIF_Linear                     = 1, 
	RIF_MAX                        = 2, 
	RIF_MAX                        = 2, 

};

// Enum Engine.EFilterInterpolationType
enum class EFilterInterpolationType : uint8_t
{
	BSIT_Average                   = 0, 
	BSIT_Average                   = 0, 
	BSIT_Linear                    = 1, 
	BSIT_Linear                    = 1, 
	BSIT_Cubic                     = 2, 
	BSIT_Cubic                     = 2, 
	BSIT_MAX                       = 3, 
	BSIT_MAX                       = 3, 

};

// Enum Engine.ECollisionResponse
enum class ECollisionResponse : uint8_t
{
	ECR_Ignore                     = 0, 
	ECR_Ignore                     = 0, 
	ECR_Overlap                    = 1, 
	ECR_Overlap                    = 1, 
	ECR_Block                      = 2, 
	ECR_Block                      = 2, 
	ECR_MAX                        = 3, 
	ECR_MAX                        = 3, 

};

// Enum Engine.EPhysicsSceneType
enum class EPhysicsSceneType : uint8_t
{
	PST_Sync                       = 0, 
	PST_Sync                       = 0, 
	PST_Cloth                      = 1, 
	PST_Cloth                      = 1, 
	PST_Async                      = 2, 
	PST_Async                      = 2, 
	PST_MAX                        = 3, 
	PST_MAX                        = 3, 

};

// Enum Engine.EOverlapFilterOption
enum class EOverlapFilterOption : uint8_t
{
	OverlapFilter_All              = 0, 
	OverlapFilter_All              = 0, 
	OverlapFilter_DynamicOnly      = 1, 
	OverlapFilter_DynamicOnly      = 1, 
	OverlapFilter_StaticOnly       = 2, 
	OverlapFilter_StaticOnly       = 2, 
	OverlapFilter_MAX              = 3, 
	OverlapFilter_MAX              = 3, 

};

// Enum Engine.ECollisionChannel
enum class ECollisionChannel : uint8_t
{
	ECC_WorldStatic                = 0, 
	ECC_WorldStatic                = 0, 
	ECC_WorldDynamic               = 1, 
	ECC_WorldDynamic               = 1, 
	ECC_Pawn                       = 2, 
	ECC_Pawn                       = 2, 
	ECC_Visibility                 = 3, 
	ECC_Visibility                 = 3, 
	ECC_Camera                     = 4, 
	ECC_Camera                     = 4, 
	ECC_PhysicsBody                = 5, 
	ECC_PhysicsBody                = 5, 
	ECC_Vehicle                    = 6, 
	ECC_Vehicle                    = 6, 
	ECC_Destructible               = 7, 
	ECC_Destructible               = 7, 
	ECC_EngineTraceChannel1        = 8, 
	ECC_EngineTraceChannel1        = 8, 
	ECC_EngineTraceChannel2        = 9, 
	ECC_EngineTraceChannel2        = 9, 
	ECC_EngineTraceChannel3        = 10, 
	ECC_EngineTraceChannel3        = 10, 
	ECC_EngineTraceChannel4        = 11, 
	ECC_EngineTraceChannel4        = 11, 
	ECC_EngineTraceChannel5        = 12, 
	ECC_EngineTraceChannel5        = 12, 
	ECC_EngineTraceChannel6        = 13, 
	ECC_EngineTraceChannel6        = 13, 
	ECC_GameTraceChannel1          = 14, 
	ECC_GameTraceChannel1          = 14, 
	ECC_GameTraceChannel2          = 15, 
	ECC_GameTraceChannel2          = 15, 
	ECC_GameTraceChannel3          = 16, 
	ECC_GameTraceChannel3          = 16, 
	ECC_GameTraceChannel4          = 17, 
	ECC_GameTraceChannel4          = 17, 
	ECC_GameTraceChannel5          = 18, 
	ECC_GameTraceChannel5          = 18, 
	ECC_GameTraceChannel6          = 19, 
	ECC_GameTraceChannel6          = 19, 
	ECC_GameTraceChannel7          = 20, 
	ECC_GameTraceChannel7          = 20, 
	ECC_GameTraceChannel8          = 21, 
	ECC_GameTraceChannel8          = 21, 
	ECC_GameTraceChannel9          = 22, 
	ECC_GameTraceChannel9          = 22, 
	ECC_GameTraceChannel10         = 23, 
	ECC_GameTraceChannel10         = 23, 
	ECC_GameTraceChannel11         = 24, 
	ECC_GameTraceChannel11         = 24, 
	ECC_GameTraceChannel12         = 25, 
	ECC_GameTraceChannel12         = 25, 
	ECC_GameTraceChannel13         = 26, 
	ECC_GameTraceChannel13         = 26, 
	ECC_GameTraceChannel14         = 27, 
	ECC_GameTraceChannel14         = 27, 
	ECC_GameTraceChannel15         = 28, 
	ECC_GameTraceChannel15         = 28, 
	ECC_GameTraceChannel16         = 29, 
	ECC_GameTraceChannel16         = 29, 
	ECC_GameTraceChannel17         = 30, 
	ECC_GameTraceChannel17         = 30, 
	ECC_GameTraceChannel18         = 31, 
	ECC_GameTraceChannel18         = 31, 
	ECC_OverlapAll_Deprecated      = 32, 
	ECC_OverlapAll_Deprecated      = 32, 
	ECC_MAX                        = 33, 
	ECC_MAX                        = 33, 

};

// Enum Engine.ENetworkSmoothingMode
enum class ENetworkSmoothingMode : uint8_t
{
	Disabled                       = 0, 
	Linear                         = 1, 
	Exponential                    = 2, 
	Replay                         = 3, 
	RotationOnly                   = 4, 

};

// Enum Engine.ETriangleSortAxis
enum class ETriangleSortAxis : uint8_t
{
	TSA_X_Axis                     = 0, 
	TSA_X_Axis                     = 0, 
	TSA_Y_Axis                     = 1, 
	TSA_Y_Axis                     = 1, 
	TSA_Z_Axis                     = 2, 
	TSA_Z_Axis                     = 2, 
	TSA_MAX                        = 3, 
	TSA_MAX                        = 3, 

};

// Enum Engine.ETriangleSortOption
enum class ETriangleSortOption : uint8_t
{
	TRISORT_None                   = 0, 
	TRISORT_None                   = 0, 
	TRISORT_CenterRadialDistance   = 1, 
	TRISORT_CenterRadialDistance   = 1, 
	TRISORT_Random                 = 2, 
	TRISORT_Random                 = 2, 
	TRISORT_MergeContiguous        = 3, 
	TRISORT_MergeContiguous        = 3, 
	TRISORT_Custom                 = 4, 
	TRISORT_Custom                 = 4, 
	TRISORT_CustomLeftRight        = 5, 
	TRISORT_CustomLeftRight        = 5, 
	TRISORT_MAX                    = 6, 
	TRISORT_MAX                    = 6, 

};

// Enum Engine.ELightingBuildQuality
enum class ELightingBuildQuality : uint8_t
{
	Quality_Preview                = 0, 
	Quality_Preview                = 0, 
	Quality_Medium                 = 1, 
	Quality_Medium                 = 1, 
	Quality_High                   = 2, 
	Quality_High                   = 2, 
	Quality_Production             = 3, 
	Quality_Production             = 3, 
	Quality_MAX                    = 4, 
	Quality_MAX                    = 4, 

};

// Enum Engine.EMaterialSamplerType
enum class EMaterialSamplerType : uint8_t
{
	SAMPLERTYPE_Color              = 0, 
	SAMPLERTYPE_Color              = 0, 
	SAMPLERTYPE_Grayscale          = 1, 
	SAMPLERTYPE_Grayscale          = 1, 
	SAMPLERTYPE_Alpha              = 2, 
	SAMPLERTYPE_Alpha              = 2, 
	SAMPLERTYPE_Normal             = 3, 
	SAMPLERTYPE_Normal             = 3, 
	SAMPLERTYPE_Masks              = 4, 
	SAMPLERTYPE_Masks              = 4, 
	SAMPLERTYPE_DistanceFieldFont  = 5, 
	SAMPLERTYPE_DistanceFieldFont  = 5, 
	SAMPLERTYPE_LinearColor        = 6, 
	SAMPLERTYPE_LinearColor        = 6, 
	SAMPLERTYPE_LinearGrayscale    = 7, 
	SAMPLERTYPE_LinearGrayscale    = 7, 
	SAMPLERTYPE_MAX                = 8, 
	SAMPLERTYPE_MAX                = 8, 

};

// Enum Engine.EMaterialTessellationMode
enum class EMaterialTessellationMode : uint8_t
{
	MTM_NoTessellation             = 0, 
	MTM_NoTessellation             = 0, 
	MTM_FlatTessellation           = 1, 
	MTM_FlatTessellation           = 1, 
	MTM_PNTriangles                = 2, 
	MTM_PNTriangles                = 2, 
	MTM_MAX                        = 3, 
	MTM_MAX                        = 3, 

};

// Enum Engine.EMaterialShadingModel
enum class EMaterialShadingModel : uint8_t
{
	MSM_Unlit                      = 0, 
	MSM_Unlit                      = 0, 
	MSM_DefaultLit                 = 1, 
	MSM_DefaultLit                 = 1, 
	MSM_Subsurface                 = 2, 
	MSM_Subsurface                 = 2, 
	MSM_PreintegratedSkin          = 3, 
	MSM_PreintegratedSkin          = 3, 
	MSM_ClearCoat                  = 4, 
	MSM_ClearCoat                  = 4, 
	MSM_SubsurfaceProfile          = 5, 
	MSM_SubsurfaceProfile          = 5, 
	MSM_TwoSidedFoliage            = 6, 
	MSM_TwoSidedFoliage            = 6, 
	MSM_Hair                       = 7, 
	MSM_Hair                       = 7, 
	MSM_Cloth                      = 8, 
	MSM_Cloth                      = 8, 
	MSM_Eye                        = 9, 
	MSM_Eye                        = 9, 
	MSM_MAX                        = 10, 
	MSM_MAX                        = 10, 

};

// Enum Engine.EParticleCollisionMode
enum class EParticleCollisionMode : uint8_t
{
	SceneDepth                     = 0, 
	DistanceField                  = 1, 
	HeightBuffer                   = 2, 

};

// Enum Engine.ETrailWidthMode
enum class ETrailWidthMode : uint8_t
{

};

// Enum Engine.EGBufferFormat
enum class EGBufferFormat : uint8_t
{
	Force8BitsPerChannel           = 0, 
	Default                        = 1, 
	HighPrecisionNormals           = 2, 
	Force16BitsPerChannel          = 3, 

};

// Enum Engine.ESceneCaptureCompositeMode
enum class ESceneCaptureCompositeMode : uint8_t
{
	SCCM_Overwrite                 = 0, 
	SCCM_Overwrite                 = 0, 
	SCCM_Additive                  = 1, 
	SCCM_Additive                  = 1, 
	SCCM_Composite                 = 2, 
	SCCM_Composite                 = 2, 
	SCCM_MAX                       = 3, 
	SCCM_MAX                       = 3, 

};

// Enum Engine.ESceneCaptureSource
enum class ESceneCaptureSource : uint8_t
{
	SCS_SceneColorHDR              = 0, 
	SCS_SceneColorHDR              = 0, 
	SCS_SceneColorHDRNoAlpha       = 1, 
	SCS_SceneColorHDRNoAlpha       = 1, 
	SCS_FinalColorLDR              = 2, 
	SCS_FinalColorLDR              = 2, 
	SCS_SceneColorSceneDepth       = 3, 
	SCS_SceneColorSceneDepth       = 3, 
	SCS_SceneDepth                 = 4, 
	SCS_SceneDepth                 = 4, 
	SCS_DeviceDepth                = 5, 
	SCS_DeviceDepth                = 5, 
	SCS_Normal                     = 6, 
	SCS_Normal                     = 6, 
	SCS_BaseColor                  = 7, 
	SCS_BaseColor                  = 7, 
	SCS_BRO_SuperSampling          = 8, 
	SCS_BRO_SuperSampling          = 8, 
	SCS_BRO_Masked                 = 9, 
	SCS_BRO_Masked                 = 9, 
	SCS_MAX                        = 10, 
	SCS_MAX                        = 10, 

};

// Enum Engine.ETranslucentSortPolicy
enum class ETranslucentSortPolicy : uint8_t
{
	SortByDistance                 = 0, 
	SortByProjectedZ               = 1, 
	SortAlongAxis                  = 2, 

};

// Enum Engine.ERefractionMode
enum class ERefractionMode : uint8_t
{
	RM_IndexOfRefraction           = 0, 
	RM_IndexOfRefraction           = 0, 
	RM_PixelNormalOffset           = 1, 
	RM_PixelNormalOffset           = 1, 
	RM_MAX                         = 2, 
	RM_MAX                         = 2, 

};

// Enum Engine.ETranslucencyLightingMode
enum class ETranslucencyLightingMode : uint8_t
{
	TLM_VolumetricNonDirectional   = 0, 
	TLM_VolumetricNonDirectional   = 0, 
	TLM_VolumetricDirectional      = 1, 
	TLM_VolumetricDirectional      = 1, 
	TLM_VolumetricPerVertexNonDirectional = 2, 
	TLM_VolumetricPerVertexNonDirectional = 2, 
	TLM_VolumetricPerVertexDirectional = 3, 
	TLM_VolumetricPerVertexDirectional = 3, 
	TLM_Surface                    = 4, 
	TLM_Surface                    = 4, 
	TLM_SurfacePerPixelLighting    = 5, 
	TLM_SurfacePerPixelLighting    = 5, 
	TLM_MAX                        = 6, 
	TLM_MAX                        = 6, 

};

// Enum Engine.ESamplerSourceMode
enum class ESamplerSourceMode : uint8_t
{
	SSM_FromTextureAsset           = 0, 
	SSM_FromTextureAsset           = 0, 
	SSM_Wrap_WorldGroupSettings    = 1, 
	SSM_Wrap_WorldGroupSettings    = 1, 
	SSM_Clamp_WorldGroupSettings   = 2, 
	SSM_Clamp_WorldGroupSettings   = 2, 
	SSM_MAX                        = 3, 
	SSM_MAX                        = 3, 

};

// Enum Engine.EBlendMode
enum class EBlendMode : uint8_t
{
	BLEND_Opaque                   = 0, 
	BLEND_Opaque                   = 0, 
	BLEND_Masked                   = 1, 
	BLEND_Masked                   = 1, 
	BLEND_Translucent              = 2, 
	BLEND_Translucent              = 2, 
	BLEND_Additive                 = 3, 
	BLEND_Additive                 = 3, 
	BLEND_Modulate                 = 4, 
	BLEND_Modulate                 = 4, 
	BLEND_AlphaComposite           = 5, 
	BLEND_AlphaComposite           = 5, 
	BLEND_MAX                      = 6, 
	BLEND_MAX                      = 6, 

};

// Enum Engine.EOcclusionCombineMode
enum class EOcclusionCombineMode : uint8_t
{
	OCM_Minimum                    = 0, 
	OCM_Minimum                    = 0, 
	OCM_Multiply                   = 1, 
	OCM_Multiply                   = 1, 
	OCM_MAX                        = 2, 
	OCM_MAX                        = 2, 

};

// Enum Engine.EIndirectLightingCacheQuality
enum class EIndirectLightingCacheQuality : uint8_t
{
	ILCQ_Off                       = 0, 
	ILCQ_Off                       = 0, 
	ILCQ_Point                     = 1, 
	ILCQ_Point                     = 1, 
	ILCQ_Volume                    = 2, 
	ILCQ_Volume                    = 2, 
	ILCQ_MAX                       = 3, 
	ILCQ_MAX                       = 3, 

};

// Enum Engine.ESceneDepthPriorityGroup
enum class ESceneDepthPriorityGroup : uint8_t
{
	SDPG_World                     = 0, 
	SDPG_World                     = 0, 
	SDPG_Foreground                = 1, 
	SDPG_Foreground                = 1, 
	SDPG_MAX                       = 2, 
	SDPG_MAX                       = 2, 

};

// Enum Engine.EActorMetricsType
enum class EActorMetricsType : uint8_t
{
	METRICS_VERTS                  = 0, 
	METRICS_VERTS                  = 0, 
	METRICS_TRIS                   = 1, 
	METRICS_TRIS                   = 1, 
	METRICS_SECTIONS               = 2, 
	METRICS_SECTIONS               = 2, 
	METRICS_MAX                    = 3, 
	METRICS_MAX                    = 3, 

};

// Enum Engine.EAspectRatioAxisConstraint
enum class EAspectRatioAxisConstraint : uint8_t
{
	AspectRatio_MaintainYFOV       = 0, 
	AspectRatio_MaintainYFOV       = 0, 
	AspectRatio_MaintainXFOV       = 1, 
	AspectRatio_MaintainXFOV       = 1, 
	AspectRatio_MajorAxisFOV       = 2, 
	AspectRatio_MajorAxisFOV       = 2, 
	AspectRatio_MAX                = 3, 
	AspectRatio_MAX                = 3, 

};

// Enum Engine.EUserDefinedStructureStatus
enum class EUserDefinedStructureStatus : uint8_t
{
	UDSS_UpToDate                  = 0, 
	UDSS_UpToDate                  = 0, 
	UDSS_Dirty                     = 1, 
	UDSS_Dirty                     = 1, 
	UDSS_Error                     = 2, 
	UDSS_Error                     = 2, 
	UDSS_Duplicate                 = 3, 
	UDSS_Duplicate                 = 3, 
	UDSS_MAX                       = 4, 
	UDSS_MAX                       = 4, 

};

// Enum Engine.EVectorFieldConstructionOp
enum class EVectorFieldConstructionOp : uint8_t
{
	VFCO_Extrude                   = 0, 
	VFCO_Extrude                   = 0, 
	VFCO_Revolve                   = 1, 
	VFCO_Revolve                   = 1, 
	VFCO_MAX                       = 2, 
	VFCO_MAX                       = 2, 

};

// Enum Engine.EPostCopyOperation
enum class EPostCopyOperation : uint8_t
{
	None                           = 0, 
	LogicalNegateBool              = 1, 
	Dereference                    = 2, 

};

// Enum Engine.EPinHidingMode
enum class EPinHidingMode : uint8_t
{
	NeverAsPin                     = 0, 
	PinHiddenByDefault             = 1, 
	PinShownByDefault              = 2, 
	AlwaysAsPin                    = 3, 

};

// Enum Engine.EAnimAlphaInputType
enum class EAnimAlphaInputType : uint8_t
{
	Float                          = 0, 
	Bool                           = 1, 
	Curve                          = 2, 

};

// Enum Engine.EEvaluatorMode
enum class EEvaluatorMode : uint8_t
{
	EM_Standard                    = 0, 
	EM_Freeze                      = 1, 
	EM_DelayedFreeze               = 2, 
	EM_MAX                         = 3, 

};

// Enum Engine.EEvaluatorDataSource
enum class EEvaluatorDataSource : uint8_t
{
	EDS_SourcePose                 = 0, 
	EDS_DestinationPose            = 1, 
	EDS_MAX                        = 2, 

};

// Enum Engine.ECameraAlphaBlendMode
enum class ECameraAlphaBlendMode : uint8_t
{
	CABM_Linear                    = 0, 
	CABM_Cubic                     = 1, 
	CABM_MAX                       = 2, 

};

// Enum Engine.EVertexPaintAxis
enum class EVertexPaintAxis : uint8_t
{
	X                              = 0, 
	Y                              = 1, 
	Z                              = 2, 

};

// Enum Engine.EDrawDebugItemType
enum class EDrawDebugItemType : uint8_t
{
	DirectionalArrow               = 0, 
	Sphere                         = 1, 
	Line                           = 2, 
	OnScreenMessage                = 3, 
	CoordinateSystem               = 4, 

};

// Enum Engine.AnimPhysCollisionType
enum class EAnimPhysCollisionType : uint8_t
{
	AnimPhysCollisionType::CoM     = 0, 
	AnimPhysCollisionType__CoM     = 0, 
	AnimPhysCollisionType::CustomSphere = 1, 
	AnimPhysCollisionType__CustomSphere = 1, 
	AnimPhysCollisionType::InnerSphere = 2, 
	AnimPhysCollisionType__InnerSphere = 2, 
	AnimPhysCollisionType::OuterSphere = 3, 
	AnimPhysCollisionType__OuterSphere = 3, 
	AnimPhysCollisionType::AnimPhysCollisionType_MAX = 4, 
	AnimPhysCollisionType__AnimPhysCollisionType_MAX = 4, 

};

// Enum Engine.AnimPhysTwistAxis
enum class EAnimPhysTwistAxis : uint8_t
{
	AnimPhysTwistAxis::AxisX       = 0, 
	AnimPhysTwistAxis__AxisX       = 0, 
	AnimPhysTwistAxis::AxisY       = 1, 
	AnimPhysTwistAxis__AxisY       = 1, 
	AnimPhysTwistAxis::AxisZ       = 2, 
	AnimPhysTwistAxis__AxisZ       = 2, 
	AnimPhysTwistAxis::AnimPhysTwistAxis_MAX = 3, 
	AnimPhysTwistAxis__AnimPhysTwistAxis_MAX = 3, 

};

// Enum Engine.EWindowTitleBarMode
enum class EWindowTitleBarMode : uint8_t
{
	Overlay                        = 0, 
	VerticalBox                    = 1, 

};

// UserDefinedEnum Engine.Default__UserDefinedEnum
enum class EDefault__UserDefinedEnum : uint8_t
{

};

// ScriptStruct Engine.DistributionLookupTable
// 0x0028
struct FDistributionLookupTable
{
	unsigned char                                      Op;                                                       // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      EntryCount;                                               // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      EntryStride;                                              // 0x0002(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      SubEntryStride;                                           // 0x0003(0x0001) (ZeroConstructor, IsPlainOldData)
	float                                              TimeScale;                                                // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TimeBias;                                                 // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	TArray<float>                                      Values;                                                   // 0x0010(0x0010) (ZeroConstructor)
	unsigned char                                      LockFlag;                                                 // 0x0020(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.RawDistribution
// 0x0028
struct FRawDistribution
{
	struct FDistributionLookupTable                    Table;                                                    // 0x0000(0x0028) (ZeroConstructor)
};
// ScriptStruct Engine.FloatDistribution
// 0x0028
struct FFloatDistribution
{
	struct FDistributionLookupTable                    Table;                                                    // 0x0000(0x0028) (ZeroConstructor)
};
// ScriptStruct Engine.VectorDistribution
// 0x0028
struct FVectorDistribution
{
	struct FDistributionLookupTable                    Table;                                                    // 0x0000(0x0028) (ZeroConstructor)
};
// ScriptStruct Engine.Vector4Distribution
// 0x0028
struct FVector4Distribution
{
	struct FDistributionLookupTable                    Table;                                                    // 0x0000(0x0028) (ZeroConstructor)
};
// ScriptStruct Engine.FloatRK4SpringInterpolator
// 0x0008
struct FFloatRK4SpringInterpolator
{
	float                                              StiffnessConstant;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DampeningRatio;                                           // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.VectorRK4SpringInterpolator
// 0x0008
struct FVectorRK4SpringInterpolator
{
	float                                              StiffnessConstant;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DampeningRatio;                                           // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.FormatArgumentData
// 0x0040
struct FFormatArgumentData
{
	struct FString                                     ArgumentName;                                             // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate)
	TEnumAsByte<EFormatArgumentType>                   ArgumentValueType;                                        // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	struct FText                                       ArgumentValue;                                            // 0x0018(0x0018) (Edit, BlueprintVisible, DisableEditOnTemplate)
	int                                                ArgumentValueInt;                                         // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              ArgumentValueFloat;                                       // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	ETextGender                                        ArgumentValueGender;                                      // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.ExpressionInput
// 0x0038
struct FExpressionInput
{
	int                                                OutputIndex;                                              // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     InputName;                                                // 0x0008(0x0010) (ZeroConstructor)
	int                                                Mask;                                                     // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaskR;                                                    // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaskG;                                                    // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaskB;                                                    // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaskA;                                                    // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FName                                       ExpressionName;                                           // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.MaterialAttributesInput
// 0x0008 (0x0040 - 0x0038)
struct FMaterialAttributesInput : public FExpressionInput
{
	int                                                PropertyConnectedBitmask;                                 // 0x0038(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.ExpressionOutput
// 0x0028
struct FExpressionOutput
{
	struct FString                                     OutputName;                                               // 0x0000(0x0010) (ZeroConstructor)
	int                                                Mask;                                                     // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaskR;                                                    // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaskG;                                                    // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaskB;                                                    // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaskA;                                                    // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.MaterialInput
// 0x0038
struct FMaterialInput
{
	int                                                OutputIndex;                                              // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     InputName;                                                // 0x0008(0x0010) (ZeroConstructor)
	int                                                Mask;                                                     // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaskR;                                                    // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaskG;                                                    // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaskB;                                                    // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaskA;                                                    // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FName                                       ExpressionName;                                           // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.ColorMaterialInput
// 0x0008 (0x0040 - 0x0038)
struct FColorMaterialInput : public FMaterialInput
{
	unsigned char                                      UseConstant : 1;                                          // 0x0038(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	struct FColor                                      Constant;                                                 // 0x003C(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.ScalarMaterialInput
// 0x0008 (0x0040 - 0x0038)
struct FScalarMaterialInput : public FMaterialInput
{
	unsigned char                                      UseConstant : 1;                                          // 0x0038(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              Constant;                                                 // 0x003C(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.VectorMaterialInput
// 0x0010 (0x0048 - 0x0038)
struct FVectorMaterialInput : public FMaterialInput
{
	unsigned char                                      UseConstant : 1;                                          // 0x0038(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	struct FVector                                     Constant;                                                 // 0x003C(0x000C) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.Vector2MaterialInput
// 0x0010 (0x0048 - 0x0038)
struct FVector2MaterialInput : public FMaterialInput
{
	unsigned char                                      UseConstant : 1;                                          // 0x0038(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              ConstantX;                                                // 0x003C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ConstantY;                                                // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.HitResult
// 0x0088
struct FHitResult
{
	unsigned char                                      bBlockingHit : 1;                                         // 0x0000(0x0001)
	unsigned char                                      bStartPenetrating : 1;                                    // 0x0000(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Time;                                                     // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Distance;                                                 // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector_NetQuantize                         Location;                                                 // 0x000C(0x000C)
	struct FVector_NetQuantize                         ImpactPoint;                                              // 0x0018(0x000C)
	struct FVector_NetQuantizeNormal                   Normal;                                                   // 0x0024(0x000C)
	struct FVector_NetQuantizeNormal                   ImpactNormal;                                             // 0x0030(0x000C)
	struct FVector_NetQuantize                         TraceStart;                                               // 0x003C(0x000C)
	struct FVector_NetQuantize                         TraceEnd;                                                 // 0x0048(0x000C)
	float                                              PenetrationDepth;                                         // 0x0054(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Item;                                                     // 0x0058(0x0004) (ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UPhysicalMaterial>            PhysMaterial;                                             // 0x005C(0x0008) (ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class AActor>                       Actor;                                                    // 0x0064(0x0008) (ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UPrimitiveComponent>          Component;                                                // 0x006C(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	struct FName                                       BoneName;                                                 // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                FaceIndex;                                                // 0x0080(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.Vector_NetQuantize
// 0x0000 (0x000C - 0x000C)
struct FVector_NetQuantize : public FVector
{
};
// ScriptStruct Engine.Vector_NetQuantizeNormal
// 0x0000 (0x000C - 0x000C)
struct FVector_NetQuantizeNormal : public FVector
{
};
// ScriptStruct Engine.BranchingPointNotifyPayload
// 0x0020
struct FBranchingPointNotifyPayload
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x0000(0x0020) MISSED OFFSET
};
// ScriptStruct Engine.SimpleMemberReference
// 0x0020
struct FSimpleMemberReference
{
	class UObject*                                     MemberParent;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       MemberName;                                               // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FGuid                                       MemberGuid;                                               // 0x0010(0x0010) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.ActorComponentTickFunction
// 0x0008 (0x0058 - 0x0050)
struct FActorComponentTickFunction : public FTickFunction
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.TickFunction
// 0x0050
struct FTickFunction
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	TEnumAsByte<ETickingGroup>                         TickGroup;                                                // 0x0008(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<ETickingGroup>                         EndTickGroup;                                             // 0x0009(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	unsigned char                                      bTickEvenWhenPaused : 1;                                  // 0x000C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bCanEverTick : 1;                                         // 0x000C(0x0001)
	unsigned char                                      bStartWithTickEnabled : 1;                                // 0x000C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bAllowTickOnDedicatedServer : 1;                          // 0x000C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x33];                                      // 0x000D(0x0033) MISSED OFFSET
	float                                              TickInterval;                                             // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0xC];                                       // 0x0044(0x000C) MISSED OFFSET
};
// ScriptStruct Engine.SubtitleCue
// 0x0020
struct FSubtitleCue
{
	struct FText                                       Text;                                                     // 0x0000(0x0018) (Edit, BlueprintVisible)
	float                                              Time;                                                     // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.InterpControlPoint
// 0x001C
struct FInterpControlPoint
{
	struct FVector                                     PositionControlPoint;                                     // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bPositionIsRelative : 1;                                  // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x000D(0x000F) MISSED OFFSET
};
// ScriptStruct Engine.PlatformInterfaceDelegateResult
// 0x0038
struct FPlatformInterfaceDelegateResult
{
	unsigned char                                      bSuccessful : 1;                                          // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FPlatformInterfaceData                      Data;                                                     // 0x0008(0x0030)
};
// ScriptStruct Engine.PlatformInterfaceData
// 0x0030
struct FPlatformInterfaceData
{
	struct FName                                       DataName;                                                 // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EPlatformInterfaceDataType>            Type;                                                     // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                IntValue;                                                 // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FloatValue;                                               // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FString                                     StringValue;                                              // 0x0018(0x0010) (ZeroConstructor)
	class UObject*                                     ObjectValue;                                              // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.DebugFloatHistory
// 0x0020
struct FDebugFloatHistory
{
	TArray<float>                                      Samples;                                                  // 0x0000(0x0010) (ZeroConstructor, Transient)
	float                                              MaxSamples;                                               // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinValue;                                                 // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxValue;                                                 // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAutoAdjustMinMax : 1;                                    // 0x001C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.LatentActionInfo
// 0x0018
struct FLatentActionInfo
{
	int                                                Linkage;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                UUID;                                                     // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FName                                       ExecutionFunction;                                        // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	class UObject*                                     CallbackTarget;                                           // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.TimerHandle
// 0x0008
struct FTimerHandle
{
	uint64_t                                           Handle;                                                   // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
};
// ScriptStruct Engine.CollisionProfileName
// 0x0008
struct FCollisionProfileName
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.GenericStruct
// 0x0004
struct FGenericStruct
{
	int                                                Data;                                                     // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.UserActivity
// 0x0018
struct FUserActivity
{
	struct FString                                     ActionName;                                               // 0x0000(0x0010) (BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0010(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.UniqueNetIdRepl
// 0x0017 (0x0018 - 0x0001)
struct FUniqueNetIdRepl : public FUniqueNetIdWrapper
{
	unsigned char                                      UnknownData00[0x17];                                      // 0x0001(0x0017) MISSED OFFSET
};
// ScriptStruct Engine.DamageEvent
// 0x0018
struct FDamageEvent
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	struct FAttackId                                   AttackId;                                                 // 0x0008(0x0004)
	unsigned char                                      UnknownData01[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	class UDamageType*                                 DamageTypeClass;                                          // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.AttackId
// 0x0004
struct FAttackId
{
	int                                                ID;                                                       // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.ActorTickFunction
// 0x0008 (0x0058 - 0x0050)
struct FActorTickFunction : public FTickFunction
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.RepAttachment
// 0x0040
struct FRepAttachment
{
	class AActor*                                      AttachParent;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector_NetQuantize100                      LocationOffset;                                           // 0x0008(0x000C)
	struct FVector_NetQuantize100                      RelativeScale3D;                                          // 0x0014(0x000C)
	struct FRotator                                    RotationOffset;                                           // 0x0020(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FName                                       AttachSocket;                                             // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             AttachComponent;                                          // 0x0038(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};
// ScriptStruct Engine.Vector_NetQuantize100
// 0x0000 (0x000C - 0x000C)
struct FVector_NetQuantize100 : public FVector
{
};
// ScriptStruct Engine.RepMovement
// 0x0034
struct FRepMovement
{
	struct FVector                                     LinearVelocity;                                           // 0x0000(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     AngularVelocity;                                          // 0x000C(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x0018(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0024(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bSimulatedPhysicSleep : 1;                                // 0x0030(0x0001) (Transient)
	unsigned char                                      bRepPhysics : 1;                                          // 0x0030(0x0001) (Transient)
	EVectorQuantization                                LocationQuantizationLevel;                                // 0x0031(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EVectorQuantization                                VelocityQuantizationLevel;                                // 0x0032(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ERotatorQuantization                               RotationQuantizationLevel;                                // 0x0033(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};
// ScriptStruct Engine.MovementProperties
// 0x0004
struct FMovementProperties
{
	unsigned char                                      bCanCrouch : 1;                                           // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCanJump : 1;                                             // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCanWalk : 1;                                             // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCanSwim : 1;                                             // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCanFly : 1;                                              // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.NavAgentProperties
// 0x001C (0x0020 - 0x0004)
struct FNavAgentProperties : public FMovementProperties
{
	float                                              AgentRadius;                                              // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AgentHeight;                                              // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AgentStepHeight;                                          // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NavWalkingSearchHeightScale;                              // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	class ANavigationData*                             PreferredNavData;                                         // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.TwistConstraint
// 0x0008 (0x001C - 0x0014)
struct FTwistConstraint : public FConstraintBaseParams
{
	float                                              TwistLimitDegrees;                                        // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAngularConstraintMotion>              TwistMotion;                                              // 0x0018(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.ConstraintBaseParams
// 0x0014
struct FConstraintBaseParams
{
	float                                              Stiffness;                                                // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Damping;                                                  // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Restitution;                                              // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ContactDistance;                                          // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bSoftConstraint : 1;                                      // 0x0010(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.ConeConstraint
// 0x000C (0x0020 - 0x0014)
struct FConeConstraint : public FConstraintBaseParams
{
	float                                              Swing1LimitDegrees;                                       // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Swing2LimitDegrees;                                       // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAngularConstraintMotion>              Swing1Motion;                                             // 0x001C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAngularConstraintMotion>              Swing2Motion;                                             // 0x001D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x001E(0x0002) MISSED OFFSET
};
// ScriptStruct Engine.LinearConstraint
// 0x0008 (0x001C - 0x0014)
struct FLinearConstraint : public FConstraintBaseParams
{
	float                                              Limit;                                                    // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ELinearConstraintMotion>               XMotion;                                                  // 0x0018(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ELinearConstraintMotion>               YMotion;                                                  // 0x0019(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ELinearConstraintMotion>               ZMotion;                                                  // 0x001A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x001B(0x0001) MISSED OFFSET
};
// ScriptStruct Engine.AngularDriveConstraint
// 0x004C
struct FAngularDriveConstraint
{
	struct FConstraintDrive                            TwistDrive;                                               // 0x0000(0x0010) (Edit)
	struct FConstraintDrive                            SwingDrive;                                               // 0x0010(0x0010) (Edit)
	struct FConstraintDrive                            SlerpDrive;                                               // 0x0020(0x0010) (Edit)
	struct FRotator                                    OrientationTarget;                                        // 0x0030(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     AngularVelocityTarget;                                    // 0x003C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAngularDriveMode>                     AngularDriveMode;                                         // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.ConstraintDrive
// 0x0010
struct FConstraintDrive
{
	float                                              Stiffness;                                                // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Damping;                                                  // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxForce;                                                 // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnablePositionDrive : 1;                                 // 0x000C(0x0001) (Edit)
	unsigned char                                      bEnableVelocityDrive : 1;                                 // 0x000C(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.LinearDriveConstraint
// 0x004C
struct FLinearDriveConstraint
{
	struct FVector                                     PositionTarget;                                           // 0x0000(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     VelocityTarget;                                           // 0x000C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FConstraintDrive                            XDrive;                                                   // 0x0018(0x0010) (Edit)
	struct FConstraintDrive                            YDrive;                                                   // 0x0028(0x0010) (Edit)
	struct FConstraintDrive                            ZDrive;                                                   // 0x0038(0x0010) (Edit)
	unsigned char                                      bEnablePositionDrive : 1;                                 // 0x0048(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.ConstraintInstance
// 0x01F0
struct FConstraintInstance
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
	struct FName                                       JointName;                                                // 0x0018(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FName                                       ConstraintBone1;                                          // 0x0020(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ConstraintBone2;                                          // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Pos1;                                                     // 0x0030(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     PriAxis1;                                                 // 0x003C(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     SecAxis1;                                                 // 0x0048(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     Pos2;                                                     // 0x0054(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     PriAxis2;                                                 // 0x0060(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     SecAxis2;                                                 // 0x006C(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FRotator                                    AngularRotationOffset;                                    // 0x0078(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bScaleLinearLimits : 1;                                   // 0x0084(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0085(0x0007) MISSED OFFSET
	struct FConstraintProfileProperties                ProfileInstance;                                          // 0x008C(0x0104) (Edit)
	unsigned char                                      UnknownData02[0x60];                                      // 0x0190(0x0060) MISSED OFFSET
};
// ScriptStruct Engine.ConstraintProfileProperties
// 0x0104
struct FConstraintProfileProperties
{
	float                                              ProjectionLinearTolerance;                                // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ProjectionAngularTolerance;                               // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LinearBreakThreshold;                                     // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AngularBreakThreshold;                                    // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearConstraint                           LinearLimit;                                              // 0x0010(0x001C) (Edit)
	struct FConeConstraint                             ConeLimit;                                                // 0x002C(0x0020) (Edit)
	struct FTwistConstraint                            TwistLimit;                                               // 0x004C(0x001C) (Edit)
	struct FLinearDriveConstraint                      LinearDrive;                                              // 0x0068(0x004C) (Edit)
	struct FAngularDriveConstraint                     AngularDrive;                                             // 0x00B4(0x004C) (Edit)
	unsigned char                                      bDisableCollision : 1;                                    // 0x0100(0x0001) (Edit)
	unsigned char                                      bEnableProjection : 1;                                    // 0x0100(0x0001) (Edit)
	unsigned char                                      bAngularBreakable : 1;                                    // 0x0100(0x0001) (Edit)
	unsigned char                                      bLinearBreakable : 1;                                     // 0x0100(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0101(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.PhysicalAnimationData
// 0x0028
struct FPhysicalAnimationData
{
	struct FName                                       BodyName;                                                 // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsLocalSimulation : 1;                                   // 0x0008(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              OrientationStrength;                                      // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AngularVelocityStrength;                                  // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PositionStrength;                                         // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VelocityStrength;                                         // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxLinearForce;                                           // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxAngularForce;                                          // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.FogHeightDensityPair
// 0x0008
struct FFogHeightDensityPair
{
	float                                              Height;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Density;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.AtmospherePrecomputeParameters
// 0x002C
struct FAtmospherePrecomputeParameters
{
	float                                              DensityHeight;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DecayHeight;                                              // 0x0004(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	int                                                MaxScatteringOrder;                                       // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TransmittanceTexWidth;                                    // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                TransmittanceTexHeight;                                   // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                IrradianceTexWidth;                                       // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                IrradianceTexHeight;                                      // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                InscatterAltitudeSampleNum;                               // 0x001C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InscatterMuNum;                                           // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                InscatterMuSNum;                                          // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                InscatterNuNum;                                           // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.BaseAttenuationSettings
// 0x00A8
struct FBaseAttenuationSettings
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	EAttenuationDistanceModel                          DistanceAlgorithm;                                        // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FRuntimeFloatCurve                          CustomAttenuationCurve;                                   // 0x0010(0x0078) (Edit, BlueprintVisible)
	TEnumAsByte<EAttenuationShape>                     AttenuationShape;                                         // 0x0088(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0089(0x0003) MISSED OFFSET
	float                                              dBAttenuationAtMax;                                       // 0x008C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     AttenuationShapeExtents;                                  // 0x0090(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ConeOffset;                                               // 0x009C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FalloffDistance;                                          // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.RuntimeFloatCurve
// 0x0078
struct FRuntimeFloatCurve
{
	struct FRichCurve                                  EditorCurveData;                                          // 0x0000(0x0070)
	class UCurveFloat*                                 ExternalCurve;                                            // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.RichCurve
// 0x0018 (0x0070 - 0x0058)
struct FRichCurve : public FIndexedCurve
{
	TEnumAsByte<ERichCurveExtrapolation>               PreInfinityExtrap;                                        // 0x0058(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERichCurveExtrapolation>               PostInfinityExtrap;                                       // 0x0059(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x005A(0x0002) MISSED OFFSET
	float                                              DefaultValue;                                             // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FRichCurveKey>                       Keys;                                                     // 0x0060(0x0010) (Edit, EditFixedSize, ZeroConstructor)
};
// ScriptStruct Engine.IndexedCurve
// 0x0058
struct FIndexedCurve
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	struct FKeyHandleMap                               KeyHandlesToIndices;                                      // 0x0008(0x0050) (Transient)
};
// ScriptStruct Engine.KeyHandleMap
// 0x0050
struct FKeyHandleMap
{
	unsigned char                                      UnknownData00[0x50];                                      // 0x0000(0x0050) MISSED OFFSET
};
// ScriptStruct Engine.RichCurveKey
// 0x001C
struct FRichCurveKey
{
	TEnumAsByte<ERichCurveInterpMode>                  InterpMode;                                               // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERichCurveTangentMode>                 TangentMode;                                              // 0x0001(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERichCurveTangentWeightMode>           TangentWeightMode;                                        // 0x0002(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0003(0x0001) MISSED OFFSET
	float                                              Time;                                                     // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ArriveTangent;                                            // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ArriveTangentWeight;                                      // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LeaveTangent;                                             // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LeaveTangentWeight;                                       // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.SoundAttenuationSettings
// 0x0088 (0x0130 - 0x00A8)
struct FSoundAttenuationSettings : public FBaseAttenuationSettings
{
	unsigned char                                      bAttenuate : 1;                                           // 0x00A8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bSpatialize : 1;                                          // 0x00A8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bAttenuateWithLPF : 1;                                    // 0x00A8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bEnableListenerFocus : 1;                                 // 0x00A8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bEnableOcclusion : 1;                                     // 0x00A8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUseComplexCollisionForOcclusion : 1;                     // 0x00A8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00A9(0x0003) MISSED OFFSET
	TEnumAsByte<ESoundDistanceCalc>                    DistanceType;                                             // 0x00AC(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00AD(0x0003) MISSED OFFSET
	float                                              OmniRadius;                                               // 0x00B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StereoSpread;                                             // 0x00B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESoundSpatializationAlgorithm>         SpatializationAlgorithm;                                  // 0x00B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x00B9(0x0007) MISSED OFFSET
	class USpatializationPluginSourceSettingsBase*     SpatializationPluginSettings;                             // 0x00C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RadiusMin;                                                // 0x00C8(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              RadiusMax;                                                // 0x00CC(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              LPFRadiusMin;                                             // 0x00D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LPFRadiusMax;                                             // 0x00D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LPFFrequencyAtMin;                                        // 0x00D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LPFFrequencyAtMax;                                        // 0x00DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FocusAzimuth;                                             // 0x00E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NonFocusAzimuth;                                          // 0x00E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FocusDistanceScale;                                       // 0x00E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NonFocusDistanceScale;                                    // 0x00EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FocusPriorityScale;                                       // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NonFocusPriorityScale;                                    // 0x00F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FocusVolumeAttenuation;                                   // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NonFocusVolumeAttenuation;                                // 0x00FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionChannel>                     OcclusionTraceChannel;                                    // 0x0100(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0101(0x0003) MISSED OFFSET
	float                                              OcclusionLowPassFilterFrequency;                          // 0x0104(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OcclusionVolumeAttenuation;                               // 0x0108(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OcclusionInterpolationTime;                               // 0x010C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UOcclusionPluginSourceSettingsBase*          OcclusionPluginSettings;                                  // 0x0110(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UReverbPluginSourceSettingsBase*             ReverbPluginSettings;                                     // 0x0118(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ReverbWetLevelMin;                                        // 0x0120(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ReverbWetLevelMax;                                        // 0x0124(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ReverbDistanceMin;                                        // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ReverbDistanceMax;                                        // 0x012C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.AudioComponentParam
// 0x0020
struct FAudioComponentParam
{
	struct FName                                       ParamName;                                                // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FloatParam;                                               // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BoolParam : 1;                                            // 0x000C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	int                                                IntParam;                                                 // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	class USoundWave*                                  SoundWaveParam;                                           // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.FogHeightDensityPair2
// 0x0008
struct FFogHeightDensityPair2
{
	float                                              Height;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Density;                                                  // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.ForceFeedbackAttenuationSettings
// 0x0000 (0x00A8 - 0x00A8)
struct FForceFeedbackAttenuationSettings : public FBaseAttenuationSettings
{
};
// ScriptStruct Engine.InstancedSplineDecalInstanceData
// 0x0080
struct FInstancedSplineDecalInstanceData
{
	struct FMatrix                                     Transform;                                                // 0x0000(0x0040) (Edit, ZeroConstructor, IsPlainOldData)
	struct FSplineParams                               SplineParams;                                             // 0x0040(0x0038) (Edit)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0078(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.SplineParams
// 0x0038
struct FSplineParams
{
	struct FVector                                     StartPos;                                                 // 0x0000(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StartTangent;                                             // 0x000C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StartRoll;                                                // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     EndPos;                                                   // 0x001C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     EndTangent;                                               // 0x0028(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EndRoll;                                                  // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.LevelBlockVariation
// 0x0028
struct FLevelBlockVariation
{
	struct FStringAssetReference                       Template;                                                 // 0x0000(0x0010) (Edit, ZeroConstructor)
	float                                              Probability;                                              // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	TArray<struct FRotationRange>                      RotationRangesOverride;                                   // 0x0018(0x0010) (Edit, ZeroConstructor)
};
// ScriptStruct Engine.RotationRange
// 0x000C
struct FRotationRange
{
	float                                              Min;                                                      // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Max;                                                      // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Step;                                                     // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.GridShadowSplitSettings
// 0x0008
struct FGridShadowSplitSettings
{
	float                                              CellSize;                                                 // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxRadius;                                                // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.ConcreteCollisionSourceData
// 0x0018
struct FConcreteCollisionSourceData
{
	class UPrimitiveComponent*                         Component;                                                // 0x0000(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<uint16_t>                                   InstanceIndices;                                          // 0x0008(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.GrassBoxVolumeData
// 0x0024
struct FGrassBoxVolumeData
{
	struct FVector                                     Center;                                                   // 0x0000(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x000C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Extent;                                                   // 0x0018(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.BatchedPoint
// 0x0028
struct FBatchedPoint
{
	struct FVector                                     Position;                                                 // 0x0000(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Color;                                                    // 0x000C(0x0010) (ZeroConstructor, IsPlainOldData)
	float                                              PointSize;                                                // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RemainingLifeTime;                                        // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      DepthPriority;                                            // 0x0024(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.BatchedLine
// 0x0034
struct FBatchedLine
{
	struct FVector                                     Start;                                                    // 0x0000(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     End;                                                      // 0x000C(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Color;                                                    // 0x0018(0x0010) (ZeroConstructor, IsPlainOldData)
	float                                              Thickness;                                                // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RemainingLifeTime;                                        // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      DepthPriority;                                            // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.MaterialSpriteElement
// 0x0028
struct FMaterialSpriteElement
{
	class UMaterialInterface*                          Material;                                                 // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 DistanceToOpacityCurve;                                   // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bSizeIsInScreenSpace : 1;                                 // 0x0010(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	float                                              BaseSizeX;                                                // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BaseSizeY;                                                // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 DistanceToSizeCurve;                                      // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.SkelMeshComponentLODInfo
// 0x0020
struct FSkelMeshComponentLODInfo
{
	TArray<unsigned char>                              HiddenMaterials;                                          // 0x0000(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0010(0x0010) MISSED OFFSET
};
// ScriptStruct Engine.SkelMeshSkinWeightInfo
// 0x0028
struct FSkelMeshSkinWeightInfo
{
	int                                                Bones[0x8];                                               // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      Weights[0x8];                                             // 0x0020(0x0001) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.SingleAnimationPlayData
// 0x0018
struct FSingleAnimationPlayData
{
	class UAnimationAsset*                             AnimToPlay;                                               // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bSavedLooping : 1;                                        // 0x0008(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bSavedPlaying : 1;                                        // 0x0008(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              SavedPosition;                                            // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SavedPlayRate;                                            // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.PoseSnapshot
// 0x0038
struct FPoseSnapshot
{
	TArray<struct FTransform>                          LocalTransforms;                                          // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FName>                               BoneNames;                                                // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FName                                       SkeletalMeshName;                                         // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       SnapshotName;                                             // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsValid : 1;                                             // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.SkeletalMeshComponentClothTickFunction
// 0x0008 (0x0058 - 0x0050)
struct FSkeletalMeshComponentClothTickFunction : public FTickFunction
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.SkeletalMeshComponentEndPhysicsTickFunction
// 0x0008 (0x0058 - 0x0050)
struct FSkeletalMeshComponentEndPhysicsTickFunction : public FTickFunction
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.SplineMeshParams
// 0x0058
struct FSplineMeshParams
{
	struct FVector                                     StartPos;                                                 // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     StartTangent;                                             // 0x000C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   StartScale;                                               // 0x0018(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StartRoll;                                                // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   StartOffset;                                              // 0x0024(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     EndPos;                                                   // 0x002C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     EndTangent;                                               // 0x0038(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   EndScale;                                                 // 0x0044(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              EndRoll;                                                  // 0x004C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   EndOffset;                                                // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.SplineInstanceData
// 0x0064
struct FSplineInstanceData
{
	struct FSplineMeshParams                           SplineMeshParams;                                         // 0x0000(0x0058) (Edit)
	struct FVector                                     SplineUpDir;                                              // 0x0058(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.InstancedStaticMeshMappingInfo
// 0x0008
struct FInstancedStaticMeshMappingInfo
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.InstancedStaticMeshInstanceData
// 0x0050
struct FInstancedStaticMeshInstanceData
{
	struct FMatrix                                     Transform;                                                // 0x0000(0x0040) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    CustomData;                                               // 0x0040(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.ClusterNode
// 0x0028
struct FClusterNode
{
	struct FVector                                     BoundMin;                                                 // 0x0000(0x000C) (ZeroConstructor, IsPlainOldData)
	int                                                FirstChild;                                               // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     BoundMax;                                                 // 0x0010(0x000C) (ZeroConstructor, IsPlainOldData)
	int                                                LastChild;                                                // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                FirstInstance;                                            // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                LastInstance;                                             // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.TexturePlatformData
// 0x0018
struct FTexturePlatformData
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};
// ScriptStruct Engine.TextureSource
// 0x0088
struct FTextureSource
{
	unsigned char                                      UnknownData00[0x88];                                      // 0x0000(0x0088) MISSED OFFSET
};
// ScriptStruct Engine.SplinePoint
// 0x0044
struct FSplinePoint
{
	float                                              InputKey;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Position;                                                 // 0x0004(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ArriveTangent;                                            // 0x0010(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LeaveTangent;                                             // 0x001C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0028(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Scale;                                                    // 0x0034(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESplinePointType>                      Type;                                                     // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.SplineCurves
// 0x0060
struct FSplineCurves
{
	struct FInterpCurveVector                          Position;                                                 // 0x0000(0x0018) (ZeroConstructor)
	struct FInterpCurveQuat                            Rotation;                                                 // 0x0018(0x0018) (ZeroConstructor)
	struct FInterpCurveVector                          Scale;                                                    // 0x0030(0x0018) (ZeroConstructor)
	struct FInterpCurveFloat                           ReparamTable;                                             // 0x0048(0x0018) (ZeroConstructor)
};
// ScriptStruct Engine.DebugDisplayProperty
// 0x0020
struct FDebugDisplayProperty
{
	class UObject*                                     Obj;                                                      // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	class UObject*                                     WithinClass;                                              // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0010(0x0010) MISSED OFFSET
};
// ScriptStruct Engine.EngineShowFlagsSetting
// 0x0018
struct FEngineShowFlagsSetting
{
	struct FString                                     ShowFlagName;                                             // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      Enabled : 1;                                              // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.Timeline
// 0x00E0
struct FTimeline
{
	TEnumAsByte<ETimelineLengthMode>                   LengthMode;                                               // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Length;                                                   // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	unsigned char                                      bLooping : 1;                                             // 0x0008(0x0001)
	unsigned char                                      bReversePlayback : 1;                                     // 0x0008(0x0001)
	unsigned char                                      bPlaying : 1;                                             // 0x0008(0x0001)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              PlayRate;                                                 // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Position;                                                 // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	TArray<struct FTimelineEventEntry>                 Events;                                                   // 0x0018(0x0010) (ZeroConstructor, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	TArray<struct FTimelineVectorTrack>                InterpVectors;                                            // 0x0028(0x0010) (ZeroConstructor, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	TArray<struct FTimelineFloatTrack>                 InterpFloats;                                             // 0x0038(0x0010) (ZeroConstructor, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	TArray<struct FTimelineLinearColorTrack>           InterpLinearColors;                                       // 0x0048(0x0010) (ZeroConstructor, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	struct FScriptDelegate                             TimelinePostUpdateFunc;                                   // 0x0058(0x0014) (ZeroConstructor, InstancedReference, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	struct FScriptDelegate                             TimelineFinishedFunc;                                     // 0x0068(0x0014) (ZeroConstructor, InstancedReference, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData03[0x48];                                      // 0x0078(0x0048) MISSED OFFSET
	TWeakObjectPtr<class UObject>                      PropertySetObject;                                        // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	struct FName                                       DirectionPropertyName;                                    // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	class UProperty*                                   DirectionProperty;                                        // 0x00D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData04[0x8];                                       // 0x00D8(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.TimelineLinearColorTrack
// 0x0070
struct FTimelineLinearColorTrack
{
	class UCurveLinearColor*                           LinearColorCurve;                                         // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             InterpFunc;                                               // 0x0008(0x0014) (ZeroConstructor, InstancedReference)
	struct FName                                       TrackName;                                                // 0x0018(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       LinearColorPropertyName;                                  // 0x0020(0x0008) (ZeroConstructor, IsPlainOldData)
	class UStructProperty*                             LinearColorProperty;                                      // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x40];                                      // 0x0030(0x0040) MISSED OFFSET
};
// ScriptStruct Engine.TimelineFloatTrack
// 0x0070
struct FTimelineFloatTrack
{
	class UCurveFloat*                                 FloatCurve;                                               // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             InterpFunc;                                               // 0x0008(0x0014) (ZeroConstructor, InstancedReference)
	struct FName                                       TrackName;                                                // 0x0018(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       FloatPropertyName;                                        // 0x0020(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFloatProperty*                              FloatProperty;                                            // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x40];                                      // 0x0030(0x0040) MISSED OFFSET
};
// ScriptStruct Engine.TimelineVectorTrack
// 0x0070
struct FTimelineVectorTrack
{
	class UCurveVector*                                VectorCurve;                                              // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FScriptDelegate                             InterpFunc;                                               // 0x0008(0x0014) (ZeroConstructor, InstancedReference)
	struct FName                                       TrackName;                                                // 0x0018(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       VectorPropertyName;                                       // 0x0020(0x0008) (ZeroConstructor, IsPlainOldData)
	class UStructProperty*                             VectorProperty;                                           // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x40];                                      // 0x0030(0x0040) MISSED OFFSET
};
// ScriptStruct Engine.TimelineEventEntry
// 0x0018
struct FTimelineEventEntry
{
	float                                              Time;                                                     // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FScriptDelegate                             EventFunc;                                                // 0x0008(0x0014) (ZeroConstructor, InstancedReference)
};
// ScriptStruct Engine.CompressedTrack
// 0x0038
struct FCompressedTrack
{
	TArray<unsigned char>                              ByteStream;                                               // 0x0000(0x0010) (ZeroConstructor)
	TArray<float>                                      Times;                                                    // 0x0010(0x0010) (ZeroConstructor)
	float                                              Mins[0x3];                                                // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Ranges[0x3];                                              // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.CurveTrack
// 0x0018
struct FCurveTrack
{
	struct FName                                       CurveName;                                                // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<float>                                      CurveWeights;                                             // 0x0008(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.ScaleTrack
// 0x0020
struct FScaleTrack
{
	TArray<struct FVector>                             ScaleKeys;                                                // 0x0000(0x0010) (ZeroConstructor)
	TArray<float>                                      Times;                                                    // 0x0010(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.RotationTrack
// 0x0020
struct FRotationTrack
{
	TArray<struct FQuat>                               RotKeys;                                                  // 0x0000(0x0010) (ZeroConstructor)
	TArray<float>                                      Times;                                                    // 0x0010(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.TranslationTrack
// 0x0020
struct FTranslationTrack
{
	TArray<struct FVector>                             PosKeys;                                                  // 0x0000(0x0010) (ZeroConstructor)
	TArray<float>                                      Times;                                                    // 0x0010(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.TrackToSkeletonMap
// 0x0004
struct FTrackToSkeletonMap
{
	int                                                BoneTreeIndex;                                            // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.AnimSequenceTrackContainer
// 0x0020
struct FAnimSequenceTrackContainer
{
	TArray<struct FRawAnimSequenceTrack>               AnimationTracks;                                          // 0x0000(0x0010) (ZeroConstructor)
	TArray<struct FName>                               TrackNames;                                               // 0x0010(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.RawAnimSequenceTrack
// 0x0030
struct FRawAnimSequenceTrack
{
	TArray<struct FVector>                             PosKeys;                                                  // 0x0000(0x0010) (ZeroConstructor)
	TArray<struct FQuat>                               RotKeys;                                                  // 0x0010(0x0010) (ZeroConstructor)
	TArray<struct FVector>                             ScaleKeys;                                                // 0x0020(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.PerBoneInterpolation
// 0x0020
struct FPerBoneInterpolation
{
	struct FBoneReference                              BoneReference;                                            // 0x0000(0x0018) (Edit)
	float                                              InterpolationSpeedPerSec;                                 // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.BoneReference
// 0x0018
struct FBoneReference
{
	struct FName                                       BoneName;                                                 // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0008(0x0010) MISSED OFFSET
};
// ScriptStruct Engine.GridBlendSample
// 0x001C
struct FGridBlendSample
{
	struct FEditorElement                              GridElement;                                              // 0x0000(0x0018)
	float                                              BlendWeight;                                              // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.EditorElement
// 0x0018
struct FEditorElement
{
	int                                                Indices[0x3];                                             // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Weights[0x3];                                             // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.BlendSample
// 0x0018
struct FBlendSample
{
	class UAnimSequence*                               Animation;                                                // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SampleValue;                                              // 0x0008(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RateScale;                                                // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.BlendParameter
// 0x0020
struct FBlendParameter
{
	struct FString                                     DisplayName;                                              // 0x0000(0x0010) (Edit, ZeroConstructor)
	float                                              Min;                                                      // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Max;                                                      // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                GridNum;                                                  // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.InterpolationParameter
// 0x0008
struct FInterpolationParameter
{
	float                                              InterpolationTime;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFilterInterpolationType>              InterpolationType;                                        // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.PoseDataContainer
// 0x0090
struct FPoseDataContainer
{
	TArray<struct FSmartName>                          PoseNames;                                                // 0x0000(0x0010) (ZeroConstructor)
	TArray<struct FPoseData>                           Poses;                                                    // 0x0010(0x0010) (ZeroConstructor)
	TArray<struct FName>                               Tracks;                                                   // 0x0020(0x0010) (ZeroConstructor)
	TMap<struct FName, int>                            TrackMap;                                                 // 0x0030(0x0050) (ZeroConstructor, Transient)
	TArray<struct FAnimCurveBase>                      Curves;                                                   // 0x0080(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.AnimCurveBase
// 0x0020
struct FAnimCurveBase
{
	struct FName                                       LastObservedName;                                         // 0x0000(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	struct FSmartName                                  Name;                                                     // 0x0008(0x0010)
	int                                                CurveTypeFlags;                                           // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.SmartName
// 0x0010
struct FSmartName
{
	struct FName                                       DisplayName;                                              // 0x0000(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0008(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.PoseData
// 0x0030
struct FPoseData
{
	TArray<struct FTransform>                          LocalSpacePose;                                           // 0x0000(0x0010) (ZeroConstructor)
	TArray<unsigned char>                              LocalSpacePoseMask;                                       // 0x0010(0x0010) (ZeroConstructor)
	TArray<float>                                      CurveData;                                                // 0x0020(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.BakedAnimationStateMachine
// 0x0030
struct FBakedAnimationStateMachine
{
	struct FName                                       MachineName;                                              // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                InitialState;                                             // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	TArray<struct FBakedAnimationState>                States;                                                   // 0x0010(0x0010) (ZeroConstructor)
	TArray<struct FAnimationTransitionBetweenStates>   Transitions;                                              // 0x0020(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.AnimationTransitionBetweenStates
// 0x0038 (0x0040 - 0x0008)
struct FAnimationTransitionBetweenStates : public FAnimationStateBase
{
	int                                                PreviousState;                                            // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NextState;                                                // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CrossfadeDuration;                                        // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                StartNotify;                                              // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                EndNotify;                                                // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                InterruptNotify;                                          // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	EAlphaBlendOption                                  BlendMode;                                                // 0x0020(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	class UCurveFloat*                                 CustomCurve;                                              // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	class UBlendProfile*                               BlendProfile;                                             // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETransitionLogicType>                  LogicType;                                                // 0x0038(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.AnimationStateBase
// 0x0008
struct FAnimationStateBase
{
	struct FName                                       StateName;                                                // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.BakedAnimationState
// 0x0048
struct FBakedAnimationState
{
	struct FName                                       StateName;                                                // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FBakedStateExitTransition>           Transitions;                                              // 0x0008(0x0010) (ZeroConstructor)
	int                                                StateRootNodeIndex;                                       // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                StartNotify;                                              // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                EndNotify;                                                // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                FullyBlendedNotify;                                       // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsAConduit : 1;                                          // 0x0028(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	int                                                EntryRuleNodeIndex;                                       // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<int>                                        PlayerNodeIndices;                                        // 0x0030(0x0010) (ZeroConstructor)
	unsigned char                                      bAlwaysResetOnEntry : 1;                                  // 0x0040(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.BakedStateExitTransition
// 0x0020
struct FBakedStateExitTransition
{
	int                                                CanTakeDelegateIndex;                                     // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                CustomResultNodeIndex;                                    // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                TransitionIndex;                                          // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bDesiredTransitionReturnValue : 1;                        // 0x000C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x000D(0x0001)
	unsigned char                                      bAutomaticRemainingTimeRule : 1;                          // 0x000D(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
	TArray<int>                                        PoseEvaluatorLinks;                                       // 0x0010(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.AnimationState
// 0x0020 (0x0028 - 0x0008)
struct FAnimationState : public FAnimationStateBase
{
	TArray<struct FAnimationTransitionRule>            Transitions;                                              // 0x0008(0x0010) (ZeroConstructor)
	int                                                StateRootNodeIndex;                                       // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                StartNotify;                                              // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                EndNotify;                                                // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                FullyBlendedNotify;                                       // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.AnimationTransitionRule
// 0x0010
struct FAnimationTransitionRule
{
	struct FName                                       RuleToExecute;                                            // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      TransitionReturnVal : 1;                                  // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                TransitionIndex;                                          // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.SlotEvaluationPose
// 0x0040
struct FSlotEvaluationPose
{
	TEnumAsByte<EAdditiveAnimationType>                AdditiveType;                                             // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Weight;                                                   // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x38];                                      // 0x0008(0x0038) MISSED OFFSET
};
// ScriptStruct Engine.A2CSPose
// 0x0018 (0x0028 - 0x0010)
struct FA2CSPose : public FA2Pose
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0010(0x0008) MISSED OFFSET
	TArray<unsigned char>                              ComponentSpaceFlags;                                      // 0x0018(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.A2Pose
// 0x0010
struct FA2Pose
{
	TArray<struct FTransform>                          Bones;                                                    // 0x0000(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.AnimSetMeshLinkup
// 0x0010
struct FAnimSetMeshLinkup
{
	TArray<int>                                        BoneToTrackTable;                                         // 0x0000(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.AssetImportInfo
// 0x0001
struct FAssetImportInfo
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};
// ScriptStruct Engine.PrimaryAssetTypeInfo
// 0x0080
struct FPrimaryAssetTypeInfo
{
	struct FName                                       PrimaryAssetType;                                         // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0008(0x0020) UNKNOWN PROPERTY: AssetClassProperty Engine.PrimaryAssetTypeInfo.AssetBaseClass
	class UObject*                                     AssetBaseClassLoaded;                                     // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bHasBlueprintClasses : 1;                                 // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0031(0x0001)
	unsigned char                                      bIsEditorOnly : 1;                                        // 0x0031(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
	TArray<struct FDirectoryPath>                      Directories;                                              // 0x0038(0x0010) (Edit, ZeroConstructor)
	TArray<struct FStringAssetReference>               SpecificAssets;                                           // 0x0048(0x0010) (Edit, ZeroConstructor)
	struct FPrimaryAssetRules                          Rules;                                                    // 0x0058(0x0010) (Edit)
	TArray<struct FString>                             AssetScanPaths;                                           // 0x0068(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      bIsDynamicAsset : 1;                                      // 0x0078(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	int                                                NumberOfAssets;                                           // 0x007C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
};
// ScriptStruct Engine.PrimaryAssetRules
// 0x0010
struct FPrimaryAssetRules
{
	int                                                Priority;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bApplyRecursively : 1;                                    // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                ChunkId;                                                  // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EPrimaryAssetCookRule                              CookRule;                                                 // 0x000C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.DirectoryPath
// 0x0010
struct FDirectoryPath
{
	struct FString                                     path;                                                     // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};
// ScriptStruct Engine.AssetMapping
// 0x0010
struct FAssetMapping
{
	class UAnimationAsset*                             SourceAsset;                                              // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimationAsset*                             TargetAsset;                                              // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.LaunchOnTestSettings
// 0x0020
struct FLaunchOnTestSettings
{
	struct FFilePath                                   LaunchOnTestmap;                                          // 0x0000(0x0010) (Edit, Config)
	struct FString                                     DeviceID;                                                 // 0x0010(0x0010) (Edit, ZeroConstructor, Config)
};
// ScriptStruct Engine.FilePath
// 0x0010
struct FFilePath
{
	struct FString                                     FilePath;                                                 // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};
// ScriptStruct Engine.EditorMapPerformanceTestDefinition
// 0x0018
struct FEditorMapPerformanceTestDefinition
{
	struct FStringAssetReference                       PerformanceTestmap;                                       // 0x0000(0x0010) (Edit, ZeroConstructor, Config)
	int                                                TestTimer;                                                // 0x0010(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.BuildPromotionTestSettings
// 0x01F0
struct FBuildPromotionTestSettings
{
	struct FFilePath                                   DefaultStaticMeshAsset;                                   // 0x0000(0x0010) (Edit)
	struct FBuildPromotionImportWorkflowSettings       ImportWorkflow;                                           // 0x0010(0x0150) (Edit)
	struct FBuildPromotionOpenAssetSettings            OpenAssets;                                               // 0x0160(0x0060) (Edit)
	struct FBuildPromotionNewProjectSettings           NewProjectSettings;                                       // 0x01C0(0x0020) (Edit)
	struct FFilePath                                   SourceControlMaterial;                                    // 0x01E0(0x0010) (Edit)
};
// ScriptStruct Engine.BuildPromotionNewProjectSettings
// 0x0020
struct FBuildPromotionNewProjectSettings
{
	struct FDirectoryPath                              NewProjectFolderOverride;                                 // 0x0000(0x0010) (Edit)
	struct FString                                     NewProjectNameOverride;                                   // 0x0010(0x0010) (Edit, ZeroConstructor)
};
// ScriptStruct Engine.BuildPromotionOpenAssetSettings
// 0x0060
struct FBuildPromotionOpenAssetSettings
{
	struct FFilePath                                   BlueprintAsset;                                           // 0x0000(0x0010) (Edit, Config)
	struct FFilePath                                   MaterialAsset;                                            // 0x0010(0x0010) (Edit, Config)
	struct FFilePath                                   ParticleSystemAsset;                                      // 0x0020(0x0010) (Edit, Config)
	struct FFilePath                                   SkeletalMeshAsset;                                        // 0x0030(0x0010) (Edit, Config)
	struct FFilePath                                   StaticMeshAsset;                                          // 0x0040(0x0010) (Edit, Config)
	struct FFilePath                                   TextureAsset;                                             // 0x0050(0x0010) (Edit, Config)
};
// ScriptStruct Engine.BuildPromotionImportWorkflowSettings
// 0x0150
struct FBuildPromotionImportWorkflowSettings
{
	struct FEditorImportWorkflowDefinition             Diffuse;                                                  // 0x0000(0x0020) (Edit, Config)
	struct FEditorImportWorkflowDefinition             Normal;                                                   // 0x0020(0x0020) (Edit, Config)
	struct FEditorImportWorkflowDefinition             StaticMesh;                                               // 0x0040(0x0020) (Edit, Config)
	struct FEditorImportWorkflowDefinition             ReimportStaticMesh;                                       // 0x0060(0x0020) (Edit, Config)
	struct FEditorImportWorkflowDefinition             BlendShapeMesh;                                           // 0x0080(0x0020) (Edit, Config)
	struct FEditorImportWorkflowDefinition             MorphMesh;                                                // 0x00A0(0x0020) (Edit, Config)
	struct FEditorImportWorkflowDefinition             SkeletalMesh;                                             // 0x00C0(0x0020) (Edit, Config)
	struct FEditorImportWorkflowDefinition             Animation;                                                // 0x00E0(0x0020) (Edit, Config)
	struct FEditorImportWorkflowDefinition             Sound;                                                    // 0x0100(0x0020) (Edit, Config)
	struct FEditorImportWorkflowDefinition             SurroundSound;                                            // 0x0120(0x0020) (Edit, Config)
	TArray<struct FEditorImportWorkflowDefinition>     OtherAssetsToImport;                                      // 0x0140(0x0010) (Edit, ZeroConstructor, Config)
};
// ScriptStruct Engine.EditorImportWorkflowDefinition
// 0x0020
struct FEditorImportWorkflowDefinition
{
	struct FFilePath                                   ImportFilePath;                                           // 0x0000(0x0010) (Edit, Config)
	TArray<struct FImportFactorySettingValues>         FactorySettings;                                          // 0x0010(0x0010) (Edit, ZeroConstructor, Config)
};
// ScriptStruct Engine.ImportFactorySettingValues
// 0x0020
struct FImportFactorySettingValues
{
	struct FString                                     SettingName;                                              // 0x0000(0x0010) (Edit, ZeroConstructor, Config)
	struct FString                                     Value;                                                    // 0x0010(0x0010) (Edit, ZeroConstructor, Config)
};
// ScriptStruct Engine.BlueprintEditorPromotionSettings
// 0x0030
struct FBlueprintEditorPromotionSettings
{
	struct FFilePath                                   FirstMeshPath;                                            // 0x0000(0x0010) (Edit)
	struct FFilePath                                   SecondMeshPath;                                           // 0x0010(0x0010) (Edit)
	struct FFilePath                                   DefaultParticleAsset;                                     // 0x0020(0x0010) (Edit)
};
// ScriptStruct Engine.ParticleEditorPromotionSettings
// 0x0010
struct FParticleEditorPromotionSettings
{
	struct FFilePath                                   DefaultParticleAsset;                                     // 0x0000(0x0010) (Edit)
};
// ScriptStruct Engine.MaterialEditorPromotionSettings
// 0x0030
struct FMaterialEditorPromotionSettings
{
	struct FFilePath                                   DefaultMaterialAsset;                                     // 0x0000(0x0010) (Edit)
	struct FFilePath                                   DefaultDiffuseTexture;                                    // 0x0010(0x0010) (Edit)
	struct FFilePath                                   DefaultNormalTexture;                                     // 0x0020(0x0010) (Edit)
};
// ScriptStruct Engine.EditorImportExportTestDefinition
// 0x0038
struct FEditorImportExportTestDefinition
{
	struct FFilePath                                   ImportFilePath;                                           // 0x0000(0x0010) (Edit, Config)
	struct FString                                     ExportFileExtension;                                      // 0x0010(0x0010) (Edit, ZeroConstructor, Config)
	unsigned char                                      bSkipExport : 1;                                          // 0x0020(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	TArray<struct FImportFactorySettingValues>         FactorySettings;                                          // 0x0028(0x0010) (Edit, ZeroConstructor, Config)
};
// ScriptStruct Engine.ExternalToolDefinition
// 0x0060
struct FExternalToolDefinition
{
	struct FString                                     ToolName;                                                 // 0x0000(0x0010) (Edit, ZeroConstructor, Config)
	struct FFilePath                                   ExecutablePath;                                           // 0x0010(0x0010) (Edit, Config)
	struct FString                                     CommandLineOptions;                                       // 0x0020(0x0010) (Edit, ZeroConstructor, Config)
	struct FDirectoryPath                              WorkingDirectory;                                         // 0x0030(0x0010) (Edit, Config)
	struct FString                                     ScriptExtension;                                          // 0x0040(0x0010) (Edit, ZeroConstructor, Config)
	struct FDirectoryPath                              ScriptDirectory;                                          // 0x0050(0x0010) (Edit, Config)
};
// ScriptStruct Engine.NavAvoidanceData
// 0x003C
struct FNavAvoidanceData
{
	unsigned char                                      UnknownData00[0x3C];                                      // 0x0000(0x003C) MISSED OFFSET
};
// ScriptStruct Engine.BlendProfileBoneEntry
// 0x0020
struct FBlendProfileBoneEntry
{
	struct FBoneReference                              BoneReference;                                            // 0x0000(0x0018) (Edit)
	float                                              BlendScale;                                               // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.EditedDocumentInfo
// 0x0018
struct FEditedDocumentInfo
{
	class UObject*                                     EditedObject;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   SavedViewOffset;                                          // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              SavedZoomAmount;                                          // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.BPInterfaceDescription
// 0x0018
struct FBPInterfaceDescription
{
	class UInterface*                                  Interface;                                                // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UEdGraph*>                            Graphs;                                                   // 0x0008(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.BPVariableDescription
// 0x00F8
struct FBPVariableDescription
{
	struct FName                                       VarName;                                                  // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGuid                                       VarGuid;                                                  // 0x0008(0x0010) (ZeroConstructor, IsPlainOldData)
	struct FEdGraphPinType                             VarType;                                                  // 0x0018(0x0080) (Edit)
	struct FString                                     FriendlyName;                                             // 0x0098(0x0010) (Edit, ZeroConstructor)
	struct FText                                       Category;                                                 // 0x00A8(0x0018) (Edit)
	uint64_t                                           PropertyFlags;                                            // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       RepNotifyFunc;                                            // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ELifetimeCondition>                    ReplicationCondition;                                     // 0x00D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET
	TArray<struct FBPVariableMetaDataEntry>            MetaDataArray;                                            // 0x00D8(0x0010) (Edit, ZeroConstructor)
	struct FString                                     DefaultValue;                                             // 0x00E8(0x0010) (Edit, ZeroConstructor)
};
// ScriptStruct Engine.BPVariableMetaDataEntry
// 0x0018
struct FBPVariableMetaDataEntry
{
	struct FName                                       DataKey;                                                  // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FString                                     DataValue;                                                // 0x0008(0x0010) (Edit, ZeroConstructor)
};
// ScriptStruct Engine.EdGraphPinType
// 0x0080
struct FEdGraphPinType
{
	struct FString                                     PinCategory;                                              // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     PinSubCategory;                                           // 0x0010(0x0010) (ZeroConstructor)
	TWeakObjectPtr<class UObject>                      PinSubCategoryObject;                                     // 0x0020(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FSimpleMemberReference                      PinSubCategoryMemberReference;                            // 0x0028(0x0020)
	struct FEdGraphTerminalType                        PinValueType;                                             // 0x0048(0x0030)
	unsigned char                                      bIsMap : 1;                                               // 0x0078(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0079(0x0001)
	unsigned char                                      bIsSet : 1;                                               // 0x0079(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x007A(0x0001)
	unsigned char                                      bIsArray : 1;                                             // 0x007A(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x007B(0x0001)
	unsigned char                                      bIsReference : 1;                                         // 0x007B(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03 : 8;                                        // 0x007C(0x0001)
	unsigned char                                      bIsConst : 1;                                             // 0x007C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04 : 8;                                        // 0x007D(0x0001)
	unsigned char                                      bIsWeakPointer : 1;                                       // 0x007D(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x007E(0x0002) MISSED OFFSET
};
// ScriptStruct Engine.EdGraphTerminalType
// 0x0030
struct FEdGraphTerminalType
{
	struct FString                                     TerminalCategory;                                         // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     TerminalSubCategory;                                      // 0x0010(0x0010) (ZeroConstructor)
	TWeakObjectPtr<class UObject>                      TerminalSubCategoryObject;                                // 0x0020(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bTerminalIsConst : 1;                                     // 0x0028(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0029(0x0001)
	unsigned char                                      bTerminalIsWeakPointer : 1;                               // 0x0029(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};
// ScriptStruct Engine.BlueprintMacroCosmeticInfo
// 0x0001
struct FBlueprintMacroCosmeticInfo
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};
// ScriptStruct Engine.CompilerNativizationOptions
// 0x0080
struct FCompilerNativizationOptions
{
	struct FName                                       PlatformName;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      ServerOnlyPlatform : 1;                                   // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0009(0x0001)
	unsigned char                                      ClientOnlyPlatform : 1;                                   // 0x0009(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x000A(0x0006) MISSED OFFSET
	TArray<struct FName>                               ExcludedModules;                                          // 0x0010(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x50];                                      // 0x0020(0x0050) UNKNOWN PROPERTY: SetProperty Engine.CompilerNativizationOptions.ExcludedAssets
	TArray<struct FString>                             ExcludedFolderPaths;                                      // 0x0070(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.AnimParentNodeAssetOverride
// 0x0018
struct FAnimParentNodeAssetOverride
{
	class UAnimationAsset*                             NewAsset;                                                 // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FGuid                                       ParentNodeGuid;                                           // 0x0008(0x0010) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.AnimGroupInfo
// 0x0018
struct FAnimGroupInfo
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Color;                                                    // 0x0008(0x0010) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.DataTableCategoryHandle
// 0x0018
struct FDataTableCategoryHandle
{
	class UDataTable*                                  DataTable;                                                // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       ColumnName;                                               // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       RowContents;                                              // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.DataTableRowHandle
// 0x0010
struct FDataTableRowHandle
{
	class UDataTable*                                  DataTable;                                                // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       RowName;                                                  // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.TableRowBase
// 0x0008
struct FTableRowBase
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.CustomProfile
// 0x0018
struct FCustomProfile
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FResponseChannel>                    CustomResponses;                                          // 0x0008(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.ResponseChannel
// 0x0010
struct FResponseChannel
{
	struct FName                                       Channel;                                                  // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    Response;                                                 // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.CustomChannelSetup
// 0x0018
struct FCustomChannelSetup
{
	TEnumAsByte<ECollisionChannel>                     Channel;                                                  // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       Name;                                                     // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    DefaultResponse;                                          // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bTraceType : 1;                                           // 0x0011(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0012(0x0001)
	unsigned char                                      bStaticObject : 1;                                        // 0x0012(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x5];                                       // 0x0013(0x0005) MISSED OFFSET
};
// ScriptStruct Engine.CollisionResponseTemplate
// 0x0060
struct FCollisionResponseTemplate
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionEnabled>                     CollisionEnabled;                                         // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FName                                       ObjectTypeName;                                           // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FResponseChannel>                    CustomResponses;                                          // 0x0018(0x0010) (ZeroConstructor)
	struct FString                                     HelpMessage;                                              // 0x0028(0x0010) (ZeroConstructor)
	unsigned char                                      bCanModify : 1;                                           // 0x0038(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x27];                                      // 0x0039(0x0027) MISSED OFFSET
};
// ScriptStruct Engine.DialogueWaveParameter
// 0x0020
struct FDialogueWaveParameter
{
	class UDialogueWave*                               DialogueWave;                                             // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FDialogueContext                            Context;                                                  // 0x0008(0x0018) (Edit)
};
// ScriptStruct Engine.DialogueContext
// 0x0018
struct FDialogueContext
{
	class UDialogueVoice*                              Speaker;                                                  // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UDialogueVoice*>                      Targets;                                                  // 0x0008(0x0010) (Edit, ZeroConstructor)
};
// ScriptStruct Engine.PredictProjectilePathResult
// 0x00B8
struct FPredictProjectilePathResult
{
	TArray<struct FPredictProjectilePathPointData>     PathData;                                                 // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	struct FPredictProjectilePathPointData             LastTraceDestination;                                     // 0x0010(0x001C) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FHitResult                                  HitResult;                                                // 0x0030(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData)
};
// ScriptStruct Engine.PredictProjectilePathPointData
// 0x001C
struct FPredictProjectilePathPointData
{
	struct FVector                                     Location;                                                 // 0x0000(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	struct FVector                                     Velocity;                                                 // 0x000C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              Time;                                                     // 0x0018(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
};
// ScriptStruct Engine.PredictProjectilePathParams
// 0x0130
struct FPredictProjectilePathParams
{
	struct FVector                                     StartLocation;                                            // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LaunchVelocity;                                           // 0x000C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bTraceWithCollision : 1;                                  // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	float                                              ProjectileRadius;                                         // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxSimTime;                                               // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bTraceWithChannel : 1;                                    // 0x0024(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0025(0x0001)
	unsigned char                                      bTraceWithProfile : 1;                                    // 0x0025(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xAA];                                      // 0x0026(0x00AA) MISSED OFFSET
	TEnumAsByte<ECollisionChannel>                     TraceChannel;                                             // 0x00D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET
	struct FName                                       TraceProfile;                                             // 0x00D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<TEnumAsByte<EObjectTypeQuery>>              ObjectTypes;                                              // 0x00E0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class AActor*>                              ActorsToIgnore;                                           // 0x00F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              SimFrequency;                                             // 0x0100(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OverrideGravityZ;                                         // 0x0104(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DragForce;                                                // 0x0108(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpeed;                                                 // 0x010C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 MaxSpeedOverTimeCurve;                                    // 0x0110(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDrawDebugTrace>                       DrawDebugType;                                            // 0x0118(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0119(0x0003) MISSED OFFSET
	float                                              DrawDebugTime;                                            // 0x011C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bTraceComplex : 1;                                        // 0x0120(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0xF];                                       // 0x0121(0x000F) MISSED OFFSET
};
// ScriptStruct Engine.VectorSpringState
// 0x0018
struct FVectorSpringState
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};
// ScriptStruct Engine.FloatSpringState
// 0x0008
struct FFloatSpringState
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.LightingChannels
// 0x0003
struct FLightingChannels
{
	unsigned char                                      bChannel0 : 1;                                            // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0001(0x0001)
	unsigned char                                      bChannel1 : 1;                                            // 0x0001(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0002(0x0001)
	unsigned char                                      bChannel2 : 1;                                            // 0x0002(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.FractureEffect
// 0x0010
struct FFractureEffect
{
	class UParticleSystem*                             ParticleSystem;                                           // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  Sound;                                                    // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.CollisionImpactData
// 0x0028
struct FCollisionImpactData
{
	TArray<struct FRigidBodyContactInfo>               ContactInfos;                                             // 0x0000(0x0010) (ZeroConstructor)
	struct FVector                                     TotalNormalImpulse;                                       // 0x0010(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     TotalFrictionImpulse;                                     // 0x001C(0x000C) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.RigidBodyContactInfo
// 0x0030
struct FRigidBodyContactInfo
{
	struct FVector                                     ContactPosition;                                          // 0x0000(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     ContactNormal;                                            // 0x000C(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              ContactPenetration;                                       // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	class UPhysicalMaterial*                           PhysMaterial[0x2];                                        // 0x0020(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.RigidBodyErrorCorrection
// 0x001C
struct FRigidBodyErrorCorrection
{
	float                                              LinearDeltaThresholdSq;                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LinearInterpAlpha;                                        // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LinearRecipFixTime;                                       // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AngularDeltaThreshold;                                    // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AngularInterpAlpha;                                       // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AngularRecipFixTime;                                      // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BodySpeedThresholdSq;                                     // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.RigidBodyState
// 0x0040
struct FRigidBodyState
{
	struct FVector_NetQuantize100                      Position;                                                 // 0x0000(0x000C)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FQuat                                       Quaternion;                                               // 0x0010(0x0010) (IsPlainOldData)
	struct FVector_NetQuantize100                      LinVel;                                                   // 0x0020(0x000C)
	struct FVector_NetQuantize100                      AngVel;                                                   // 0x002C(0x000C)
	unsigned char                                      Flags;                                                    // 0x0038(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.CollisionResponseContainer
// 0x0020
struct FCollisionResponseContainer
{
	TEnumAsByte<ECollisionResponse>                    WorldStatic;                                              // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    WorldDynamic;                                             // 0x0001(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    Pawn;                                                     // 0x0002(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    Visibility;                                               // 0x0003(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    Camera;                                                   // 0x0004(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    PhysicsBody;                                              // 0x0005(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    Vehicle;                                                  // 0x0006(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    Destructible;                                             // 0x0007(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    EngineTraceChannel1;                                      // 0x0008(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    EngineTraceChannel2;                                      // 0x0009(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    EngineTraceChannel3;                                      // 0x000A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    EngineTraceChannel4;                                      // 0x000B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    EngineTraceChannel5;                                      // 0x000C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    EngineTraceChannel6;                                      // 0x000D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel1;                                        // 0x000E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel2;                                        // 0x000F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel3;                                        // 0x0010(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel4;                                        // 0x0011(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel5;                                        // 0x0012(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel6;                                        // 0x0013(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel7;                                        // 0x0014(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel8;                                        // 0x0015(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel9;                                        // 0x0016(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel10;                                       // 0x0017(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel11;                                       // 0x0018(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel12;                                       // 0x0019(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel13;                                       // 0x001A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel14;                                       // 0x001B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel15;                                       // 0x001C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel16;                                       // 0x001D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel17;                                       // 0x001E(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionResponse>                    GameTraceChannel18;                                       // 0x001F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.ExposureSettings
// 0x0008
struct FExposureSettings
{
	int                                                LogOffset;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bFixed : 1;                                               // 0x0004(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.URL
// 0x0070
struct FURL
{
	struct FString                                     Protocol;                                                 // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     Host;                                                     // 0x0010(0x0010) (ZeroConstructor)
	int                                                Port;                                                     // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	struct FString                                     Map;                                                      // 0x0028(0x0010) (ZeroConstructor)
	struct FString                                     RedirectURL;                                              // 0x0038(0x0010) (ZeroConstructor)
	TArray<struct FString>                             Op;                                                       // 0x0048(0x0010) (ZeroConstructor)
	struct FString                                     Portal;                                                   // 0x0058(0x0010) (ZeroConstructor)
	int                                                Valid;                                                    // 0x0068(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.PrimitiveComponentPostPhysicsTickFunction
// 0x0008 (0x0058 - 0x0050)
struct FPrimitiveComponentPostPhysicsTickFunction : public FTickFunction
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.ComponentCollectorTickFunction
// 0x0008 (0x0058 - 0x0050)
struct FComponentCollectorTickFunction : public FTickFunction
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.ActorCollectorTickFunction
// 0x0008 (0x0058 - 0x0050)
struct FActorCollectorTickFunction : public FTickFunction
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.TickPrerequisite
// 0x0010
struct FTickPrerequisite
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};
// ScriptStruct Engine.EdGraphPinReference
// 0x0018
struct FEdGraphPinReference
{
	TWeakObjectPtr<class UEdGraphNode>                 OwningNode;                                               // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FGuid                                       PinId;                                                    // 0x0008(0x0010) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.SceneComponentPropertyInfo
// 0x0010
struct FSceneComponentPropertyInfo
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};
// ScriptStruct Engine.OverlapInfo
// 0x0090
struct FOverlapInfo
{
	unsigned char                                      UnknownData00[0x90];                                      // 0x0000(0x0090) MISSED OFFSET
};
// ScriptStruct Engine.SimplygonMaterialLODSettings
// 0x0080
struct FSimplygonMaterialLODSettings
{
	unsigned char                                      bActive : 1;                                              // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMaterialLODType>                      MaterialLODType;                                          // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseAutomaticSizes : 1;                                   // 0x0002(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESimplygonTextureResolution>           TextureWidth;                                             // 0x0003(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESimplygonTextureResolution>           TextureHeight;                                            // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESimplygonTextureSamplingQuality>      SamplingQuality;                                          // 0x0005(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	int                                                GutterSpace;                                              // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESimplygonTextureStrech>               TextureStrech;                                            // 0x000C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bReuseExistingCharts : 1;                                 // 0x000D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
	TArray<struct FSimplygonChannelCastingSettings>    ChannelsToCast;                                           // 0x0010(0x0010) (ZeroConstructor)
	unsigned char                                      bBakeVertexData : 1;                                      // 0x0020(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x0021(0x0001)
	unsigned char                                      bBakeActorData : 1;                                       // 0x0021(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03 : 8;                                        // 0x0022(0x0001)
	unsigned char                                      bAllowMultiMaterial : 1;                                  // 0x0022(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04 : 8;                                        // 0x0023(0x0001)
	unsigned char                                      bPreferTwoSideMaterials : 1;                              // 0x0023(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05 : 8;                                        // 0x0024(0x0001)
	unsigned char                                      bUseVertexWeights : 1;                                    // 0x0024(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	struct FOutputMaterialInfo                         OutputMaterialInfo;                                       // 0x0028(0x0058)
};
// ScriptStruct Engine.OutputMaterialInfo
// 0x0058
struct FOutputMaterialInfo
{
	unsigned char                                      UnknownData00[0x58];                                      // 0x0000(0x0058) MISSED OFFSET
};
// ScriptStruct Engine.SimplygonChannelCastingSettings
// 0x0010
struct FSimplygonChannelCastingSettings
{
	TEnumAsByte<ESimplygonMaterialChannel>             MaterialChannel;                                          // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESimplygonCasterType>                  Caster;                                                   // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bActive : 1;                                              // 0x0002(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESimplygonColorChannels>               ColorChannels;                                            // 0x0003(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                BitsPerChannel;                                           // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseSRGB : 1;                                             // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0009(0x0001)
	unsigned char                                      bBakeVertexColors : 1;                                    // 0x0009(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x000A(0x0001)
	unsigned char                                      bFlipBackfacingNormals : 1;                               // 0x000A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x000B(0x0001)
	unsigned char                                      bUseTangentSpaceNormals : 1;                              // 0x000B(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03 : 8;                                        // 0x000C(0x0001)
	unsigned char                                      bFlipGreenChannel : 1;                                    // 0x000C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.MaterialProxySettings
// 0x009C
struct FMaterialProxySettings
{
	struct FIntPoint                                   TextureSize;                                              // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETextureSizingType>                    TextureSizingType;                                        // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              GutterSpace;                                              // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EMaterialProxySmaplingQuality                      SamplingQuality;                                          // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EUVStrech                                          UVStrech;                                                 // 0x0011(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bSplitProxyMaterialBasedOnType : 1;                       // 0x0012(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0013(0x0001)
	unsigned char                                      bUseTangentSpace : 1;                                     // 0x0013(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x0014(0x0001)
	unsigned char                                      bNormalMap : 1;                                           // 0x0014(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03 : 8;                                        // 0x0015(0x0001)
	unsigned char                                      bMetallicMap : 1;                                         // 0x0015(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0016(0x0002) MISSED OFFSET
	float                                              MetallicConstant;                                         // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRoughnessMap : 1;                                        // 0x001C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
	float                                              RoughnessConstant;                                        // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bSpecularMap : 1;                                         // 0x0024(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	float                                              SpecularConstant;                                         // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEmissiveMap : 1;                                         // 0x002C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07 : 8;                                        // 0x002D(0x0001)
	unsigned char                                      bOpacityMap : 1;                                          // 0x002D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
	float                                              OpacityConstant;                                          // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAmbientOcclusionMap : 1;                                 // 0x0034(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	float                                              AOConstant;                                               // 0x0038(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              AmbientOcclusionConstant;                                 // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bOpacityMaskMap : 1;                                      // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              OpacityMaskConstant;                                      // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FIntPoint                                   DiffuseTextureSize;                                       // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FIntPoint                                   NormalTextureSize;                                        // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FIntPoint                                   MetallicTextureSize;                                      // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FIntPoint                                   RoughnessTextureSize;                                     // 0x0060(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FIntPoint                                   SpecularTextureSize;                                      // 0x0068(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FIntPoint                                   EmissiveTextureSize;                                      // 0x0070(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FIntPoint                                   OpacityTextureSize;                                       // 0x0078(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FIntPoint                                   AmbientOcclusionTextureSize;                              // 0x0080(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FIntPoint                                   OpacityMaskTextureSize;                                   // 0x0088(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMaterialMergeType>                    MaterialMergeType;                                        // 0x0090(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBlendMode>                            BlendMode;                                                // 0x0091(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x2];                                       // 0x0092(0x0002) MISSED OFFSET
	int                                                BakingTextureSizeRatioOutdoor;                            // 0x0094(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                BakingTextureSizeRatioIndoor;                             // 0x0098(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.SimplygonRemeshingSettings
// 0x00A8
struct FSimplygonRemeshingSettings
{
	unsigned char                                      bActive : 1;                                              // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                ScreenSize;                                               // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRecalculateNormals : 1;                                  // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              HardAngleThreshold;                                       // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MergeDistance;                                            // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseClippingPlane : 1;                                    // 0x0014(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	float                                              ClippingLevel;                                            // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                AxisIndex;                                                // 0x001C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bPlaneNegativeHalfspace : 1;                              // 0x0020(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03 : 8;                                        // 0x0021(0x0001)
	unsigned char                                      bUseMassiveLOD : 1;                                       // 0x0021(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04 : 8;                                        // 0x0022(0x0001)
	unsigned char                                      bUseAggregateLOD : 1;                                     // 0x0022(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x5];                                       // 0x0023(0x0005) MISSED OFFSET
	struct FSimplygonMaterialLODSettings               MaterialLODSettings;                                      // 0x0028(0x0080) (Edit)
};
// ScriptStruct Engine.MeshMergingSettings
// 0x00D4
struct FMeshMergingSettings
{
	unsigned char                                      bGenerateLightMapUV : 1;                                  // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                TargetLightMapResolution;                                 // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bImportVertexColors : 1;                                  // 0x0008(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0009(0x0001)
	unsigned char                                      bPivotPointAtZero : 1;                                    // 0x0009(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x000A(0x0001)
	unsigned char                                      bMergePhysicsData : 1;                                    // 0x000A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03 : 8;                                        // 0x000B(0x0001)
	unsigned char                                      bAssignLODGroup : 1;                                      // 0x000B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                LODGroupIndex;                                            // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bMergeMaterials : 1;                                      // 0x0010(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04 : 8;                                        // 0x0011(0x0001)
	unsigned char                                      bForceUniqueUVGeneration : 1;                             // 0x0011(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x0012(0x0002) MISSED OFFSET
	struct FMaterialProxySettings                      MaterialSettings;                                         // 0x0014(0x009C) (Edit, BlueprintVisible)
	unsigned char                                      bBakeVertexDataToMesh : 1;                                // 0x00B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06 : 8;                                        // 0x00B1(0x0001)
	unsigned char                                      bUseVertexDataForBakingMaterial : 1;                      // 0x00B1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07 : 8;                                        // 0x00B2(0x0001)
	unsigned char                                      bUseTextureBinning : 1;                                   // 0x00B2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08 : 8;                                        // 0x00B3(0x0001)
	unsigned char                                      bCalculateCorrectLODModel : 1;                            // 0x00B3(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	EMeshLODSelectionType                              LODSelectionType;                                         // 0x00B4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x00B5(0x0003) MISSED OFFSET
	int                                                ExportSpecificLOD;                                        // 0x00B8(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	int                                                SpecificLOD;                                              // 0x00BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseLandscapeCulling : 1;                                 // 0x00C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x00C1(0x0003) MISSED OFFSET
	float                                              MinimalBoundsSize;                                        // 0x00C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bExportNormalMap : 1;                                     // 0x00C8(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData11 : 8;                                        // 0x00C9(0x0001)
	unsigned char                                      bExportMetallicMap : 1;                                   // 0x00C9(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData12 : 8;                                        // 0x00CA(0x0001)
	unsigned char                                      bExportRoughnessMap : 1;                                  // 0x00CA(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData13 : 8;                                        // 0x00CB(0x0001)
	unsigned char                                      bExportSpecularMap : 1;                                   // 0x00CB(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	int                                                MergedMaterialAtlasResolution;                            // 0x00CC(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x00D0(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.MeshProxySettings
// 0x00FC
struct FMeshProxySettings
{
	int                                                ScreenSize;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bOverrideVoxelSize : 1;                                   // 0x0004(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	float                                              VoxelSize;                                                // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FMaterialProxySettings                      MaterialSettings;                                         // 0x000C(0x009C) (Edit)
	int                                                TextureWidth;                                             // 0x00A8(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	int                                                TextureHeight;                                            // 0x00AC(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      bExportNormalMap : 1;                                     // 0x00B0(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x00B1(0x0001)
	unsigned char                                      bExportMetallicMap : 1;                                   // 0x00B1(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x00B2(0x0001)
	unsigned char                                      bExportRoughnessMap : 1;                                  // 0x00B2(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData03 : 8;                                        // 0x00B3(0x0001)
	unsigned char                                      bExportSpecularMap : 1;                                   // 0x00B3(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData04 : 8;                                        // 0x00B4(0x0001)
	unsigned char                                      bCalculateCorrectLODModel : 1;                            // 0x00B4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x00B5(0x0003) MISSED OFFSET
	float                                              OverrideDistanceForLevelLOD;                              // 0x00B8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MergeDistance;                                            // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScaleRatioForIndoor;                                      // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FColor                                      UnresolvedGeometryColor;                                  // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bOverrideTransferDistance : 1;                            // 0x00C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x00C9(0x0003) MISSED OFFSET
	float                                              MaxRayCastDist;                                           // 0x00CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseHardAngleThreshold : 1;                               // 0x00D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07 : 8;                                        // 0x00D1(0x0001)
	unsigned char                                      bComputeLightMapResolution : 1;                           // 0x00D1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x2];                                       // 0x00D2(0x0002) MISSED OFFSET
	float                                              HardAngleThreshold;                                       // 0x00D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EProxyNormalComputationMethod>         NormalCalculationMethod;                                  // 0x00D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x00D9(0x0003) MISSED OFFSET
	int                                                LightMapResolution;                                       // 0x00DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRecalculateNormals : 1;                                  // 0x00E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10 : 8;                                        // 0x00E1(0x0001)
	unsigned char                                      bBakeVertexData : 1;                                      // 0x00E1(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData11 : 8;                                        // 0x00E2(0x0001)
	unsigned char                                      bUseLandscapeCulling : 1;                                 // 0x00E2(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ELandscapeCullingPrecision>            LandscapeCullingPrecision;                                // 0x00E3(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAllowAdjacency : 1;                                      // 0x00E4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12 : 8;                                        // 0x00E5(0x0001)
	unsigned char                                      bAllowDistanceField : 1;                                  // 0x00E5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13 : 8;                                        // 0x00E6(0x0001)
	unsigned char                                      bReuseMeshLightmapUVs : 1;                                // 0x00E6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14 : 8;                                        // 0x00E7(0x0001)
	unsigned char                                      bCreateCollision : 1;                                     // 0x00E7(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15 : 8;                                        // 0x00E8(0x0001)
	unsigned char                                      bAllowVertexColors : 1;                                   // 0x00E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16 : 8;                                        // 0x00E9(0x0001)
	unsigned char                                      bGenerateLightmapUVs : 1;                                 // 0x00E9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17 : 8;                                        // 0x00EA(0x0001)
	unsigned char                                      bAssignLODGroup : 1;                                      // 0x00EA(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x1];                                       // 0x00EB(0x0001) MISSED OFFSET
	int                                                LODGroupIndex;                                            // 0x00EC(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAggregateMeshes : 1;                                     // 0x00F0(0x0001) (ZeroConstructor, IsPlainOldData)
	EChartAggregationMode                              AggregatorMode;                                           // 0x00F1(0x0001) (ZeroConstructor, IsPlainOldData)
	EPhysXAggregationMode                              PhysXAggregationMode;                                     // 0x00F2(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseCustomHemisphere : 1;                                 // 0x00F3(0x0001) (ZeroConstructor, IsPlainOldData)
	float                                              MergeBoldness;                                            // 0x00F4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxTriangleSize;                                          // 0x00F8(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.MeshImposterLODSettings
// 0x0028
struct FMeshImposterLODSettings
{
	unsigned char                                      bUseImposterLOD : 1;                                      // 0x0000(0x0001) (Edit)
	unsigned char                                      bEnableSSS : 1;                                           // 0x0000(0x0001) (Edit)
	unsigned char                                      bEnableColorVariation : 1;                                // 0x0000(0x0001) (Edit)
	EImposterCaptureType                               CaptureNormal;                                            // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EImposterCaptureType                               CaptureRoughness;                                         // 0x0002(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EImposterCaptureType                               CaptureSpecular;                                          // 0x0003(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EImposterCaptureType                               CaptureMetallic;                                          // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EImposterCaptureType                               CaptureDepth;                                             // 0x0005(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TextureResolution;                                        // 0x0006(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      FramesPerSide;                                            // 0x0007(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScreenSize;                                               // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                SubsurfaceTint;                                           // 0x000C(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BaseSaturation;                                           // 0x001C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VariationBrightness;                                      // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BaseBrightness;                                           // 0x0024(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.MeshReductionSettings
// 0x0158
struct FMeshReductionSettings
{
	int                                                BaseLODModel;                                             // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EOptimizationMetric                                MetricToUse;                                              // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	float                                              PercentTriangles;                                         // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScreenSize;                                               // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxDeviation;                                             // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PixelError;                                               // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WeldingThreshold;                                         // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMeshFeatureImportance>                SilhouetteImportance;                                     // 0x001C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMeshFeatureImportance>                TextureImportance;                                        // 0x001D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMeshFeatureImportance>                ShadingImportance;                                        // 0x001E(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMeshFeatureImportance>                VertexColorImportance;                                    // 0x001F(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PercentVertices;                                          // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRecalculateNormals : 1;                                  // 0x0024(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	float                                              HardAngleThreshold;                                       // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bActive : 1;                                              // 0x002C(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x002D(0x0001)
	unsigned char                                      bGenerateUniqueLightmapUVs : 1;                           // 0x002D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03 : 8;                                        // 0x002E(0x0001)
	unsigned char                                      bKeepSymmetry : 1;                                        // 0x002E(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04 : 8;                                        // 0x002F(0x0001)
	unsigned char                                      bVisibilityAided : 1;                                     // 0x002F(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05 : 8;                                        // 0x0030(0x0001)
	unsigned char                                      bCullOccluded : 1;                                        // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EStaticMeshReductionTerimationCriterion            TerminationCriterion;                                     // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMeshFeatureImportance>                VisibilityAggressiveness;                                 // 0x0032(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseVertexWeights : 1;                                    // 0x0033(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06 : 8;                                        // 0x0034(0x0001)
	unsigned char                                      bSimplifyMaterials : 1;                                   // 0x0034(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	struct FSimplygonMaterialLODSettings               MaterialLODSettings;                                      // 0x0038(0x0080) (Deprecated)
	struct FMaterialProxySettings                      MaterialProxySettings;                                    // 0x00B8(0x009C) (Edit)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0154(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.LevelSimplificationDetails
// 0x0168
struct FLevelSimplificationDetails
{
	unsigned char                                      bCreatePackagePerAsset : 1;                               // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              DetailsPercentage;                                        // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MergeDistance;                                            // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScaleRatioForIndoor;                                      // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MergeBoldness;                                            // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	EPhysXAggregationMode                              PhysXAggregationMode;                                     // 0x0014(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	float                                              MaxTriangleSize;                                          // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FMaterialProxySettings                      StaticMeshMaterialSettings;                               // 0x001C(0x009C) (Edit)
	unsigned char                                      bOverrideLandscapeExportLOD : 1;                          // 0x00B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00B9(0x0003) MISSED OFFSET
	int                                                LandscapeExportLOD;                                       // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FMaterialProxySettings                      LandscapeMaterialSettings;                                // 0x00C0(0x009C) (Edit)
	unsigned char                                      bBakeFoliageToLandscape : 1;                              // 0x015C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03 : 8;                                        // 0x015D(0x0001)
	unsigned char                                      bBakeGrassToLandscape : 1;                                // 0x015D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04 : 8;                                        // 0x015E(0x0001)
	unsigned char                                      bGenerateMeshNormalMap : 1;                               // 0x015E(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData05 : 8;                                        // 0x015F(0x0001)
	unsigned char                                      bGenerateMeshMetallicMap : 1;                             // 0x015F(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData06 : 8;                                        // 0x0160(0x0001)
	unsigned char                                      bGenerateMeshRoughnessMap : 1;                            // 0x0160(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData07 : 8;                                        // 0x0161(0x0001)
	unsigned char                                      bGenerateMeshSpecularMap : 1;                             // 0x0161(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData08 : 8;                                        // 0x0162(0x0001)
	unsigned char                                      bGenerateLandscapeNormalMap : 1;                          // 0x0162(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData09 : 8;                                        // 0x0163(0x0001)
	unsigned char                                      bGenerateLandscapeMetallicMap : 1;                        // 0x0163(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData10 : 8;                                        // 0x0164(0x0001)
	unsigned char                                      bGenerateLandscapeRoughnessMap : 1;                       // 0x0164(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData11 : 8;                                        // 0x0165(0x0001)
	unsigned char                                      bGenerateLandscapeSpecularMap : 1;                        // 0x0165(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData12 : 8;                                        // 0x0166(0x0001)
	unsigned char                                      bUseLandscapeCulling : 1;                                 // 0x0166(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ELandscapeCullingPrecision>            LandscapeCullingPrecision;                                // 0x0167(0x0001) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.DynamicTextureInstance
// 0x0010 (0x0038 - 0x0028)
struct FDynamicTextureInstance : public FStreamableTextureInstance
{
	class UTexture2D*                                  Texture;                                                  // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAttached : 1;                                            // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              OriginalRadius;                                           // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.StreamableTextureInstance
// 0x0028
struct FStreamableTextureInstance
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) MISSED OFFSET
};
// ScriptStruct Engine.GeomSelection
// 0x000C
struct FGeomSelection
{
	int                                                Type;                                                     // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Index;                                                    // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                SelectionIndex;                                           // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.InteriorSettings
// 0x0024
struct FInteriorSettings
{
	unsigned char                                      bIsWorldSettings : 1;                                     // 0x0000(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              ExteriorVolume;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ExteriorTime;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ExteriorLPF;                                              // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ExteriorLPFTime;                                          // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InteriorVolume;                                           // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InteriorTime;                                             // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InteriorLPF;                                              // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InteriorLPFTime;                                          // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.ReverbSettings
// 0x0018
struct FReverbSettings
{
	unsigned char                                      bApplyReverb : 1;                                         // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	TEnumAsByte<EReverbPreset>                         ReverbType;                                               // 0x0004(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	class UReverbEffect*                               ReverbEffect;                                             // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Volume;                                                   // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FadeTime;                                                 // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.CullDistanceSizePair
// 0x0008
struct FCullDistanceSizePair
{
	float                                              Size;                                                     // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CullDistance;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.NavigationFilterFlags
// 0x0004
struct FNavigationFilterFlags
{
	unsigned char                                      bNavFlag0 : 1;                                            // 0x0000(0x0001) (Edit)
	unsigned char                                      bNavFlag1 : 1;                                            // 0x0000(0x0001) (Edit)
	unsigned char                                      bNavFlag2 : 1;                                            // 0x0000(0x0001) (Edit)
	unsigned char                                      bNavFlag3 : 1;                                            // 0x0000(0x0001) (Edit)
	unsigned char                                      bNavFlag4 : 1;                                            // 0x0000(0x0001) (Edit)
	unsigned char                                      bNavFlag5 : 1;                                            // 0x0000(0x0001) (Edit)
	unsigned char                                      bNavFlag6 : 1;                                            // 0x0000(0x0001) (Edit)
	unsigned char                                      bNavFlag7 : 1;                                            // 0x0000(0x0001) (Edit)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0001(0x0001)
	unsigned char                                      bNavFlag8 : 1;                                            // 0x0001(0x0001) (Edit)
	unsigned char                                      bNavFlag9 : 1;                                            // 0x0001(0x0001) (Edit)
	unsigned char                                      bNavFlag10 : 1;                                           // 0x0001(0x0001) (Edit)
	unsigned char                                      bNavFlag11 : 1;                                           // 0x0001(0x0001) (Edit)
	unsigned char                                      bNavFlag12 : 1;                                           // 0x0001(0x0001) (Edit)
	unsigned char                                      bNavFlag13 : 1;                                           // 0x0001(0x0001) (Edit)
	unsigned char                                      bNavFlag14 : 1;                                           // 0x0001(0x0001) (Edit)
	unsigned char                                      bNavFlag15 : 1;                                           // 0x0001(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
};
// ScriptStruct Engine.NavigationFilterArea
// 0x0018
struct FNavigationFilterArea
{
	class UNavArea*                                    AreaClass;                                                // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TravelCostOverride;                                       // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EnteringCostOverride;                                     // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsExcluded : 1;                                          // 0x0010(0x0001) (Edit)
	unsigned char                                      bOverrideTravelCost : 1;                                  // 0x0010(0x0001) (Edit)
	unsigned char                                      bOverrideEnteringCost : 1;                                // 0x0010(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.DynamicGenerateTargetNavigation
// 0x0014
struct FDynamicGenerateTargetNavigation
{
	struct FVector                                     TargetLocation;                                           // 0x0000(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GenerateRadiusMin;                                        // 0x000C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GenerateRadiusMax;                                        // 0x0010(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.NavDataConfig
// 0x0030 (0x0050 - 0x0020)
struct FNavDataConfig : public FNavAgentProperties
{
	struct FName                                       Name;                                                     // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FColor                                      Color;                                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     DefaultQueryExtent;                                       // 0x002C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ANavigationData*                             NavigationDataClass;                                      // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FStringClassReference                       NavigationDataClassName;                                  // 0x0040(0x0010) (ZeroConstructor, Config)
};
// ScriptStruct Engine.NavAgentSelector
// 0x0004
struct FNavAgentSelector
{
	unsigned char                                      bSupportsAgent0 : 1;                                      // 0x0000(0x0001) (Edit)
	unsigned char                                      bSupportsAgent1 : 1;                                      // 0x0000(0x0001) (Edit)
	unsigned char                                      bSupportsAgent2 : 1;                                      // 0x0000(0x0001) (Edit)
	unsigned char                                      bSupportsAgent3 : 1;                                      // 0x0000(0x0001) (Edit)
	unsigned char                                      bSupportsAgent4 : 1;                                      // 0x0000(0x0001) (Edit)
	unsigned char                                      bSupportsAgent5 : 1;                                      // 0x0000(0x0001) (Edit)
	unsigned char                                      bSupportsAgent6 : 1;                                      // 0x0000(0x0001) (Edit)
	unsigned char                                      bSupportsAgent7 : 1;                                      // 0x0000(0x0001) (Edit)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0001(0x0001)
	unsigned char                                      bSupportsAgent8 : 1;                                      // 0x0001(0x0001) (Edit)
	unsigned char                                      bSupportsAgent9 : 1;                                      // 0x0001(0x0001) (Edit)
	unsigned char                                      bSupportsAgent10 : 1;                                     // 0x0001(0x0001) (Edit)
	unsigned char                                      bSupportsAgent11 : 1;                                     // 0x0001(0x0001) (Edit)
	unsigned char                                      bSupportsAgent12 : 1;                                     // 0x0001(0x0001) (Edit)
	unsigned char                                      bSupportsAgent13 : 1;                                     // 0x0001(0x0001) (Edit)
	unsigned char                                      bSupportsAgent14 : 1;                                     // 0x0001(0x0001) (Edit)
	unsigned char                                      bSupportsAgent15 : 1;                                     // 0x0001(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
};
// ScriptStruct Engine.PostProcessSettings
// 0x0570
struct FPostProcessSettings
{
	unsigned char                                      bOverride_WhiteTemp : 1;                                  // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_WhiteTint : 1;                                  // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorSaturation : 1;                            // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorContrast : 1;                              // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorGamma : 1;                                 // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorGain : 1;                                  // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorOffset : 1;                                // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorSaturationShadows : 1;                     // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0001(0x0001)
	unsigned char                                      bOverride_ColorContrastShadows : 1;                       // 0x0001(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorGammaShadows : 1;                          // 0x0001(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorGainShadows : 1;                           // 0x0001(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorOffsetShadows : 1;                         // 0x0001(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorSaturationMidtones : 1;                    // 0x0001(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorContrastMidtones : 1;                      // 0x0001(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorGammaMidtones : 1;                         // 0x0001(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorGainMidtones : 1;                          // 0x0001(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0002(0x0001)
	unsigned char                                      bOverride_ColorOffsetMidtones : 1;                        // 0x0002(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorSaturationHighlights : 1;                  // 0x0002(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorContrastHighlights : 1;                    // 0x0002(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorGammaHighlights : 1;                       // 0x0002(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorGainHighlights : 1;                        // 0x0002(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorOffsetHighlights : 1;                      // 0x0002(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorCorrectionShadowsMax : 1;                  // 0x0002(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorCorrectionHighlightsMin : 1;               // 0x0002(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02 : 8;                                        // 0x0003(0x0001)
	unsigned char                                      bOverride_FilmWhitePoint : 1;                             // 0x0003(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FilmSaturation : 1;                             // 0x0003(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FilmChannelMixerRed : 1;                        // 0x0003(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FilmChannelMixerGreen : 1;                      // 0x0003(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FilmChannelMixerBlue : 1;                       // 0x0003(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FilmContrast : 1;                               // 0x0003(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FilmDynamicRange : 1;                           // 0x0003(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FilmHealAmount : 1;                             // 0x0003(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData03 : 8;                                        // 0x0004(0x0001)
	unsigned char                                      bOverride_FilmToeAmount : 1;                              // 0x0004(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FilmShadowTint : 1;                             // 0x0004(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FilmShadowTintBlend : 1;                        // 0x0004(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FilmShadowTintAmount : 1;                       // 0x0004(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FilmSlope : 1;                                  // 0x0004(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FilmToe : 1;                                    // 0x0004(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FilmShoulder : 1;                               // 0x0004(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_FilmBlackClip : 1;                              // 0x0004(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData04 : 8;                                        // 0x0005(0x0001)
	unsigned char                                      bOverride_FilmWhiteClip : 1;                              // 0x0005(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_SceneColorTint : 1;                             // 0x0005(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_SceneFringeIntensity : 1;                       // 0x0005(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_AmbientCubemapTint : 1;                         // 0x0005(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_AmbientCubemapIntensity : 1;                    // 0x0005(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_BloomMethod : 1;                                // 0x0005(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_BloomIntensity : 1;                             // 0x0005(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_BloomThreshold : 1;                             // 0x0005(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData05 : 8;                                        // 0x0006(0x0001)
	unsigned char                                      bOverride_Bloom1Tint : 1;                                 // 0x0006(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_Bloom1Size : 1;                                 // 0x0006(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_Bloom2Size : 1;                                 // 0x0006(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_Bloom2Tint : 1;                                 // 0x0006(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_Bloom3Tint : 1;                                 // 0x0006(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_Bloom3Size : 1;                                 // 0x0006(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_Bloom4Tint : 1;                                 // 0x0006(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_Bloom4Size : 1;                                 // 0x0006(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData06 : 8;                                        // 0x0007(0x0001)
	unsigned char                                      bOverride_Bloom5Tint : 1;                                 // 0x0007(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_Bloom5Size : 1;                                 // 0x0007(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_Bloom6Tint : 1;                                 // 0x0007(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_Bloom6Size : 1;                                 // 0x0007(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_BloomSizeScale : 1;                             // 0x0007(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_BloomConvolutionTexture : 1;                    // 0x0007(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_BloomConvolutionSize : 1;                       // 0x0007(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_BloomConvolutionCenterUV : 1;                   // 0x0007(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData07 : 8;                                        // 0x0008(0x0001)
	unsigned char                                      bOverride_BloomConvolutionPreFilter : 1;                  // 0x0008(0x0001) (Deprecated)
	unsigned char                                      bOverride_BloomConvolutionPreFilterMin : 1;               // 0x0008(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_BloomConvolutionPreFilterMax : 1;               // 0x0008(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_BloomConvolutionPreFilterMult : 1;              // 0x0008(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_BloomConvolutionBufferScale : 1;                // 0x0008(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_BloomDirtMaskIntensity : 1;                     // 0x0008(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_BloomDirtMaskTint : 1;                          // 0x0008(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_BloomDirtMask : 1;                              // 0x0008(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData08 : 8;                                        // 0x0009(0x0001)
	unsigned char                                      bOverride_TslBlurIntensity : 1;                           // 0x0009(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_TslBlurScopeInnerEdge : 1;                      // 0x0009(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_TslBlurScopeOutterEdge : 1;                     // 0x0009(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_TslBlurDepthBlackPoint : 1;                     // 0x0009(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_TslBlurDepthWhitePoint : 1;                     // 0x0009(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_TslBlurDepthGamma : 1;                          // 0x0009(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_bTslBlurUseBranching : 1;                       // 0x0009(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_TslBlurReticleBrightSceneVisibilityStartLuminance : 1;// 0x0009(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData09 : 8;                                        // 0x000A(0x0001)
	unsigned char                                      bOverride_TslBlurReticleBrightSceneVisibilityFadeSpeed : 1;// 0x000A(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_TslBlurReticleBrightSceneVisibilityReticleLuminanceMultiplier : 1;// 0x000A(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_TslBlurReticleBrightSceneVisibilityReticleOpacity : 1;// 0x000A(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_AutoExposureMethod : 1;                         // 0x000A(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_AutoExposureLowPercent : 1;                     // 0x000A(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_AutoExposureHighPercent : 1;                    // 0x000A(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_AutoExposureMinBrightness : 1;                  // 0x000A(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_AutoExposureMaxBrightness : 1;                  // 0x000A(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData10 : 8;                                        // 0x000B(0x0001)
	unsigned char                                      bOverride_AutoExposureSpeedUp : 1;                        // 0x000B(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_AutoExposureSpeedDown : 1;                      // 0x000B(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_AutoExposureBias : 1;                           // 0x000B(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_HistogramLogMin : 1;                            // 0x000B(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_HistogramLogMax : 1;                            // 0x000B(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_LensFlareIntensity : 1;                         // 0x000B(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_LensFlareTint : 1;                              // 0x000B(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_LensFlareTints : 1;                             // 0x000B(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData11 : 8;                                        // 0x000C(0x0001)
	unsigned char                                      bOverride_LensFlareBokehSize : 1;                         // 0x000C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_LensFlareBokehShape : 1;                        // 0x000C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_LensFlareThreshold : 1;                         // 0x000C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_VignetteIntensity : 1;                          // 0x000C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_GrainIntensity : 1;                             // 0x000C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_GrainJitter : 1;                                // 0x000C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_AmbientOcclusionIntensity : 1;                  // 0x000C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_AmbientOcclusionStaticFraction : 1;             // 0x000C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData12 : 8;                                        // 0x000D(0x0001)
	unsigned char                                      bOverride_AmbientOcclusionRadius : 1;                     // 0x000D(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_AmbientOcclusionFadeDistance : 1;               // 0x000D(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_AmbientOcclusionFadeRadius : 1;                 // 0x000D(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_HBAOPowerExponent : 1;                          // 0x000D(0x0001) (BlueprintVisible)
	unsigned char                                      bOverride_HBAORadius : 1;                                 // 0x000D(0x0001) (BlueprintVisible)
	unsigned char                                      bOverride_HBAOBias : 1;                                   // 0x000D(0x0001) (BlueprintVisible)
	unsigned char                                      bOverride_HBAODetailAO : 1;                               // 0x000D(0x0001) (BlueprintVisible)
	unsigned char                                      bOverride_HBAOBlurRadius : 1;                             // 0x000D(0x0001) (BlueprintVisible)
	unsigned char                                      UnknownData13 : 8;                                        // 0x000E(0x0001)
	unsigned char                                      bOverride_HBAOBlurSharpness : 1;                          // 0x000E(0x0001) (BlueprintVisible)
	unsigned char                                      bOverride_HBAOMaxViewDepth : 1;                           // 0x000E(0x0001) (BlueprintVisible)
	unsigned char                                      bOverride_HBAODepthSharpness : 1;                         // 0x000E(0x0001) (BlueprintVisible)
	unsigned char                                      bOverride_AmbientOcclusionDistance : 1;                   // 0x000E(0x0001) (Deprecated)
	unsigned char                                      bOverride_AmbientOcclusionRadiusInWS : 1;                 // 0x000E(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_AmbientOcclusionPower : 1;                      // 0x000E(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_AmbientOcclusionBias : 1;                       // 0x000E(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_AmbientOcclusionQuality : 1;                    // 0x000E(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData14 : 8;                                        // 0x000F(0x0001)
	unsigned char                                      bOverride_AmbientOcclusionMipBlend : 1;                   // 0x000F(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_AmbientOcclusionMipScale : 1;                   // 0x000F(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_AmbientOcclusionMipThreshold : 1;               // 0x000F(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_LPVIntensity : 1;                               // 0x000F(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_LPVDirectionalOcclusionIntensity : 1;           // 0x000F(0x0001) (Edit)
	unsigned char                                      bOverride_LPVDirectionalOcclusionRadius : 1;              // 0x000F(0x0001) (Edit)
	unsigned char                                      bOverride_LPVDiffuseOcclusionExponent : 1;                // 0x000F(0x0001) (Edit)
	unsigned char                                      bOverride_LPVSpecularOcclusionExponent : 1;               // 0x000F(0x0001) (Edit)
	unsigned char                                      UnknownData15 : 8;                                        // 0x0010(0x0001)
	unsigned char                                      bOverride_LPVDiffuseOcclusionIntensity : 1;               // 0x0010(0x0001) (Edit)
	unsigned char                                      bOverride_LPVSpecularOcclusionIntensity : 1;              // 0x0010(0x0001) (Edit)
	unsigned char                                      bOverride_LPVSize : 1;                                    // 0x0010(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_LPVSecondaryOcclusionIntensity : 1;             // 0x0010(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_LPVSecondaryBounceIntensity : 1;                // 0x0010(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_LPVGeometryVolumeBias : 1;                      // 0x0010(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_LPVVplInjectionBias : 1;                        // 0x0010(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_LPVEmissiveInjectionIntensity : 1;              // 0x0010(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData16 : 8;                                        // 0x0011(0x0001)
	unsigned char                                      bOverride_LPVFadeRange : 1;                               // 0x0011(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_LPVDirectionalOcclusionFadeRange : 1;           // 0x0011(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_IndirectLightingColor : 1;                      // 0x0011(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_IndirectLightingIntensity : 1;                  // 0x0011(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorGradingIntensity : 1;                      // 0x0011(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ColorGradingLUT : 1;                            // 0x0011(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_DepthOfFieldFocalDistance : 1;                  // 0x0011(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_DepthOfFieldFstop : 1;                          // 0x0011(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData17 : 8;                                        // 0x0012(0x0001)
	unsigned char                                      bOverride_DepthOfFieldScopeSize : 1;                      // 0x0012(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_DepthOfFieldSensorWidth : 1;                    // 0x0012(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_DepthOfFieldDepthBlurRadius : 1;                // 0x0012(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_DepthOfFieldDepthBlurAmount : 1;                // 0x0012(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_DepthOfFieldFocalRegion : 1;                    // 0x0012(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_DepthOfFieldNearTransitionRegion : 1;           // 0x0012(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_DepthOfFieldFarTransitionRegion : 1;            // 0x0012(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_DepthOfFieldScale : 1;                          // 0x0012(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData18 : 8;                                        // 0x0013(0x0001)
	unsigned char                                      bOverride_DepthOfFieldMaxBokehSize : 1;                   // 0x0013(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_DepthOfFieldNearBlurSize : 1;                   // 0x0013(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_DepthOfFieldFarBlurSize : 1;                    // 0x0013(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_DepthOfFieldMethod : 1;                         // 0x0013(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_MobileHQGaussian : 1;                           // 0x0013(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_DepthOfFieldBokehShape : 1;                     // 0x0013(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_DepthOfFieldOcclusion : 1;                      // 0x0013(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_DepthOfFieldColorThreshold : 1;                 // 0x0013(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData19 : 8;                                        // 0x0014(0x0001)
	unsigned char                                      bOverride_DepthOfFieldSizeThreshold : 1;                  // 0x0014(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_DepthOfFieldSkyFocusDistance : 1;               // 0x0014(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_DepthOfFieldVignetteSize : 1;                   // 0x0014(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_MotionBlurAmount : 1;                           // 0x0014(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_MotionBlurMax : 1;                              // 0x0014(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_MotionBlurPerObjectSize : 1;                    // 0x0014(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ScreenPercentage : 1;                           // 0x0014(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ScreenSpaceReflectionIntensity : 1;             // 0x0014(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData20 : 8;                                        // 0x0015(0x0001)
	unsigned char                                      bOverride_ScreenSpaceReflectionQuality : 1;               // 0x0015(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ScreenSpaceReflectionMaxRoughness : 1;          // 0x0015(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_ScreenSpaceReflectionRoughnessScale : 1;        // 0x0015(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_OutlineSettings : 1;                            // 0x0015(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_OutlineMaskTexture : 1;                         // 0x0015(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_OutlineMaskTextureScale : 1;                    // 0x0015(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverride_OutlineMaskTextureScrollSpeed : 1;              // 0x0015(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData21[0x2];                                       // 0x0016(0x0002) MISSED OFFSET
	float                                              WhiteTemp;                                                // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WhiteTint;                                                // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ColorSaturation;                                          // 0x0020(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ColorContrast;                                            // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ColorGamma;                                               // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ColorGain;                                                // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ColorOffset;                                              // 0x0060(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ColorSaturationShadows;                                   // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ColorContrastShadows;                                     // 0x0080(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ColorGammaShadows;                                        // 0x0090(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ColorGainShadows;                                         // 0x00A0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ColorOffsetShadows;                                       // 0x00B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ColorCorrectionShadowsMax;                                // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData22[0xC];                                       // 0x00C4(0x000C) MISSED OFFSET
	struct FVector4                                    ColorSaturationMidtones;                                  // 0x00D0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ColorContrastMidtones;                                    // 0x00E0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ColorGammaMidtones;                                       // 0x00F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ColorGainMidtones;                                        // 0x0100(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ColorOffsetMidtones;                                      // 0x0110(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ColorSaturationHighlights;                                // 0x0120(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ColorContrastHighlights;                                  // 0x0130(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ColorGammaHighlights;                                     // 0x0140(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ColorGainHighlights;                                      // 0x0150(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ColorOffsetHighlights;                                    // 0x0160(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ColorCorrectionHighlightsMin;                             // 0x0170(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FilmSlope;                                                // 0x0174(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FilmToe;                                                  // 0x0178(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FilmShoulder;                                             // 0x017C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FilmBlackClip;                                            // 0x0180(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FilmWhiteClip;                                            // 0x0184(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FilmWhitePoint;                                           // 0x0188(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FilmShadowTint;                                           // 0x0198(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FilmShadowTintBlend;                                      // 0x01A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FilmShadowTintAmount;                                     // 0x01AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FilmSaturation;                                           // 0x01B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FilmChannelMixerRed;                                      // 0x01B4(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FilmChannelMixerGreen;                                    // 0x01C4(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FilmChannelMixerBlue;                                     // 0x01D4(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FilmContrast;                                             // 0x01E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FilmToeAmount;                                            // 0x01E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FilmHealAmount;                                           // 0x01EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FilmDynamicRange;                                         // 0x01F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                SceneColorTint;                                           // 0x01F4(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SceneFringeIntensity;                                     // 0x0204(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBloomMethod>                          BloomMethod;                                              // 0x0208(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData23[0x3];                                       // 0x0209(0x0003) MISSED OFFSET
	float                                              BloomIntensity;                                           // 0x020C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BloomThreshold;                                           // 0x0210(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BloomSizeScale;                                           // 0x0214(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Bloom1Size;                                               // 0x0218(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Bloom2Size;                                               // 0x021C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Bloom3Size;                                               // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Bloom4Size;                                               // 0x0224(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Bloom5Size;                                               // 0x0228(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Bloom6Size;                                               // 0x022C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Bloom1Tint;                                               // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Bloom2Tint;                                               // 0x0240(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Bloom3Tint;                                               // 0x0250(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Bloom4Tint;                                               // 0x0260(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Bloom5Tint;                                               // 0x0270(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                Bloom6Tint;                                               // 0x0280(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  BloomConvolutionTexture;                                  // 0x0290(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BloomConvolutionSize;                                     // 0x0298(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   BloomConvolutionCenterUV;                                 // 0x029C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BloomConvolutionPreFilter;                                // 0x02A4(0x000C) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              BloomConvolutionPreFilterMin;                             // 0x02B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BloomConvolutionPreFilterMax;                             // 0x02B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BloomConvolutionPreFilterMult;                            // 0x02B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BloomConvolutionBufferScale;                              // 0x02BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture*                                    BloomDirtMask;                                            // 0x02C0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BloomDirtMaskIntensity;                                   // 0x02C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                BloomDirtMaskTint;                                        // 0x02CC(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TslBlurIntensity;                                         // 0x02DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TslBlurScopeInnerEdge;                                    // 0x02E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TslBlurScopeOutterEdge;                                   // 0x02E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TslBlurReticleBrightSceneVisibilityStartLuminance;        // 0x02E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TslBlurReticleBrightSceneVisibilityFadeSpeed;             // 0x02EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TslBlurReticleBrightSceneVisibilityReticleLuminanceMultiplier;// 0x02F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TslBlurReticleBrightSceneVisibilityReticleOpacity;        // 0x02F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TslBlurDepthBlackPoint;                                   // 0x02F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TslBlurDepthWhitePoint;                                   // 0x02FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TslBlurDepthGamma;                                        // 0x0300(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bTslBlurUseBranching : 1;                                 // 0x0304(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData24[0x3];                                       // 0x0305(0x0003) MISSED OFFSET
	struct FLinearColor                                AmbientCubemapTint;                                       // 0x0308(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AmbientCubemapIntensity;                                  // 0x0318(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData25[0x4];                                       // 0x031C(0x0004) MISSED OFFSET
	class UTextureCube*                                AmbientCubemap;                                           // 0x0320(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAutoExposureMethod>                   AutoExposureMethod;                                       // 0x0328(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData26[0x3];                                       // 0x0329(0x0003) MISSED OFFSET
	float                                              AutoExposureLowPercent;                                   // 0x032C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AutoExposureHighPercent;                                  // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AutoExposureMinBrightness;                                // 0x0334(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AutoExposureMaxBrightness;                                // 0x0338(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AutoExposureSpeedUp;                                      // 0x033C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AutoExposureSpeedDown;                                    // 0x0340(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AutoExposureBias;                                         // 0x0344(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HistogramLogMin;                                          // 0x0348(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HistogramLogMax;                                          // 0x034C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LensFlareIntensity;                                       // 0x0350(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LensFlareTint;                                            // 0x0354(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LensFlareBokehSize;                                       // 0x0364(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LensFlareThreshold;                                       // 0x0368(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData27[0x4];                                       // 0x036C(0x0004) MISSED OFFSET
	class UTexture*                                    LensFlareBokehShape;                                      // 0x0370(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LensFlareTints[0x8];                                      // 0x0378(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VignetteIntensity;                                        // 0x03F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GrainJitter;                                              // 0x03FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GrainIntensity;                                           // 0x0400(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HBAOPowerExponent;                                        // 0x0404(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HBAORadius;                                               // 0x0408(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HBAOBias;                                                 // 0x040C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HBAODetailAO;                                             // 0x0410(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EHBAOBlurRadius>                       HBAOBlurRadius;                                           // 0x0414(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData28[0x3];                                       // 0x0415(0x0003) MISSED OFFSET
	float                                              HBAOBlurSharpness;                                        // 0x0418(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HBAOMaxViewDepth;                                         // 0x041C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HBAODepthSharpness;                                       // 0x0420(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AmbientOcclusionIntensity;                                // 0x0424(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AmbientOcclusionStaticFraction;                           // 0x0428(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AmbientOcclusionRadius;                                   // 0x042C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AmbientOcclusionRadiusInWS : 1;                           // 0x0430(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData29[0x3];                                       // 0x0431(0x0003) MISSED OFFSET
	float                                              AmbientOcclusionFadeDistance;                             // 0x0434(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AmbientOcclusionFadeRadius;                               // 0x0438(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AmbientOcclusionDistance;                                 // 0x043C(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              AmbientOcclusionPower;                                    // 0x0440(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AmbientOcclusionBias;                                     // 0x0444(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AmbientOcclusionQuality;                                  // 0x0448(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AmbientOcclusionMipBlend;                                 // 0x044C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AmbientOcclusionMipScale;                                 // 0x0450(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AmbientOcclusionMipThreshold;                             // 0x0454(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                IndirectLightingColor;                                    // 0x0458(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              IndirectLightingIntensity;                                // 0x0468(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ColorGradingIntensity;                                    // 0x046C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture*                                    ColorGradingLUT;                                          // 0x0470(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDepthOfFieldMethod>                   DepthOfFieldMethod;                                       // 0x0478(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData30[0x3];                                       // 0x0479(0x0003) MISSED OFFSET
	unsigned char                                      bMobileHQGaussian : 1;                                    // 0x047C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData31[0x3];                                       // 0x047D(0x0003) MISSED OFFSET
	float                                              DepthOfFieldFstop;                                        // 0x0480(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DepthOfFieldSensorWidth;                                  // 0x0484(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DepthOfFieldFocalDistance;                                // 0x0488(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DepthOfFieldDepthBlurAmount;                              // 0x048C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DepthOfFieldDepthBlurRadius;                              // 0x0490(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DepthOfFieldFocalRegion;                                  // 0x0494(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DepthOfFieldNearTransitionRegion;                         // 0x0498(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DepthOfFieldFarTransitionRegion;                          // 0x049C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DepthOfFieldScale;                                        // 0x04A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DepthOfFieldMaxBokehSize;                                 // 0x04A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DepthOfFieldNearBlurSize;                                 // 0x04A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DepthOfFieldFarBlurSize;                                  // 0x04AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture*                                    DepthOfFieldBokehShape;                                   // 0x04B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DepthOfFieldOcclusion;                                    // 0x04B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DepthOfFieldColorThreshold;                               // 0x04BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DepthOfFieldSizeThreshold;                                // 0x04C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DepthOfFieldSkyFocusDistance;                             // 0x04C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DepthOfFieldVignetteSize;                                 // 0x04C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MotionBlurAmount;                                         // 0x04CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MotionBlurMax;                                            // 0x04D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MotionBlurPerObjectSize;                                  // 0x04D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LPVIntensity;                                             // 0x04D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LPVVplInjectionBias;                                      // 0x04DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LPVSize;                                                  // 0x04E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LPVSecondaryOcclusionIntensity;                           // 0x04E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LPVSecondaryBounceIntensity;                              // 0x04E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LPVGeometryVolumeBias;                                    // 0x04EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LPVEmissiveInjectionIntensity;                            // 0x04F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LPVDirectionalOcclusionIntensity;                         // 0x04F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LPVDirectionalOcclusionRadius;                            // 0x04F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LPVDiffuseOcclusionExponent;                              // 0x04FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LPVSpecularOcclusionExponent;                             // 0x0500(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LPVDiffuseOcclusionIntensity;                             // 0x0504(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LPVSpecularOcclusionIntensity;                            // 0x0508(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ScreenSpaceReflectionIntensity;                           // 0x050C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ScreenSpaceReflectionQuality;                             // 0x0510(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ScreenSpaceReflectionMaxRoughness;                        // 0x0514(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LPVFadeRange;                                             // 0x0518(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LPVDirectionalOcclusionFadeRange;                         // 0x051C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ScreenPercentage;                                         // 0x0520(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData32[0x4];                                       // 0x0524(0x0004) MISSED OFFSET
	class UTexture2D*                                  OutlineMaskTexture;                                       // 0x0528(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   OutlineMaskTextureScale;                                  // 0x0530(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   OutlineMaskTextureScrollSpeed;                            // 0x0538(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FPostProcessOutlineSettings>         OutlineSettings;                                          // 0x0540(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FWeightedBlendables                         WeightedBlendables;                                       // 0x0550(0x0010) (Edit)
	TArray<class UObject*>                             Blendables;                                               // 0x0560(0x0010) (ZeroConstructor, Deprecated)
};
// ScriptStruct Engine.WeightedBlendables
// 0x0010
struct FWeightedBlendables
{
	TArray<struct FWeightedBlendable>                  Array;                                                    // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};
// ScriptStruct Engine.WeightedBlendable
// 0x0010
struct FWeightedBlendable
{
	float                                              Weight;                                                   // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	class UObject*                                     Object;                                                   // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.PostProcessOutlineSettings
// 0x001C
struct FPostProcessOutlineSettings
{
	struct FLinearColor                                Color;                                                    // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OuterRadius;                                              // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InnerRadius;                                              // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseNoiseTexture : 1;                                     // 0x0018(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0019(0x0001)
	unsigned char                                      bXRay : 1;                                                // 0x0019(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CustomStencilValue;                                       // 0x001A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x001B(0x0001) MISSED OFFSET
};
// ScriptStruct Engine.LatentActionManager
// 0x00F0
struct FLatentActionManager
{
	unsigned char                                      UnknownData00[0xF0];                                      // 0x0000(0x00F0) MISSED OFFSET
};
// ScriptStruct Engine.PlayerMuteList
// 0x0038
struct FPlayerMuteList
{
	unsigned char                                      UnknownData00[0x30];                                      // 0x0000(0x0030) MISSED OFFSET
	unsigned char                                      bHasVoiceHandshakeCompleted : 1;                          // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                VoiceChannelIdx;                                          // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.MinimalViewInfo
// 0x05C0
struct FMinimalViewInfo
{
	struct FVector                                     Location;                                                 // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   OffCenterProjectionOffset;                                // 0x000C(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0014(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AspectRatio;                                              // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OrthoNearClipPlane;                                       // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FPostProcessSettings                        PostProcessSettings;                                      // 0x0030(0x0570) (BlueprintVisible)
	unsigned char                                      bConstrainAspectRatio : 1;                                // 0x05A0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUseFieldOfViewForLOD : 1;                                // 0x05A0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x3];                                       // 0x05A1(0x0003) MISSED OFFSET
	TEnumAsByte<ECameraProjectionMode>                 ProjectionMode;                                           // 0x05A4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x05A5(0x0003) MISSED OFFSET
	float                                              PostProcessBlendWeight;                                   // 0x05A8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OrthoFarClipPlane;                                        // 0x05AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OrthoWidth;                                               // 0x05B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FOV;                                                      // 0x05B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x05B8(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.VOscillator
// 0x0024
struct FVOscillator
{
	struct FFOscillator                                X;                                                        // 0x0000(0x000C) (Edit)
	struct FFOscillator                                Y;                                                        // 0x000C(0x000C) (Edit)
	struct FFOscillator                                Z;                                                        // 0x0018(0x000C) (Edit)
};
// ScriptStruct Engine.FOscillator
// 0x000C
struct FFOscillator
{
	float                                              Amplitude;                                                // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Frequency;                                                // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EInitialOscillatorOffset>              InitialOffset;                                            // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.ROscillator
// 0x0024
struct FROscillator
{
	struct FFOscillator                                Pitch;                                                    // 0x0000(0x000C) (Edit)
	struct FFOscillator                                Yaw;                                                      // 0x000C(0x000C) (Edit)
	struct FFOscillator                                Roll;                                                     // 0x0018(0x000C) (Edit)
};
// ScriptStruct Engine.ViewTargetTransitionParams
// 0x0010
struct FViewTargetTransitionParams
{
	float                                              BlendTime;                                                // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EViewTargetBlendFunction>              BlendFunction;                                            // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	float                                              BlendExp;                                                 // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bLockOutgoing : 1;                                        // 0x000C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.TViewTarget
// 0x05E0
struct FTViewTarget
{
	class AActor*                                      Target;                                                   // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0008(0x0008) MISSED OFFSET
	struct FMinimalViewInfo                            POV;                                                      // 0x0010(0x05C0) (Edit, BlueprintVisible)
	class APlayerState*                                PlayerState;                                              // 0x05D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x05D8(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.CameraCacheEntry
// 0x05D0
struct FCameraCacheEntry
{
	float                                              Timestamp;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0004(0x000C) MISSED OFFSET
	struct FMinimalViewInfo                            POV;                                                      // 0x0010(0x05C0)
};
// ScriptStruct Engine.ActiveForceFeedbackEffect
// 0x0018
struct FActiveForceFeedbackEffect
{
	class UForceFeedbackEffect*                        ForceFeedbackEffect;                                      // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0008(0x0010) MISSED OFFSET
};
// ScriptStruct Engine.ForceFeedbackChannelDetails
// 0x0080
struct FForceFeedbackChannelDetails
{
	unsigned char                                      bAffectsLeftLarge : 1;                                    // 0x0000(0x0001) (Edit)
	unsigned char                                      bAffectsLeftSmall : 1;                                    // 0x0000(0x0001) (Edit)
	unsigned char                                      bAffectsRightLarge : 1;                                   // 0x0000(0x0001) (Edit)
	unsigned char                                      bAffectsRightSmall : 1;                                   // 0x0000(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FRuntimeFloatCurve                          Curve;                                                    // 0x0008(0x0078) (Edit)
};
// ScriptStruct Engine.InputAxisKeyMapping
// 0x0028
struct FInputAxisKeyMapping
{
	struct FName                                       AxisName;                                                 // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FKey                                        Key;                                                      // 0x0008(0x0018) (Edit)
	float                                              Scale;                                                    // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.InputActionKeyMapping
// 0x0028
struct FInputActionKeyMapping
{
	struct FName                                       ActionName;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FKey                                        Key;                                                      // 0x0008(0x0018) (Edit, BlueprintVisible)
	unsigned char                                      bShift : 1;                                               // 0x0020(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCtrl : 1;                                                // 0x0020(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bAlt : 1;                                                 // 0x0020(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCmd : 1;                                                 // 0x0020(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.InputAxisConfigEntry
// 0x0028
struct FInputAxisConfigEntry
{
	struct FName                                       AxisKeyName;                                              // 0x0000(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FInputAxisProperties                        AxisProperties;                                           // 0x0008(0x0020) (Edit)
};
// ScriptStruct Engine.InputAxisProperties
// 0x0020
struct FInputAxisProperties
{
	float                                              DEADZONE;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OuterDeadZone;                                            // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Sensitivity;                                              // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Exponent;                                                 // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bInvert : 1;                                              // 0x0010(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	class UCurveFloat*                                 MultiplierAxisValueCurve;                                 // 0x0018(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.KeyBind
// 0x0030
struct FKeyBind
{
	struct FKey                                        Key;                                                      // 0x0000(0x0018) (Config)
	struct FString                                     Command;                                                  // 0x0018(0x0010) (ZeroConstructor, Config)
	unsigned char                                      Control : 1;                                              // 0x0028(0x0001) (Config)
	unsigned char                                      Shift : 1;                                                // 0x0028(0x0001) (Config)
	unsigned char                                      Alt : 1;                                                  // 0x0028(0x0001) (Config)
	unsigned char                                      Cmd : 1;                                                  // 0x0028(0x0001) (Config)
	unsigned char                                      bIgnoreCtrl : 1;                                          // 0x0028(0x0001) (Config)
	unsigned char                                      bIgnoreShift : 1;                                         // 0x0028(0x0001) (Config)
	unsigned char                                      bIgnoreAlt : 1;                                           // 0x0028(0x0001) (Config)
	unsigned char                                      bIgnoreCmd : 1;                                           // 0x0028(0x0001) (Config)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0029(0x0001)
	unsigned char                                      bDisabled : 1;                                            // 0x0029(0x0001) (Transient)
	unsigned char                                      UnknownData01[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
};
// ScriptStruct Engine.BlockInput_Action
// 0x0010
struct FBlockInput_Action
{
	struct FName                                       ActionName;                                               // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EInputEvent>                           KeyEvent;                                                 // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.UpdateLevelVisibilityLevelInfo
// 0x0010
struct FUpdateLevelVisibilityLevelInfo
{
	struct FName                                       PackageName;                                              // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsVisible : 1;                                           // 0x0008(0x0001)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.UpdateLevelStreamingLevelStatus
// 0x0010
struct FUpdateLevelStreamingLevelStatus
{
	struct FName                                       PackageName;                                              // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                LODIndex;                                                 // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bNewShouldBeLoaded : 1;                                   // 0x000C(0x0001)
	unsigned char                                      bNewShouldBeVisible : 1;                                  // 0x000C(0x0001)
	unsigned char                                      bNewShouldBlockOnLoad : 1;                                // 0x000C(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.DebugTextInfo
// 0x0060
struct FDebugTextInfo
{
	class AActor*                                      SrcActor;                                                 // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     SrcActorOffset;                                           // 0x0008(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     SrcActorDesiredOffset;                                    // 0x0014(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FString                                     DebugText;                                                // 0x0020(0x0010) (ZeroConstructor)
	float                                              TimeRemaining;                                            // 0x0030(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              Duration;                                                 // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FColor                                      TextColor;                                                // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAbsoluteLocation : 1;                                    // 0x003C(0x0001)
	unsigned char                                      bKeepAttachedToActor : 1;                                 // 0x003C(0x0001)
	unsigned char                                      bDrawShadow : 1;                                          // 0x003C(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	struct FVector                                     OrigActorLocation;                                        // 0x0040(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	class UFont*                                       Font;                                                     // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              FontScale;                                                // 0x0058(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.BroadphaseSettings
// 0x0028
struct FBroadphaseSettings
{
	unsigned char                                      bUseMBPOnClient : 1;                                      // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0001(0x0001)
	unsigned char                                      bUseMBPOnServer : 1;                                      // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0002(0x0001)
	unsigned char                                      bUseMBPOuterBounds : 1;                                   // 0x0002(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0003(0x0001) MISSED OFFSET
	struct FBox                                        MBPBounds;                                                // 0x0004(0x001C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MBPOuterBoundsExpandSize;                                 // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           MBPNumSubdivs;                                            // 0x0024(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.HierarchicalSimplification
// 0x01E8
struct FHierarchicalSimplification
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
	float                                              TransitionScreenSize;                                     // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bSimplifyMesh : 1;                                        // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	struct FMeshProxySettings                          ProxySetting;                                             // 0x000C(0x00FC) (Edit)
	struct FMeshMergingSettings                        MergeSetting;                                             // 0x0108(0x00D4) (Edit)
	float                                              DesiredBoundRadius;                                       // 0x01DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DesiredFillingPercentage;                                 // 0x01E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MinNumberOfActorsToBuild;                                 // 0x01E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.NetViewer
// 0x0030
struct FNetViewer
{
	class UNetConnection*                              Connection;                                               // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	class AActor*                                      InViewer;                                                 // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	class AActor*                                      ViewTarget;                                               // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     ViewLocation;                                             // 0x0018(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     ViewDir;                                                  // 0x0024(0x000C) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.LightmassWorldInfoSettings
// 0x0044
struct FLightmassWorldInfoSettings
{
	float                                              StaticLightingLevelScale;                                 // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                NumIndirectLightingBounces;                               // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IndirectLightingQuality;                                  // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IndirectLightingSmoothness;                               // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FColor                                      EnvironmentColor;                                         // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EnvironmentIntensity;                                     // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EmissiveBoost;                                            // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DiffuseBoost;                                             // 0x001C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseAmbientOcclusion : 1;                                 // 0x0020(0x0001) (Edit)
	unsigned char                                      bGenerateAmbientOcclusionMaterialMask : 1;                // 0x0020(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
	float                                              DirectIlluminationOcclusionFraction;                      // 0x0024(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IndirectIlluminationOcclusionFraction;                    // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OcclusionExponent;                                        // 0x002C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FullyOccludedSamplesFraction;                             // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxOcclusionDistance;                                     // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bVisualizeMaterialDiffuse : 1;                            // 0x0038(0x0001) (Edit)
	unsigned char                                      bVisualizeAmbientOcclusion : 1;                           // 0x0038(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              VolumeLightSamplePlacementScale;                          // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bCompressLightmaps : 1;                                   // 0x0040(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.StreamingTextureBuildInfo
// 0x000C
struct FStreamingTextureBuildInfo
{
	uint32_t                                           PackedRelativeBox;                                        // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                TextureLevelIndex;                                        // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TexelFactor;                                              // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.StreamingTexturePrimitiveInfo
// 0x0030
struct FStreamingTexturePrimitiveInfo
{
	class UTexture2D*                                  Texture;                                                  // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FBoxSphereBounds                            Bounds;                                                   // 0x0008(0x001C) (ZeroConstructor, IsPlainOldData)
	float                                              TexelFactor;                                              // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           PackedRelativeBox;                                        // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.BodyInstance
// 0x0230
struct FBodyInstance
{
	unsigned char                                      UnknownData00[0x12];                                      // 0x0000(0x0012) MISSED OFFSET
	struct FCollisionResponseContainer                 ResponseToChannels;                                       // 0x0012(0x0020) (Deprecated)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
	struct FName                                       CollisionProfileName;                                     // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FCollisionResponse                          CollisionResponses;                                       // 0x0040(0x0030) (Edit)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0070(0x0004) MISSED OFFSET
	unsigned char                                      bUseCCD : 1;                                              // 0x0074(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bNotifyRigidBodyCollision : 1;                            // 0x0074(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bSimulatePhysics : 1;                                     // 0x0074(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUseComplexForSimulation : 1;                             // 0x0074(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bOverrideMass : 1;                                        // 0x0074(0x0001) (Edit)
	unsigned char                                      bEnableGravity : 1;                                       // 0x0074(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bAutoWeld : 1;                                            // 0x0074(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bStartAwake : 1;                                          // 0x0074(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData03 : 8;                                        // 0x0075(0x0001)
	unsigned char                                      bGenerateWakeEvents : 1;                                  // 0x0075(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUpdateMassWhenScaleChanges : 1;                          // 0x0075(0x0001)
	unsigned char                                      bLockTranslation : 1;                                     // 0x0075(0x0001) (Edit)
	unsigned char                                      bLockRotation : 1;                                        // 0x0075(0x0001) (Edit)
	unsigned char                                      bLockXTranslation : 1;                                    // 0x0075(0x0001) (Edit)
	unsigned char                                      bLockYTranslation : 1;                                    // 0x0075(0x0001) (Edit)
	unsigned char                                      bLockZTranslation : 1;                                    // 0x0075(0x0001) (Edit)
	unsigned char                                      bLockXRotation : 1;                                       // 0x0075(0x0001) (Edit)
	unsigned char                                      UnknownData04 : 8;                                        // 0x0076(0x0001)
	unsigned char                                      bLockYRotation : 1;                                       // 0x0076(0x0001) (Edit)
	unsigned char                                      bLockZRotation : 1;                                       // 0x0076(0x0001) (Edit)
	unsigned char                                      bOverrideMaxAngularVelocity : 1;                          // 0x0076(0x0001) (Edit)
	unsigned char                                      bOverrideMaxDepenetrationVelocity : 1;                    // 0x0076(0x0001) (Edit)
	unsigned char                                      UnknownData05 : 8;                                        // 0x0077(0x0001)
	unsigned char                                      bOverrideWalkableSlopeOnInstance : 1;                     // 0x0077(0x0001) (Edit)
	float                                              MaxDepenetrationVelocity;                                 // 0x0078(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x8];                                       // 0x007C(0x0008) MISSED OFFSET
	float                                              MassInKgOverride;                                         // 0x0084(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LinearDamping;                                            // 0x0088(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AngularDamping;                                           // 0x008C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CustomDOFPlaneNormal;                                     // 0x0090(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     COMNudge;                                                 // 0x009C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x10];                                      // 0x00A8(0x0010) MISSED OFFSET
	float                                              MassScale;                                                // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x14];                                      // 0x00BC(0x0014) MISSED OFFSET
	struct FWalkableSlopeOverride                      WalkableSlopeOverride;                                    // 0x00D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	class UPhysicalMaterial*                           PhysMaterialOverride;                                     // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxAngularVelocity;                                       // 0x00E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CustomSleepThresholdMultiplier;                           // 0x00EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StabilizationThresholdMultiplier;                         // 0x00F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PhysicsBlendWeight;                                       // 0x00F4(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                PositionSolverIterationCount;                             // 0x00F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x24];                                      // 0x00FC(0x0024) MISSED OFFSET
	uint64_t                                           RigidActorSyncId;                                         // 0x0120(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                VelocitySolverIterationCount;                             // 0x0128(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0xF8];                                      // 0x012C(0x00F8) MISSED OFFSET
	ESleepFamily                                       SleepFamily;                                              // 0x0224(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDOFMode>                              DOFMode;                                                  // 0x0225(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionEnabled>                     CollisionEnabled;                                         // 0x0226(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionChannel>                     ObjectType;                                               // 0x0227(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x8];                                       // 0x0228(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.WalkableSlopeOverride
// 0x0010
struct FWalkableSlopeOverride
{
	TEnumAsByte<EWalkableSlopeBehavior>                WalkableSlopeBehavior;                                    // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              WalkableSlopeAngle;                                       // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0008(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.CollisionResponse
// 0x0030
struct FCollisionResponse
{
	struct FCollisionResponseContainer                 ResponseToChannels;                                       // 0x0000(0x0020) (Transient)
	TArray<struct FResponseChannel>                    ResponseArray;                                            // 0x0020(0x0010) (Edit, ZeroConstructor)
};
// ScriptStruct Engine.SpriteCategoryInfo
// 0x0038
struct FSpriteCategoryInfo
{
	struct FName                                       Category;                                                 // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FText                                       DisplayName;                                              // 0x0008(0x0018)
	struct FText                                       Description;                                              // 0x0020(0x0018)
};
// ScriptStruct Engine.MaterialClipVolumeTypeMask
// 0x0004
struct FMaterialClipVolumeTypeMask
{
	unsigned char                                      bWaterSurface : 1;                                        // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bWaterFX : 1;                                             // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bWeather : 1;                                             // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bEnvironment : 1;                                         // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bVegetationSmall : 1;                                     // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bVegetationMedium : 1;                                    // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bVegetationLarge : 1;                                     // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bVegetationHuge : 1;                                      // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0001(0x0001)
	unsigned char                                      bSmokeGrenade : 1;                                        // 0x0001(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bSmoke : 1;                                               // 0x0001(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bExplosion : 1;                                           // 0x0001(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bMolotov : 1;                                             // 0x0001(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bFire : 1;                                                // 0x0001(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bSparks : 1;                                              // 0x0001(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bDebris : 1;                                              // 0x0001(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bWeaponFX : 1;                                            // 0x0001(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0002(0x0001)
	unsigned char                                      bVehicleFX : 1;                                           // 0x0002(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bOther : 1;                                               // 0x0002(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0003(0x0001) MISSED OFFSET
};
// ScriptStruct Engine.MaterialTextureInfo
// 0x0010
struct FMaterialTextureInfo
{
	float                                              SamplingScale;                                            // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                UVChannelIndex;                                           // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FName                                       TextureName;                                              // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.LightmassMaterialInterfaceSettings
// 0x0014
struct FLightmassMaterialInterfaceSettings
{
	unsigned char                                      bCastShadowAsMasked : 1;                                  // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              EmissiveBoost;                                            // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DiffuseBoost;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ExportResolutionScale;                                    // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bOverrideCastShadowAsMasked : 1;                          // 0x0010(0x0001)
	unsigned char                                      bOverrideEmissiveBoost : 1;                               // 0x0010(0x0001)
	unsigned char                                      bOverrideDiffuseBoost : 1;                                // 0x0010(0x0001)
	unsigned char                                      bOverrideExportResolutionScale : 1;                       // 0x0010(0x0001)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.StaticMeshComponentLODInfo
// 0x00A8
struct FStaticMeshComponentLODInfo
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x0000(0x0020) MISSED OFFSET
	TArray<struct FPaintedVertex>                      PaintedVertices;                                          // 0x0020(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x78];                                      // 0x0030(0x0078) MISSED OFFSET
};
// ScriptStruct Engine.PaintedVertex
// 0x0014
struct FPaintedVertex
{
	struct FVector                                     Position;                                                 // 0x0000(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FPackedNormal                               Normal;                                                   // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FColor                                      Color;                                                    // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.InterpGroupActorInfo
// 0x0018
struct FInterpGroupActorInfo
{
	struct FName                                       ObjectName;                                               // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class AActor*>                              Actors;                                                   // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};
// ScriptStruct Engine.CameraCutInfo
// 0x0010
struct FCameraCutInfo
{
	struct FVector                                     Location;                                                 // 0x0000(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              Timestamp;                                                // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.SupportedAreaData
// 0x0020
struct FSupportedAreaData
{
	struct FString                                     AreaClassName;                                            // 0x0000(0x0010) (ZeroConstructor)
	int                                                AreaID;                                                   // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	class UObject*                                     AreaClass;                                                // 0x0018(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
};
// ScriptStruct Engine.NavGraphNode
// 0x0018
struct FNavGraphNode
{
	class UObject*                                     Owner;                                                    // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0008(0x0010) MISSED OFFSET
};
// ScriptStruct Engine.NavGraphEdge
// 0x0018
struct FNavGraphEdge
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};
// ScriptStruct Engine.NavigationSegmentLink
// 0x0030 (0x0068 - 0x0038)
struct FNavigationSegmentLink : public FNavigationLinkBase
{
	struct FVector                                     LeftStart;                                                // 0x0038(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LeftEnd;                                                  // 0x0044(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RightStart;                                               // 0x0050(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RightEnd;                                                 // 0x005C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.NavigationLinkBase
// 0x0038
struct FNavigationLinkBase
{
	float                                              LeftProjectHeight;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxFallDownLength;                                        // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ENavLinkDirection>                     Direction;                                                // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	float                                              SnapRadius;                                               // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SnapHeight;                                               // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FNavAgentSelector                           SupportedAgents;                                          // 0x0018(0x0004) (Edit)
	unsigned char                                      bSupportsAgent0 : 1;                                      // 0x001C(0x0001)
	unsigned char                                      bSupportsAgent1 : 1;                                      // 0x001C(0x0001)
	unsigned char                                      bSupportsAgent2 : 1;                                      // 0x001C(0x0001)
	unsigned char                                      bSupportsAgent3 : 1;                                      // 0x001C(0x0001)
	unsigned char                                      bSupportsAgent4 : 1;                                      // 0x001C(0x0001)
	unsigned char                                      bSupportsAgent5 : 1;                                      // 0x001C(0x0001)
	unsigned char                                      bSupportsAgent6 : 1;                                      // 0x001C(0x0001)
	unsigned char                                      bSupportsAgent7 : 1;                                      // 0x001C(0x0001)
	unsigned char                                      UnknownData01 : 8;                                        // 0x001D(0x0001)
	unsigned char                                      bSupportsAgent8 : 1;                                      // 0x001D(0x0001)
	unsigned char                                      bSupportsAgent9 : 1;                                      // 0x001D(0x0001)
	unsigned char                                      bSupportsAgent10 : 1;                                     // 0x001D(0x0001)
	unsigned char                                      bSupportsAgent11 : 1;                                     // 0x001D(0x0001)
	unsigned char                                      bSupportsAgent12 : 1;                                     // 0x001D(0x0001)
	unsigned char                                      bSupportsAgent13 : 1;                                     // 0x001D(0x0001)
	unsigned char                                      bSupportsAgent14 : 1;                                     // 0x001D(0x0001)
	unsigned char                                      bSupportsAgent15 : 1;                                     // 0x001D(0x0001)
	unsigned char                                      UnknownData02[0x2];                                       // 0x001E(0x0002) MISSED OFFSET
	unsigned char                                      bUseSnapHeight : 1;                                       // 0x0020(0x0001) (Edit)
	unsigned char                                      bSnapToCheapestArea : 1;                                  // 0x0020(0x0001) (Edit)
	unsigned char                                      bCustomFlag0 : 1;                                         // 0x0020(0x0001)
	unsigned char                                      bCustomFlag1 : 1;                                         // 0x0020(0x0001)
	unsigned char                                      bCustomFlag2 : 1;                                         // 0x0020(0x0001)
	unsigned char                                      bCustomFlag3 : 1;                                         // 0x0020(0x0001)
	unsigned char                                      bCustomFlag4 : 1;                                         // 0x0020(0x0001)
	unsigned char                                      bCustomFlag5 : 1;                                         // 0x0020(0x0001)
	unsigned char                                      UnknownData03 : 8;                                        // 0x0021(0x0001)
	unsigned char                                      bCustomFlag6 : 1;                                         // 0x0021(0x0001)
	unsigned char                                      bCustomFlag7 : 1;                                         // 0x0021(0x0001)
	unsigned char                                      UnknownData04[0x6];                                       // 0x0022(0x0006) MISSED OFFSET
	class UNavArea*                                    AreaClass;                                                // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.NavigationLink
// 0x0018 (0x0050 - 0x0038)
struct FNavigationLink : public FNavigationLinkBase
{
	struct FVector                                     Left;                                                     // 0x0038(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Right;                                                    // 0x0044(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.NamedEmitterMaterial
// 0x0010
struct FNamedEmitterMaterial
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          Material;                                                 // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.LODSoloTrack
// 0x0010
struct FLODSoloTrack
{
	TArray<unsigned char>                              SoloEnableSetting;                                        // 0x0000(0x0010) (ZeroConstructor, Transient)
};
// ScriptStruct Engine.ParticleSystemLOD
// 0x0001
struct FParticleSystemLOD
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};
// ScriptStruct Engine.ParticleSysParam
// 0x0080
struct FParticleSysParam
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EParticleSysParamType>                 ParamType;                                                // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              Scalar;                                                   // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Scalar_Low;                                               // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Vector;                                                   // 0x0014(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Vector_Low;                                               // 0x0020(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FColor                                      Color;                                                    // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AActor*                                      Actor;                                                    // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          Material;                                                 // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x40];                                      // 0x0040(0x0040) MISSED OFFSET
};
// ScriptStruct Engine.MeshUVChannelInfo
// 0x0014
struct FMeshUVChannelInfo
{
	unsigned char                                      bInitialized : 1;                                         // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0001(0x0001)
	unsigned char                                      bOverrideDensities : 1;                                   // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	float                                              LocalUVDensities[0x4];                                    // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.PreviewAssetAttachContainer
// 0x0010
struct FPreviewAssetAttachContainer
{
	TArray<struct FPreviewAttachedObjectPair>          AttachedObjects;                                          // 0x0000(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.PreviewAttachedObjectPair
// 0x0030
struct FPreviewAttachedObjectPair
{
	TAssetPtr<classUObject>                            AttachedObject;                                           // 0x0000(0x0020)
	class UObject*                                     Object;                                                   // 0x0020(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	struct FName                                       AttachedTo;                                               // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.AnimLinkableElement
// 0x0030
struct FAnimLinkableElement
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	class UAnimMontage*                                LinkedMontage;                                            // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                SlotIndex;                                                // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SegmentIndex;                                             // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAnimLinkMethod>                       LinkMethod;                                               // 0x0018(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAnimLinkMethod>                       CachedLinkMethod;                                         // 0x0019(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x001A(0x0002) MISSED OFFSET
	float                                              SegmentBeginTime;                                         // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SegmentLength;                                            // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LinkValue;                                                // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	class UAnimSequenceBase*                           LinkedSequence;                                           // 0x0028(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
};
// ScriptStruct Engine.Axis
// 0x0010
struct FAxis
{
	struct FVector                                     Axis;                                                     // 0x0000(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bInLocalSpace : 1;                                        // 0x000C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.MarkerSyncData
// 0x0020
struct FMarkerSyncData
{
	TArray<struct FAnimSyncMarker>                     AuthoredSyncMarkers;                                      // 0x0000(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0010(0x0010) MISSED OFFSET
};
// ScriptStruct Engine.AnimSyncMarker
// 0x0010
struct FAnimSyncMarker
{
	struct FName                                       MarkerName;                                               // 0x0000(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Time;                                                     // 0x0008(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.AnimNotifyTrack
// 0x0038
struct FAnimNotifyTrack
{
	struct FName                                       TrackName;                                                // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TrackColor;                                               // 0x0008(0x0010) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0018(0x0020) MISSED OFFSET
};
// ScriptStruct Engine.AnimNotifyEvent
// 0x0078 (0x00A8 - 0x0030)
struct FAnimNotifyEvent : public FAnimLinkableElement
{
	float                                              DisplayTime;                                              // 0x0030(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              TriggerTimeOffset;                                        // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              EndTriggerTimeOffset;                                     // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TriggerWeightThreshold;                                   // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       NotifyName;                                               // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimNotify*                                 Notify;                                                   // 0x0048(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAnimNotifyState*                            NotifyStateClass;                                         // 0x0050(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              Duration;                                                 // 0x0058(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	struct FAnimLinkableElement                        EndLink;                                                  // 0x0060(0x0030)
	unsigned char                                      bConvertedFromBranchingPoint : 1;                         // 0x0090(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMontageNotifyTickType>                MontageTickType;                                          // 0x0091(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0092(0x0002) MISSED OFFSET
	float                                              NotifyTriggerChance;                                      // 0x0094(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ENotifyFilterType>                     NotifyFilterType;                                         // 0x0098(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0099(0x0003) MISSED OFFSET
	int                                                NotifyFilterLOD;                                          // 0x009C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bTriggerOnDedicatedServer : 1;                            // 0x00A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00A1(0x0003) MISSED OFFSET
	int                                                TrackIndex;                                               // 0x00A4(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.PerBoneBlendWeights
// 0x0010
struct FPerBoneBlendWeights
{
	TArray<struct FPerBoneBlendWeight>                 BoneBlendWeights;                                         // 0x0000(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.PerBoneBlendWeight
// 0x0008
struct FPerBoneBlendWeight
{
	int                                                SourceIndex;                                              // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BlendWeight;                                              // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.SkeletalMaterial
// 0x0030
struct FSkeletalMaterial
{
	class UMaterialInterface*                          MaterialInterface;                                        // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bEnableShadowCasting : 1;                                 // 0x0008(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0009(0x0001)
	unsigned char                                      bRecomputeTangent : 1;                                    // 0x0009(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x000A(0x0006) MISSED OFFSET
	struct FName                                       MaterialSlotName;                                         // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FMeshUVChannelInfo                          UVChannelData;                                            // 0x0018(0x0014) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData02[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.ClothingAssetData_Legacy
// 0x0078
struct FClothingAssetData_Legacy
{
	struct FName                                       AssetName;                                                // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     ApexFileName;                                             // 0x0008(0x0010) (ZeroConstructor)
	unsigned char                                      bClothPropertiesChanged : 1;                              // 0x0018(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	struct FClothPhysicsProperties_Legacy              PhysicsProperties;                                        // 0x001C(0x0050) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x006C(0x000C) MISSED OFFSET
};
// ScriptStruct Engine.ClothPhysicsProperties_Legacy
// 0x0050
struct FClothPhysicsProperties_Legacy
{
	float                                              VerticalResistance;                                       // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              HorizontalResistance;                                     // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BendResistance;                                           // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ShearResistance;                                          // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Friction;                                                 // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Damping;                                                  // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TetherStiffness;                                          // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TetherLimit;                                              // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Drag;                                                     // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              StiffnessFrequency;                                       // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GravityScale;                                             // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MassScale;                                                // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              InertiaBlend;                                             // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SelfCollisionThickness;                                   // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SelfCollisionSquashScale;                                 // 0x0038(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SelfCollisionStiffness;                                   // 0x003C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SolverFrequency;                                          // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FiberCompression;                                         // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FiberExpansion;                                           // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FiberResistance;                                          // 0x004C(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.SkeletalMeshLODInfo
// 0x0540
struct FSkeletalMeshLODInfo
{
	float                                              ScreenSize;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LODHysteresis;                                            // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        LODMaterialMap;                                           // 0x0008(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TArray<unsigned char>                              bEnableShadowCasting;                                     // 0x0018(0x0010) (ZeroConstructor, Deprecated)
	TArray<struct FTriangleSortSettings>               TriangleSortSettings;                                     // 0x0028(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	unsigned char                                      bHasBeenSimplified : 1;                                   // 0x0038(0x0001)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	struct FSkeletalMeshOptimizationSettings           ReductionSettings;                                        // 0x0040(0x0188) (Edit)
	TArray<struct FBoneReference>                      BonesToPrioritize;                                        // 0x01C8(0x0010) (Edit, ZeroConstructor)
	float                                              WeightOfPrioritization;                                   // 0x01D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01DC(0x0004) MISSED OFFSET
	struct FSimplygonRemeshingSettings                 RemeshingSettings;                                        // 0x01E0(0x00A8) (Deprecated)
	struct FGroupedSkeletalOptimizationSettings        OptimizationSettings;                                     // 0x0288(0x0290) (Edit)
	TArray<struct FName>                               RemovedBones;                                             // 0x0518(0x0010) (Edit, ZeroConstructor)
	struct FString                                     SourceImportFilename;                                     // 0x0528(0x0010) (Edit, ZeroConstructor, EditConst)
	unsigned char                                      bHasPerLODVertexColors : 1;                               // 0x0538(0x0001)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0539(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.GroupedSkeletalOptimizationSettings
// 0x0290
struct FGroupedSkeletalOptimizationSettings
{
	unsigned char                                      bAutoComputeLODDistance : 1;                              // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	ESkeletalMeshLODType                               LevelOfDetailType;                                        // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0002(0x0006) MISSED OFFSET
	struct FSkeletalMeshOptimizationSettings           ReductionSettings;                                        // 0x0008(0x0188) (Edit)
	struct FMeshProxySettings                          ProxySettings;                                            // 0x0190(0x00FC) (Edit)
	unsigned char                                      bForceLODRebuild : 1;                                     // 0x028C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x028D(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.SkeletalMeshOptimizationSettings
// 0x0188
struct FSkeletalMeshOptimizationSettings
{
	TEnumAsByte<ESkeletalMeshTerminationCriterion>     TerminationCriterion;                                     // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESkeletalMeshOptimizationType>         ReductionMethod;                                          // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	float                                              NumOfTrianglesPercentage;                                 // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NumOfVertPercentage;                                      // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           MaxNumOfTriangles;                                        // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           MaxNumOfVerts;                                            // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VolumeImportance;                                         // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxDeviationPercentage;                                   // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ScreenSize;                                               // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              WeldingThreshold;                                         // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRecalcNormals : 1;                                       // 0x0024(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	float                                              NormalsThreshold;                                         // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESkeletalMeshOptimizationImportance>   SilhouetteImportance;                                     // 0x002C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESkeletalMeshOptimizationImportance>   TextureImportance;                                        // 0x002D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESkeletalMeshOptimizationImportance>   ShadingImportance;                                        // 0x002E(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESkeletalMeshOptimizationImportance>   SkinningImportance;                                       // 0x002F(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BoneReductionRatio;                                       // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxBonesPerVertex;                                        // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bTransferMorphTarget : 1;                                 // 0x0038(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x0039(0x0001)
	unsigned char                                      bEnforceBoneBoundaries : 1;                               // 0x0039(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03 : 8;                                        // 0x003A(0x0001)
	unsigned char                                      bLockEdges : 1;                                           // 0x003A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x5];                                       // 0x003B(0x0005) MISSED OFFSET
	TArray<struct FBoneReference>                      BonesToRemove;                                            // 0x0040(0x0010) (ZeroConstructor, Deprecated)
	int                                                BaseLOD;                                                  // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                LODChainLastIndex;                                        // 0x0054(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseVertexWeights : 1;                                    // 0x0058(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05 : 8;                                        // 0x0059(0x0001)
	unsigned char                                      bUseVertexWeightsForMaterial : 1;                         // 0x0059(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06 : 8;                                        // 0x005A(0x0001)
	unsigned char                                      bSimplifyMaterials : 1;                                   // 0x005A(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x5];                                       // 0x005B(0x0005) MISSED OFFSET
	struct FSimplygonMaterialLODSettings               MaterialLODSettings;                                      // 0x0060(0x0080) (Deprecated)
	struct FMaterialProxySettings                      MaterialSettings;                                         // 0x00E0(0x009C)
	unsigned char                                      bForceRebuild : 1;                                        // 0x017C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x017D(0x0003) MISSED OFFSET
	class UAnimSequence*                               BakePose;                                                 // 0x0180(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
};
// ScriptStruct Engine.TriangleSortSettings
// 0x0010
struct FTriangleSortSettings
{
	TEnumAsByte<ETriangleSortOption>                   TriangleSorting;                                          // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETriangleSortAxis>                     CustomLeftRightAxis;                                      // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0002(0x0006) MISSED OFFSET
	struct FName                                       CustomLeftRightBoneName;                                  // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.SkeletalMeshClothBuildParams
// 0x0050
struct FSkeletalMeshClothBuildParams
{
	struct FString                                     AssetName;                                                // 0x0000(0x0010) (Edit, ZeroConstructor)
	int                                                LODIndex;                                                 // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SourceSection;                                            // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRemoveFromMesh : 1;                                      // 0x0018(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	TAssetPtr<classUPhysicsAsset>                      PhysicsAsset;                                             // 0x0020(0x0020) (Edit)
	unsigned char                                      bTryAutoFix : 1;                                          // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              AutoFixThreshold;                                         // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SimulatedParticleMaxDistance;                             // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.BoneMirrorExport
// 0x0018
struct FBoneMirrorExport
{
	struct FName                                       BoneName;                                                 // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       SourceBoneName;                                           // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAxis>                                 BoneFlipAxis;                                             // 0x0010(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.BoneMirrorInfo
// 0x0008
struct FBoneMirrorInfo
{
	int                                                SourceIndex;                                              // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAxis>                                 BoneFlipAxis;                                             // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.AnimationGroupReference
// 0x0010
struct FAnimationGroupReference
{
	struct FName                                       GroupName;                                                // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAnimGroupRole>                        GroupRole;                                                // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.RootMotionMovementParams
// 0x0040
struct FRootMotionMovementParams
{
	unsigned char                                      bHasRootMotion : 1;                                       // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              BlendWeight;                                              // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0008(0x0008) MISSED OFFSET
	struct FTransform                                  RootMotionTransform;                                      // 0x0010(0x0030) (IsPlainOldData)
};
// ScriptStruct Engine.AnimGroupInstance
// 0x0080
struct FAnimGroupInstance
{
	unsigned char                                      UnknownData00[0x80];                                      // 0x0000(0x0080) MISSED OFFSET
};
// ScriptStruct Engine.AnimTickRecord
// 0x0048
struct FAnimTickRecord
{
	class UAnimationAsset*                             SourceAsset;                                              // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x40];                                      // 0x0008(0x0040) MISSED OFFSET
};
// ScriptStruct Engine.MarkerSyncAnimPosition
// 0x0018
struct FMarkerSyncAnimPosition
{
	struct FName                                       PreviousMarkerName;                                       // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       NextMarkerName;                                           // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              PositionBetweenMarkers;                                   // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.BlendFilter
// 0x0090
struct FBlendFilter
{
	unsigned char                                      UnknownData00[0x90];                                      // 0x0000(0x0090) MISSED OFFSET
};
// ScriptStruct Engine.BlendSampleData
// 0x0040
struct FBlendSampleData
{
	int                                                SampleDataIndex;                                          // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	class UAnimSequence*                               Animation;                                                // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              TotalWeight;                                              // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Time;                                                     // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              PreviousTime;                                             // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x24];                                      // 0x001C(0x0024) MISSED OFFSET
};
// ScriptStruct Engine.RootMotionSourceGroup
// 0x0100
struct FRootMotionSourceGroup
{
	unsigned char                                      UnknownData00[0xE8];                                      // 0x0000(0x00E8) MISSED OFFSET
	unsigned char                                      bHasAdditiveSources : 1;                                  // 0x00E8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x00E9(0x0001)
	unsigned char                                      bHasOverrideSources : 1;                                  // 0x00E9(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x00EA(0x0002) MISSED OFFSET
	struct FVector_NetQuantize10                       LastPreAdditiveVelocity;                                  // 0x00EC(0x000C)
	unsigned char                                      bIsAdditiveVelocityApplied : 1;                           // 0x00F8(0x0001) (ZeroConstructor, IsPlainOldData)
	struct FRootMotionSourceSettings                   LastAccumulatedSettings;                                  // 0x00F9(0x0001)
	unsigned char                                      UnknownData03[0x6];                                       // 0x00FA(0x0006) MISSED OFFSET
};
// ScriptStruct Engine.RootMotionSourceSettings
// 0x0001
struct FRootMotionSourceSettings
{
	unsigned char                                      Flags;                                                    // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.Vector_NetQuantize10
// 0x0000 (0x000C - 0x000C)
struct FVector_NetQuantize10 : public FVector
{
};
// ScriptStruct Engine.RootMotionSource_JumpForce
// 0x0030 (0x00D0 - 0x00A0)
struct FRootMotionSource_JumpForce : public FRootMotionSource
{
	struct FRotator                                    Rotation;                                                 // 0x0098(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              Distance;                                                 // 0x00A4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Height;                                                   // 0x00A8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bDisableTimeout : 1;                                      // 0x00AC(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00AD(0x0003) MISSED OFFSET
	class UCurveVector*                                PathOffsetCurve;                                          // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 TimeMappingCurve;                                         // 0x00B8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x00C0(0x0010) MISSED OFFSET
};
// ScriptStruct Engine.RootMotionSource
// 0x00A0
struct FRootMotionSource
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
	uint16_t                                           Priority;                                                 // 0x0010(0x0002) (ZeroConstructor, IsPlainOldData)
	uint16_t                                           LocalID;                                                  // 0x0012(0x0002) (ZeroConstructor, IsPlainOldData)
	ERootMotionAccumulateMode                          AccumulateMode;                                           // 0x0014(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	struct FName                                       InstanceName;                                             // 0x0018(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              StartTime;                                                // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CurrentTime;                                              // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              PreviousTime;                                             // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FRootMotionSourceStatus                     Status;                                                   // 0x0030(0x0001)
	struct FRootMotionSourceSettings                   Settings;                                                 // 0x0031(0x0001)
	unsigned char                                      bInLocalSpace : 1;                                        // 0x0032(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xD];                                       // 0x0033(0x000D) MISSED OFFSET
	struct FRootMotionMovementParams                   RootMotionParams;                                         // 0x0040(0x0040)
	struct FRootMotionFinishVelocitySettings           FinishVelocityParams;                                     // 0x0080(0x0014)
	unsigned char                                      UnknownData03[0xC];                                       // 0x0094(0x000C) MISSED OFFSET
};
// ScriptStruct Engine.RootMotionFinishVelocitySettings
// 0x0014
struct FRootMotionFinishVelocitySettings
{
	ERootMotionFinishVelocityMode                      Mode;                                                     // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FVector                                     SetVelocity;                                              // 0x0004(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              ClampVelocity;                                            // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.RootMotionSourceStatus
// 0x0001
struct FRootMotionSourceStatus
{
	unsigned char                                      Flags;                                                    // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.RootMotionSource_MoveToDynamicForce
// 0x0030 (0x00D0 - 0x00A0)
struct FRootMotionSource_MoveToDynamicForce : public FRootMotionSource
{
	struct FVector                                     StartLocation;                                            // 0x0098(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     InitialTargetLocation;                                    // 0x00A4(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     TargetLocation;                                           // 0x00B0(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRestrictSpeedToExpected : 1;                             // 0x00BC(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00BD(0x0003) MISSED OFFSET
	class UCurveVector*                                PathOffsetCurve;                                          // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 TimeMappingCurve;                                         // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.RootMotionSource_MoveToForce
// 0x0020 (0x00C0 - 0x00A0)
struct FRootMotionSource_MoveToForce : public FRootMotionSource
{
	struct FVector                                     StartLocation;                                            // 0x0098(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     TargetLocation;                                           // 0x00A4(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRestrictSpeedToExpected : 1;                             // 0x00B0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET
	class UCurveVector*                                PathOffsetCurve;                                          // 0x00B8(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.RootMotionSource_RadialForce
// 0x0040 (0x00E0 - 0x00A0)
struct FRootMotionSource_RadialForce : public FRootMotionSource
{
	struct FVector                                     Location;                                                 // 0x0098(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	class AActor*                                      LocationActor;                                            // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // 0x00B0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Strength;                                                 // 0x00B4(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsPush : 1;                                              // 0x00B8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x00B9(0x0001)
	unsigned char                                      bNoZForce : 1;                                            // 0x00B9(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x00BA(0x0006) MISSED OFFSET
	class UCurveFloat*                                 StrengthDistanceFalloff;                                  // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 StrengthOverTime;                                         // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseFixedWorldDirection : 1;                              // 0x00D0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00D1(0x0003) MISSED OFFSET
	struct FRotator                                    FixedWorldDirection;                                      // 0x00D4(0x000C) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.RootMotionSource_ConstantForce
// 0x0010 (0x00B0 - 0x00A0)
struct FRootMotionSource_ConstantForce : public FRootMotionSource
{
	struct FVector                                     force;                                                    // 0x0098(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	class UCurveFloat*                                 StrengthOverTime;                                         // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.BasedMovementInfo
// 0x0048
struct FBasedMovementInfo
{
	class UPrimitiveComponent*                         MovementBase;                                             // 0x0000(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       BoneName;                                                 // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector_NetQuantize100                      Location;                                                 // 0x0010(0x000C)
	struct FRotator                                    Rotation;                                                 // 0x001C(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bServerHasBaseComponent : 1;                              // 0x0028(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0029(0x0001)
	unsigned char                                      bRelativeRotation : 1;                                    // 0x0029(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x002A(0x0001)
	unsigned char                                      bServerHasVelocity : 1;                                   // 0x002A(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x5];                                       // 0x002B(0x0005) MISSED OFFSET
	class UPrimitiveComponent*                         MovingBase;                                               // 0x0030(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     MovingBaseRelativeVelocity;                               // 0x0038(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.SimulatedRootMotionReplicatedMove
// 0x0168
struct FSimulatedRootMotionReplicatedMove
{
	float                                              Time;                                                     // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FRepRootMotionMontage                       RootMotion;                                               // 0x0008(0x0160)
};
// ScriptStruct Engine.RepRootMotionMontage
// 0x0160
struct FRepRootMotionMontage
{
	unsigned char                                      bIsActive : 1;                                            // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	class UAnimMontage*                                AnimMontage;                                              // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              Position;                                                 // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector_NetQuantize100                      Location;                                                 // 0x0014(0x000C)
	struct FRotator                                    Rotation;                                                 // 0x0020(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	class UPrimitiveComponent*                         MovementBase;                                             // 0x0030(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       MovementBaseBoneName;                                     // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRelativePosition : 1;                                    // 0x0040(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x0041(0x0001)
	unsigned char                                      bRelativeRotation : 1;                                    // 0x0041(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x0042(0x0006) MISSED OFFSET
	struct FRootMotionSourceGroup                      AuthoritativeRootMotion;                                  // 0x0048(0x0100)
	struct FVector_NetQuantize10                       Acceleration;                                             // 0x0148(0x000C)
	struct FVector_NetQuantize10                       LinearVelocity;                                           // 0x0154(0x000C)
};
// ScriptStruct Engine.MaterialRemapIndex
// 0x0018
struct FMaterialRemapIndex
{
	uint32_t                                           ImportVersionKey;                                         // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<int>                                        MaterialRemap;                                            // 0x0008(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.StaticMaterial
// 0x0028
struct FStaticMaterial
{
	class UMaterialInterface*                          MaterialInterface;                                        // 0x0000(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       MaterialSlotName;                                         // 0x0008(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FMeshUVChannelInfo                          UVChannelData;                                            // 0x0010(0x0014) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.AssetEditorOrbitCameraPosition
// 0x0028
struct FAssetEditorOrbitCameraPosition
{
	unsigned char                                      bIsSet : 1;                                               // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FVector                                     CamOrbitPoint;                                            // 0x0004(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     CamOrbitZoom;                                             // 0x0010(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CamOrbitRotation;                                         // 0x001C(0x000C) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.MeshSectionInfoDataBase
// 0x0050
struct FMeshSectionInfoDataBase
{
	TMap<struct FString, struct FMeshSectionInfoMap>   Map;                                                      // 0x0000(0x0050) (ZeroConstructor)
};
// ScriptStruct Engine.MeshSectionInfoMap
// 0x0050
struct FMeshSectionInfoMap
{
	TMap<uint32_t, struct FMeshSectionInfo>            Map;                                                      // 0x0000(0x0050) (ZeroConstructor)
};
// ScriptStruct Engine.MeshSectionInfo
// 0x0008
struct FMeshSectionInfo
{
	int                                                MaterialIndex;                                            // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnableCollision : 1;                                     // 0x0004(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0005(0x0001)
	unsigned char                                      bCastShadow : 1;                                          // 0x0005(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0006(0x0001)
	unsigned char                                      bOverrideIndoorOutdoorMask : 1;                           // 0x0006(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      IndoorOutdoorMask;                                        // 0x0007(0x0001) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.MeshSectionInfoKey
// 0x0004
struct FMeshSectionInfoKey
{
	uint16_t                                           LODIndex;                                                 // 0x0000(0x0002) (ZeroConstructor, IsPlainOldData)
	uint16_t                                           SectionIndex;                                             // 0x0002(0x0002) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.StaticMeshSourceModel
// 0x04B0
struct FStaticMeshSourceModel
{
	struct FMeshBuildSettings                          BuildSettings;                                            // 0x0000(0x0040) (Edit)
	struct FMeshReductionSettings                      ReductionSettings;                                        // 0x0040(0x0158)
	struct FSimplygonRemeshingSettings                 RemeshingSettings;                                        // 0x0198(0x00A8) (Deprecated)
	unsigned char                                      bHasBeenSimplified : 1;                                   // 0x0240(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0241(0x0007) MISSED OFFSET
	struct FGroupedStaticMeshOptimizationSettings      OptimizationSettings;                                     // 0x0248(0x0260) (Edit)
	float                                              LODDistance;                                              // 0x04A8(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              ScreenSize;                                               // 0x04AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.GroupedStaticMeshOptimizationSettings
// 0x0260
struct FGroupedStaticMeshOptimizationSettings
{
	EStaticMeshLODType                                 LevelOfDetailType;                                        // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FMeshReductionSettings                      ReductionSettings;                                        // 0x0008(0x0158) (Edit)
	struct FMeshProxySettings                          ProxySettings;                                            // 0x0160(0x00FC) (Edit)
	unsigned char                                      UnknownData01[0x4];                                       // 0x025C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.MeshBuildSettings
// 0x0040
struct FMeshBuildSettings
{
	unsigned char                                      bUseMikkTSpace : 1;                                       // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0001(0x0001)
	unsigned char                                      bRecomputeNormals : 1;                                    // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0002(0x0001)
	unsigned char                                      bRecomputeTangents : 1;                                   // 0x0002(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x0003(0x0001)
	unsigned char                                      bRemoveDegenerates : 1;                                   // 0x0003(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03 : 8;                                        // 0x0004(0x0001)
	unsigned char                                      bBuildAdjacencyBuffer : 1;                                // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04 : 8;                                        // 0x0005(0x0001)
	unsigned char                                      bBuildReversedIndexBuffer : 1;                            // 0x0005(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05 : 8;                                        // 0x0006(0x0001)
	unsigned char                                      bUseHighPrecisionTangentBasis : 1;                        // 0x0006(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06 : 8;                                        // 0x0007(0x0001)
	unsigned char                                      bUseFullPrecisionUVs : 1;                                 // 0x0007(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07 : 8;                                        // 0x0008(0x0001)
	unsigned char                                      bGenerateLightmapUVs : 1;                                 // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                MinLightmapResolution;                                    // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SrcLightmapIndex;                                         // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                DstLightmapIndex;                                         // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BuildScale;                                               // 0x0018(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	struct FVector                                     BuildScale3D;                                             // 0x001C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DistanceFieldResolutionScale;                             // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bGenerateDistanceFieldAsIfTwoSided : 1;                   // 0x002C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	float                                              DistanceFieldBias;                                        // 0x0030(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	class UStaticMesh*                                 DistanceFieldReplacementMesh;                             // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.StaticMeshOptimizationSettings
// 0x001C
struct FStaticMeshOptimizationSettings
{
	TEnumAsByte<EOptimizationType>                     ReductionMethod;                                          // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              NumOfTrianglesPercentage;                                 // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxDeviationPercentage;                                   // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              WeldingThreshold;                                         // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRecalcNormals : 1;                                       // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	float                                              NormalsThreshold;                                         // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      SilhouetteImportance;                                     // 0x0018(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      TextureImportance;                                        // 0x0019(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      ShadingImportance;                                        // 0x001A(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x001B(0x0001) MISSED OFFSET
};
// ScriptStruct Engine.InstanceRun
// 0x0008
struct FInstanceRun
{
	int                                                BeginIdx;                                                 // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Num;                                                      // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.LevelBlockInstance
// 0x0010
struct FLevelBlockInstance
{
	struct FName                                       LevelBlockId;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                VariantId;                                                // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                InstanceId;                                               // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.SimpleInstance
// 0x0040
struct FSimpleInstance
{
	struct FVector4                                    InstanceOrigin;                                           // 0x0000(0x0010) (ZeroConstructor, IsPlainOldData)
	struct FVector4                                    InstanceTransform1;                                       // 0x0010(0x0010) (ZeroConstructor, IsPlainOldData)
	struct FVector4                                    InstanceTransform2;                                       // 0x0020(0x0010) (ZeroConstructor, IsPlainOldData)
	struct FVector4                                    InstanceTransform3;                                       // 0x0030(0x0010) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.RandomLevelData
// 0x0004
struct FRandomLevelData
{
	int                                                RandomSeed;                                               // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.SmartNameContainer
// 0x0050
struct FSmartNameContainer
{
	unsigned char                                      UnknownData00[0x50];                                      // 0x0000(0x0050) MISSED OFFSET
};
// ScriptStruct Engine.SmartNameMapping
// 0x00F8
struct FSmartNameMapping
{
	unsigned char                                      UnknownData00[0xF8];                                      // 0x0000(0x00F8) MISSED OFFSET
};
// ScriptStruct Engine.CurveMetaData
// 0x0018
struct FCurveMetaData
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};
// ScriptStruct Engine.AnimCurveType
// 0x0002
struct FAnimCurveType
{
	unsigned char                                      UnknownData00[0x2];                                       // 0x0000(0x0002) MISSED OFFSET
};
// ScriptStruct Engine.VirtualBone
// 0x0018
struct FVirtualBone
{
	struct FName                                       SourceBoneName;                                           // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       TargetBoneName;                                           // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       VirtualBoneName;                                          // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.AnimSlotGroup
// 0x0018
struct FAnimSlotGroup
{
	struct FName                                       GroupName;                                                // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               SlotNames;                                                // 0x0008(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.RigConfiguration
// 0x0018
struct FRigConfiguration
{
	class URig*                                        Rig;                                                      // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FNameMapping>                        BoneMappingTable;                                         // 0x0008(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.NameMapping
// 0x0010
struct FNameMapping
{
	struct FName                                       NodeName;                                                 // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       BoneName;                                                 // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.BoneReductionSetting
// 0x0010
struct FBoneReductionSetting
{
	TArray<struct FName>                               BonesToRemove;                                            // 0x0000(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.ReferencePose
// 0x0018
struct FReferencePose
{
	struct FName                                       PoseName;                                                 // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FTransform>                          ReferencePose;                                            // 0x0008(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.BoneNode
// 0x0010
struct FBoneNode
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	int                                                ParentIndex;                                              // 0x0008(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	TEnumAsByte<EBoneTranslationRetargetingMode>       TranslationRetargetingMode;                               // 0x000C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.SkeletonToMeshLinkup
// 0x0020
struct FSkeletonToMeshLinkup
{
	TArray<int>                                        SkeletonToMeshTable;                                      // 0x0000(0x0010) (ZeroConstructor)
	TArray<int>                                        MeshToSkeletonTable;                                      // 0x0010(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.AlphaBlend
// 0x0038
struct FAlphaBlend
{
	EAlphaBlendOption                                  BlendOption;                                              // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	class UCurveFloat*                                 CustomCurve;                                              // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BlendTime;                                                // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x24];                                      // 0x0014(0x0024) MISSED OFFSET
};
// ScriptStruct Engine.RawCurveTracks
// 0x0010
struct FRawCurveTracks
{
	TArray<struct FFloatCurve>                         FloatCurves;                                              // 0x0000(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.FloatCurve
// 0x0070 (0x0090 - 0x0020)
struct FFloatCurve : public FAnimCurveBase
{
	struct FRichCurve                                  FloatCurve;                                               // 0x0020(0x0070)
};
// ScriptStruct Engine.TransformCurve
// 0x0450 (0x0470 - 0x0020)
struct FTransformCurve : public FAnimCurveBase
{
	struct FVectorCurve                                TranslationCurve;                                         // 0x0020(0x0170)
	struct FVectorCurve                                RotationCurve;                                            // 0x0190(0x0170)
	struct FVectorCurve                                ScaleCurve;                                               // 0x0300(0x0170)
};
// ScriptStruct Engine.VectorCurve
// 0x0150 (0x0170 - 0x0020)
struct FVectorCurve : public FAnimCurveBase
{
	struct FRichCurve                                  FloatCurves[0x3];                                         // 0x0020(0x0070)
};
// ScriptStruct Engine.AnimCurveParam
// 0x0010
struct FAnimCurveParam
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0008(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.AnimTrack
// 0x0010
struct FAnimTrack
{
	TArray<struct FAnimSegment>                        AnimSegments;                                             // 0x0000(0x0010) (Edit, BlueprintVisible, EditFixedSize, ZeroConstructor)
};
// ScriptStruct Engine.AnimSegment
// 0x0020
struct FAnimSegment
{
	class UAnimSequenceBase*                           AnimReference;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StartPos;                                                 // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              AnimStartTime;                                            // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AnimEndTime;                                              // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AnimPlayRate;                                             // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                LoopingCount;                                             // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.RootMotionExtractionStep
// 0x0010
struct FRootMotionExtractionStep
{
	class UAnimSequence*                               AnimSequence;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              StartPosition;                                            // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              EndPosition;                                              // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.AnimMontageInstance
// 0x01D0
struct FAnimMontageInstance
{
	class UAnimMontage*                                Montage;                                                  // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC8];                                      // 0x0008(0x00C8) MISSED OFFSET
	unsigned char                                      bPlaying : 1;                                             // 0x00D0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00D1(0x0003) MISSED OFFSET
	float                                              DefaultBlendTimeMultiplier;                               // 0x00D4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x28];                                      // 0x00D8(0x0028) MISSED OFFSET
	TArray<int>                                        NextSections;                                             // 0x0100(0x0010) (ZeroConstructor)
	TArray<int>                                        PrevSections;                                             // 0x0110(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0120(0x0010) MISSED OFFSET
	TArray<struct FAnimNotifyEvent>                    ActiveStateBranchingPoints;                               // 0x0130(0x0010) (ZeroConstructor, Transient)
	float                                              Position;                                                 // 0x0140(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              PlayRate;                                                 // 0x0144(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FAlphaBlend                                 Blend;                                                    // 0x0148(0x0038) (Transient)
	unsigned char                                      UnknownData04[0x20];                                      // 0x0180(0x0020) MISSED OFFSET
	int                                                DisableRootMotionCount;                                   // 0x01A0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2C];                                      // 0x01A4(0x002C) MISSED OFFSET
};
// ScriptStruct Engine.BranchingPointMarker
// 0x000C
struct FBranchingPointMarker
{
	int                                                NotifyIndex;                                              // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TriggerTime;                                              // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAnimNotifyEventType>                  NotifyEventType;                                          // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.BranchingPoint
// 0x0010 (0x0040 - 0x0030)
struct FBranchingPoint : public FAnimLinkableElement
{
	struct FName                                       EventName;                                                // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DisplayTime;                                              // 0x0038(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              TriggerTimeOffset;                                        // 0x003C(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.SlotAnimationTrack
// 0x0018
struct FSlotAnimationTrack
{
	struct FName                                       SlotName;                                                 // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAnimTrack                                  AnimTrack;                                                // 0x0008(0x0010) (Edit)
};
// ScriptStruct Engine.CompositeSection
// 0x0028 (0x0058 - 0x0030)
struct FCompositeSection : public FAnimLinkableElement
{
	struct FName                                       SectionName;                                              // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StartTime;                                                // 0x0038(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	struct FName                                       NextSectionName;                                          // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UAnimMetaData*>                       MetaData;                                                 // 0x0048(0x0010) (Edit, ExportObject, ZeroConstructor)
};
// ScriptStruct Engine.NavAvoidanceMask
// 0x0004
struct FNavAvoidanceMask
{
	unsigned char                                      bGroup0 : 1;                                              // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup1 : 1;                                              // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup2 : 1;                                              // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup3 : 1;                                              // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup4 : 1;                                              // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup5 : 1;                                              // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup6 : 1;                                              // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup7 : 1;                                              // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0001(0x0001)
	unsigned char                                      bGroup8 : 1;                                              // 0x0001(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup9 : 1;                                              // 0x0001(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup10 : 1;                                             // 0x0001(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup11 : 1;                                             // 0x0001(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup12 : 1;                                             // 0x0001(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup13 : 1;                                             // 0x0001(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup14 : 1;                                             // 0x0001(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup15 : 1;                                             // 0x0001(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0002(0x0001)
	unsigned char                                      bGroup16 : 1;                                             // 0x0002(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup17 : 1;                                             // 0x0002(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup18 : 1;                                             // 0x0002(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup19 : 1;                                             // 0x0002(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup20 : 1;                                             // 0x0002(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup21 : 1;                                             // 0x0002(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup22 : 1;                                             // 0x0002(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup23 : 1;                                             // 0x0002(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02 : 8;                                        // 0x0003(0x0001)
	unsigned char                                      bGroup24 : 1;                                             // 0x0003(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup25 : 1;                                             // 0x0003(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup26 : 1;                                             // 0x0003(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup27 : 1;                                             // 0x0003(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup28 : 1;                                             // 0x0003(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup29 : 1;                                             // 0x0003(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup30 : 1;                                             // 0x0003(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGroup31 : 1;                                             // 0x0003(0x0001) (Edit, BlueprintVisible)
};
// ScriptStruct Engine.CharacterMovementComponentPostPhysicsTickFunction
// 0x0008 (0x0058 - 0x0050)
struct FCharacterMovementComponentPostPhysicsTickFunction : public FTickFunction
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.FindFloorResult
// 0x0098
struct FFindFloorResult
{
	unsigned char                                      bBlockingHit : 1;                                         // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst)
	unsigned char                                      bWalkableFloor : 1;                                       // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst)
	unsigned char                                      bLineTrace : 1;                                           // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              FloorDist;                                                // 0x0004(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	float                                              LineDist;                                                 // 0x0008(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FHitResult                                  HitResult;                                                // 0x0010(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst, IsPlainOldData)
};
// ScriptStruct Engine.AnimNode_AssetPlayerBase
// 0x0028 (0x0058 - 0x0030)
struct FAnimNode_AssetPlayerBase : public FAnimNode_Base
{
	unsigned char                                      bIgnoreForRelevancyTest : 1;                              // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                GroupIndex;                                               // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAnimGroupRole>                        GroupRole;                                                // 0x0038(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              BlendWeight;                                              // 0x003C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	float                                              InternalTimeAccumulator;                                  // 0x0040(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x14];                                      // 0x0044(0x0014) MISSED OFFSET
};
// ScriptStruct Engine.AnimNode_Base
// 0x0030
struct FAnimNode_Base
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	struct FExposedValueHandler                        EvaluateGraphExposedInputs;                               // 0x0008(0x0028)
};
// ScriptStruct Engine.ExposedValueHandler
// 0x0028
struct FExposedValueHandler
{
	struct FName                                       BoundFunction;                                            // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FExposedValueCopyRecord>             CopyRecords;                                              // 0x0008(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0018(0x0010) MISSED OFFSET
};
// ScriptStruct Engine.ExposedValueCopyRecord
// 0x0080
struct FExposedValueCopyRecord
{
	class UProperty*                                   SourceProperty;                                           // 0x0000(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	struct FName                                       SourcePropertyName;                                       // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       SourceSubPropertyName;                                    // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                SourceArrayIndex;                                         // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	class UProperty*                                   DestProperty;                                             // 0x0020(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                DestArrayIndex;                                           // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Size;                                                     // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bInstanceIsTarget : 1;                                    // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData)
	EPostCopyOperation                                 PostCopyOperation;                                        // 0x0031(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
	class UBoolProperty*                               CachedBoolSourceProperty;                                 // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UBoolProperty*                               CachedBoolDestProperty;                                   // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UStructProperty*                             CachedStructDestProperty;                                 // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UObjectProperty*                             CachedObjectSourceProperty;                               // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UProperty*                                   CachedObjectSubProperty;                                  // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0060(0x0020) MISSED OFFSET
};
// ScriptStruct Engine.PoseLink
// 0x0000 (0x0018 - 0x0018)
struct FPoseLink : public FPoseLinkBase
{
};
// ScriptStruct Engine.PoseLinkBase
// 0x0018
struct FPoseLinkBase
{
	int                                                LinkID;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x14];                                      // 0x0004(0x0014) MISSED OFFSET
};
// ScriptStruct Engine.InputScaleBiasClamp
// 0x0030
struct FInputScaleBiasClamp
{
	unsigned char                                      bMapRange : 1;                                            // 0x0000(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0001(0x0001)
	unsigned char                                      bClampResult : 1;                                         // 0x0001(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0002(0x0001)
	unsigned char                                      bInterpResult : 1;                                        // 0x0002(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x0003(0x0001)
	unsigned char                                      bInitialized : 1;                                         // 0x0003(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	struct FInputRange                                 InRange;                                                  // 0x0004(0x0008) (Edit, BlueprintVisible)
	struct FInputRange                                 OutRange;                                                 // 0x000C(0x0008) (Edit, BlueprintVisible)
	float                                              Scale;                                                    // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Bias;                                                     // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ClampMin;                                                 // 0x001C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ClampMax;                                                 // 0x0020(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InterpSpeedIncreasing;                                    // 0x0024(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InterpSpeedDecreasing;                                    // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InterpolatedResult;                                       // 0x002C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
};
// ScriptStruct Engine.InputRange
// 0x0008
struct FInputRange
{
	float                                              Min;                                                      // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Max;                                                      // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.InputAlphaBoolBlend
// 0x0050
struct FInputAlphaBoolBlend
{
	float                                              BlendInTime;                                              // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlendOutTime;                                             // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EAlphaBlendOption                                  BlendOption;                                              // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bInitialized : 1;                                         // 0x0009(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x000A(0x0006) MISSED OFFSET
	class UCurveFloat*                                 CustomCurve;                                              // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FAlphaBlend                                 AlphaBlend;                                               // 0x0018(0x0038) (Transient)
};
// ScriptStruct Engine.InputScaleBias
// 0x0008
struct FInputScaleBias
{
	float                                              Scale;                                                    // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Bias;                                                     // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.InputBlendPose
// 0x0010
struct FInputBlendPose
{
	TArray<struct FBranchFilter>                       BranchFilters;                                            // 0x0000(0x0010) (Edit, ZeroConstructor)
};
// ScriptStruct Engine.BranchFilter
// 0x0010
struct FBranchFilter
{
	struct FName                                       BoneName;                                                 // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                BlendDepth;                                               // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.AnimInstanceProxy
// 0x0520
struct FAnimInstanceProxy
{
	unsigned char                                      UnknownData00[0x520];                                     // 0x0000(0x0520) MISSED OFFSET
};
// ScriptStruct Engine.ComponentSpacePoseLink
// 0x0000 (0x0018 - 0x0018)
struct FComponentSpacePoseLink : public FPoseLinkBase
{
};
// ScriptStruct Engine.DrawToRenderTargetContext
// 0x0010
struct FDrawToRenderTargetContext
{
	class UTextureRenderTarget2D*                      RenderTarget;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0008(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.BlueprintCookedComponentInstancingData
// 0x0050
struct FBlueprintCookedComponentInstancingData
{
	unsigned char                                      bIsValid : 1;                                             // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<struct FBlueprintComponentChangedPropertyInfo> ChangedPropertyList;                                      // 0x0008(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x38];                                      // 0x0018(0x0038) MISSED OFFSET
};
// ScriptStruct Engine.BlueprintComponentChangedPropertyInfo
// 0x0018
struct FBlueprintComponentChangedPropertyInfo
{
	struct FName                                       PropertyName;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                ArrayIndex;                                               // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	class UStruct*                                     PropertyScope;                                            // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.EventGraphFastCallPair
// 0x0010
struct FEventGraphFastCallPair
{
	class UFunction*                                   FunctionToPatch;                                          // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                EventGraphCallOffset;                                     // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.BlueprintDebugData
// 0x0001
struct FBlueprintDebugData
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};
// ScriptStruct Engine.PointerToUberGraphFrame
// 0x0008
struct FPointerToUberGraphFrame
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.DebuggingInfoForSingleFunction
// 0x01E0
struct FDebuggingInfoForSingleFunction
{
	unsigned char                                      UnknownData00[0x1E0];                                     // 0x0000(0x01E0) MISSED OFFSET
};
// ScriptStruct Engine.NodeToCodeAssociation
// 0x0014
struct FNodeToCodeAssociation
{
	unsigned char                                      UnknownData00[0x14];                                      // 0x0000(0x0014) MISSED OFFSET
};
// ScriptStruct Engine.AnimBlueprintDebugData
// 0x0001
struct FAnimBlueprintDebugData
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};
// ScriptStruct Engine.AnimationFrameSnapshot
// 0x0001
struct FAnimationFrameSnapshot
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};
// ScriptStruct Engine.StateMachineDebugData
// 0x00B0
struct FStateMachineDebugData
{
	unsigned char                                      UnknownData00[0xB0];                                      // 0x0000(0x00B0) MISSED OFFSET
};
// ScriptStruct Engine.KShapeElem
// 0x0020
struct FKShapeElem
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x0000(0x0020) MISSED OFFSET
};
// ScriptStruct Engine.KConvexElem
// 0x0070 (0x0090 - 0x0020)
struct FKConvexElem : public FKShapeElem
{
	TArray<struct FVector>                             VertexData;                                               // 0x0020(0x0010) (ZeroConstructor)
	struct FBox                                        ElemBox;                                                  // 0x0030(0x001C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	struct FTransform                                  Transform;                                                // 0x0050(0x0030) (IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0080(0x0010) MISSED OFFSET
};
// ScriptStruct Engine.KBoxElem
// 0x0080 (0x00A0 - 0x0020)
struct FKBoxElem : public FKShapeElem
{
	struct FMatrix                                     TM;                                                       // 0x0020(0x0040) (ZeroConstructor, Deprecated, IsPlainOldData)
	struct FQuat                                       Orientation;                                              // 0x0060(0x0010) (Deprecated, IsPlainOldData)
	struct FVector                                     Center;                                                   // 0x0070(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x007C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              X;                                                        // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Z;                                                        // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0094(0x000C) MISSED OFFSET
};
// ScriptStruct Engine.KSphereElem
// 0x0050 (0x0070 - 0x0020)
struct FKSphereElem : public FKShapeElem
{
	struct FMatrix                                     TM;                                                       // 0x0020(0x0040) (ZeroConstructor, Deprecated, IsPlainOldData)
	struct FVector                                     Center;                                                   // 0x0060(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.KSphylElem
// 0x0070 (0x0090 - 0x0020)
struct FKSphylElem : public FKShapeElem
{
	struct FMatrix                                     TM;                                                       // 0x0020(0x0040) (ZeroConstructor, Deprecated, IsPlainOldData)
	struct FQuat                                       Orientation;                                              // 0x0060(0x0010) (Deprecated, IsPlainOldData)
	struct FVector                                     Center;                                                   // 0x0070(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x007C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Length;                                                   // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.KAggregateGeom
// 0x0048
struct FKAggregateGeom
{
	TArray<struct FKSphereElem>                        SphereElems;                                              // 0x0000(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TArray<struct FKBoxElem>                           BoxElems;                                                 // 0x0010(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TArray<struct FKSphylElem>                         SphylElems;                                               // 0x0020(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TArray<struct FKConvexElem>                        ConvexElems;                                              // 0x0030(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.AggregateGeometry2D
// 0x0030
struct FAggregateGeometry2D
{
	TArray<struct FCircleElement2D>                    CircleElements;                                           // 0x0000(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TArray<struct FBoxElement2D>                       BoxElements;                                              // 0x0010(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TArray<struct FConvexElement2D>                    ConvexElements;                                           // 0x0020(0x0010) (Edit, EditFixedSize, ZeroConstructor)
};
// ScriptStruct Engine.ConvexElement2D
// 0x0010
struct FConvexElement2D
{
	TArray<struct FVector2D>                           VertexData;                                               // 0x0000(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.BoxElement2D
// 0x0014
struct FBoxElement2D
{
	struct FVector2D                                   Center;                                                   // 0x0000(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              Width;                                                    // 0x0008(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              Height;                                                   // 0x000C(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              Angle;                                                    // 0x0010(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
};
// ScriptStruct Engine.CircleElement2D
// 0x000C
struct FCircleElement2D
{
	struct FVector2D                                   Center;                                                   // 0x0000(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              Radius;                                                   // 0x0008(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
};
// ScriptStruct Engine.PhysicalAnimationProfile
// 0x0030
struct FPhysicalAnimationProfile
{
	struct FName                                       ProfileName;                                              // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FPhysicalAnimationData                      PhysicalAnimationData;                                    // 0x0008(0x0028) (Edit)
};
// ScriptStruct Engine.BuilderPoly
// 0x0028
struct FBuilderPoly
{
	TArray<int>                                        VertexIndices;                                            // 0x0000(0x0010) (ZeroConstructor)
	int                                                Direction;                                                // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FName                                       ItemName;                                                 // 0x0018(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                PolyFlags;                                                // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.WrappedStringElement
// 0x0018
struct FWrappedStringElement
{
	struct FString                                     Value;                                                    // 0x0000(0x0010) (ZeroConstructor)
	struct FVector2D                                   LineExtent;                                               // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.TextSizingParameters
// 0x0028
struct FTextSizingParameters
{
	float                                              DrawX;                                                    // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DrawY;                                                    // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DrawXL;                                                   // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DrawYL;                                                   // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Scaling;                                                  // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFont*                                       DrawFont;                                                 // 0x0018(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   SpacingAdjust;                                            // 0x0020(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.CanvasIcon
// 0x0018
struct FCanvasIcon
{
	class UTexture*                                    Texture;                                                  // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              U;                                                        // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              V;                                                        // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              UL;                                                       // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VL;                                                       // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.AutoCompleteNode
// 0x0028
struct FAutoCompleteNode
{
	int                                                IndexChar;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<int>                                        AutoCompleteListIndices;                                  // 0x0008(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0018(0x0010) MISSED OFFSET
};
// ScriptStruct Engine.RuntimeCurveLinearColor
// 0x01C8
struct FRuntimeCurveLinearColor
{
	struct FRichCurve                                  ColorCurves[0x4];                                         // 0x0000(0x0070)
	class UCurveLinearColor*                           ExternalCurve;                                            // 0x01C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.NamedCurveValue
// 0x0010
struct FNamedCurveValue
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.CurveTableRowHandle
// 0x0010
struct FCurveTableRowHandle
{
	class UCurveTable*                                 CurveTable;                                               // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FName                                       RowName;                                                  // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.PreviewMeshCollectionEntry
// 0x0020
struct FPreviewMeshCollectionEntry
{
	TAssetPtr<classUSkeletalMesh>                      SkeletalMesh;                                             // 0x0000(0x0020) (Edit)
};
// ScriptStruct Engine.DestructibleChunkParameters
// 0x0004
struct FDestructibleChunkParameters
{
	unsigned char                                      bIsSupportChunk : 1;                                      // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0001(0x0001)
	unsigned char                                      bDoNotFracture : 1;                                       // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0002(0x0001)
	unsigned char                                      bDoNotDamage : 1;                                         // 0x0002(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x0003(0x0001)
	unsigned char                                      bDoNotCrumble : 1;                                        // 0x0003(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.FractureMaterial
// 0x0024
struct FFractureMaterial
{
	struct FVector2D                                   UVScale;                                                  // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   UVOffset;                                                 // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Tangent;                                                  // 0x0010(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UAngle;                                                   // 0x001C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                InteriorElementIndex;                                     // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.PrimaryAssetRulesOverride
// 0x0020
struct FPrimaryAssetRulesOverride
{
	struct FPrimaryAssetId                             PrimaryAssetId;                                           // 0x0000(0x0010) (Edit, ZeroConstructor)
	struct FPrimaryAssetRules                          Rules;                                                    // 0x0010(0x0010) (Edit)
};
// ScriptStruct Engine.AssetManagerRedirect
// 0x0020
struct FAssetManagerRedirect
{
	struct FString                                     Old;                                                      // 0x0000(0x0010) (Edit, ZeroConstructor)
	struct FString                                     New;                                                      // 0x0010(0x0010) (Edit, ZeroConstructor)
};
// ScriptStruct Engine.AudioQualitySettings
// 0x0020
struct FAudioQualitySettings
{
	struct FText                                       DisplayName;                                              // 0x0000(0x0018) (Edit)
	int                                                MaxChannels;                                              // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.PhysicalSurfaceName
// 0x0010
struct FPhysicalSurfaceName
{
	TEnumAsByte<EPhysicalSurface>                      Type;                                                     // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       Name;                                                     // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.HardwareCursorReference
// 0x0010
struct FHardwareCursorReference
{
	struct FName                                       CursorPath;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   HotSpot;                                                  // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.DialogueContextMapping
// 0x0038
struct FDialogueContextMapping
{
	struct FDialogueContext                            Context;                                                  // 0x0000(0x0018) (Edit)
	class USoundWave*                                  SoundWave;                                                // 0x0018(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FString                                     LocalizationKeyFormat;                                    // 0x0020(0x0010) (Edit, ZeroConstructor)
	class UDialogueSoundWaveProxy*                     Proxy;                                                    // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
};
// ScriptStruct Engine.RawDistributionFloat
// 0x0010 (0x0038 - 0x0028)
struct FRawDistributionFloat : public FRawDistribution
{
	float                                              MinValue;                                                 // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxValue;                                                 // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	class UDistributionFloat*                          Distribution;                                             // 0x0030(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, NoClear, IsPlainOldData)
};
// ScriptStruct Engine.RawDistributionVector
// 0x0028 (0x0050 - 0x0028)
struct FRawDistributionVector : public FRawDistribution
{
	float                                              MinValue;                                                 // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxValue;                                                 // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     MinValueVec;                                              // 0x0030(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     MaxValueVec;                                              // 0x003C(0x000C) (ZeroConstructor, IsPlainOldData)
	class UDistributionVector*                         Distribution;                                             // 0x0048(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, NoClear, IsPlainOldData)
};
// ScriptStruct Engine.BlueprintComponentDelegateBinding
// 0x0018
struct FBlueprintComponentDelegateBinding
{
	struct FName                                       ComponentPropertyName;                                    // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       DelegatePropertyName;                                     // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       FunctionNameToBind;                                       // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.BlueprintInputDelegateBinding
// 0x0004
struct FBlueprintInputDelegateBinding
{
	unsigned char                                      bConsumeInput : 1;                                        // 0x0000(0x0001)
	unsigned char                                      bExecuteWhenPaused : 1;                                   // 0x0000(0x0001)
	unsigned char                                      bOverrideParentBinding : 1;                               // 0x0000(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.BlueprintInputActionDelegateBinding
// 0x001C (0x0020 - 0x0004)
struct FBlueprintInputActionDelegateBinding : public FBlueprintInputDelegateBinding
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       InputActionName;                                          // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EInputEvent>                           InputKeyEvent;                                            // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	struct FName                                       FunctionNameToBind;                                       // 0x0018(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.BlueprintInputAxisDelegateBinding
// 0x0014 (0x0018 - 0x0004)
struct FBlueprintInputAxisDelegateBinding : public FBlueprintInputDelegateBinding
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       InputAxisName;                                            // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       FunctionNameToBind;                                       // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.BlueprintInputAxisKeyDelegateBinding
// 0x0024 (0x0028 - 0x0004)
struct FBlueprintInputAxisKeyDelegateBinding : public FBlueprintInputDelegateBinding
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FKey                                        AxisKey;                                                  // 0x0008(0x0018)
	struct FName                                       FunctionNameToBind;                                       // 0x0020(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.BlueprintInputKeyDelegateBinding
// 0x0034 (0x0038 - 0x0004)
struct FBlueprintInputKeyDelegateBinding : public FBlueprintInputDelegateBinding
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FInputChord                                 InputChord;                                               // 0x0008(0x0020)
	TEnumAsByte<EInputEvent>                           InputKeyEvent;                                            // 0x0028(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FName                                       FunctionNameToBind;                                       // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.BlueprintInputTouchDelegateBinding
// 0x000C (0x0010 - 0x0004)
struct FBlueprintInputTouchDelegateBinding : public FBlueprintInputDelegateBinding
{
	TEnumAsByte<EInputEvent>                           InputKeyEvent;                                            // 0x0004(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	struct FName                                       FunctionNameToBind;                                       // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.GraphReference
// 0x0020
struct FGraphReference
{
	class UEdGraph*                                    MacroGraph;                                               // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	class UBlueprint*                                  GraphBlueprint;                                           // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FGuid                                       GraphGuid;                                                // 0x0010(0x0010) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.EdGraphSchemaAction_NewNode
// 0x0008 (0x0108 - 0x0100)
struct FEdGraphSchemaAction_NewNode : public FEdGraphSchemaAction
{
	class UEdGraphNode*                                NodeTemplate;                                             // 0x0100(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.EdGraphSchemaAction
// 0x0100
struct FEdGraphSchemaAction
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	struct FText                                       MenuDescription;                                          // 0x0008(0x0018)
	struct FText                                       TooltipDescription;                                       // 0x0020(0x0018)
	struct FText                                       Category;                                                 // 0x0038(0x0018)
	struct FText                                       Keywords;                                                 // 0x0050(0x0018)
	int                                                Grouping;                                                 // 0x0068(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                SectionID;                                                // 0x006C(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             MenuDescriptionArray;                                     // 0x0070(0x0010) (ZeroConstructor)
	TArray<struct FString>                             FullSearchTitlesArray;                                    // 0x0080(0x0010) (ZeroConstructor)
	TArray<struct FString>                             FullSearchKeywordsArray;                                  // 0x0090(0x0010) (ZeroConstructor)
	TArray<struct FString>                             FullSearchCategoryArray;                                  // 0x00A0(0x0010) (ZeroConstructor)
	TArray<struct FString>                             LocalizedMenuDescriptionArray;                            // 0x00B0(0x0010) (ZeroConstructor)
	TArray<struct FString>                             LocalizedFullSearchTitlesArray;                           // 0x00C0(0x0010) (ZeroConstructor)
	TArray<struct FString>                             LocalizedFullSearchKeywordsArray;                         // 0x00D0(0x0010) (ZeroConstructor)
	TArray<struct FString>                             LocalizedFullSearchCategoryArray;                         // 0x00E0(0x0010) (ZeroConstructor)
	struct FString                                     SearchText;                                               // 0x00F0(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.LandscapeOverrideData
// 0x0058
struct FLandscapeOverrideData
{
	class UMaterialInterface*                          Material;                                                 // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  Heightmap;                                                // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UTexture2D*>                          WeightMaps;                                               // 0x0010(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0020(0x0010) MISSED OFFSET
	TArray<class UPhysicalMaterial*>                   PhysicalMaterials;                                        // 0x0030(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0040(0x0018) MISSED OFFSET
};
// ScriptStruct Engine.LandscapeOverrideKey
// 0x0018
struct FLandscapeOverrideKey
{
	struct FGuid                                       LandscapeGuid;                                            // 0x0000(0x0010) (ZeroConstructor, IsPlainOldData)
	struct FIntPoint                                   ComponentId;                                              // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.LevelCollection
// 0x0080
struct FLevelCollection
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	class AGameStateBase*                              GameState;                                                // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	class UNetDriver*                                  NetDriver;                                                // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
	class UDemoNetDriver*                              DemoNetDriver;                                            // 0x0018(0x0008) (ZeroConstructor, IsPlainOldData)
	class ULevel*                                      PersistentLevel;                                          // 0x0020(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0028(0x0050) UNKNOWN PROPERTY: SetProperty Engine.LevelCollection.Levels
	unsigned char                                      UnknownData02[0x8];                                       // 0x0078(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.EndPhysicsTickFunction
// 0x0008 (0x0058 - 0x0050)
struct FEndPhysicsTickFunction : public FTickFunction
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.StartPhysicsTickFunction
// 0x0008 (0x0058 - 0x0050)
struct FStartPhysicsTickFunction : public FTickFunction
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.LevelViewportInfo
// 0x0020
struct FLevelViewportInfo
{
	struct FVector                                     CamPosition;                                              // 0x0000(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CamRotation;                                              // 0x000C(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              CamOrthoZoom;                                             // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      CamUpdated : 1;                                           // 0x001C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.PluginRedirect
// 0x0020
struct FPluginRedirect
{
	struct FString                                     OldPluginName;                                            // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     NewPluginName;                                            // 0x0010(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.StructRedirect
// 0x0010
struct FStructRedirect
{
	struct FName                                       OldStructName;                                            // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       NewStructName;                                            // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.ClassRedirect
// 0x0040
struct FClassRedirect
{
	struct FName                                       ObjectName;                                               // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       OldClassName;                                             // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       NewClassName;                                             // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       OldSubobjName;                                            // 0x0018(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       NewSubobjName;                                            // 0x0020(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       NewClassClass;                                            // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       NewClassPackage;                                          // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      InstanceOnly : 1;                                         // 0x0038(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.GameNameRedirect
// 0x0010
struct FGameNameRedirect
{
	struct FName                                       OldGameName;                                              // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       NewGameName;                                              // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.ScreenMessageString
// 0x0030
struct FScreenMessageString
{
	uint64_t                                           Key;                                                      // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FString                                     ScreenMessage;                                            // 0x0008(0x0010) (ZeroConstructor, Transient)
	struct FColor                                      DisplayColor;                                             // 0x0018(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              TimeToDisplay;                                            // 0x001C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              CurrentTimeDisplayed;                                     // 0x0020(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector2D                                   TextScale;                                                // 0x0024(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.DropNoteInfo
// 0x0028
struct FDropNoteInfo
{
	struct FVector                                     Location;                                                 // 0x0000(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x000C(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FString                                     Comment;                                                  // 0x0018(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.StatColorMapping
// 0x0028
struct FStatColorMapping
{
	struct FString                                     StatName;                                                 // 0x0000(0x0010) (ZeroConstructor, Config, GlobalConfig)
	TArray<struct FStatColorMapEntry>                  ColorMap;                                                 // 0x0010(0x0010) (ZeroConstructor, Config, GlobalConfig)
	unsigned char                                      DisableBlend : 1;                                         // 0x0020(0x0001) (Config, GlobalConfig)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.StatColorMapEntry
// 0x0008
struct FStatColorMapEntry
{
	float                                              In;                                                       // 0x0000(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	struct FColor                                      Out;                                                      // 0x0004(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
};
// ScriptStruct Engine.WorldContext
// 0x02A0
struct FWorldContext
{
	TArray<class UObjectReferencer*>                   ObjectReferencers;                                        // 0x0000(0x0010) (ZeroConstructor)
	TArray<struct FLevelStreamingStatus>               PendingLevelStreamingStatusUpdates;                       // 0x0010(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0020(0x0018) MISSED OFFSET
	class UGameInstance*                               OwningGameInstance;                                       // 0x0038(0x0008)
	unsigned char                                      UnknownData01[0xD0];                                      // 0x0040(0x00D0) MISSED OFFSET
	struct FURL                                        LastRemoteURL;                                            // 0x0110(0x0070)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0180(0x0010) MISSED OFFSET
	TArray<class ULevel*>                              LoadedLevelsForPendingMapChange;                          // 0x0190(0x0010) (ZeroConstructor)
	class UPendingNetGame*                             PendingNetGame;                                           // 0x01A0(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FNamedNetDriver>                     ActiveNetDrivers;                                         // 0x01A8(0x0010) (ZeroConstructor, Transient)
	TArray<struct FFullyLoadedPackagesInfo>            PackagesToFullyLoad;                                      // 0x01B8(0x0010) (ZeroConstructor)
	class UGameViewportClient*                         GameViewport;                                             // 0x01C8(0x0008)
	unsigned char                                      UnknownData03[0x10];                                      // 0x01D0(0x0010) MISSED OFFSET
	struct FURL                                        LastURL;                                                  // 0x01E0(0x0070)
	unsigned char                                      UnknownData04[0x50];                                      // 0x0250(0x0050) MISSED OFFSET
};
// ScriptStruct Engine.FullyLoadedPackagesInfo
// 0x0038
struct FFullyLoadedPackagesInfo
{
	TEnumAsByte<EFullyLoadPackageType>                 FullyLoadType;                                            // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FString                                     Tag;                                                      // 0x0008(0x0010) (ZeroConstructor)
	TArray<struct FName>                               PackagesToLoad;                                           // 0x0018(0x0010) (ZeroConstructor)
	TArray<class UObject*>                             LoadedObjects;                                            // 0x0028(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.NamedNetDriver
// 0x0010
struct FNamedNetDriver
{
	class UNetDriver*                                  NetDriver;                                                // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0008(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.LevelStreamingStatus
// 0x0010
struct FLevelStreamingStatus
{
	struct FName                                       PackageName;                                              // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bShouldBeLoaded : 1;                                      // 0x0008(0x0001)
	unsigned char                                      bShouldBeVisible : 1;                                     // 0x0008(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	uint32_t                                           LODIndex;                                                 // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.NetDriverDefinition
// 0x0018
struct FNetDriverDefinition
{
	struct FName                                       DefName;                                                  // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       DriverClassName;                                          // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       DriverClassNameFallback;                                  // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.ExtendedReflectionSharedCubemap
// 0x0030
struct FExtendedReflectionSharedCubemap
{
	int                                                CubemapSize;                                              // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	class UTextureCube*                                SourceCube;                                               // 0x0008(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FGuid                                       SourceId;                                                 // 0x0010(0x0010) (ZeroConstructor, IsPlainOldData)
	TArray<unsigned char>                              UncompressedFullHDR;                                      // 0x0020(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.FoliageBlockingVolumeInstance
// 0x0010
struct FFoliageBlockingVolumeInstance
{
	struct FName                                       LevelBlockId;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                BeginIndex;                                               // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                EndIndex;                                                 // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.FontImportOptionsData
// 0x00B0
struct FFontImportOptionsData
{
	struct FString                                     FontName;                                                 // 0x0000(0x0010) (Edit, ZeroConstructor)
	float                                              Height;                                                   // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnableAntialiasing : 1;                                  // 0x0014(0x0001) (Edit)
	unsigned char                                      bEnableBold : 1;                                          // 0x0014(0x0001) (Edit)
	unsigned char                                      bEnableItalic : 1;                                        // 0x0014(0x0001) (Edit)
	unsigned char                                      bEnableUnderline : 1;                                     // 0x0014(0x0001) (Edit)
	unsigned char                                      bAlphaOnly : 1;                                           // 0x0014(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	TEnumAsByte<EFontImportCharacterSet>               CharacterSet;                                             // 0x0018(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	struct FString                                     Chars;                                                    // 0x0020(0x0010) (Edit, ZeroConstructor)
	struct FString                                     UnicodeRange;                                             // 0x0030(0x0010) (Edit, ZeroConstructor)
	struct FString                                     CharsFilePath;                                            // 0x0040(0x0010) (Edit, ZeroConstructor)
	struct FString                                     CharsFileWildcard;                                        // 0x0050(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      bCreatePrintableOnly : 1;                                 // 0x0060(0x0001) (Edit)
	unsigned char                                      bIncludeASCIIRange : 1;                                   // 0x0060(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
	struct FLinearColor                                ForegroundColor;                                          // 0x0064(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnableDropShadow : 1;                                    // 0x0074(0x0001) (Edit)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0075(0x0003) MISSED OFFSET
	int                                                TexturePageWidth;                                         // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                TexturePageMaxHeight;                                     // 0x007C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                XPadding;                                                 // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                YPadding;                                                 // 0x0084(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ExtendBoxTop;                                             // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ExtendBoxBottom;                                          // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ExtendBoxRight;                                           // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ExtendBoxLeft;                                            // 0x0094(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnableLegacyMode : 1;                                    // 0x0098(0x0001) (Edit)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0099(0x0003) MISSED OFFSET
	int                                                Kerning;                                                  // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseDistanceFieldAlpha : 1;                               // 0x00A0(0x0001) (Edit)
	unsigned char                                      UnknownData05[0x3];                                       // 0x00A1(0x0003) MISSED OFFSET
	int                                                DistanceFieldScaleFactor;                                 // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DistanceFieldScanRadiusScale;                             // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.FontCharacter
// 0x0018
struct FFontCharacter
{
	int                                                StartU;                                                   // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                StartV;                                                   // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                USize;                                                    // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                VSize;                                                    // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      TextureIndex;                                             // 0x0010(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	int                                                VerticalOffset;                                           // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.ActiveHapticFeedbackEffect
// 0x0018
struct FActiveHapticFeedbackEffect
{
	class UHapticFeedbackEffect_Base*                  HapticEffect;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0008(0x0010) MISSED OFFSET
};
// ScriptStruct Engine.HapticFeedbackDetails_Curve
// 0x00F0
struct FHapticFeedbackDetails_Curve
{
	struct FRuntimeFloatCurve                          Frequency;                                                // 0x0000(0x0078) (Edit)
	struct FRuntimeFloatCurve                          Amplitude;                                                // 0x0078(0x0078) (Edit)
};
// ScriptStruct Engine.ComponentOverrideRecord
// 0x0080
struct FComponentOverrideRecord
{
	class UObject*                                     ComponentClass;                                           // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	class UActorComponent*                             ComponentTemplate;                                        // 0x0008(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FComponentKey                               ComponentKey;                                             // 0x0010(0x0020)
	struct FBlueprintCookedComponentInstancingData     CookedComponentInstancingData;                            // 0x0030(0x0050)
};
// ScriptStruct Engine.ComponentKey
// 0x0020
struct FComponentKey
{
	class UObject*                                     OwnerClass;                                               // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       SCSVariableName;                                          // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FGuid                                       AssociatedGuid;                                           // 0x0010(0x0010) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.CurveEdTab
// 0x0030
struct FCurveEdTab
{
	struct FString                                     TabName;                                                  // 0x0000(0x0010) (ZeroConstructor)
	TArray<struct FCurveEdEntry>                       Curves;                                                   // 0x0010(0x0010) (ZeroConstructor)
	float                                              ViewStartInput;                                           // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ViewEndInput;                                             // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ViewStartOutput;                                          // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ViewEndOutput;                                            // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.CurveEdEntry
// 0x0038
struct FCurveEdEntry
{
	class UObject*                                     CurveObject;                                              // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FColor                                      CurveColor;                                               // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FString                                     CurveName;                                                // 0x0010(0x0010) (ZeroConstructor)
	int                                                bHideCurve;                                               // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                bColorCurve;                                              // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                bFloatingPointColorCurve;                                 // 0x0028(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                bClamp;                                                   // 0x002C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ClampLow;                                                 // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ClampHigh;                                                // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.InterpEdSelKey
// 0x0018
struct FInterpEdSelKey
{
	class UInterpGroup*                                Group;                                                    // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	class UInterpTrack*                                Track;                                                    // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                KeyIndex;                                                 // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              UnsnappedPosition;                                        // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.CameraPreviewInfo
// 0x0030
struct FCameraPreviewInfo
{
	class APawn*                                       PawnClass;                                                // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               AnimSeq;                                                  // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x0010(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x001C(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	class APawn*                                       PawnInst;                                                 // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
};
// ScriptStruct Engine.SubTrackGroup
// 0x0028
struct FSubTrackGroup
{
	struct FString                                     GroupName;                                                // 0x0000(0x0010) (ZeroConstructor)
	TArray<int>                                        TrackIndices;                                             // 0x0010(0x0010) (ZeroConstructor)
	unsigned char                                      bIsCollapsed : 1;                                         // 0x0020(0x0001)
	unsigned char                                      bIsSelected : 1;                                          // 0x0020(0x0001) (Transient)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.SupportedSubTrackInfo
// 0x0020
struct FSupportedSubTrackInfo
{
	class UInterpTrack*                                SupportedClass;                                           // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     SubTrackName;                                             // 0x0008(0x0010) (ZeroConstructor)
	int                                                GroupIndex;                                               // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.BoolTrackKey
// 0x0008
struct FBoolTrackKey
{
	float                                              Time;                                                     // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      Value : 1;                                                // 0x0004(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.DirectorTrackCut
// 0x0018
struct FDirectorTrackCut
{
	float                                              Time;                                                     // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TransitionTime;                                           // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FName                                       TargetCamGroup;                                           // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ShotNumber;                                               // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.EventTrackKey
// 0x0010
struct FEventTrackKey
{
	float                                              Time;                                                     // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       EventName;                                                // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.AnimControlTrackKey
// 0x0020
struct FAnimControlTrackKey
{
	float                                              StartTime;                                                // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	class UAnimSequence*                               AnimSeq;                                                  // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              AnimStartOffset;                                          // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AnimEndOffset;                                            // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AnimPlayRate;                                             // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bLooping : 1;                                             // 0x001C(0x0001)
	unsigned char                                      bReverse : 1;                                             // 0x001C(0x0001)
	unsigned char                                      UnknownData01[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.InterpLookupTrack
// 0x0010
struct FInterpLookupTrack
{
	TArray<struct FInterpLookupPoint>                  Points;                                                   // 0x0000(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.InterpLookupPoint
// 0x0010
struct FInterpLookupPoint
{
	struct FName                                       GroupName;                                                // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              Time;                                                     // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.ParticleReplayTrackKey
// 0x000C
struct FParticleReplayTrackKey
{
	float                                              Time;                                                     // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                ClipIDNumber;                                             // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.ToggleTrackKey
// 0x0008
struct FToggleTrackKey
{
	float                                              Time;                                                     // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETrackToggleAction>                    ToggleAction;                                             // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.SoundTrackKey
// 0x0018
struct FSoundTrackKey
{
	float                                              Time;                                                     // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Volume;                                                   // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Pitch;                                                    // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	class USoundBase*                                  Sound;                                                    // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.VisibilityTrackKey
// 0x0008
struct FVisibilityTrackKey
{
	float                                              Time;                                                     // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EVisibilityTrackAction>                Action;                                                   // 0x0004(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EVisibilityTrackCondition>             ActiveCondition;                                          // 0x0005(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
};
// ScriptStruct Engine.LandscapeOverrideInstance
// 0x0038
struct FLandscapeOverrideInstance
{
	class ULevelBlockLandscapeContainer*               Container;                                                // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0008(0x0030) MISSED OFFSET
};
// ScriptStruct Engine.LevelBlockLandscapeData
// 0x0100
struct FLevelBlockLandscapeData
{
	struct FName                                       LevelBlockId;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0008(0x0008) MISSED OFFSET
	struct FTransform                                  Transform;                                                // 0x0010(0x0030) (IsPlainOldData)
	struct FIntPoint                                   Size;                                                     // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FIntPoint                                   BlendMaskSize;                                            // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bHasHeightmap : 1;                                        // 0x0050(0x0001)
	unsigned char                                      bHasBlendWeights : 1;                                     // 0x0050(0x0001)
	unsigned char                                      bHasVisibility : 1;                                       // 0x0050(0x0001)
	unsigned char                                      bHideFoliage : 1;                                         // 0x0050(0x0001)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	TArray<struct FName>                               LayerNames;                                               // 0x0058(0x0010) (ZeroConstructor)
	TArray<unsigned char>                              NoWeightBlendLayerIndices;                                // 0x0068(0x0010) (ZeroConstructor)
	TArray<class ULandscapeGrassType*>                 GrassTypes;                                               // 0x0078(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x78];                                      // 0x0088(0x0078) MISSED OFFSET
};
// ScriptStruct Engine.LayerActorStats
// 0x0010
struct FLayerActorStats
{
	class UObject*                                     Type;                                                     // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                Total;                                                    // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.DecalVariant
// 0x0020
struct FDecalVariant
{
	struct FVector                                     DecalSize;                                                // 0x0000(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	class UMaterialInterface*                          DecalMaterial;                                            // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                SortOrder;                                                // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsGraffitiDecal : 1;                                     // 0x001C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.GrassVolumeInstance
// 0x0030
struct FGrassVolumeInstance
{
	struct FName                                       LevelBlockId;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FGrassBoxVolumeData                         Volume;                                                   // 0x0008(0x0024)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.LevelBlockSpawnPointInstance
// 0x0040
struct FLevelBlockSpawnPointInstance
{
	struct FName                                       LevelBlockId;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           TypeId;                                                   // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRandomizeRotation : 1;                                   // 0x000C(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	struct FTransform                                  Transform;                                                // 0x0010(0x0030) (IsPlainOldData)
};
// ScriptStruct Engine.LevelBlockSpawnPointTypes
// 0x0008
struct FLevelBlockSpawnPointTypes
{
	class ULevelBlockType*                             LevelBlockType;                                           // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.MinimapLabelInstance
// 0x0050
struct FMinimapLabelInstance
{
	struct FName                                       LevelBlockId;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMinimapLabelData*                           Data;                                                     // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Offset;                                                   // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0018(0x0008) MISSED OFFSET
	struct FTransform                                  Transform;                                                // 0x0020(0x0030) (IsPlainOldData)
};
// ScriptStruct Engine.MinimapObjectInstance
// 0x0040
struct FMinimapObjectInstance
{
	struct FName                                       LevelBlockId;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMinimapObjectData*                          Data;                                                     // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FTransform                                  Transform;                                                // 0x0010(0x0030) (IsPlainOldData)
};
// ScriptStruct Engine.NavigationDataInstance
// 0x00B0
struct FNavigationDataInstance
{
	struct FString                                     LevelBlockId;                                             // 0x0000(0x0010) (ZeroConstructor)
	struct FTransform                                  LevelBlockTransform;                                      // 0x0010(0x0030) (IsPlainOldData)
	struct FString                                     NavDataFileStr;                                           // 0x0040(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
	TMap<struct FVector, struct FString>               ChildLevelBlock;                                          // 0x0058(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x00A8(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.LevelBlockDataInstance
// 0x00A0
struct FLevelBlockDataInstance
{
	struct FString                                     LevelBlockId;                                             // 0x0000(0x0010) (ZeroConstructor)
	struct FTransform                                  LevelBlockTransform;                                      // 0x0010(0x0030) (IsPlainOldData)
	struct FString                                     ParentLevelBlockID;                                       // 0x0040(0x0010) (ZeroConstructor)
	struct FTransform                                  ParentLevelBlockTransform;                                // 0x0050(0x0030) (IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0080(0x0020) MISSED OFFSET
};
// ScriptStruct Engine.NavigationDataVariant
// 0x0060
struct FNavigationDataVariant
{
	unsigned char                                      UnknownData00[0x60];                                      // 0x0000(0x0060) MISSED OFFSET
};
// ScriptStruct Engine.PointLightVariant
// 0x00B0
struct FPointLightVariant
{
	unsigned char                                      bIsSpotLight : 1;                                         // 0x0000(0x0001)
	unsigned char                                      bUseTemperature : 1;                                      // 0x0000(0x0001)
	unsigned char                                      CastTranslucentShadows : 1;                               // 0x0000(0x0001)
	unsigned char                                      bCastShadowsFromCinematicObjectsOnly : 1;                 // 0x0000(0x0001)
	unsigned char                                      bAffectDynamicIndirectLighting : 1;                       // 0x0000(0x0001)
	unsigned char                                      LightingChannel0 : 1;                                     // 0x0000(0x0001)
	unsigned char                                      LightingChannel1 : 1;                                     // 0x0000(0x0001)
	unsigned char                                      LightingChannel2 : 1;                                     // 0x0000(0x0001)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0001(0x0001)
	unsigned char                                      bUseIESBrightness : 1;                                    // 0x0001(0x0001)
	unsigned char                                      bEnableLightShaftBloom : 1;                               // 0x0001(0x0001)
	unsigned char                                      bUseRayTracedDistanceFieldShadows : 1;                    // 0x0001(0x0001)
	unsigned char                                      bUseInverseSquaredFalloff : 1;                            // 0x0001(0x0001)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0002(0x0006) MISSED OFFSET
	TAssetPtr<classUMaterialInterface>                 LightFunctionMaterial;                                    // 0x0008(0x0020)
	TAssetPtr<classUTextureLightProfile>               IESTexture;                                               // 0x0028(0x0020)
	float                                              Temperature;                                              // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxDrawDistance;                                          // 0x004C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxDistanceFadeRange;                                     // 0x0050(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MinRoughness;                                             // 0x0054(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ShadowResolutionScale;                                    // 0x0058(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ShadowBias;                                               // 0x005C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ShadowSharpen;                                            // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ContactShadowLength;                                      // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     LightFunctionScale;                                       // 0x0068(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              LightFunctionFadeDistance;                                // 0x0074(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              IESBrightnessScale;                                       // 0x0078(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DisabledBrightness;                                       // 0x007C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BloomScale;                                               // 0x0080(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              BloomThreshold;                                           // 0x0084(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FColor                                      BloomTint;                                                // 0x0088(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RayStartOffsetDepthScale;                                 // 0x008C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              AttenuationRadius;                                        // 0x0090(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LightFalloffExponent;                                     // 0x0094(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SourceRadius;                                             // 0x0098(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SourceLength;                                             // 0x009C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              InnerConeAngle;                                           // 0x00A0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              OuterConeAngle;                                           // 0x00A4(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LightShaftConeAngle;                                      // 0x00A8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.StaticMeshInstance
// 0x0050
struct FStaticMeshInstance
{
	struct FTransform                                  Transform;                                                // 0x0000(0x0030) (IsPlainOldData)
	float                                              LandscapeOffset;                                          // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ALPHA;                                                    // 0x0034(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0038(0x0008) MISSED OFFSET
	struct FVector4                                    CustomData;                                               // 0x0040(0x0010) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.StaticMeshVariant
// 0x0078
struct FStaticMeshVariant
{
	TAssetPtr<classUStaticMesh>                        Mesh;                                                     // 0x0000(0x0020)
	TArray<TAssetPtr<classUMaterialInterface>>         MaterialOverrides;                                        // 0x0020(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x1C];                                      // 0x0030(0x001C) MISSED OFFSET
	float                                              CachedMaxDrawDistance;                                    // 0x004C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bImportantMesh : 1;                                       // 0x0050(0x0001)
	unsigned char                                      bOverrideCullingDistances : 1;                            // 0x0050(0x0001)
	unsigned char                                      LightingChannel0 : 1;                                     // 0x0050(0x0001)
	unsigned char                                      LightingChannel1 : 1;                                     // 0x0050(0x0001)
	unsigned char                                      LightingChannel2 : 1;                                     // 0x0050(0x0001)
	unsigned char                                      bIsFoliage : 1;                                           // 0x0050(0x0001)
	unsigned char                                      bSnapToGround : 1;                                        // 0x0050(0x0001)
	TEnumAsByte<EIndoorOutdoorMask>                    IndoorOutdoorMask;                                        // 0x0051(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionChannel>                     CollisionChannel;                                         // 0x0052(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionEnabled>                     CollisionEnabled;                                         // 0x0053(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	TArray<struct FResponseChannel>                    ChannelResponses;                                         // 0x0058(0x0010) (ZeroConstructor)
	struct FName                                       CollisionProfileName;                                     // 0x0068(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                MeshSize;                                                 // 0x0070(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.ClientReceiveData
// 0x0040
struct FClientReceiveData
{
	class APlayerController*                           LocalPC;                                                  // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       MessageType;                                              // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                MessageIndex;                                             // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FString                                     MessageString;                                            // 0x0018(0x0010) (ZeroConstructor)
	class APlayerState*                                RelatedPlayerState;                                       // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	class APlayerState*                                RelatedPlayerState02;                                     // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
	class UObject*                                     OptionalObject;                                           // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.CustomInput
// 0x0048
struct FCustomInput
{
	struct FString                                     InputName;                                                // 0x0000(0x0010) (Edit, ZeroConstructor)
	struct FExpressionInput                            Input;                                                    // 0x0010(0x0038)
};
// ScriptStruct Engine.FunctionExpressionOutput
// 0x0040
struct FFunctionExpressionOutput
{
	class UMaterialExpressionFunctionOutput*           ExpressionOutput;                                         // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FGuid                                       ExpressionOutputId;                                       // 0x0008(0x0010) (ZeroConstructor, IsPlainOldData)
	struct FExpressionOutput                           Output;                                                   // 0x0018(0x0028) (ZeroConstructor)
};
// ScriptStruct Engine.FunctionExpressionInput
// 0x0050
struct FFunctionExpressionInput
{
	class UMaterialExpressionFunctionInput*            ExpressionInput;                                          // 0x0000(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FGuid                                       ExpressionInputId;                                        // 0x0008(0x0010) (ZeroConstructor, IsPlainOldData)
	struct FExpressionInput                            Input;                                                    // 0x0018(0x0038)
};
// ScriptStruct Engine.TerrainLayerHeight
// 0x0128
struct FTerrainLayerHeight
{
	struct FString                                     LayerName;                                                // 0x0000(0x0010) (Edit, ZeroConstructor)
	struct FExpressionInput                            Weight;                                                   // 0x0010(0x0038)
	struct FExpressionInput                            UV;                                                       // 0x0048(0x0038)
	struct FExpressionInput                            UV_Far;                                                   // 0x0080(0x0038)
	struct FExpressionInput                            DiffuseTexture;                                           // 0x00B8(0x0038)
	struct FExpressionInput                            NormalTexture;                                            // 0x00F0(0x0038)
};
// ScriptStruct Engine.TerrainLayerDesert
// 0x0128
struct FTerrainLayerDesert
{
	struct FString                                     LayerName;                                                // 0x0000(0x0010) (Edit, ZeroConstructor)
	struct FExpressionInput                            Weight;                                                   // 0x0010(0x0038)
	struct FExpressionInput                            UV;                                                       // 0x0048(0x0038)
	struct FExpressionInput                            DiffuseTexture;                                           // 0x0080(0x0038)
	struct FExpressionInput                            NormalTexture;                                            // 0x00B8(0x0038)
	struct FExpressionInput                            Specular;                                                 // 0x00F0(0x0038)
};
// ScriptStruct Engine.TerrainLayer
// 0x00F0
struct FTerrainLayer
{
	struct FString                                     LayerName;                                                // 0x0000(0x0010) (Edit, ZeroConstructor)
	struct FExpressionInput                            Weight;                                                   // 0x0010(0x0038)
	struct FExpressionInput                            UV;                                                       // 0x0048(0x0038)
	struct FExpressionInput                            DiffuseTexture;                                           // 0x0080(0x0038)
	struct FExpressionInput                            NormalTexture;                                            // 0x00B8(0x0038)
};
// ScriptStruct Engine.MaterialParameterCollectionInfo
// 0x0018
struct FMaterialParameterCollectionInfo
{
	struct FGuid                                       StateId;                                                  // 0x0000(0x0010) (ZeroConstructor, IsPlainOldData)
	class UMaterialParameterCollection*                ParameterCollection;                                      // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.MaterialFunctionInfo
// 0x0018
struct FMaterialFunctionInfo
{
	struct FGuid                                       StateId;                                                  // 0x0000(0x0010) (ZeroConstructor, IsPlainOldData)
	class UMaterialFunction*                           Function;                                                 // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.MaterialInstanceBasePropertyOverrides
// 0x0024
struct FMaterialInstanceBasePropertyOverrides
{
	unsigned char                                      bOverride_OpacityMaskClipValue : 1;                       // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0001(0x0001)
	unsigned char                                      bOverride_BlendMode : 1;                                  // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0002(0x0001)
	unsigned char                                      bOverride_ShadingModel : 1;                               // 0x0002(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x0003(0x0001)
	unsigned char                                      bOverride_PrepassMasked : 1;                              // 0x0003(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03 : 8;                                        // 0x0004(0x0001)
	unsigned char                                      bOverride_DitheredLODTransition : 1;                      // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04 : 8;                                        // 0x0005(0x0001)
	unsigned char                                      bOverride_TwoSided : 1;                                   // 0x0005(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	float                                              OpacityMaskClipValue;                                     // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBlendMode>                            BlendMode;                                                // 0x000C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMaterialShadingModel>                 ShadingModel;                                             // 0x000D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
	unsigned char                                      PrepassMasked : 1;                                        // 0x0010(0x0001) (Edit)
	unsigned char                                      TwoSided : 1;                                             // 0x0010(0x0001) (Edit)
	unsigned char                                      DitheredLODTransition : 1;                                // 0x0010(0x0001) (Edit)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	unsigned char                                      bOverride_bApplyMaterialClipVolumes : 1;                  // 0x0014(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08 : 8;                                        // 0x0015(0x0001)
	unsigned char                                      bOverride_MaterialClipVolumeTypes : 1;                    // 0x0015(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09 : 8;                                        // 0x0016(0x0001)
	unsigned char                                      bOverride_MaterialClipVolumeImportance : 1;               // 0x0016(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x1];                                       // 0x0017(0x0001) MISSED OFFSET
	unsigned char                                      bApplyMaterialClipVolumes : 1;                            // 0x0018(0x0001) (Edit)
	unsigned char                                      UnknownData11[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	struct FMaterialClipVolumeTypeMask                 MaterialClipVolumeTypes;                                  // 0x001C(0x0004) (Edit)
	TEnumAsByte<EMaterialClipVolumeImportance>         MaterialClipVolumeImportance;                             // 0x0020(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.VectorParameterValue
// 0x0028
struct FVectorParameterValue
{
	struct FName                                       ParameterName;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ParameterValue;                                           // 0x0008(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FGuid                                       ExpressionGUID;                                           // 0x0018(0x0010) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.TextureParameterValue
// 0x0020
struct FTextureParameterValue
{
	struct FName                                       ParameterName;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture*                                    ParameterValue;                                           // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FGuid                                       ExpressionGUID;                                           // 0x0010(0x0010) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.ScalarParameterValue
// 0x0020
struct FScalarParameterValue
{
	struct FName                                       ParameterName;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ParameterValue;                                           // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FGuid                                       ExpressionGUID;                                           // 0x000C(0x0010) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.FontParameterValue
// 0x0028
struct FFontParameterValue
{
	struct FName                                       ParameterName;                                            // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UFont*                                       FontValue;                                                // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                FontPage;                                                 // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FGuid                                       ExpressionGUID;                                           // 0x0014(0x0010) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.CollectionVectorParameter
// 0x0010 (0x0028 - 0x0018)
struct FCollectionVectorParameter : public FCollectionParameterBase
{
	struct FLinearColor                                DefaultValue;                                             // 0x0018(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.CollectionParameterBase
// 0x0018
struct FCollectionParameterBase
{
	struct FName                                       ParameterName;                                            // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGuid                                       ID;                                                       // 0x0008(0x0010) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.CollectionScalarParameter
// 0x0008 (0x0020 - 0x0018)
struct FCollectionScalarParameter : public FCollectionParameterBase
{
	float                                              DefaultValue;                                             // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.NavCollisionBox
// 0x0018
struct FNavCollisionBox
{
	struct FVector                                     Offset;                                                   // 0x0000(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Extent;                                                   // 0x000C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.NavCollisionCylinder
// 0x0014
struct FNavCollisionCylinder
{
	struct FVector                                     Offset;                                                   // 0x0000(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Height;                                                   // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.PacketSimulationSettings
// 0x0014
struct FPacketSimulationSettings
{
	int                                                PktLoss;                                                  // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                PktOrder;                                                 // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                PktDup;                                                   // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                PktLag;                                                   // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                PktLagVariance;                                           // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.RollbackNetStartupActorInfo
// 0x0030
struct FRollbackNetStartupActorInfo
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	class UObject*                                     Archetype;                                                // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0010(0x0018) MISSED OFFSET
	class ULevel*                                      Level;                                                    // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.LevelNameAndTime
// 0x0018
struct FLevelNameAndTime
{
	struct FString                                     LevelName;                                                // 0x0000(0x0010) (ZeroConstructor)
	uint32_t                                           LevelChangeTimeInMS;                                      // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.NodeMap
// 0x0040
struct FNodeMap
{
	struct FName                                       TargetNodeName;                                           // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0008(0x0008) MISSED OFFSET
	struct FTransform                                  SourceToTargetTransform;                                  // 0x0010(0x0030) (IsPlainOldData)
};
// ScriptStruct Engine.ParticleBurst
// 0x000C
struct FParticleBurst
{
	int                                                Count;                                                    // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                CountLow;                                                 // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Time;                                                     // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.ParticleRandomSeedInfo
// 0x0020
struct FParticleRandomSeedInfo
{
	struct FName                                       ParameterName;                                            // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bGetSeedFromInstance : 1;                                 // 0x0008(0x0001) (Edit)
	unsigned char                                      bInstanceSeedIsIndex : 1;                                 // 0x0008(0x0001) (Edit)
	unsigned char                                      bResetSeedOnEmitterLooping : 1;                           // 0x0008(0x0001) (Edit)
	unsigned char                                      bRandomlySelectSeedArray : 1;                             // 0x0008(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	TArray<int>                                        RandomSeeds;                                              // 0x0010(0x0010) (Edit, ZeroConstructor)
};
// ScriptStruct Engine.ParticleCurvePair
// 0x0018
struct FParticleCurvePair
{
	struct FString                                     CurveName;                                                // 0x0000(0x0010) (ZeroConstructor)
	class UObject*                                     CurveObject;                                              // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.BeamModifierOptions
// 0x0004
struct FBeamModifierOptions
{
	unsigned char                                      bModify : 1;                                              // 0x0000(0x0001) (Edit)
	unsigned char                                      bScale : 1;                                               // 0x0000(0x0001) (Edit)
	unsigned char                                      bLock : 1;                                                // 0x0000(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.ParticleEvent_GenerateInfo
// 0x0028
struct FParticleEvent_GenerateInfo
{
	TEnumAsByte<EParticleEventType>                    Type;                                                     // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                Frequency;                                                // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ParticleFrequency;                                        // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      FirstTimeOnly : 1;                                        // 0x000C(0x0001) (Edit)
	unsigned char                                      LastTimeOnly : 1;                                         // 0x000C(0x0001) (Edit)
	unsigned char                                      UseReflectedImpactVector : 1;                             // 0x000C(0x0001) (Edit)
	unsigned char                                      bUseOrbitOffset : 1;                                      // 0x000C(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	struct FName                                       CustomName;                                               // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class UParticleModuleEventSendToGame*>      ParticleModuleEventsToSendToGame;                         // 0x0018(0x0010) (Edit, ExportObject, ZeroConstructor)
};
// ScriptStruct Engine.LocationBoneSocketInfo
// 0x0018
struct FLocationBoneSocketInfo
{
	struct FName                                       BoneSocketName;                                           // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Offset;                                                   // 0x0008(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.OrbitOptions
// 0x0004
struct FOrbitOptions
{
	unsigned char                                      bProcessDuringSpawn : 1;                                  // 0x0000(0x0001) (Edit)
	unsigned char                                      bProcessDuringUpdate : 1;                                 // 0x0000(0x0001) (Edit)
	unsigned char                                      bUseEmitterTime : 1;                                      // 0x0000(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.EmitterDynamicParameter
// 0x0050
struct FEmitterDynamicParameter
{
	struct FName                                       ParamName;                                                // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      bUseEmitterTime : 1;                                      // 0x0008(0x0001) (Edit)
	unsigned char                                      bSpawnTimeOnly : 1;                                       // 0x0008(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	TEnumAsByte<EEmitterDynamicParameterValue>         ValueMethod;                                              // 0x000C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	unsigned char                                      bScaleVelocityByParamValue : 1;                           // 0x0010(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	struct FRawDistributionFloat                       ParamValue;                                               // 0x0018(0x0038) (Edit)
};
// ScriptStruct Engine.BeamTargetData
// 0x0010
struct FBeamTargetData
{
	struct FName                                       TargetName;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TargetPercentage;                                         // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.GPUSpriteResourceData
// 0x0160
struct FGPUSpriteResourceData
{
	TArray<struct FColor>                              QuantizedColorSamples;                                    // 0x0000(0x0010) (ZeroConstructor)
	TArray<struct FColor>                              QuantizedMiscSamples;                                     // 0x0010(0x0010) (ZeroConstructor)
	TArray<struct FColor>                              QuantizedSimulationAttrSamples;                           // 0x0020(0x0010) (ZeroConstructor)
	struct FVector4                                    ColorScale;                                               // 0x0030(0x0010) (ZeroConstructor, IsPlainOldData)
	struct FVector4                                    ColorBias;                                                // 0x0040(0x0010) (ZeroConstructor, IsPlainOldData)
	struct FVector4                                    MiscScale;                                                // 0x0050(0x0010) (ZeroConstructor, IsPlainOldData)
	struct FVector4                                    MiscBias;                                                 // 0x0060(0x0010) (ZeroConstructor, IsPlainOldData)
	struct FVector4                                    SimulationAttrCurveScale;                                 // 0x0070(0x0010) (ZeroConstructor, IsPlainOldData)
	struct FVector4                                    SimulationAttrCurveBias;                                  // 0x0080(0x0010) (ZeroConstructor, IsPlainOldData)
	struct FVector4                                    SubImageSize;                                             // 0x0090(0x0010) (ZeroConstructor, IsPlainOldData)
	struct FVector4                                    SizeBySpeed;                                              // 0x00A0(0x0010) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     ConstantAcceleration;                                     // 0x00B0(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     OrbitOffsetBase;                                          // 0x00BC(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     OrbitOffsetRange;                                         // 0x00C8(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     OrbitFrequencyBase;                                       // 0x00D4(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     OrbitFrequencyRange;                                      // 0x00E0(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     OrbitPhaseBase;                                           // 0x00EC(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     OrbitPhaseRange;                                          // 0x00F8(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              GlobalVectorFieldScale;                                   // 0x0104(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              GlobalVectorFieldTightness;                               // 0x0108(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              PerParticleVectorFieldScale;                              // 0x010C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              PerParticleVectorFieldBias;                               // 0x0110(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DragCoefficientScale;                                     // 0x0114(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DragCoefficientBias;                                      // 0x0118(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ResilienceScale;                                          // 0x011C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ResilienceBias;                                           // 0x0120(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CollisionRadiusScale;                                     // 0x0124(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CollisionRadiusBias;                                      // 0x0128(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CollisionTimeBias;                                        // 0x012C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CollisionRandomSpread;                                    // 0x0130(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CollisionRandomDistribution;                              // 0x0134(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              OneMinusFriction;                                         // 0x0138(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              RotationRateScale;                                        // 0x013C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CameraMotionBlurAmount;                                   // 0x0140(0x0004) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EParticleScreenAlignment>              ScreenAlignment;                                          // 0x0144(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EParticleAxisLock>                     LockAxisFlag;                                             // 0x0145(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0146(0x0002) MISSED OFFSET
	struct FVector2D                                   PivotOffset;                                              // 0x0148(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRemoveHMDRoll : 1;                                       // 0x0150(0x0001)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0151(0x0003) MISSED OFFSET
	float                                              MinFacingCameraBlendDistance;                             // 0x0154(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxFacingCameraBlendDistance;                             // 0x0158(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x015C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.GPUSpriteEmitterInfo
// 0x02C0
struct FGPUSpriteEmitterInfo
{
	class UParticleModuleRequired*                     RequiredModule;                                           // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	class UParticleModuleSpawn*                        SpawnModule;                                              // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	class UParticleModuleSpawnPerUnit*                 SpawnPerUnitModule;                                       // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UParticleModule*>                     SpawnModules;                                             // 0x0018(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FGPUSpriteLocalVectorFieldInfo              LocalVectorField;                                         // 0x0030(0x0070)
	struct FFloatDistribution                          VectorFieldScale;                                         // 0x00A0(0x0028) (ZeroConstructor)
	struct FFloatDistribution                          DragCoefficient;                                          // 0x00C8(0x0028) (ZeroConstructor)
	struct FFloatDistribution                          PointAttractorStrength;                                   // 0x00F0(0x0028) (ZeroConstructor)
	struct FFloatDistribution                          Resilience;                                               // 0x0118(0x0028) (ZeroConstructor)
	struct FVector                                     ConstantAcceleration;                                     // 0x0140(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     PointAttractorPosition;                                   // 0x014C(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              PointAttractorRadiusSq;                                   // 0x0158(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     OrbitOffsetBase;                                          // 0x015C(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     OrbitOffsetRange;                                         // 0x0168(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   InvMaxSize;                                               // 0x0174(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              InvRotationRateScale;                                     // 0x017C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxLifetime;                                              // 0x0180(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxParticleCount;                                         // 0x0184(0x0004) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EParticleScreenAlignment>              ScreenAlignment;                                          // 0x0188(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EParticleAxisLock>                     LockAxisFlag;                                             // 0x0189(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x018A(0x0002) MISSED OFFSET
	unsigned char                                      bEnableCollision : 1;                                     // 0x018C(0x0001)
	unsigned char                                      UnknownData02[0x3];                                       // 0x018D(0x0003) MISSED OFFSET
	TEnumAsByte<EParticleCollisionMode>                CollisionMode;                                            // 0x0190(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0191(0x0003) MISSED OFFSET
	unsigned char                                      bRemoveHMDRoll : 1;                                       // 0x0194(0x0001)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0195(0x0003) MISSED OFFSET
	float                                              MinFacingCameraBlendDistance;                             // 0x0198(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxFacingCameraBlendDistance;                             // 0x019C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FRawDistributionVector                      DynamicColor;                                             // 0x01A0(0x0050)
	struct FRawDistributionFloat                       DynamicAlpha;                                             // 0x01F0(0x0038)
	struct FRawDistributionVector                      DynamicColorScale;                                        // 0x0228(0x0050)
	struct FRawDistributionFloat                       DynamicAlphaScale;                                        // 0x0278(0x0038)
	unsigned char                                      UnknownData05[0x10];                                      // 0x02B0(0x0010) MISSED OFFSET
};
// ScriptStruct Engine.GPUSpriteLocalVectorFieldInfo
// 0x0070
struct FGPUSpriteLocalVectorFieldInfo
{
	class UVectorField*                                Field;                                                    // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0008(0x0008) MISSED OFFSET
	struct FTransform                                  Transform;                                                // 0x0010(0x0030) (IsPlainOldData)
	struct FRotator                                    MinInitialRotation;                                       // 0x0040(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FRotator                                    MaxInitialRotation;                                       // 0x004C(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RotationRate;                                             // 0x0058(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              Intensity;                                                // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Tightness;                                                // 0x0068(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIgnoreComponentTransform : 1;                            // 0x006C(0x0001)
	unsigned char                                      bTileX : 1;                                               // 0x006C(0x0001)
	unsigned char                                      bTileY : 1;                                               // 0x006C(0x0001)
	unsigned char                                      bTileZ : 1;                                               // 0x006C(0x0001)
	unsigned char                                      bUseFixDT : 1;                                            // 0x006C(0x0001)
	unsigned char                                      UnknownData01[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.ParticleSystemReplayFrame
// 0x0010
struct FParticleSystemReplayFrame
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};
// ScriptStruct Engine.ParticleEmitterReplayFrame
// 0x0010
struct FParticleEmitterReplayFrame
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};
// ScriptStruct Engine.TireFrictionScalePair
// 0x0010
struct FTireFrictionScalePair
{
	class UTireType*                                   TireType;                                                 // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              FrictionScale;                                            // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.PhysicsConstraintProfileHandle
// 0x0110
struct FPhysicsConstraintProfileHandle
{
	struct FConstraintProfileProperties                ProfileProperties;                                        // 0x0000(0x0104)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	struct FName                                       ProfileName;                                              // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.DelegateArray
// 0x0010
struct FDelegateArray
{
	TArray<struct FScriptDelegate>                     Delegates;                                                // 0x0000(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.PurchaseInfo
// 0x0040
struct FPurchaseInfo
{
	struct FString                                     Identifier;                                               // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     DisplayName;                                              // 0x0010(0x0010) (ZeroConstructor)
	struct FString                                     DisplayDescription;                                       // 0x0020(0x0010) (ZeroConstructor)
	struct FString                                     DisplayPrice;                                             // 0x0030(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.CustomEventData
// 0x0030
struct FCustomEventData
{
	TArray<unsigned char>                              Data;                                                     // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     GroupName;                                                // 0x0010(0x0010) (ZeroConstructor)
	struct FString                                     MetaDataName;                                             // 0x0020(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.TransformBase
// 0x0028
struct FTransformBase
{
	struct FName                                       Node;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FTransformBaseConstraint                    Constraints[0x2];                                         // 0x0008(0x0010) (Edit)
};
// ScriptStruct Engine.TransformBaseConstraint
// 0x0010
struct FTransformBaseConstraint
{
	TArray<struct FRigTransformConstraint>             TransformConstraints;                                     // 0x0000(0x0010) (Edit, ZeroConstructor)
};
// ScriptStruct Engine.RigTransformConstraint
// 0x0018
struct FRigTransformConstraint
{
	TEnumAsByte<EConstraintTransform>                  TranformType;                                             // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       ParentSpace;                                              // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Weight;                                                   // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.Node
// 0x0060
struct FNode
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FName                                       ParentName;                                               // 0x0008(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FTransform                                  Transform;                                                // 0x0010(0x0030) (IsPlainOldData)
	struct FString                                     DisplayName;                                              // 0x0040(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      bAdvanced : 1;                                            // 0x0050(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0051(0x000F) MISSED OFFSET
};
// ScriptStruct Engine.DestructibleParameters
// 0x0088
struct FDestructibleParameters
{
	struct FDestructibleDamageParameters               DamageParameters;                                         // 0x0000(0x001C) (Edit)
	struct FDestructibleDebrisParameters               DebrisParameters;                                         // 0x001C(0x002C) (Edit)
	struct FDestructibleAdvancedParameters             AdvancedParameters;                                       // 0x0048(0x0010) (Edit)
	struct FDestructibleSpecialHierarchyDepths         SpecialHierarchyDepths;                                   // 0x0058(0x0014) (Edit)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	TArray<struct FDestructibleDepthParameters>        DepthParameters;                                          // 0x0070(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	struct FDestructibleParametersFlag                 Flags;                                                    // 0x0080(0x0004) (Edit)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.DestructibleParametersFlag
// 0x0004
struct FDestructibleParametersFlag
{
	unsigned char                                      bAccumulateDamage : 1;                                    // 0x0000(0x0001) (Edit)
	unsigned char                                      bAssetDefinedSupport : 1;                                 // 0x0000(0x0001) (Edit)
	unsigned char                                      bWorldSupport : 1;                                        // 0x0000(0x0001) (Edit)
	unsigned char                                      bDebrisTimeout : 1;                                       // 0x0000(0x0001) (Edit)
	unsigned char                                      bDebrisMaxSeparation : 1;                                 // 0x0000(0x0001) (Edit)
	unsigned char                                      bCrumbleSmallestChunks : 1;                               // 0x0000(0x0001) (Edit)
	unsigned char                                      bAccurateRaycasts : 1;                                    // 0x0000(0x0001) (Edit)
	unsigned char                                      bUseValidBounds : 1;                                      // 0x0000(0x0001) (Edit)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0001(0x0001)
	unsigned char                                      bFormExtendedStructures : 1;                              // 0x0001(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
};
// ScriptStruct Engine.DestructibleDepthParameters
// 0x0001
struct FDestructibleDepthParameters
{
	TEnumAsByte<EImpactDamageOverride>                 ImpactDamageOverride;                                     // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.DestructibleSpecialHierarchyDepths
// 0x0014
struct FDestructibleSpecialHierarchyDepths
{
	int                                                SupportDepth;                                             // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MinimumFractureDepth;                                     // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnableDebris : 1;                                        // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                DebrisDepth;                                              // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                EssentialDepth;                                           // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.DestructibleAdvancedParameters
// 0x0010
struct FDestructibleAdvancedParameters
{
	float                                              DamageCap;                                                // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ImpactVelocityThreshold;                                  // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxChunkSpeed;                                            // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FractureImpulseScale;                                     // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.DestructibleDebrisParameters
// 0x002C
struct FDestructibleDebrisParameters
{
	float                                              DebrisLifetimeMin;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DebrisLifetimeMax;                                        // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DebrisMaxSeparationMin;                                   // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DebrisMaxSeparationMax;                                   // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FBox                                        ValidBounds;                                              // 0x0010(0x001C) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.DestructibleDamageParameters
// 0x001C
struct FDestructibleDamageParameters
{
	float                                              DamageThreshold;                                          // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageSpread;                                             // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnableImpactDamage : 1;                                  // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              ImpactDamage;                                             // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                DefaultImpactDamageDepth;                                 // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bCustomImpactResistance : 1;                              // 0x0014(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	float                                              ImpactResistance;                                         // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.SkeletalMeshLODGroupSettings
// 0x0190
struct FSkeletalMeshLODGroupSettings
{
	float                                              ScreenSize;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FSkeletalMeshOptimizationSettings           OptimizationSettings;                                     // 0x0008(0x0188) (Edit)
};
// ScriptStruct Engine.SoundConcurrencySettings
// 0x0010
struct FSoundConcurrencySettings
{
	int                                                MaxCount;                                                 // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bLimitToOwner : 1;                                        // 0x0004(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	TEnumAsByte<EMaxConcurrentResolutionRule>          ResolutionRule;                                           // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              VolumeScale;                                              // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.SoundSubmixSendInfo
// 0x0010
struct FSoundSubmixSendInfo
{
	float                                              SendLevel;                                                // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	class USoundSubmix*                                SoundSubmix;                                              // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.SoundNodeEditorData
// 0x0008
struct FSoundNodeEditorData
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.SoundGroup
// 0x0020
struct FSoundGroup
{
	TEnumAsByte<ESoundGroup>                           SoundGroup;                                               // 0x0000(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FString                                     DisplayName;                                              // 0x0008(0x0010) (ZeroConstructor, Config)
	unsigned char                                      bAlwaysDecompressOnLoad : 1;                              // 0x0018(0x0001) (Config)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	float                                              DecompressedDuration;                                     // 0x001C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
};
// ScriptStruct Engine.StreamedAudioPlatformData
// 0x0020
struct FStreamedAudioPlatformData
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x0000(0x0020) MISSED OFFSET
};
// ScriptStruct Engine.PassiveSoundMixModifier
// 0x0010
struct FPassiveSoundMixModifier
{
	class USoundMix*                                   SoundMix;                                                 // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinVolumeThreshold;                                       // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxVolumeThreshold;                                       // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.SoundClassProperties
// 0x002C
struct FSoundClassProperties
{
	float                                              Volume;                                                   // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Pitch;                                                    // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              StereoBleed;                                              // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LFEBleed;                                                 // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VoiceCenterChannelVolume;                                 // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RadioFilterVolume;                                        // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RadioFilterVolumeThreshold;                               // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bApplyEffects : 1;                                        // 0x001C(0x0001) (Edit)
	unsigned char                                      bAlwaysPlay : 1;                                          // 0x001C(0x0001) (Edit)
	unsigned char                                      bIsUISound : 1;                                           // 0x001C(0x0001) (Edit)
	unsigned char                                      bIsMusic : 1;                                             // 0x001C(0x0001) (Edit)
	unsigned char                                      bReverb : 1;                                              // 0x001C(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
	float                                              Default2DReverbSendAmount;                                // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bCenterChannelOnly : 1;                                   // 0x0024(0x0001) (Edit)
	unsigned char                                      bApplyAmbientVolumes : 1;                                 // 0x0024(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	TEnumAsByte<EAudioOutputTarget>                    OutputTarget;                                             // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.SoundClassEditorData
// 0x0008
struct FSoundClassEditorData
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.SourceEffectChainEntry
// 0x0010
struct FSourceEffectChainEntry
{
	class USoundEffectSourcePreset*                    preset;                                                   // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bBypass : 1;                                              // 0x0008(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.SoundClassAdjuster
// 0x0018
struct FSoundClassAdjuster
{
	class USoundClass*                                 SoundClassObject;                                         // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VolumeAdjuster;                                           // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchAdjuster;                                            // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bApplyToChildren : 1;                                     // 0x0010(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	float                                              VoiceCenterChannelVolumeAdjuster;                         // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.AudioEQEffect
// 0x0038
struct FAudioEQEffect
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	float                                              FrequencyCenter0;                                         // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Gain0;                                                    // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Bandwidth0;                                               // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FrequencyCenter1;                                         // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Gain1;                                                    // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Bandwidth1;                                               // 0x001C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FrequencyCenter2;                                         // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Gain2;                                                    // 0x0024(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Bandwidth2;                                               // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FrequencyCenter3;                                         // 0x002C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Gain3;                                                    // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Bandwidth3;                                               // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.DistanceDatum
// 0x0014
struct FDistanceDatum
{
	float                                              FadeInDistanceStart;                                      // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FadeInDistanceEnd;                                        // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FadeOutDistanceStart;                                     // 0x0008(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FadeOutDistanceEnd;                                       // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Volume;                                                   // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.ModulatorContinuousParams
// 0x0020
struct FModulatorContinuousParams
{
	struct FName                                       ParameterName;                                            // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Default;                                                  // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinInput;                                                 // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxInput;                                                 // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinOutput;                                                // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxOutput;                                                // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EModulationParamMode>                  ParamMode;                                                // 0x001C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.SubsurfaceProfileStruct
// 0x0024
struct FSubsurfaceProfileStruct
{
	float                                              ScatterRadius;                                            // 0x0000(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                SubsurfaceColor;                                          // 0x0004(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FalloffColor;                                             // 0x0014(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.TextureLODGroup
// 0x0038
struct FTextureLODGroup
{
	TEnumAsByte<ETextureGroup>                         Group;                                                    // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xB];                                       // 0x0001(0x000B) MISSED OFFSET
	int                                                LODBias;                                                  // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0010(0x0004) MISSED OFFSET
	int                                                NumStreamedMips;                                          // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETextureMipGenSettings>                MipGenSettings;                                           // 0x0018(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	int                                                MinLODSize;                                               // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxLODSize;                                               // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	struct FName                                       MinMagFilter;                                             // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       MipFilter;                                                // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.IntegralCurve
// 0x0018 (0x0070 - 0x0058)
struct FIntegralCurve : public FIndexedCurve
{
	TArray<struct FIntegralKey>                        Keys;                                                     // 0x0058(0x0010) (Edit, ZeroConstructor)
	int                                                DefaultValue;                                             // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseDefaultValueBeforeFirstKey : 1;                       // 0x006C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.IntegralKey
// 0x0008
struct FIntegralKey
{
	float                                              Time;                                                     // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Value;                                                    // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.StringCurve
// 0x0020 (0x0078 - 0x0058)
struct FStringCurve : public FIndexedCurve
{
	struct FString                                     DefaultValue;                                             // 0x0058(0x0010) (Edit, ZeroConstructor)
	TArray<struct FStringCurveKey>                     Keys;                                                     // 0x0068(0x0010) (Edit, EditFixedSize, ZeroConstructor)
};
// ScriptStruct Engine.StringCurveKey
// 0x0018
struct FStringCurveKey
{
	float                                              Time;                                                     // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FString                                     Value;                                                    // 0x0008(0x0010) (Edit, ZeroConstructor)
};
// ScriptStruct Engine.FastArraySerializer
// 0x00B0
struct FFastArraySerializer
{
	unsigned char                                      UnknownData00[0xB0];                                      // 0x0000(0x00B0) MISSED OFFSET
};
// ScriptStruct Engine.FastArraySerializerItem
// 0x000C
struct FFastArraySerializerItem
{
	int                                                ReplicationID;                                            // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	int                                                ReplicationKey;                                           // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
	int                                                MostRecentArrayReplicationKey;                            // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData, RepSkip, RepNotify, Interp, NonTransactional, EditorOnly, NoDestructor, AutoWeak, ContainsInstancedReference, AssetRegistrySearchable, SimpleDisplay, AdvancedDisplay, Protected, BlueprintCallable, BlueprintAuthorityOnly, TextExportTransient, NonPIEDuplicateTransient, ExposeOnSpawn, PersistentInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic, NativeAccessSpecifierProtected, NativeAccessSpecifierPrivate)
};
// ScriptStruct Engine.PointDamageEvent
// 0x0098 (0x00B0 - 0x0018)
struct FPointDamageEvent : public FDamageEvent
{
	float                                              Damage;                                                   // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector_NetQuantizeNormal                   ShotDirection;                                            // 0x001C(0x000C)
	struct FHitResult                                  HitInfo;                                                  // 0x0028(0x0088) (IsPlainOldData)
};
// ScriptStruct Engine.AnimNode_SequencePlayer
// 0x0018 (0x0070 - 0x0058)
struct FAnimNode_SequencePlayer : public FAnimNode_AssetPlayerBase
{
	class UAnimSequenceBase*                           Sequence;                                                 // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bLoopAnimation : 1;                                       // 0x0060(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
	float                                              PlayRate;                                                 // 0x0064(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StartPosition;                                            // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.CanvasUVTri
// 0x0060
struct FCanvasUVTri
{
	struct FVector2D                                   V0_Pos;                                                   // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   V0_UV;                                                    // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                V0_Color;                                                 // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   V1_Pos;                                                   // 0x0020(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   V1_UV;                                                    // 0x0028(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                V1_Color;                                                 // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   V2_Pos;                                                   // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   V2_UV;                                                    // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                V2_Color;                                                 // 0x0050(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.FontRenderInfo
// 0x0028
struct FFontRenderInfo
{
	unsigned char                                      bClipText : 1;                                            // 0x0000(0x0001) (BlueprintVisible)
	unsigned char                                      bEnableShadow : 1;                                        // 0x0000(0x0001) (BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FDepthFieldGlowInfo                         GlowInfo;                                                 // 0x0004(0x0024) (BlueprintVisible)
};
// ScriptStruct Engine.DepthFieldGlowInfo
// 0x0024
struct FDepthFieldGlowInfo
{
	unsigned char                                      bEnableGlow : 1;                                          // 0x0000(0x0001) (BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FLinearColor                                GlowColor;                                                // 0x0004(0x0010) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   GlowOuterRadius;                                          // 0x0014(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   GlowInnerRadius;                                          // 0x001C(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.Redirector
// 0x0010
struct FRedirector
{
	struct FName                                       OldName;                                                  // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       NewName;                                                  // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.ComponentReference
// 0x0018
struct FComponentReference
{
	class AActor*                                      OtherActor;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FName                                       ComponentProperty;                                        // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0010(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.ConstrainComponentPropName
// 0x0008
struct FConstrainComponentPropName
{
	struct FName                                       ComponentName;                                            // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.RadialDamageEvent
// 0x0030 (0x0058 - 0x0028)
struct FRadialDamageEvent : public FDelayDamageEvent
{
	struct FRadialDamageParams                         Params;                                                   // 0x0028(0x0014)
	struct FVector                                     Origin;                                                   // 0x003C(0x000C) (ZeroConstructor, IsPlainOldData)
	TArray<struct FHitResult>                          ComponentHits;                                            // 0x0048(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.DelayDamageEvent
// 0x0010 (0x0028 - 0x0018)
struct FDelayDamageEvent : public FDamageEvent
{
	struct FVector                                     DamageStartLocation;                                      // 0x0018(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.RadialDamageParams
// 0x0014
struct FRadialDamageParams
{
	float                                              BaseDamage;                                               // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinimumDamage;                                            // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InnerRadius;                                              // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OuterRadius;                                              // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DamageFalloff;                                            // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.POV
// 0x001C
struct FPOV
{
	struct FVector                                     Location;                                                 // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x000C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FOV;                                                      // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.AnimUpdateRateParameters
// 0x0088
struct FAnimUpdateRateParameters
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
	int                                                UpdateRate;                                               // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                EvaluationRate;                                           // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bInterpolateSkippedFrames : 1;                            // 0x000C(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x000D(0x0001)
	unsigned char                                      bShouldUseLodMap : 1;                                     // 0x000D(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x000E(0x0001)
	unsigned char                                      bSkipUpdate : 1;                                          // 0x000E(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03 : 8;                                        // 0x000F(0x0001)
	unsigned char                                      bSkipEvaluation : 1;                                      // 0x000F(0x0001) (ZeroConstructor, IsPlainOldData)
	float                                              TickedPoseOffestTime;                                     // 0x0010(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              AdditionalTime;                                           // 0x0014(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0018(0x0004) MISSED OFFSET
	int                                                BaseNonRenderedUpdateRate;                                // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<float>                                      BaseVisibleDistanceFactorThesholds;                       // 0x0020(0x0010) (ZeroConstructor)
	TMap<int, int>                                     LODToFrameSkipMap;                                        // 0x0030(0x0050) (ZeroConstructor)
	int                                                MaxEvalRateForInterpolation;                              // 0x0080(0x0004) (ZeroConstructor, IsPlainOldData)
	EUpdateRateShiftBucket                             ShiftBucket;                                              // 0x0084(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0085(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.AnimSlotDesc
// 0x0010
struct FAnimSlotDesc
{
	struct FName                                       SlotName;                                                 // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                NumChannels;                                              // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.AnimSlotInfo
// 0x0018
struct FAnimSlotInfo
{
	struct FName                                       SlotName;                                                 // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<float>                                      ChannelWeights;                                           // 0x0008(0x0010) (ZeroConstructor)
};
// ScriptStruct Engine.MTDResult
// 0x0010
struct FMTDResult
{
	struct FVector                                     Direction;                                                // 0x0000(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              Distance;                                                 // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.OverlapResult
// 0x0018
struct FOverlapResult
{
	TWeakObjectPtr<class AActor>                       Actor;                                                    // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UPrimitiveComponent>          Component;                                                // 0x0008(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0010(0x0004) MISSED OFFSET
	unsigned char                                      bBlockingHit : 1;                                         // 0x0014(0x0001)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.PrimitiveMaterialRef
// 0x0018
struct FPrimitiveMaterialRef
{
	class UPrimitiveComponent*                         Primitive;                                                // 0x0000(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UDecalComponent*                             Decal;                                                    // 0x0008(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                ElementIndex;                                             // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.SwarmDebugOptions
// 0x0004
struct FSwarmDebugOptions
{
	unsigned char                                      bDistributionEnabled : 1;                                 // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bForceContentExport : 1;                                  // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bInitialized : 1;                                         // 0x0000(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.LightmassDebugOptions
// 0x0010
struct FLightmassDebugOptions
{
	unsigned char                                      bDebugMode : 1;                                           // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bStatsEnabled : 1;                                        // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bGatherBSPSurfacesAcrossComponents : 1;                   // 0x0000(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              CoplanarTolerance;                                        // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseImmediateImport : 1;                                  // 0x0008(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bImmediateProcessMappings : 1;                            // 0x0008(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bSortMappings : 1;                                        // 0x0008(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bDumpBinaryFiles : 1;                                     // 0x0008(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bDebugMaterials : 1;                                      // 0x0008(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bPadMappings : 1;                                         // 0x0008(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bDebugPaddings : 1;                                       // 0x0008(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOnlyCalcDebugTexelMappings : 1;                          // 0x0008(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0009(0x0001)
	unsigned char                                      bUseRandomColors : 1;                                     // 0x0009(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bColorBordersGreen : 1;                                   // 0x0009(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bColorByExecutionTime : 1;                                // 0x0009(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	float                                              ExecutionTimeDivisor;                                     // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.LightmassPrimitiveSettings
// 0x0018
struct FLightmassPrimitiveSettings
{
	unsigned char                                      bUseTwoSidedLighting : 1;                                 // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bShadowIndirectOnly : 1;                                  // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUseEmissiveForStaticLighting : 1;                        // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUseVertexNormalForHemisphereGather : 1;                  // 0x0000(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              EmissiveLightFalloffExponent;                             // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              EmissiveLightExplicitInfluenceRadius;                     // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              EmissiveBoost;                                            // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DiffuseBoost;                                             // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FullyOccludedSamplesFraction;                             // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.LightmassDirectionalLightSettings
// 0x0004 (0x0010 - 0x000C)
struct FLightmassDirectionalLightSettings : public FLightmassLightSettings
{
	float                                              LightSourceAngle;                                         // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.LightmassLightSettings
// 0x000C
struct FLightmassLightSettings
{
	float                                              IndirectLightingSaturation;                               // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ShadowExponent;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseAreaShadowsForStationaryLight : 1;                    // 0x0008(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
};
// ScriptStruct Engine.LightmassPointLightSettings
// 0x0000 (0x000C - 0x000C)
struct FLightmassPointLightSettings : public FLightmassLightSettings
{
};
// ScriptStruct Engine.LocalizedSubtitle
// 0x0028
struct FLocalizedSubtitle
{
	struct FString                                     LanguageExt;                                              // 0x0000(0x0010) (ZeroConstructor)
	TArray<struct FSubtitleCue>                        Subtitles;                                                // 0x0010(0x0010) (ZeroConstructor)
	unsigned char                                      bMature : 1;                                              // 0x0020(0x0001)
	unsigned char                                      bManualWordWrap : 1;                                      // 0x0020(0x0001)
	unsigned char                                      bSingleLine : 1;                                          // 0x0020(0x0001)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.BasedPosition
// 0x0038
struct FBasedPosition
{
	class AActor*                                      Base;                                                     // 0x0000(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Position;                                                 // 0x0008(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CachedBaseLocation;                                       // 0x0014(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FRotator                                    CachedBaseRotation;                                       // 0x0020(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     CachedTransPosition;                                      // 0x002C(0x000C) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.TTLinearColorTrack
// 0x0008 (0x0018 - 0x0010)
struct FTTLinearColorTrack : public FTTTrackBase
{
	class UCurveLinearColor*                           CurveLinearColor;                                         // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.TTTrackBase
// 0x0010
struct FTTTrackBase
{
	struct FName                                       TrackName;                                                // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsExternalCurve : 1;                                     // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};
// ScriptStruct Engine.TTVectorTrack
// 0x0008 (0x0018 - 0x0010)
struct FTTVectorTrack : public FTTTrackBase
{
	class UCurveVector*                                CurveVector;                                              // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.TTFloatTrack
// 0x0008 (0x0018 - 0x0010)
struct FTTFloatTrack : public FTTTrackBase
{
	class UCurveFloat*                                 CurveFloat;                                               // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.TTEventTrack
// 0x0008 (0x0018 - 0x0010)
struct FTTEventTrack : public FTTTrackBase
{
	class UCurveFloat*                                 CurveKeys;                                                // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.TouchInputControl
// 0x0068
struct FTouchInputControl
{
	class UTexture2D*                                  Image1;                                                   // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  Image2;                                                   // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Center;                                                   // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   VisualSize;                                               // 0x0018(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ThumbSize;                                                // 0x0020(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   InteractionSize;                                          // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   InputScale;                                               // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FKey                                        MainInputKey;                                             // 0x0038(0x0018) (Edit)
	struct FKey                                        AltInputKey;                                              // 0x0050(0x0018) (Edit)
};
// ScriptStruct Engine.AnimationRecordingSettings
// 0x000C
struct FAnimationRecordingSettings
{
	unsigned char                                      bRecordInWorldSpace : 1;                                  // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0001(0x0001)
	unsigned char                                      bRemoveRootAnimation : 1;                                 // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0002(0x0001)
	unsigned char                                      bAutoSaveAsset : 1;                                       // 0x0002(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0003(0x0001) MISSED OFFSET
	float                                              SampleRate;                                               // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Length;                                                   // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.ComponentSpacePose
// 0x0020
struct FComponentSpacePose
{
	TArray<struct FTransform>                          Transforms;                                               // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FName>                               Names;                                                    // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};
// ScriptStruct Engine.LocalSpacePose
// 0x0020
struct FLocalSpacePose
{
	TArray<struct FTransform>                          Transforms;                                               // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FName>                               Names;                                                    // 0x0010(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
};
// ScriptStruct Engine.NamedTransform
// 0x0040
struct FNamedTransform
{
	struct FTransform                                  Value;                                                    // 0x0000(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	struct FName                                       Name;                                                     // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0038(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.NamedColor
// 0x0010
struct FNamedColor
{
	struct FColor                                      Value;                                                    // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       Name;                                                     // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.NamedVector
// 0x0018
struct FNamedVector
{
	struct FVector                                     Value;                                                    // 0x0000(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FName                                       Name;                                                     // 0x0010(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.NamedFloat
// 0x0010
struct FNamedFloat
{
	float                                              Value;                                                    // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       Name;                                                     // 0x0008(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.AnimNode_ApplyMeshSpaceAdditive
// 0x00D8 (0x0108 - 0x0030)
struct FAnimNode_ApplyMeshSpaceAdditive : public FAnimNode_Base
{
	struct FPoseLink                                   Base;                                                     // 0x0030(0x0018) (Edit, BlueprintVisible)
	struct FPoseLink                                   Additive;                                                 // 0x0048(0x0018) (Edit, BlueprintVisible)
	int                                                LODThreshold;                                             // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ActualAlpha;                                              // 0x0064(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	EAnimAlphaInputType                                AlphaInputType;                                           // 0x0068(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	float                                              ALPHA;                                                    // 0x006C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FInputScaleBias                             AlphaScaleBias;                                           // 0x0070(0x0008) (Edit, BlueprintVisible)
	unsigned char                                      bAlphaBoolEnabled : 1;                                    // 0x0078(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0079(0x0007) MISSED OFFSET
	struct FInputAlphaBoolBlend                        AlphaBoolBlend;                                           // 0x0080(0x0050) (Edit, BlueprintVisible)
	struct FName                                       AlphaCurveName;                                           // 0x00D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FInputScaleBiasClamp                        AlphaScaleBiasClamp;                                      // 0x00D8(0x0030) (Edit, BlueprintVisible)
};
// ScriptStruct Engine.AnimNode_SaveCachedPose
// 0x00B0 (0x00E0 - 0x0030)
struct FAnimNode_SaveCachedPose : public FAnimNode_Base
{
	struct FPoseLink                                   Pose;                                                     // 0x0030(0x0018) (Edit, BlueprintVisible)
	struct FName                                       CachePoseName;                                            // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              GlobalWeight;                                             // 0x0050(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8C];                                      // 0x0054(0x008C) MISSED OFFSET
};
// ScriptStruct Engine.AnimNode_StateMachine
// 0x00B0 (0x00E0 - 0x0030)
struct FAnimNode_StateMachine : public FAnimNode_Base
{
	int                                                StateMachineIndexInClass;                                 // 0x0030(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                MaxTransitionsPerFrame;                                   // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bSkipFirstUpdateTransition : 1;                           // 0x0038(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0039(0x000F) MISSED OFFSET
	int                                                CurrentState;                                             // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ElapsedTime;                                              // 0x004C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x90];                                      // 0x0050(0x0090) MISSED OFFSET
};
// ScriptStruct Engine.AnimationPotentialTransition
// 0x0030
struct FAnimationPotentialTransition
{
	unsigned char                                      UnknownData00[0x30];                                      // 0x0000(0x0030) MISSED OFFSET
};
// ScriptStruct Engine.AnimationActiveTransitionEntry
// 0x00D0
struct FAnimationActiveTransitionEntry
{
	unsigned char                                      UnknownData00[0x90];                                      // 0x0000(0x0090) MISSED OFFSET
	class UBlendProfile*                               BlendProfile;                                             // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x38];                                      // 0x0098(0x0038) MISSED OFFSET
};
// ScriptStruct Engine.AnimNode_SubInput
// 0x0038 (0x0068 - 0x0030)
struct FAnimNode_SubInput : public FAnimNode_Base
{
	unsigned char                                      UnknownData00[0x38];                                      // 0x0030(0x0038) MISSED OFFSET
};
// ScriptStruct Engine.AnimNode_SubInstance
// 0x00A8 (0x00D8 - 0x0030)
struct FAnimNode_SubInstance : public FAnimNode_Base
{
	struct FPoseLink                                   InPose;                                                   // 0x0030(0x0018)
	class UAnimInstance*                               InstanceClass;                                            // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bShouldReinitialize : 1;                                  // 0x0050(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	struct FName                                       ReinitializePropertyName;                                 // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAnimInstance*                               InstanceToRun;                                            // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UProperty*>                           InstanceProperties;                                       // 0x0068(0x0010) (ZeroConstructor, Transient)
	TArray<class UProperty*>                           SubInstanceProperties;                                    // 0x0078(0x0010) (ZeroConstructor, Transient)
	TArray<struct FName>                               SourcePropertyNames;                                      // 0x0088(0x0010) (ZeroConstructor)
	TArray<struct FName>                               DestPropertyNames;                                        // 0x0098(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x20];                                      // 0x00A8(0x0020) MISSED OFFSET
	class UBoolProperty*                               ReinitializeProperty;                                     // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x00D0(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.AnimNode_TransitionPoseEvaluator
// 0x0048 (0x0078 - 0x0030)
struct FAnimNode_TransitionPoseEvaluator : public FAnimNode_Base
{
	TEnumAsByte<EEvaluatorDataSource>                  DataSource;                                               // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEvaluatorMode>                        EvaluatorMode;                                            // 0x0031(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	int                                                FramesToCachePose;                                        // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x38];                                      // 0x0038(0x0038) MISSED OFFSET
	int                                                CacheFramesRemaining;                                     // 0x0070(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
};
// ScriptStruct Engine.AnimNode_TransitionResult
// 0x0050 (0x0080 - 0x0030)
struct FAnimNode_TransitionResult : public FAnimNode_Base
{
	unsigned char                                      bCanEnterTransition : 1;                                  // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4F];                                      // 0x0031(0x004F) MISSED OFFSET
};
// ScriptStruct Engine.AnimNode_UseCachedPose
// 0x0020 (0x0050 - 0x0030)
struct FAnimNode_UseCachedPose : public FAnimNode_Base
{
	struct FPoseLink                                   LinkToCachingNode;                                        // 0x0030(0x0018)
	struct FName                                       CachePoseName;                                            // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.AnimNode_ConvertLocalToComponentSpace
// 0x0018 (0x0048 - 0x0030)
struct FAnimNode_ConvertLocalToComponentSpace : public FAnimNode_Base
{
	struct FPoseLink                                   LocalPose;                                                // 0x0030(0x0018) (Edit, BlueprintVisible)
};
// ScriptStruct Engine.AnimNode_ConvertComponentToLocalSpace
// 0x0018 (0x0048 - 0x0030)
struct FAnimNode_ConvertComponentToLocalSpace : public FAnimNode_Base
{
	struct FComponentSpacePoseLink                     ComponentPose;                                            // 0x0030(0x0018) (Edit, BlueprintVisible)
};
// ScriptStruct Engine.DummySpacerCameraTypes
// 0x0001
struct FDummySpacerCameraTypes
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};
// ScriptStruct Engine.NameCurve
// 0x0010 (0x0068 - 0x0058)
struct FNameCurve : public FIndexedCurve
{
	TArray<struct FNameCurveKey>                       Keys;                                                     // 0x0058(0x0010) (Edit, EditFixedSize, ZeroConstructor)
};
// ScriptStruct Engine.NameCurveKey
// 0x0010
struct FNameCurveKey
{
	float                                              Time;                                                     // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       Value;                                                    // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};
// ScriptStruct Engine.MemberReference
// 0x0038
struct FMemberReference
{
	class UObject*                                     MemberParent;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     MemberScope;                                              // 0x0008(0x0010) (ZeroConstructor)
	struct FName                                       MemberName;                                               // 0x0018(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FGuid                                       MemberGuid;                                               // 0x0020(0x0010) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bSelfContext : 1;                                         // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0031(0x0001)
	unsigned char                                      bWasDeprecated : 1;                                       // 0x0031(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
};
// ScriptStruct Engine.QueuedDrawDebugItem
// 0x0068
struct FQueuedDrawDebugItem
{
	TEnumAsByte<EDrawDebugItemType>                    ItemType;                                                 // 0x0000(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FVector                                     StartLoc;                                                 // 0x0004(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     EndLoc;                                                   // 0x0010(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     Center;                                                   // 0x001C(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0028(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              Radius;                                                   // 0x0034(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              Size;                                                     // 0x0038(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                Segments;                                                 // 0x003C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FColor                                      Color;                                                    // 0x0040(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bPersistentLines : 1;                                     // 0x0044(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	float                                              LifeTime;                                                 // 0x0048(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              Thickness;                                                // 0x004C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FString                                     Message;                                                  // 0x0050(0x0010) (ZeroConstructor, Transient)
	struct FVector2D                                   TextScale;                                                // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
};
// ScriptStruct Engine.AnimSingleNodeInstanceProxy
// 0x0180 (0x06A0 - 0x0520)
struct FAnimSingleNodeInstanceProxy : public FAnimInstanceProxy
{
	unsigned char                                      UnknownData00[0x180];                                     // 0x0520(0x0180) MISSED OFFSET
};
// ScriptStruct Engine.AnimNode_SingleNode
// 0x0028 (0x0058 - 0x0030)
struct FAnimNode_SingleNode : public FAnimNode_Base
{
	struct FPoseLink                                   SourcePose;                                               // 0x0030(0x0018) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0048(0x0010) MISSED OFFSET
};
// ScriptStruct Engine.MaterialClipPlane
// 0x0020
struct FMaterialClipPlane
{
	struct FVector4                                    Plane;                                                    // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PlaneOffsetOutside;                                       // 0x0010(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0014(0x000C) MISSED OFFSET
};
// ScriptStruct Engine.MaterialClipPlaneSoftEx
// 0x0020 (0x0070 - 0x0050)
struct FMaterialClipPlaneSoftEx : public FMaterialClipPlaneSoft
{
	struct FVector                                     PlaneX;                                                   // 0x0050(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     PlaneY;                                                   // 0x005C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0068(0x0008) MISSED OFFSET
};
// ScriptStruct Engine.MaterialClipPlaneSoft
// 0x0050
struct FMaterialClipPlaneSoft
{
	struct FVector4                                    Plane;                                                    // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   PlaneOffset;                                              // 0x0010(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0018(0x0008) MISSED OFFSET
	struct FVector4                                    PlaneRadiusXYInOut;                                       // 0x0020(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector4                                    FadeRangeXYInOut;                                         // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   UprightMulAdd;                                            // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAdditive : 1;                                            // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMaterialClipVolumeImportance>         SoftPlaneImportance;                                      // 0x0049(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x004A(0x0006) MISSED OFFSET
};
// ScriptStruct Engine.ScopeSettings
// 0x00C0
struct FScopeSettings
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
	float                                              BlurLevel;                                                // 0x0004(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DepthBlurPower;                                           // 0x0008(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DepthBlurBlackPoint;                                      // 0x000C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DepthBlurWhitePoint;                                      // 0x0010(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ScopeRadiusNear;                                          // 0x0014(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ScopeRadiusFar;                                           // 0x0018(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ScopeEllipseRatio;                                        // 0x001C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bReverseScopeMask : 1;                                    // 0x0020(0x0001) (BlueprintVisible)
	unsigned char                                      bReticleExtendTextureBorder : 1;                          // 0x0020(0x0001) (BlueprintVisible)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
	float                                              ReticleAngularSize;                                       // 0x0024(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReticleTextureCenter;                                     // 0x0028(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ReticleGamma;                                             // 0x0030(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ReticleTint;                                              // 0x0034(0x0010) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LensDistortion;                                           // 0x0044(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LensCA;                                                   // 0x0048(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OuterBrightness;                                          // 0x004C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LensTint;                                                 // 0x0050(0x0010) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ParallaxMovementScale;                                    // 0x0060(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ParallaxRadiusScale;                                      // 0x0064(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ScopeCenterNear;                                          // 0x0068(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ScopeCenterFar;                                           // 0x0074(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReticleCenter;                                            // 0x0080(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ReticleUp;                                                // 0x008C(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ReticleRect;                                              // 0x0098(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  ReticleTexture;                                           // 0x00A0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x00A8(0x0008) MISSED OFFSET
	struct FVector4                                    ReticleBrightSceneVisibilityMultipliers;                  // 0x00B0(0x0010) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
};
//Class Engine.ActorComponent
//0x01D0 (0x0210 - 0x0040)
class UActorComponent : public UObject
{
public:
	unsigned char                                      UnknownData00[0xF0];                                      // 0x0040(0x00F0) MISSED OFFSET
	struct FActorComponentTickFunction                 PrimaryComponentTick;                                     // 0x0130(0x0058) (Edit, DisableEditOnInstance)
	TArray<struct FName>                               ComponentTags;                                            // 0x0188(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UAssetUserData*>                      AssetUserData;                                            // 0x0198(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      bReplicates : 1;                                          // 0x01A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance)
	unsigned char                                      bNetAddressable : 1;                                      // 0x01A8(0x0001)
	unsigned char                                      bNetRemappable : 1;                                       // 0x01A8(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x1];                                       // 0x01A9(0x0001) MISSED OFFSET
	unsigned char                                      bCreatedByConstructionScript : 1;                         // 0x01AA(0x0001) (Deprecated)
	unsigned char                                      bInstanceComponent : 1;                                   // 0x01AA(0x0001) (Deprecated)
	unsigned char                                      bAutoActivate : 1;                                        // 0x01AA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsActive : 1;                                            // 0x01AA(0x0001) (Net, Transient)
	unsigned char                                      bEditableWhenInherited : 1;                               // 0x01AA(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x1];                                       // 0x01AB(0x0001) MISSED OFFSET
	struct FGuid                                       DestructibleId;                                           // 0x01AC(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsDestroyedVersion : 1;                                  // 0x01BC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x01BD(0x0003) MISSED OFFSET
	unsigned char                                      bCanEverAffectNavigation : 1;                             // 0x01C0(0x0001) (Edit)
	unsigned char                                      bIsEditorOnly : 1;                                        // 0x01C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData04[0x4];                                       // 0x01C1(0x0004) MISSED OFFSET
	EComponentCreationMethod                           CreationMethod;                                           // 0x01C5(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0xA];                                       // 0x01C6(0x000A) MISSED OFFSET
	TArray<struct FSimpleMemberReference>              UCSModifiedProperties;                                    // 0x01D0(0x0010) (ZeroConstructor)
	struct FScriptMulticastDelegate                    OnComponentActivated;                                     // 0x01E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnComponentDeactivated;                                   // 0x01F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData06[0x9];                                       // 0x0200(0x0009) MISSED OFFSET
	unsigned char                                      bReplayRewindable : 1;                                    // 0x0209(0x0001)
	unsigned char                                      UnknownData07[0x6];                                       // 0x020A(0x0006) MISSED OFFSET

	// Function Engine.ActorComponent.ToggleActive
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ToggleActive();// sub_5F45E0()

	// Function Engine.ActorComponent.SetTickGroup
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTickGroup(TEnumAsByte<ETickingGroup> NewTickGroup);// sub_142C540()

	// Function Engine.ActorComponent.SetTickableWhenPaused
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTickableWhenPaused(unsigned char bTickableWhenPaused);// sub_1AC7E10()

	// Function Engine.ActorComponent.SetIsReplicated
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetIsReplicated(unsigned char ShouldReplicate);// sub_5C27EB0()

	// Function Engine.ActorComponent.SetComponentTickInterval
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetComponentTickInterval(float TickInterval);// sub_6188F50()

	// Function Engine.ActorComponent.SetComponentTickEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetComponentTickEnabled(unsigned char bEnabled);// sub_40760C0()

	// Function Engine.ActorComponent.SetAutoActivate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAutoActivate(unsigned char bNewAutoActivate);// sub_52B0BA0()

	// Function Engine.ActorComponent.SetActive
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetActive(unsigned char bNewActive, unsigned char bReset);// sub_21147C0()

	// Function Engine.ActorComponent.RemoveTickPrerequisiteComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RemoveTickPrerequisiteComponent(class UActorComponent* PrerequisiteComponent);// sub_54F1400()

	// Function Engine.ActorComponent.RemoveTickPrerequisiteActor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RemoveTickPrerequisiteActor(class AActor* PrerequisiteActor);// sub_3CBEB60()

	// Function Engine.ActorComponent.ReceiveTick
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveTick(float DeltaSeconds);// sub_5C67A0()

	// Function Engine.ActorComponent.ReceiveEndPlay
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);// sub_5C67A0()

	// Function Engine.ActorComponent.ReceiveBeginPlay
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveBeginPlay();// sub_5C67A0()

	// Function Engine.ActorComponent.OnRep_IsActive
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_IsActive();// sub_4155650()

	// Function Engine.ActorComponent.K2_DestroyComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_DestroyComponent(class UObject* Object);// sub_2498070()

	// Function Engine.ActorComponent.IsComponentTickEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsComponentTickEnabled();// sub_1E2B170()

	// Function Engine.ActorComponent.IsBeingDestroyed
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsBeingDestroyed();// sub_1E8BBA0()

	// Function Engine.ActorComponent.IsActive
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsActive();// sub_18C1DB0()

	// Function Engine.ActorComponent.GetOwner
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AActor* STATIC_GetOwner();// sub_11043D0()

	// Function Engine.ActorComponent.GetComponentTickInterval
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetComponentTickInterval();// sub_1FA3E60()

	// Function Engine.ActorComponent.Deactivate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Deactivate();// sub_C9E010()

	// Function Engine.ActorComponent.ComponentHasTag
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_ComponentHasTag(const struct FName& Tag);// sub_2060FE0()

	// Function Engine.ActorComponent.AddTickPrerequisiteComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddTickPrerequisiteComponent(class UActorComponent* PrerequisiteComponent);// sub_12D5050()

	// Function Engine.ActorComponent.AddTickPrerequisiteActor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddTickPrerequisiteActor(class AActor* PrerequisiteActor);// sub_2E2B20()

	// Function Engine.ActorComponent.Activate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Activate(unsigned char bReset);// sub_8EC900()


}


//Class Engine.NavRelevantComponent
//0x0030 (0x0240 - 0x0210)
class UNavRelevantComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x24];                                      // 0x0210(0x0024) MISSED OFFSET
	unsigned char                                      bAttachToOwnersRoot : 1;                                  // 0x0234(0x0001)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0235(0x0003) MISSED OFFSET
	class UObject*                                     CachedNavParent;                                          // 0x0238(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	// Function Engine.NavRelevantComponent.SetNavigationRelevancy
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetNavigationRelevancy(unsigned char bRelevant);// sub_4ABD690()


}


//Class Engine.NavModifierComponent
//0x0030 (0x0270 - 0x0240)
class UNavModifierComponent : public UNavRelevantComponent
{
public:
	class UNavArea*                                    AreaClass;                                                // 0x0240(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     FailsafeExtent;                                           // 0x0248(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1C];                                      // 0x0254(0x001C) MISSED OFFSET

	// Function Engine.NavModifierComponent.SetAreaClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAreaClass(class UNavArea* NewAreaClass);// sub_4026260()


}


//Class Engine.PawnNoiseEmitterComponent
//0x0030 (0x0240 - 0x0210)
class UPawnNoiseEmitterComponent : public UActorComponent
{
public:
	unsigned char                                      bAIPerceptionSystemCompatibilityMode : 1;                 // 0x0210(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0211(0x0003) MISSED OFFSET
	struct FVector                                     LastRemoteNoisePosition;                                  // 0x0214(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              NoiseLifetime;                                            // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastRemoteNoiseVolume;                                    // 0x0224(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastRemoteNoiseTime;                                      // 0x0228(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastLocalNoiseVolume;                                     // 0x022C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastLocalNoiseTime;                                       // 0x0230(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0234(0x000C) MISSED OFFSET

	// Function Engine.PawnNoiseEmitterComponent.MakeNoise
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_MakeNoise(class AActor* NoiseMaker, float Loudness, const struct FVector& NoiseLocation);// sub_3B964E0()


}


//Class Engine.PhysicalAnimationComponent
//0x0040 (0x0250 - 0x0210)
class UPhysicalAnimationComponent : public UActorComponent
{
public:
	float                                              StrengthMultiplyer;                                       // 0x0210(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0214(0x0004) MISSED OFFSET
	class USkeletalMeshComponent*                      SkeletalMeshComponent;                                    // 0x0218(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x30];                                      // 0x0220(0x0030) MISSED OFFSET

	// Function Engine.PhysicalAnimationComponent.SetStrengthMultiplyer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetStrengthMultiplyer(float InStrengthMultiplyer);// sub_5F5C3E0()

	// Function Engine.PhysicalAnimationComponent.SetSkeletalMeshComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSkeletalMeshComponent(class USkeletalMeshComponent* InSkeletalMeshComponent);// sub_118AFE0()

	// Function Engine.PhysicalAnimationComponent.GetBodyTargetTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTransform STATIC_GetBodyTargetTransform(const struct FName& BodyName);// sub_425FBD0()

	// Function Engine.PhysicalAnimationComponent.ApplyPhysicalAnimationSettingsBelow
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ApplyPhysicalAnimationSettingsBelow(const struct FName& BodyName, const struct FPhysicalAnimationData& PhysicalAnimationData, unsigned char bIncludeSelf);// sub_1012FB0()

	// Function Engine.PhysicalAnimationComponent.ApplyPhysicalAnimationSettings
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ApplyPhysicalAnimationSettings(const struct FName& BodyName, const struct FPhysicalAnimationData& PhysicalAnimationData);// sub_3F5A80()

	// Function Engine.PhysicalAnimationComponent.ApplyPhysicalAnimationProfileBelow
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ApplyPhysicalAnimationProfileBelow(const struct FName& BodyName, const struct FName& ProfileName, unsigned char bIncludeSelf, unsigned char bClearNotFound);// sub_49EE3F0()


}


//Class Engine.PhysicsHandleComponent
//0x00B0 (0x02C0 - 0x0210)
class UPhysicsHandleComponent : public UActorComponent
{
public:
	class UPrimitiveComponent*                         GrabbedComponent;                                         // 0x0210(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0218(0x000C) MISSED OFFSET
	unsigned char                                      bSoftAngularConstraint : 1;                               // 0x0224(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bSoftLinearConstraint : 1;                                // 0x0224(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bInterpolateTarget : 1;                                   // 0x0224(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0225(0x0003) MISSED OFFSET
	float                                              LinearDamping;                                            // 0x0228(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LinearStiffness;                                          // 0x022C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AngularDamping;                                           // 0x0230(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AngularStiffness;                                         // 0x0234(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x68];                                      // 0x0238(0x0068) MISSED OFFSET
	float                                              InterpolationSpeed;                                       // 0x02A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1C];                                      // 0x02A4(0x001C) MISSED OFFSET

	// Function Engine.PhysicsHandleComponent.SetTargetRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTargetRotation(const struct FRotator& NewRotation);// sub_363580()

	// Function Engine.PhysicsHandleComponent.SetTargetLocationAndRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTargetLocationAndRotation(const struct FVector& NewLocation, const struct FRotator& NewRotation);// sub_CCBF90()

	// Function Engine.PhysicsHandleComponent.SetTargetLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTargetLocation(const struct FVector& NewLocation);// sub_17AB080()

	// Function Engine.PhysicsHandleComponent.SetLinearStiffness
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLinearStiffness(float NewLinearStiffness);// sub_424A990()

	// Function Engine.PhysicsHandleComponent.SetLinearDamping
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLinearDamping(float NewLinearDamping);// sub_5799E0()

	// Function Engine.PhysicsHandleComponent.SetInterpolationSpeed
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetInterpolationSpeed(float NewInterpolationSpeed);// sub_61143D0()

	// Function Engine.PhysicsHandleComponent.SetAngularStiffness
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAngularStiffness(float NewAngularStiffness);// sub_1BFA3D0()

	// Function Engine.PhysicsHandleComponent.SetAngularDamping
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAngularDamping(float NewAngularDamping);// sub_1F893D0()

	// Function Engine.PhysicsHandleComponent.ReleaseComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReleaseComponent();// sub_125330()

	// Function Engine.PhysicsHandleComponent.GrabComponentAtLocationWithRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GrabComponentAtLocationWithRotation(class UPrimitiveComponent* Component, const struct FName& InBoneName, const struct FVector& Location, const struct FRotator& Rotation);// sub_14EC30()

	// Function Engine.PhysicsHandleComponent.GrabComponentAtLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GrabComponentAtLocation(class UPrimitiveComponent* Component, const struct FName& InBoneName, const struct FVector& GrabLocation);// sub_10F3B00()

	// Function Engine.PhysicsHandleComponent.GrabComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GrabComponent(class UPrimitiveComponent* Component, const struct FName& InBoneName, const struct FVector& GrabLocation, unsigned char bConstrainRotation);// sub_14EA7E0()

	// Function Engine.PhysicsHandleComponent.GetTargetLocationAndRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetTargetLocationAndRotation(struct FVector* TargetLocation, struct FRotator* TargetRotation);// sub_5D8EA40()

	// Function Engine.PhysicsHandleComponent.GetGrabbedComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UPrimitiveComponent* STATIC_GetGrabbedComponent();// sub_133E500()


}


//Class Engine.PlatformEventsComponent
//0x0020 (0x0230 - 0x0210)
class UPlatformEventsComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    PlatformChangedToLaptopModeDelegate;                      // 0x0210(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    PlatformChangedToTabletModeDelegate;                      // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	// Function Engine.PlatformEventsComponent.SupportsConvertibleLaptops
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_SupportsConvertibleLaptops();// sub_49D7D30()

	// DelegateFunction Engine.PlatformEventsComponent.PlatformEventDelegate__DelegateSignature
	// (NetReliable, Exec, Event, NetMulticast, MulticastDelegate, Private, Protected, HasOutParms, BlueprintEvent)
	void PlatformEventDelegate__DelegateSignature();// sub_5C67A0()

	// Function Engine.PlatformEventsComponent.IsInTabletMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsInTabletMode();// sub_5EB1280()

	// Function Engine.PlatformEventsComponent.IsInLaptopMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsInLaptopMode();// sub_1691680()


}


//Class Engine.SceneComponent
//0x0290 (0x04A0 - 0x0210)
class USceneComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0210(0x0010) MISSED OFFSET
	class USceneComponent*                             AttachParent;                                             // 0x0220(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0228(0x0008) MISSED OFFSET
	unsigned char                                      bReplicatesAttachmentReference : 1;                       // 0x0230(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance)
	unsigned char                                      bReplicatesAttachment : 1;                                // 0x0230(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, DisableEditOnInstance)
	unsigned char                                      bWorldToComponentUpdated : 1;                             // 0x0230(0x0001) (Transient)
	unsigned char                                      bAbsoluteLocation : 1;                                    // 0x0230(0x0001) (Edit, BlueprintVisible, Net)
	unsigned char                                      bAbsoluteRotation : 1;                                    // 0x0230(0x0001) (Edit, BlueprintVisible, Net)
	unsigned char                                      bAbsoluteScale : 1;                                       // 0x0230(0x0001) (Edit, BlueprintVisible, Net)
	unsigned char                                      UnknownData02 : 8;                                        // 0x0231(0x0001)
	unsigned char                                      bVisible : 1;                                             // 0x0231(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      bHiddenInGame : 1;                                        // 0x0231(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bShouldUpdatePhysicsVolume : 1;                           // 0x0231(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bBoundsChangeTriggersStreamingDataRebuild : 1;            // 0x0231(0x0001)
	unsigned char                                      bUseAttachParentBound : 1;                                // 0x0231(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bEnableInsensitiveUpdate : 1;                             // 0x0231(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData03 : 8;                                        // 0x0232(0x0001)
	unsigned char                                      bAbsoluteTranslation : 1;                                 // 0x0232(0x0001) (Deprecated)
	unsigned char                                      UnknownData04[0x1];                                       // 0x0233(0x0001) MISSED OFFSET
	TWeakObjectPtr<class APhysicsVolume>               PhysicsVolume;                                            // 0x0234(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EComponentMobility>                    Mobility;                                                 // 0x023C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x023D(0x0003) MISSED OFFSET
	TArray<class USceneComponent*>                     AttachChildren;                                           // 0x0240(0x0010) (ExportObject, Net, ZeroConstructor, Transient)
	unsigned char                                      UnknownData06[0x50];                                      // 0x0250(0x0050) MISSED OFFSET
	struct FVector                                     ComponentVelocity;                                        // 0x02A0(0x000C) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDetailMode>                           DetailMode;                                               // 0x02AC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3F];                                      // 0x02AD(0x003F) MISSED OFFSET
	struct FVector                                     RelativeTranslation;                                      // 0x02EC(0x000C) (ZeroConstructor, Deprecated, IsPlainOldData)
	struct FVector                                     RelativeLocation;                                         // 0x02F8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RelativeRotation;                                         // 0x0304(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x8];                                       // 0x0310(0x0008) MISSED OFFSET
	struct FVector                                     RelativeScale3D;                                          // 0x0318(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x0324(0x0004) MISSED OFFSET
	struct FName                                       AttachSocketName;                                         // 0x0328(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x50];                                      // 0x0330(0x0050) UNKNOWN PROPERTY: SetProperty Engine.SceneComponent.ClientAttachedChildren
	struct FScriptMulticastDelegate                    PhysicsVolumeChangedDelegate;                             // 0x0380(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    AttachmentChangedDelegate;                                // 0x0390(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData11[0x100];                                     // 0x03A0(0x0100) MISSED OFFSET

	// Function Engine.SceneComponent.ToggleVisibility
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ToggleVisibility(unsigned char bPropagateToChildren);// sub_E9B430()

	// Function Engine.SceneComponent.SnapTo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_SnapTo(class USceneComponent* InParent, const struct FName& InSocketName);// sub_1AE4290()

	// Function Engine.SceneComponent.SetWorldScale3D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetWorldScale3D(const struct FVector& NewScale);// sub_4755DF0()

	// Function Engine.SceneComponent.SetVisibility
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVisibility(unsigned char bNewVisibility, unsigned char bPropagateToChildren);// sub_2017C00()

	// Function Engine.SceneComponent.SetRelativeScale3D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetRelativeScale3D(const struct FVector& NewScale3D);// sub_427A360()

	// Function Engine.SceneComponent.SetIsAttachmentReplicated
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetIsAttachmentReplicated(unsigned char ShouldReplicate);// sub_5E9FE0()

	// Function Engine.SceneComponent.SetIsAttachmentReferenceReplicated
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetIsAttachmentReferenceReplicated(unsigned char ShouldReplicate);// sub_5E9A480()

	// Function Engine.SceneComponent.SetHiddenInGame
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetHiddenInGame(unsigned char NewHidden, unsigned char bPropagateToChildren);// sub_5E0A570()

	// Function Engine.SceneComponent.SetAbsolute
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAbsolute(unsigned char bNewAbsoluteLocation, unsigned char bNewAbsoluteRotation, unsigned char bNewAbsoluteScale);// sub_1224B10()

	// Function Engine.SceneComponent.ResetRelativeTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ResetRelativeTransform();// sub_4117B0()

	// Function Engine.SceneComponent.OnRep_Visibility
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_Visibility(unsigned char OldValue);// sub_4365E70()

	// Function Engine.SceneComponent.OnRep_Transform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_Transform();// sub_FFAF70()

	// Function Engine.SceneComponent.OnRep_AttachSocketName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_AttachSocketName();// sub_C55D90()

	// Function Engine.SceneComponent.OnRep_AttachParent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_AttachParent();// sub_5032B50()

	// Function Engine.SceneComponent.OnRep_AttachChildren
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_AttachChildren();// sub_4989F10()

	// Function Engine.SceneComponent.K2_SetWorldTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_SetWorldTransform(const struct FTransform& NewTransform, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_12D50E0()

	// Function Engine.SceneComponent.K2_SetWorldRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_SetWorldRotation(const struct FRotator& NewRotation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_15510A0()

	// Function Engine.SceneComponent.K2_SetWorldLocationAndRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_SetWorldLocationAndRotation(const struct FVector& NewLocation, const struct FRotator& NewRotation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_24AE630()

	// Function Engine.SceneComponent.K2_SetWorldLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_SetWorldLocation(const struct FVector& NewLocation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_151CB90()

	// Function Engine.SceneComponent.K2_SetRelativeTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_SetRelativeTransform(const struct FTransform& NewTransform, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_3E3FF30()

	// Function Engine.SceneComponent.K2_SetRelativeRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_SetRelativeRotation(const struct FRotator& NewRotation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_4E5E040()

	// Function Engine.SceneComponent.K2_SetRelativeLocationAndRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_SetRelativeLocationAndRotation(const struct FVector& NewLocation, const struct FRotator& NewRotation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_18A1550()

	// Function Engine.SceneComponent.K2_SetRelativeLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_SetRelativeLocation(const struct FVector& NewLocation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_6138530()

	// Function Engine.SceneComponent.K2_GetComponentToWorld
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTransform STATIC_K2_GetComponentToWorld();// sub_23400A0()

	// Function Engine.SceneComponent.K2_GetComponentScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_K2_GetComponentScale();// sub_4028B70()

	// Function Engine.SceneComponent.K2_GetComponentRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_K2_GetComponentRotation();// sub_5A394F0()

	// Function Engine.SceneComponent.K2_GetComponentLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_K2_GetComponentLocation();// sub_6251040()

	// Function Engine.SceneComponent.K2_DetachFromComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_DetachFromComponent(EDetachmentRule LocationRule, EDetachmentRule RotationRule, EDetachmentRule ScaleRule, unsigned char bCallModify);// sub_42B110()

	// Function Engine.SceneComponent.K2_AttachToComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_AttachToComponent(class USceneComponent* Parent, const struct FName& SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule, unsigned char bWeldSimulatedBodies);// sub_3B7EDB0()

	// Function Engine.SceneComponent.K2_AttachTo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_AttachTo(class USceneComponent* InParent, const struct FName& InSocketName, TEnumAsByte<EAttachLocation> AttachType, unsigned char bWeldSimulatedBodies);// sub_4B5010()

	// Function Engine.SceneComponent.K2_AddWorldTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_AddWorldTransform(const struct FTransform& DeltaTransform, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_4475420()

	// Function Engine.SceneComponent.K2_AddWorldRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_AddWorldRotation(const struct FRotator& DeltaRotation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_3D31B00()

	// Function Engine.SceneComponent.K2_AddWorldOffset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_AddWorldOffset(const struct FVector& DeltaLocation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_4FE48A0()

	// Function Engine.SceneComponent.K2_AddRelativeRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_AddRelativeRotation(const struct FRotator& DeltaRotation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_1AC7BA0()

	// Function Engine.SceneComponent.K2_AddRelativeLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_AddRelativeLocation(const struct FVector& DeltaLocation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_1224960()

	// Function Engine.SceneComponent.K2_AddLocalTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_AddLocalTransform(const struct FTransform& DeltaTransform, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_209D230()

	// Function Engine.SceneComponent.K2_AddLocalRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_AddLocalRotation(const struct FRotator& DeltaRotation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_2292D30()

	// Function Engine.SceneComponent.K2_AddLocalOffset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_AddLocalOffset(const struct FVector& DeltaLocation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_3BE7E30()

	// Function Engine.SceneComponent.IsVisible
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsVisible();// sub_1B99980()

	// Function Engine.SceneComponent.IsSimulatingPhysics
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsSimulatingPhysics(const struct FName& BoneName);// sub_202DD40()

	// Function Engine.SceneComponent.IsAnySimulatingPhysics
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsAnySimulatingPhysics();// sub_813D50()

	// Function Engine.SceneComponent.GetUpVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetUpVector();// sub_42B0D0()

	// Function Engine.SceneComponent.GetSocketTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTransform STATIC_GetSocketTransform(const struct FName& InSocketName, TEnumAsByte<ERelativeTransformSpace> TransformSpace);// sub_1FB9DA0()

	// Function Engine.SceneComponent.GetSocketRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_GetSocketRotation(const struct FName& InSocketName);// sub_1A44CB0()

	// Function Engine.SceneComponent.GetSocketQuaternion
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FQuat STATIC_GetSocketQuaternion(const struct FName& InSocketName);// sub_E039D0()

	// Function Engine.SceneComponent.GetSocketLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetSocketLocation(const struct FName& InSocketName);// sub_3C24DB0()

	// Function Engine.SceneComponent.GetRightVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetRightVector();// sub_2373650()

	// Function Engine.SceneComponent.GetRelativeTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTransform STATIC_GetRelativeTransform();// sub_D1E830()

	// Function Engine.SceneComponent.GetPhysicsVolume
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class APhysicsVolume* STATIC_GetPhysicsVolume();// sub_2234DD0()

	// Function Engine.SceneComponent.GetParentComponents
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetParentComponents(TArray<class USceneComponent*>* Parents);// sub_92FA80()

	// Function Engine.SceneComponent.GetNumChildrenComponents
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetNumChildrenComponents();// sub_60D6650()

	// Function Engine.SceneComponent.GetForwardVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetForwardVector();// sub_FB1D50()

	// Function Engine.SceneComponent.GetComponentVelocity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetComponentVelocity();// sub_1997A50()

	// Function Engine.SceneComponent.GetChildrenComponents
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetChildrenComponents(unsigned char bIncludeAllDescendants, TArray<class USceneComponent*>* Children);// sub_6BB190()

	// Function Engine.SceneComponent.GetChildComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class USceneComponent* STATIC_GetChildComponent(int ChildIndex);// sub_5F2C2C0()

	// Function Engine.SceneComponent.GetAttachSocketName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FName STATIC_GetAttachSocketName();// sub_3B60D90()

	// Function Engine.SceneComponent.GetAttachParent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class USceneComponent* STATIC_GetAttachParent();// sub_1CD0190()

	// Function Engine.SceneComponent.GetAllSocketNames
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TArray<struct FName> STATIC_GetAllSocketNames();// sub_1B2FA60()

	// Function Engine.SceneComponent.DoesSocketExist
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_DoesSocketExist(const struct FName& InSocketName);// sub_4522BB0()

	// Function Engine.SceneComponent.DetachFromParent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DetachFromParent(unsigned char bMaintainWorldPosition, unsigned char bCallModify);// sub_602AA60()


}


//Class Engine.AtmosphericFogComponent
//0x0210 (0x06B0 - 0x04A0)
class UAtmosphericFogComponent : public USceneComponent
{
public:
	float                                              SunMultiplier;                                            // 0x04A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FogMultiplier;                                            // 0x04A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DensityMultiplier;                                        // 0x04A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DensityOffset;                                            // 0x04AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DistanceScale;                                            // 0x04B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AltitudeScale;                                            // 0x04B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DistanceOffset;                                           // 0x04B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GroundOffset;                                             // 0x04BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              StartDistance;                                            // 0x04C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SunDiscScale;                                             // 0x04C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FFogHeightDensityPair>               HeightDensityLayers;                                      // 0x04C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              DefaultBrightness;                                        // 0x04D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FColor                                      DefaultLightColor;                                        // 0x04DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bDisableSunDisk : 1;                                      // 0x04E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bDisableGroundScattering : 1;                             // 0x04E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x04E1(0x0003) MISSED OFFSET
	struct FAtmospherePrecomputeParameters             PrecomputeParams;                                         // 0x04E4(0x002C) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UTexture2D*                                  TransmittanceTexture;                                     // 0x0510(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	class UTexture2D*                                  IrradianceTexture;                                        // 0x0518(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData01[0x190];                                     // 0x0520(0x0190) MISSED OFFSET

	// Function Engine.AtmosphericFogComponent.StartPrecompute
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StartPrecompute();// sub_4138E60()

	// Function Engine.AtmosphericFogComponent.SetSunMultiplier
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSunMultiplier(float NewSunMultiplier);// sub_4614730()

	// Function Engine.AtmosphericFogComponent.SetStartDistance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetStartDistance(float NewStartDistance);// sub_4AFEE10()

	// Function Engine.AtmosphericFogComponent.SetPrecomputeParams
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPrecomputeParams(float DensityHeight, int MaxScatteringOrder, int InscatterAltitudeSampleNum);// sub_1AA8F10()

	// Function Engine.AtmosphericFogComponent.SetFogMultiplier
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetFogMultiplier(float NewFogMultiplier);// sub_5120F80()

	// Function Engine.AtmosphericFogComponent.SetDistanceScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDistanceScale(float NewDistanceScale);// sub_16DF6D0()

	// Function Engine.AtmosphericFogComponent.SetDistanceOffset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDistanceOffset(float NewDistanceOffset);// sub_226B40()

	// Function Engine.AtmosphericFogComponent.SetDensityOffset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDensityOffset(float NewDensityOffset);// sub_55CB110()

	// Function Engine.AtmosphericFogComponent.SetDensityMultiplier
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDensityMultiplier(float NewDensityMultiplier);// sub_3C21F80()

	// Function Engine.AtmosphericFogComponent.SetDefaultLightColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDefaultLightColor(const struct FLinearColor& NewLightColor);// sub_626AA00()

	// Function Engine.AtmosphericFogComponent.SetDefaultBrightness
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDefaultBrightness(float NewBrightness);// sub_4392AB0()

	// Function Engine.AtmosphericFogComponent.SetAltitudeScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAltitudeScale(float NewAltitudeScale);// sub_61B6130()

	// Function Engine.AtmosphericFogComponent.DisableSunDisk
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DisableSunDisk(unsigned char NewSunDisk);// sub_604DD0()

	// Function Engine.AtmosphericFogComponent.DisableGroundScattering
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DisableGroundScattering(unsigned char NewGroundScattering);// sub_20FCB60()


}


//Class Engine.SpatializationPluginSourceSettingsBase
//0x0000 (0x0040 - 0x0040)
class USpatializationPluginSourceSettingsBase : public UObject
{
public:

}


//Class Engine.OcclusionPluginSourceSettingsBase
//0x0000 (0x0040 - 0x0040)
class UOcclusionPluginSourceSettingsBase : public UObject
{
public:

}


//Class Engine.ReverbPluginSourceSettingsBase
//0x0000 (0x0040 - 0x0040)
class UReverbPluginSourceSettingsBase : public UObject
{
public:

}


//Class Engine.SoundAttenuation
//0x0130 (0x0170 - 0x0040)
class USoundAttenuation : public UObject
{
public:
	struct FSoundAttenuationSettings                   Attenuation;                                              // 0x0040(0x0130) (Edit, BlueprintVisible, BlueprintReadOnly)

}


//Class Engine.AudioComponent
//0x02D0 (0x0770 - 0x04A0)
class UAudioComponent : public USceneComponent
{
public:
	class USoundBase*                                  Sound;                                                    // 0x04A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FAudioComponentParam>                InstanceParameters;                                       // 0x04A8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class USoundClass*                                 SoundClassOverride;                                       // 0x04B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAutoDestroy : 1;                                         // 0x04C0(0x0001)
	unsigned char                                      bStopWhenOwnerDestroyed : 1;                              // 0x04C0(0x0001)
	unsigned char                                      bShouldRemainActiveIfDropped : 1;                         // 0x04C0(0x0001)
	unsigned char                                      bAllowSpatialization : 1;                                 // 0x04C0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverrideAttenuation : 1;                                 // 0x04C0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x04C1(0x0003) MISSED OFFSET
	unsigned char                                      bOverrideSubtitlePriority : 1;                            // 0x04C4(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x3];                                       // 0x04C5(0x0003) MISSED OFFSET
	unsigned char                                      bIsUISound : 1;                                           // 0x04C8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bEnableLowPassFilter : 1;                                 // 0x04C8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverridePriority : 1;                                    // 0x04C8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bSuppressSubtitles : 1;                                   // 0x04C8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02[0x7];                                       // 0x04C9(0x0007) MISSED OFFSET
	struct FName                                       AudioComponentUserID;                                     // 0x04D0(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              PitchModulationMin;                                       // 0x04D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PitchModulationMax;                                       // 0x04DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VolumeModulationMin;                                      // 0x04E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VolumeModulationMax;                                      // 0x04E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // 0x04E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Priority;                                                 // 0x04EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SubtitlePriority;                                         // 0x04F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VolumeWeightedPriorityScale;                              // 0x04F4(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              PitchMultiplier;                                          // 0x04F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HighFrequencyGainMultiplier;                              // 0x04FC(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              LowPassFilterFrequency;                                   // 0x0500(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0504(0x0004) MISSED OFFSET
	class USoundAttenuation*                           AttenuationSettings;                                      // 0x0508(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSoundAttenuationSettings                   AttenuationOverrides;                                     // 0x0510(0x0130) (Edit, BlueprintVisible)
	class USoundConcurrency*                           ConcurrencySettings;                                      // 0x0640(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0648(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnAudioFinished;                                          // 0x0650(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData05[0x70];                                      // 0x0660(0x0070) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnAudioPlaybackPercent;                                   // 0x06D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData06[0x70];                                      // 0x06E0(0x0070) MISSED OFFSET
	struct FScriptDelegate                             OnQueueSubtitles;                                         // 0x0750(0x0014) (ZeroConstructor, InstancedReference)
	unsigned char                                      UnknownData07[0x10];                                      // 0x0760(0x0010) MISSED OFFSET

	// Function Engine.AudioComponent.Stop
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Stop();// sub_11EDBA0()

	// Function Engine.AudioComponent.SetWaveParameter
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetWaveParameter(const struct FName& InName, class USoundWave* InWave);// sub_958F70()

	// Function Engine.AudioComponent.SetVolumeMultiplier
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVolumeMultiplier(float NewVolumeMultiplier);// sub_66D7D0()

	// Function Engine.AudioComponent.SetUISound
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetUISound(unsigned char bInUISound);// sub_4BDB3D0()

	// Function Engine.AudioComponent.SetSubmixSend
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSubmixSend(class USoundSubmix* Submix, float SendLevel);// sub_46FD800()

	// Function Engine.AudioComponent.SetSound
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSound(class USoundBase* NewSound);// sub_5BBF230()

	// Function Engine.AudioComponent.SetPitchMultiplier
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPitchMultiplier(float NewPitchMultiplier);// sub_1110130()

	// Function Engine.AudioComponent.SetPaused
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPaused(unsigned char bPause);// sub_6042F80()

	// Function Engine.AudioComponent.SetIntParameter
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetIntParameter(const struct FName& InName, int inInt);// sub_5300420()

	// Function Engine.AudioComponent.SetFloatParameter
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetFloatParameter(const struct FName& InName, float InFloat);// sub_1CCD360()

	// Function Engine.AudioComponent.SetBoolParameter
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBoolParameter(const struct FName& InName, unsigned char InBool);// sub_5031A80()

	// Function Engine.AudioComponent.Play
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Play(float StartTime);// sub_22D6F50()

	// Function Engine.AudioComponent.IsPlaying
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsPlaying();// sub_CB1E00()

	// Function Engine.AudioComponent.FadeOut
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_FadeOut(float FadeOutDuration, float FadeVolumeLevel);// sub_48AAFC0()

	// Function Engine.AudioComponent.FadeIn
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_FadeIn(float FadeInDuration, float FadeVolumeLevel, float StartTime);// sub_12A1AF0()

	// Function Engine.AudioComponent.BP_GetAttenuationSettingsToApply
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BP_GetAttenuationSettingsToApply(struct FSoundAttenuationSettings* OutAttenuationSettings);// sub_5B6A280()

	// Function Engine.AudioComponent.AdjustVolume
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AdjustVolume(float AdjustVolumeDuration, float AdjustVolumeLevel);// sub_5BAACC0()

	// Function Engine.AudioComponent.AdjustAttenuation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AdjustAttenuation(const struct FSoundAttenuationSettings& InAttenuationSettings);// sub_49BD830()


}


//Class Engine.CameraComponent
//0x05F0 (0x0A90 - 0x04A0)
class UCameraComponent : public USceneComponent
{
public:
	float                                              FieldOfView;                                              // 0x04A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OrthoWidth;                                               // 0x04A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OrthoNearClipPlane;                                       // 0x04A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OrthoFarClipPlane;                                        // 0x04AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AspectRatio;                                              // 0x04B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bConstrainAspectRatio : 1;                                // 0x04B4(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUseFieldOfViewForLOD : 1;                                // 0x04B4(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bLockToHmd : 1;                                           // 0x04B4(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUsePawnControlRotation : 1;                              // 0x04B4(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x04B5(0x0003) MISSED OFFSET
	TEnumAsByte<ECameraProjectionMode>                 ProjectionMode;                                           // 0x04B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x04B9(0x0003) MISSED OFFSET
	float                                              PostProcessBlendWeight;                                   // 0x04BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FPostProcessSettings                        PostProcessSettings;                                      // 0x04C0(0x0570) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02[0x58];                                      // 0x0A30(0x0058) MISSED OFFSET
	unsigned char                                      bUseControllerViewRotation : 1;                           // 0x0A88(0x0001) (Deprecated)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0A89(0x0007) MISSED OFFSET

	// Function Engine.CameraComponent.SetUseFieldOfViewForLOD
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetUseFieldOfViewForLOD(unsigned char bInUseFieldOfViewForLOD);// sub_55A4750()

	// Function Engine.CameraComponent.SetProjectionMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetProjectionMode(TEnumAsByte<ECameraProjectionMode> InProjectionMode);// sub_83930()

	// Function Engine.CameraComponent.SetPostProcessBlendWeight
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPostProcessBlendWeight(float InPostProcessBlendWeight);// sub_13FE090()

	// Function Engine.CameraComponent.SetOrthoWidth
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetOrthoWidth(float InOrthoWidth);// sub_1F25690()

	// Function Engine.CameraComponent.SetOrthoNearClipPlane
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetOrthoNearClipPlane(float InOrthoNearClipPlane);// sub_5FC6260()

	// Function Engine.CameraComponent.SetOrthoFarClipPlane
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetOrthoFarClipPlane(float InOrthoFarClipPlane);// sub_1E571B0()

	// Function Engine.CameraComponent.SetFieldOfView
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetFieldOfView(float InFieldOfView);// sub_1E89E00()

	// Function Engine.CameraComponent.SetConstraintAspectRatio
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetConstraintAspectRatio(unsigned char bInConstrainAspectRatio);// sub_5163160()

	// Function Engine.CameraComponent.SetAspectRatio
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAspectRatio(float InAspectRatio);// sub_48AB090()

	// Function Engine.CameraComponent.GetCameraView
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetCameraView(float DeltaTime, struct FMinimalViewInfo* DesiredView);// sub_17DE180()

	// Function Engine.CameraComponent.AddOrUpdateBlendable
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddOrUpdateBlendable(const TScriptInterface<class UBlendableInterface>& InBlendableObject, float InWeight);// sub_245CAF0()


}


//Class Engine.DecalComponent
//0x0090 (0x0530 - 0x04A0)
class UDecalComponent : public USceneComponent
{
public:
	class UMaterialInterface*                          DecalMaterial;                                            // 0x04A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SortOrder;                                                // 0x04A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FadeScreenSize;                                           // 0x04AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FadeStartDelay;                                           // 0x04B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FadeDuration;                                             // 0x04B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bDestroyOwnerAfterFade : 1;                               // 0x04B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x04B9(0x0003) MISSED OFFSET
	struct FVector                                     DecalSize;                                                // 0x04BC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              NormalFadeStart;                                          // 0x04C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              NormalFadeEnd;                                            // 0x04CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bHideOnMovableObjects : 1;                                // 0x04D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5F];                                      // 0x04D1(0x005F) MISSED OFFSET

	// Function Engine.DecalComponent.SetSortOrder
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSortOrder(int Value);// sub_4C98530()

	// Function Engine.DecalComponent.SetFadeOut
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetFadeOut(float StartDelay, float Duration, unsigned char DestroyOwnerAfterFade);// sub_1746900()

	// Function Engine.DecalComponent.SetDecalMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDecalMaterial(class UMaterialInterface* NewDecalMaterial);// sub_108E400()

	// Function Engine.DecalComponent.GetFadeStartDelay
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetFadeStartDelay();// sub_5C6590()

	// Function Engine.DecalComponent.GetFadeDuration
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetFadeDuration();// sub_191A000()

	// Function Engine.DecalComponent.GetDecalMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UMaterialInterface* STATIC_GetDecalMaterial();// sub_4DB2150()

	// Function Engine.DecalComponent.CreateDynamicMaterialInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UMaterialInstanceDynamic* STATIC_CreateDynamicMaterialInstance();// sub_7CD5F0()


}


//Class Engine.DistanceFieldCaptureComponent
//0x0010 (0x04B0 - 0x04A0)
class UDistanceFieldCaptureComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04A0(0x0010) MISSED OFFSET

}


//Class Engine.ExponentialHeightFogComponent
//0x00C0 (0x0560 - 0x04A0)
class UExponentialHeightFogComponent : public USceneComponent
{
public:
	float                                              FogDensity;                                               // 0x04A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FogInscatteringColor;                                     // 0x04A4(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04B4(0x0004) MISSED OFFSET
	TArray<struct FFogHeightDensityPair2>              HeightDensityLayers;                                      // 0x04B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UTextureCube*                                InscatteringColorCubemap;                                 // 0x04C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              InscatteringColorCubemapAngle;                            // 0x04D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                InscatteringTextureTint;                                  // 0x04D4(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FullyDirectionalInscatteringColorDistance;                // 0x04E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              NonDirectionalInscatteringColorDistance;                  // 0x04E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DirectionalInscatteringExponent;                          // 0x04EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DirectionalInscatteringStartDistance;                     // 0x04F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                DirectionalInscatteringColor;                             // 0x04F4(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FogHeightFalloff;                                         // 0x0504(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FogMaxOpacity;                                            // 0x0508(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StartDistance;                                            // 0x050C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FogCutoffDistance;                                        // 0x0510(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnableVolumetricFog : 1;                                 // 0x0514(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0515(0x0003) MISSED OFFSET
	float                                              VolumetricFogScatteringDistribution;                      // 0x0518(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FColor                                      VolumetricFogAlbedo;                                      // 0x051C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                VolumetricFogEmissive;                                    // 0x0520(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              VolumetricFogExtinctionScale;                             // 0x0530(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              VolumetricFogDistance;                                    // 0x0534(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bOverrideLightColorsWithFogInscatteringColors : 1;        // 0x0538(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x0539(0x0001)
	unsigned char                                      bUseExtendedFog : 1;                                      // 0x0539(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x053A(0x0002) MISSED OFFSET
	float                                              ExtendedFogStartDistance;                                 // 0x053C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ExtendedFogStartFalloffDistance;                          // 0x0540(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ExtendedHeight;                                           // 0x0544(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ExtendedFallOff;                                          // 0x0548(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ExtendedFogDensity;                                       // 0x054C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              UpDensity;                                                // 0x0550(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DownDensity;                                              // 0x0554(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Intensity;                                                // 0x0558(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseAtmosphereScattering : 1;                             // 0x055C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x055D(0x0003) MISSED OFFSET

	// Function Engine.ExponentialHeightFogComponent.SetVolumetricFogScatteringDistribution
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVolumetricFogScatteringDistribution(float NewValue);// sub_3FF4820()

	// Function Engine.ExponentialHeightFogComponent.SetVolumetricFogExtinctionScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVolumetricFogExtinctionScale(float NewValue);// sub_23D54B0()

	// Function Engine.ExponentialHeightFogComponent.SetVolumetricFogEmissive
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVolumetricFogEmissive(const struct FLinearColor& NewValue);// sub_5B361B0()

	// Function Engine.ExponentialHeightFogComponent.SetVolumetricFogDistance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVolumetricFogDistance(float NewValue);// sub_5C600A0()

	// Function Engine.ExponentialHeightFogComponent.SetVolumetricFogAlbedo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVolumetricFogAlbedo(const struct FColor& NewValue);// sub_1FFC570()

	// Function Engine.ExponentialHeightFogComponent.SetVolumetricFog
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVolumetricFog(unsigned char bNewValue);// sub_760EB0()

	// Function Engine.ExponentialHeightFogComponent.SetUpDensity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetUpDensity(float Value);// sub_3C83630()

	// Function Engine.ExponentialHeightFogComponent.SetStartDistance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetStartDistance(float Value);// sub_5CBCCB0()

	// Function Engine.ExponentialHeightFogComponent.SetNonDirectionalInscatteringColorDistance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetNonDirectionalInscatteringColorDistance(float Value);// sub_5344570()

	// Function Engine.ExponentialHeightFogComponent.SetIntensity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetIntensity(float Value);// sub_18A0190()

	// Function Engine.ExponentialHeightFogComponent.SetInscatteringTextureTint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetInscatteringTextureTint(const struct FLinearColor& Value);// sub_4B512A0()

	// Function Engine.ExponentialHeightFogComponent.SetInscatteringColorCubemapAngle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetInscatteringColorCubemapAngle(float Value);// sub_5275A70()

	// Function Engine.ExponentialHeightFogComponent.SetInscatteringColorCubemap
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetInscatteringColorCubemap(class UTextureCube* Value);// sub_19E160()

	// Function Engine.ExponentialHeightFogComponent.SetFullyDirectionalInscatteringColorDistance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetFullyDirectionalInscatteringColorDistance(float Value);// sub_14BDDF0()

	// Function Engine.ExponentialHeightFogComponent.SetFogMaxOpacity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetFogMaxOpacity(float Value);// sub_14BDD70()

	// Function Engine.ExponentialHeightFogComponent.SetFogInscatteringColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetFogInscatteringColor(const struct FLinearColor& Value);// sub_3EACDA0()

	// Function Engine.ExponentialHeightFogComponent.SetFogHeightFalloff
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetFogHeightFalloff(float Value);// sub_3D2F080()

	// Function Engine.ExponentialHeightFogComponent.SetFogDensity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetFogDensity(float Value);// sub_5499370()

	// Function Engine.ExponentialHeightFogComponent.SetFogCutoffDistance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetFogCutoffDistance(float Value);// sub_23D5430()

	// Function Engine.ExponentialHeightFogComponent.SetExtendedHeightFallOff
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetExtendedHeightFallOff(float Value);// sub_54C7280()

	// Function Engine.ExponentialHeightFogComponent.SetExtendedHeight
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetExtendedHeight(float Value);// sub_54EF350()

	// Function Engine.ExponentialHeightFogComponent.SetExtendedFogStartFalloffDistance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetExtendedFogStartFalloffDistance(float Value);// sub_4D18770()

	// Function Engine.ExponentialHeightFogComponent.SetExtendedFogStartDistance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetExtendedFogStartDistance(float Value);// sub_4392B30()

	// Function Engine.ExponentialHeightFogComponent.SetExtendedFogDensity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetExtendedFogDensity(float Value);// sub_3B4AF40()

	// Function Engine.ExponentialHeightFogComponent.SetDownDensity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDownDensity(float Value);// sub_1F25610()

	// Function Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringStartDistance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDirectionalInscatteringStartDistance(float Value);// sub_1730650()

	// Function Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringExponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDirectionalInscatteringExponent(float Value);// sub_4BF7EE0()

	// Function Engine.ExponentialHeightFogComponent.SetDirectionalInscatteringColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDirectionalInscatteringColor(const struct FLinearColor& Value);// sub_4D88100()


}


//Class Engine.ForceFeedbackAttenuation
//0x00A8 (0x00E8 - 0x0040)
class UForceFeedbackAttenuation : public UObject
{
public:
	struct FForceFeedbackAttenuationSettings           Attenuation;                                              // 0x0040(0x00A8) (Edit, BlueprintVisible, BlueprintReadOnly)

}


//Class Engine.ForceFeedbackComponent
//0x00E0 (0x0580 - 0x04A0)
class UForceFeedbackComponent : public USceneComponent
{
public:
	class UForceFeedbackEffect*                        ForceFeedbackEffect;                                      // 0x04A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAutoDestroy : 1;                                         // 0x04A8(0x0001)
	unsigned char                                      bStopWhenOwnerDestroyed : 1;                              // 0x04A8(0x0001)
	unsigned char                                      bLooping : 1;                                             // 0x04A8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverrideAttenuation : 1;                                 // 0x04A8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x04A9(0x0003) MISSED OFFSET
	float                                              IntensityMultiplier;                                      // 0x04AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UForceFeedbackAttenuation*                   AttenuationSettings;                                      // 0x04B0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FForceFeedbackAttenuationSettings           AttenuationOverrides;                                     // 0x04B8(0x00A8) (Edit, BlueprintVisible)
	struct FScriptMulticastDelegate                    OnForceFeedbackFinished;                                  // 0x0560(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0570(0x0010) MISSED OFFSET

	// Function Engine.ForceFeedbackComponent.Stop
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Stop();// sub_2151D60()

	// Function Engine.ForceFeedbackComponent.SetIntensityMultiplier
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetIntensityMultiplier(float NewIntensityMultiplier);// sub_48DF6E0()

	// Function Engine.ForceFeedbackComponent.SetForceFeedbackEffect
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetForceFeedbackEffect(class UForceFeedbackEffect* NewForceFeedbackEffect);// sub_6DADF0()

	// Function Engine.ForceFeedbackComponent.Play
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Play(float StartTime);// sub_4A249F0()

	// Function Engine.ForceFeedbackComponent.BP_GetAttenuationSettingsToApply
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BP_GetAttenuationSettingsToApply(struct FForceFeedbackAttenuationSettings* OutAttenuationSettings);// sub_4C15DB0()

	// Function Engine.ForceFeedbackComponent.AdjustAttenuation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AdjustAttenuation(const struct FForceFeedbackAttenuationSettings& InAttenuationSettings);// sub_1A11600()


}


//Class Engine.InstancedDeferredDecalComponent
//0x00A0 (0x0540 - 0x04A0)
class UInstancedDeferredDecalComponent : public USceneComponent
{
public:
	unsigned char                                      KeepInstanceBufferCPUAccess : 1;                          // 0x04A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x04A1(0x0007) MISSED OFFSET
	class UMaterialInterface*                          DecalMaterial;                                            // 0x04A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x90];                                      // 0x04B0(0x0090) MISSED OFFSET

	// Function Engine.InstancedDeferredDecalComponent.SetDecalMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDecalMaterial(class UMaterialInterface* NewDecalMaterial);// sub_1E711B0()

	// Function Engine.InstancedDeferredDecalComponent.GetDecalMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UMaterialInterface* STATIC_GetDecalMaterial();// sub_4410140()

	// Function Engine.InstancedDeferredDecalComponent.CreateDynamicMaterialInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UMaterialInstanceDynamic* STATIC_CreateDynamicMaterialInstance();// sub_7CD5F0()


}


//Class Engine.InstancedSplineDecalComponent
//0x0070 (0x0510 - 0x04A0)
class UInstancedSplineDecalComponent : public USceneComponent
{
public:
	unsigned char                                      UseDynamicInstanceBuffer : 1;                             // 0x04A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x04A1(0x0001)
	unsigned char                                      KeepInstanceBufferCPUAccess : 1;                          // 0x04A1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x04A2(0x0006) MISSED OFFSET
	TArray<struct FInstancedSplineDecalInstanceData>   PerInstanceDecalData;                                     // 0x04A8(0x0010) (Edit, ZeroConstructor)
	class UStaticMesh*                                 StaticMesh;                                               // 0x04B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          DecalMaterial;                                            // 0x04C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x48];                                      // 0x04C8(0x0048) MISSED OFFSET

	// Function Engine.InstancedSplineDecalComponent.SetStaticMesh
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_SetStaticMesh(class UStaticMesh* NewMesh);// sub_3AD2FF0()

	// Function Engine.InstancedSplineDecalComponent.SetDecalMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDecalMaterial(class UMaterialInterface* NewDecalMaterial);// sub_3DAE70()

	// Function Engine.InstancedSplineDecalComponent.RemoveInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_RemoveInstance(int InstanceIndex);// sub_22321E0()

	// Function Engine.InstancedSplineDecalComponent.OnRep_StaticMesh
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_StaticMesh(class UStaticMesh* OldStaticMesh);// sub_7FF3C0()

	// Function Engine.InstancedSplineDecalComponent.GetInstanceCount
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetInstanceCount();// sub_10A36C0()

	// Function Engine.InstancedSplineDecalComponent.GetDecalMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UMaterialInterface* STATIC_GetDecalMaterial();// sub_19D8F50()

	// Function Engine.InstancedSplineDecalComponent.CreateDynamicMaterialInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UMaterialInstanceDynamic* STATIC_CreateDynamicMaterialInstance();// sub_6080E50()

	// Function Engine.InstancedSplineDecalComponent.ClearInstances
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearInstances();// sub_45D540()

	// Function Engine.InstancedSplineDecalComponent.AddInstanceWorldSpace
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_AddInstanceWorldSpace(const struct FTransform& WorldTransform, const struct FSplineParams& SplineParams);// sub_D1C460()

	// Function Engine.InstancedSplineDecalComponent.AddInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_AddInstance(const struct FTransform& InstanceTransform, const struct FSplineParams& SplineParams);// sub_123B4E0()


}


//Class Engine.DataAsset
//0x0008 (0x0048 - 0x0040)
class UDataAsset : public UObject
{
public:
	class UDataAsset*                                  NativeClass;                                              // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)

}


//Class Engine.PrimaryDataAsset
//0x0000 (0x0048 - 0x0048)
class UPrimaryDataAsset : public UDataAsset
{
public:

}


//Class Engine.LevelBlockType
//0x0028 (0x0070 - 0x0048)
class ULevelBlockType : public UDataAsset
{
public:
	ESpawnPointRollType                                RollType;                                                 // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	TArray<struct FLevelBlockVariation>                Variants;                                                 // 0x0050(0x0010) (Edit, ZeroConstructor)
	TArray<struct FRotationRange>                      RotationRanges;                                           // 0x0060(0x0010) (Edit, ZeroConstructor)

}


//Class Engine.LevelBlockSpawnPointComponent
//0x0010 (0x04B0 - 0x04A0)
class ULevelBlockSpawnPointComponent : public USceneComponent
{
public:
	class ULevelBlockType*                             LevelBlockType;                                           // 0x04A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRandomizeRotation : 1;                                   // 0x04A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EPreviewIndexType                                  PreviewIndexType;                                         // 0x04A9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x04AA(0x0002) MISSED OFFSET
	int                                                PreviewIndex;                                             // 0x04AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.LightComponentBase
//0x0030 (0x04D0 - 0x04A0)
class ULightComponentBase : public USceneComponent
{
public:
	struct FGuid                                       LightGuid;                                                // 0x04A0(0x0010) (ZeroConstructor, IsPlainOldData)
	float                                              Brightness;                                               // 0x04B0(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              Intensity;                                                // 0x04B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FColor                                      LightColor;                                               // 0x04B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAffectsWorld : 1;                                        // 0x04BC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      CastShadows : 1;                                          // 0x04BC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      CastStaticShadows : 1;                                    // 0x04BC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      CastDynamicShadows : 1;                                   // 0x04BC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bAffectTranslucentLighting : 1;                           // 0x04BC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCastVolumetricShadow : 1;                                // 0x04BC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x04BD(0x0003) MISSED OFFSET
	float                                              IndirectLightingIntensity;                                // 0x04C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              VolumetricScatteringIntensity;                            // 0x04C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bCachedCastShadow : 1;                                    // 0x04C8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x04C9(0x0007) MISSED OFFSET

	// Function Engine.LightComponentBase.SetCastVolumetricShadow
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCastVolumetricShadow(unsigned char bNewValue);// sub_1F3E9F0()

	// Function Engine.LightComponentBase.SetCastShadows
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCastShadows(unsigned char bNewValue);// sub_118AF50()

	// Function Engine.LightComponentBase.GetLightColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FLinearColor STATIC_GetLightColor();// sub_56199B0()


}


//Class Engine.LightComponent
//0x0110 (0x05E0 - 0x04D0)
class ULightComponent : public ULightComponentBase
{
public:
	float                                              Temperature;                                              // 0x04D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxDrawDistance;                                          // 0x04D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistanceFadeRange;                                     // 0x04D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseTemperature : 1;                                      // 0x04DC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x04DD(0x0003) MISSED OFFSET
	int                                                ShadowMapChannel;                                         // 0x04E0(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04E4(0x0004) MISSED OFFSET
	float                                              MinRoughness;                                             // 0x04E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ShadowResolutionScale;                                    // 0x04EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ShadowBias;                                               // 0x04F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ShadowSharpen;                                            // 0x04F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ContactShadowLength;                                      // 0x04F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      InverseSquaredFalloff : 1;                                // 0x04FC(0x0001) (Deprecated)
	unsigned char                                      CastTranslucentShadows : 1;                               // 0x04FC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCastShadowsFromCinematicObjectsOnly : 1;                 // 0x04FC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bAffectDynamicIndirectLighting : 1;                       // 0x04FC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData02[0x3];                                       // 0x04FD(0x0003) MISSED OFFSET
	struct FLightingChannels                           LightingChannels;                                         // 0x0500(0x0003) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData03[0x5];                                       // 0x0503(0x0005) MISSED OFFSET
	class UMaterialInterface*                          LightFunctionMaterial;                                    // 0x0508(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LightFunctionScale;                                       // 0x0510(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x051C(0x0004) MISSED OFFSET
	class UTextureLightProfile*                        IESTexture;                                               // 0x0520(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseIESBrightness : 1;                                    // 0x0528(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0529(0x0003) MISSED OFFSET
	float                                              IESBrightnessScale;                                       // 0x052C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LightFunctionFadeDistance;                                // 0x0530(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DisabledBrightness;                                       // 0x0534(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnableLightShaftBloom : 1;                               // 0x0538(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0539(0x0003) MISSED OFFSET
	float                                              BloomScale;                                               // 0x053C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BloomThreshold;                                           // 0x0540(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FColor                                      BloomTint;                                                // 0x0544(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseRayTracedDistanceFieldShadows : 1;                    // 0x0548(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0549(0x0003) MISSED OFFSET
	float                                              RayStartOffsetDepthScale;                                 // 0x054C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x90];                                      // 0x0550(0x0090) MISSED OFFSET

	// Function Engine.LightComponent.SetVolumetricScatteringIntensity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVolumetricScatteringIntensity(float NewIntensity);// sub_15B2130()

	// Function Engine.LightComponent.SetTemperature
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTemperature(float NewTemperature);// sub_419FB50()

	// Function Engine.LightComponent.SetLightFunctionScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLightFunctionScale(const struct FVector& NewLightFunctionScale);// sub_3E5D2A0()

	// Function Engine.LightComponent.SetLightFunctionMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLightFunctionMaterial(class UMaterialInterface* NewLightFunctionMaterial);// sub_3D96F10()

	// Function Engine.LightComponent.SetLightFunctionFadeDistance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLightFunctionFadeDistance(float NewLightFunctionFadeDistance);// sub_4125C80()

	// Function Engine.LightComponent.SetLightFunctionDisabledBrightness
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLightFunctionDisabledBrightness(float NewValue);// sub_5602B0()

	// Function Engine.LightComponent.SetLightColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLightColor(const struct FLinearColor& NewLightColor, unsigned char bSRGB);// sub_391150()

	// Function Engine.LightComponent.SetIntensity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetIntensity(float NewIntensity);// sub_468F2D0()

	// Function Engine.LightComponent.SetIndirectLightingIntensity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetIndirectLightingIntensity(float NewIntensity);// sub_4D57F80()

	// Function Engine.LightComponent.SetIESTexture
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetIESTexture(class UTextureLightProfile* NewValue);// sub_1488250()

	// Function Engine.LightComponent.SetEnableLightShaftBloom
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetEnableLightShaftBloom(unsigned char bNewValue);// sub_1078600()

	// Function Engine.LightComponent.SetBloomTint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBloomTint(const struct FColor& NewValue);// sub_4A59910()

	// Function Engine.LightComponent.SetBloomThreshold
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBloomThreshold(float NewValue);// sub_40BC400()

	// Function Engine.LightComponent.SetBloomScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBloomScale(float NewValue);// sub_5AC44B0()

	// Function Engine.LightComponent.SetAffectTranslucentLighting
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAffectTranslucentLighting(unsigned char bNewValue);// sub_98ACC0()

	// Function Engine.LightComponent.SetAffectDynamicIndirectLighting
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAffectDynamicIndirectLighting(unsigned char bNewValue);// sub_14D56C0()


}


//Class Engine.DirectionalLightComponent
//0x0070 (0x0650 - 0x05E0)
class UDirectionalLightComponent : public ULightComponent
{
public:
	float                                              OcclusionDepthRange;                                      // 0x05E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LightShaftOverrideDirection;                              // 0x05E4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WholeSceneDynamicShadowRadius;                            // 0x05F0(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              DynamicShadowDistanceMovableLight;                        // 0x05F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DynamicShadowDistanceStationaryLight;                     // 0x05F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DynamicShadowCascades;                                    // 0x05FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CascadeDistributionExponent;                              // 0x0600(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CascadeTransitionFraction;                                // 0x0604(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ShadowDistanceFadeoutFraction;                            // 0x0608(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseInsetShadowsForMovableObjects : 1;                    // 0x060C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x060D(0x0003) MISSED OFFSET
	int                                                FarShadowCascadeCount;                                    // 0x0610(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FarShadowDistance;                                        // 0x0614(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DistanceFieldShadowDistance;                              // 0x0618(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LightSourceAngle;                                         // 0x061C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TraceDistance;                                            // 0x0620(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLightmassDirectionalLightSettings          LightmassSettings;                                        // 0x0624(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCastModulatedShadows : 1;                                // 0x0634(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0635(0x0003) MISSED OFFSET
	struct FColor                                      ModulatedShadowColor;                                     // 0x0638(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUsedAsAtmosphereSunLight : 1;                            // 0x063C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUseGridShadow : 1;                                       // 0x063C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData02[0x3];                                       // 0x063D(0x0003) MISSED OFFSET
	TArray<struct FGridShadowSplitSettings>            GridShadowSplitSettings;                                  // 0x0640(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	// Function Engine.DirectionalLightComponent.SetShadowDistanceFadeoutFraction
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetShadowDistanceFadeoutFraction(float NewValue);// sub_55F8720()

	// Function Engine.DirectionalLightComponent.SetOcclusionMaskDarkness
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetOcclusionMaskDarkness(float NewValue);// sub_FB0550()

	// Function Engine.DirectionalLightComponent.SetLightShaftOverrideDirection
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLightShaftOverrideDirection(const struct FVector& NewValue);// sub_5FF8910()

	// Function Engine.DirectionalLightComponent.SetEnableLightShaftOcclusion
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetEnableLightShaftOcclusion(unsigned char bNewValue);// sub_E7CCB0()

	// Function Engine.DirectionalLightComponent.SetDynamicShadowDistanceStationaryLight
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDynamicShadowDistanceStationaryLight(float NewValue);// sub_134690()

	// Function Engine.DirectionalLightComponent.SetDynamicShadowDistanceMovableLight
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDynamicShadowDistanceMovableLight(float NewValue);// sub_3AFB110()

	// Function Engine.DirectionalLightComponent.SetDynamicShadowCascades
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDynamicShadowCascades(int NewValue);// sub_1078580()

	// Function Engine.DirectionalLightComponent.SetCascadeTransitionFraction
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCascadeTransitionFraction(float NewValue);// sub_11100B0()

	// Function Engine.DirectionalLightComponent.SetCascadeDistributionExponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCascadeDistributionExponent(float NewValue);// sub_3CBB830()


}


//Class Engine.PointLightComponent
//0x0020 (0x0600 - 0x05E0)
class UPointLightComponent : public ULightComponent
{
public:
	unsigned char                                      bUseInverseSquaredFalloff : 1;                            // 0x05E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x05E1(0x0003) MISSED OFFSET
	float                                              LightFalloffExponent;                                     // 0x05E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SourceRadius;                                             // 0x05E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SourceLength;                                             // 0x05EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLightmassPointLightSettings                LightmassSettings;                                        // 0x05F0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x4];                                       // 0x05FC(0x0004) MISSED OFFSET

	// Function Engine.PointLightComponent.SetSourceRadius
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSourceRadius(float bNewValue);// sub_49D7CB0()

	// Function Engine.PointLightComponent.SetSourceLength
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSourceLength(float NewValue);// sub_5D5C5E0()

	// Function Engine.PointLightComponent.SetLightFalloffExponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLightFalloffExponent(float NewLightFalloffExponent);// sub_1A8BE10()

	// Function Engine.PointLightComponent.SetAttenuationRadius
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAttenuationRadius(float NewRadius);// sub_46E6590()


}


//Class Engine.SpotLightComponent
//0x0010 (0x0610 - 0x0600)
class USpotLightComponent : public UPointLightComponent
{
public:
	float                                              InnerConeAngle;                                           // 0x0600(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              OuterConeAngle;                                           // 0x0604(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LightShaftConeAngle;                                      // 0x0608(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x060C(0x0004) MISSED OFFSET

	// Function Engine.SpotLightComponent.SetOuterConeAngle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetOuterConeAngle(float NewOuterConeAngle);// sub_4AD23A0()

	// Function Engine.SpotLightComponent.SetInnerConeAngle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetInnerConeAngle(float NewInnerConeAngle);// sub_1C0EF60()


}


//Class Engine.SkyLightComponent
//0x01B0 (0x0680 - 0x04D0)
class USkyLightComponent : public ULightComponentBase
{
public:
	TEnumAsByte<ESkyLightSourceType>                   SourceType;                                               // 0x04D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x04D1(0x0007) MISSED OFFSET
	class UTextureCube*                                Cubemap;                                                  // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SourceCubemapAngle;                                       // 0x04E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CubemapResolution;                                        // 0x04E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SkyDistanceThreshold;                                     // 0x04E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bCaptureEmissiveOnly : 1;                                 // 0x04EC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x04ED(0x0001)
	unsigned char                                      bLowerHemisphereIsBlack : 1;                              // 0x04ED(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x04EE(0x0002) MISSED OFFSET
	struct FLinearColor                                LowerHemisphereColor;                                     // 0x04F0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              OcclusionMaxDistance;                                     // 0x0500(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Contrast;                                                 // 0x0504(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              OcclusionExponent;                                        // 0x0508(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinOcclusion;                                             // 0x050C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FColor                                      OcclusionTint;                                            // 0x0510(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EOcclusionCombineMode>                 OcclusionCombineMode;                                     // 0x0514(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xA3];                                      // 0x0515(0x00A3) MISSED OFFSET
	class UTextureCube*                                BlendDestinationCubemap;                                  // 0x05B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0xC0];                                      // 0x05C0(0x00C0) MISSED OFFSET

	// Function Engine.SkyLightComponent.SetVolumetricScatteringIntensity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVolumetricScatteringIntensity(float NewIntensity);// sub_3CA3630()

	// Function Engine.SkyLightComponent.SetOcclusionTint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetOcclusionTint(const struct FColor& InTint);// sub_2479050()

	// Function Engine.SkyLightComponent.SetOcclusionExponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetOcclusionExponent(float InOcclusionExponent);// sub_3F20AE0()

	// Function Engine.SkyLightComponent.SetOcclusionContrast
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetOcclusionContrast(float InOcclusionContrast);// sub_17C28D0()

	// Function Engine.SkyLightComponent.SetMinOcclusion
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetMinOcclusion(float InMinOcclusion);// sub_48DF760()

	// Function Engine.SkyLightComponent.SetLightColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLightColor(const struct FLinearColor& NewLightColor);// sub_233E7E0()

	// Function Engine.SkyLightComponent.SetIntensity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetIntensity(float NewIntensity);// sub_4DB2180()

	// Function Engine.SkyLightComponent.SetIndirectLightingIntensity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetIndirectLightingIntensity(float NewIntensity);// sub_F7C7A0()

	// Function Engine.SkyLightComponent.SetCubemapBlend
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCubemapBlend(class UTextureCube* SourceCubemap, class UTextureCube* DestinationCubemap, float InBlendFraction);// sub_3BFF290()

	// Function Engine.SkyLightComponent.SetCubemap
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCubemap(class UTextureCube* NewCubemap);// sub_55244F0()

	// Function Engine.SkyLightComponent.RecaptureSky
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RecaptureSky();// sub_1222510()


}


//Class Engine.LightmassPortalComponent
//0x0010 (0x04B0 - 0x04A0)
class ULightmassPortalComponent : public USceneComponent
{
public:
	class UBoxComponent*                               PreviewBox;                                               // 0x04A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x04A8(0x0008) MISSED OFFSET

}


//Class Engine.NavigationGraphNodeComponent
//0x0030 (0x04D0 - 0x04A0)
class UNavigationGraphNodeComponent : public USceneComponent
{
public:
	struct FNavGraphNode                               Node;                                                     // 0x04A0(0x0018)
	class UNavigationGraphNodeComponent*               NextNodeComponent;                                        // 0x04B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UNavigationGraphNodeComponent*               PrevNodeComponent;                                        // 0x04C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x04C8(0x0008) MISSED OFFSET

}


//Class Engine.PhysicsConstraintComponent
//0x0240 (0x06E0 - 0x04A0)
class UPhysicsConstraintComponent : public USceneComponent
{
public:
	class AActor*                                      ConstraintActor1;                                         // 0x04A0(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FConstrainComponentPropName                 ComponentName1;                                           // 0x04A8(0x0008) (Edit)
	class AActor*                                      ConstraintActor2;                                         // 0x04B0(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FConstrainComponentPropName                 ComponentName2;                                           // 0x04B8(0x0008) (Edit)
	unsigned char                                      UnknownData00[0x10];                                      // 0x04C0(0x0010) MISSED OFFSET
	class UPhysicsConstraintTemplate*                  ConstraintSetup;                                          // 0x04D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnConstraintBroken;                                       // 0x04D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x8];                                       // 0x04E8(0x0008) MISSED OFFSET
	struct FConstraintInstance                         ConstraintInstance;                                       // 0x04F0(0x01F0) (Edit)

	// Function Engine.PhysicsConstraintComponent.SetOrientationDriveTwistAndSwing
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetOrientationDriveTwistAndSwing(unsigned char bEnableTwistDrive, unsigned char bEnableSwingDrive);// sub_41D6370()

	// Function Engine.PhysicsConstraintComponent.SetOrientationDriveSLERP
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetOrientationDriveSLERP(unsigned char bEnableSLERP);// sub_24AD510()

	// Function Engine.PhysicsConstraintComponent.SetLinearZLimit
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLinearZLimit(TEnumAsByte<ELinearConstraintMotion> ConstraintType, float LimitSize);// sub_2C97B0()

	// Function Engine.PhysicsConstraintComponent.SetLinearYLimit
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLinearYLimit(TEnumAsByte<ELinearConstraintMotion> ConstraintType, float LimitSize);// sub_5752720()

	// Function Engine.PhysicsConstraintComponent.SetLinearXLimit
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLinearXLimit(TEnumAsByte<ELinearConstraintMotion> ConstraintType, float LimitSize);// sub_4BF7F60()

	// Function Engine.PhysicsConstraintComponent.SetLinearVelocityTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLinearVelocityTarget(const struct FVector& InVelTarget);// sub_E996E0()

	// Function Engine.PhysicsConstraintComponent.SetLinearVelocityDrive
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLinearVelocityDrive(unsigned char bEnableDriveX, unsigned char bEnableDriveY, unsigned char bEnableDriveZ);// sub_A2D20()

	// Function Engine.PhysicsConstraintComponent.SetLinearPositionTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLinearPositionTarget(const struct FVector& InPosTarget);// sub_1C5DE10()

	// Function Engine.PhysicsConstraintComponent.SetLinearPositionDrive
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLinearPositionDrive(unsigned char bEnableDriveX, unsigned char bEnableDriveY, unsigned char bEnableDriveZ);// sub_45E77A0()

	// Function Engine.PhysicsConstraintComponent.SetLinearDriveParams
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLinearDriveParams(float PositionStrength, float VelocityStrength, float InForceLimit);// sub_1306930()

	// Function Engine.PhysicsConstraintComponent.SetDisableCollision
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDisableCollision(unsigned char bDisableCollision);// sub_15B20A0()

	// Function Engine.PhysicsConstraintComponent.SetConstraintReferencePosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetConstraintReferencePosition(TEnumAsByte<EConstraintFrame> Frame, const struct FVector& RefPosition);// sub_1D1BCA0()

	// Function Engine.PhysicsConstraintComponent.SetConstraintReferenceOrientation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetConstraintReferenceOrientation(TEnumAsByte<EConstraintFrame> Frame, const struct FVector& PriAxis, const struct FVector& SecAxis);// sub_A2C00()

	// Function Engine.PhysicsConstraintComponent.SetConstraintReferenceFrame
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetConstraintReferenceFrame(TEnumAsByte<EConstraintFrame> Frame, const struct FTransform& RefFrame);// sub_1903A00()

	// Function Engine.PhysicsConstraintComponent.SetConstrainedComponents
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetConstrainedComponents(class UPrimitiveComponent* Component1, const struct FName& BoneName1, class UPrimitiveComponent* Component2, const struct FName& BoneName2);// sub_428DD30()

	// Function Engine.PhysicsConstraintComponent.SetAngularVelocityTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAngularVelocityTarget(const struct FVector& InVelTarget);// sub_11EDB10()

	// Function Engine.PhysicsConstraintComponent.SetAngularVelocityDriveTwistAndSwing
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAngularVelocityDriveTwistAndSwing(unsigned char bEnableTwistDrive, unsigned char bEnableSwingDrive);// sub_5C5FFD0()

	// Function Engine.PhysicsConstraintComponent.SetAngularVelocityDriveSLERP
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAngularVelocityDriveSLERP(unsigned char bEnableSLERP);// sub_605D1A0()

	// Function Engine.PhysicsConstraintComponent.SetAngularVelocityDrive
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAngularVelocityDrive(unsigned char bEnableSwingDrive, unsigned char bEnableTwistDrive);// sub_550B840()

	// Function Engine.PhysicsConstraintComponent.SetAngularTwistLimit
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAngularTwistLimit(TEnumAsByte<EAngularConstraintMotion> ConstraintType, float TwistLimitAngle);// sub_7FF440()

	// Function Engine.PhysicsConstraintComponent.SetAngularSwing2Limit
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAngularSwing2Limit(TEnumAsByte<EAngularConstraintMotion> MotionType, float Swing2LimitAngle);// sub_5695430()

	// Function Engine.PhysicsConstraintComponent.SetAngularSwing1Limit
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAngularSwing1Limit(TEnumAsByte<EAngularConstraintMotion> MotionType, float Swing1LimitAngle);// sub_4FFF160()

	// Function Engine.PhysicsConstraintComponent.SetAngularOrientationTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAngularOrientationTarget(const struct FRotator& InPosTarget);// sub_14D5750()

	// Function Engine.PhysicsConstraintComponent.SetAngularOrientationDrive
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAngularOrientationDrive(unsigned char bEnableSwingDrive, unsigned char bEnableTwistDrive);// sub_186B4F0()

	// Function Engine.PhysicsConstraintComponent.SetAngularDriveParams
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAngularDriveParams(float PositionStrength, float VelocityStrength, float InForceLimit);// sub_1C0EE50()

	// Function Engine.PhysicsConstraintComponent.SetAngularDriveMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAngularDriveMode(TEnumAsByte<EAngularDriveMode> DriveMode);// sub_5EC73B0()

	// Function Engine.PhysicsConstraintComponent.GetCurrentTwist
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetCurrentTwist();// sub_3B5EE00()

	// Function Engine.PhysicsConstraintComponent.GetCurrentSwing2
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetCurrentSwing2();// sub_4C60130()

	// Function Engine.PhysicsConstraintComponent.GetCurrentSwing1
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetCurrentSwing1();// sub_DD2400()

	// Function Engine.PhysicsConstraintComponent.GetConstraintForce
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetConstraintForce(struct FVector* OutLinearForce, struct FVector* OutAngularForce);// sub_4313F60()

	// Function Engine.PhysicsConstraintComponent.BreakConstraint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BreakConstraint();// sub_478E8B0()


}


//Class Engine.PhysicsSpringComponent
//0x0030 (0x04D0 - 0x04A0)
class UPhysicsSpringComponent : public USceneComponent
{
public:
	float                                              SpringStiffness;                                          // 0x04A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpringDamping;                                            // 0x04A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpringLengthAtRest;                                       // 0x04A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpringRadius;                                             // 0x04AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionChannel>                     SpringChannel;                                            // 0x04B0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIgnoreSelf : 1;                                          // 0x04B1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x04B2(0x0002) MISSED OFFSET
	float                                              SpringCompression;                                        // 0x04B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x04B8(0x0018) MISSED OFFSET

	// Function Engine.PhysicsSpringComponent.GetSpringRestingPoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetSpringRestingPoint();// sub_1C5DDD0()

	// Function Engine.PhysicsSpringComponent.GetSpringDirection
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetSpringDirection();// sub_6080E80()

	// Function Engine.PhysicsSpringComponent.GetSpringCurrentEndPoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetSpringCurrentEndPoint();// sub_11D3D0()

	// Function Engine.PhysicsSpringComponent.GetNormalizedCompressionScalar
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetNormalizedCompressionScalar();// sub_EC4BA0()


}


//Class Engine.PhysicsThrusterComponent
//0x0010 (0x04B0 - 0x04A0)
class UPhysicsThrusterComponent : public USceneComponent
{
public:
	float                                              ThrustStrength;                                           // 0x04A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x04A4(0x000C) MISSED OFFSET

}


//Class Engine.PrimitiveComponent
//0x0540 (0x09E0 - 0x04A0)
class UPrimitiveComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x04A0(0x0008) MISSED OFFSET
	float                                              MinDrawDistance;                                          // 0x04A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LDMaxDrawDistance;                                        // 0x04AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CachedMaxDrawDistance;                                    // 0x04B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	TEnumAsByte<ESceneDepthPriorityGroup>              DepthPriorityGroup;                                       // 0x04B4(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESceneDepthPriorityGroup>              ViewOwnerDepthPriorityGroup;                              // 0x04B5(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x04B6(0x0002) MISSED OFFSET
	unsigned char                                      bAlwaysCreatePhysicsState : 1;                            // 0x04B8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bGenerateOverlapEvents : 1;                               // 0x04B8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bMultiBodyOverlap : 1;                                    // 0x04B8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCheckAsyncSceneOnMove : 1;                               // 0x04B8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bTraceComplexOnMove : 1;                                  // 0x04B8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02 : 8;                                        // 0x04B9(0x0001)
	unsigned char                                      bDisableForceFromCharacter : 1;                           // 0x04B9(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bReturnMaterialOnMove : 1;                                // 0x04B9(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUseViewOwnerDepthPriorityGroup : 1;                      // 0x04B9(0x0001)
	unsigned char                                      bAllowCullDistanceVolume : 1;                             // 0x04B9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bImportantMesh : 1;                                       // 0x04B9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bOverrideCullingDistances : 1;                            // 0x04B9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData03[0x2];                                       // 0x04BA(0x0002) MISSED OFFSET
	float                                              HLODScreenSize;                                           // 0x04BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bHasMotionBlurVelocityMeshes : 1;                         // 0x04C0(0x0001)
	unsigned char                                      bVisibleInReflectionCaptures : 1;                         // 0x04C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bRenderInMainPass : 1;                                    // 0x04C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bRenderInMono : 1;                                        // 0x04C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bReceivesDecals : 1;                                      // 0x04C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bReceivesDecalsEx : 1;                                    // 0x04C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bOwnerNoSee : 1;                                          // 0x04C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bOnlyOwnerSee : 1;                                        // 0x04C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData04 : 8;                                        // 0x04C1(0x0001)
	unsigned char                                      bTreatAsBackgroundForOcclusion : 1;                       // 0x04C1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUseAsOccluder : 1;                                       // 0x04C1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bForceAsOccluder : 1;                                     // 0x04C1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bForceOcclusionQuerying : 1;                              // 0x04C1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bForceDisableOcclusionQuerying : 1;                       // 0x04C1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bSelectable : 1;                                          // 0x04C1(0x0001)
	unsigned char                                      bForceMipStreaming : 1;                                   // 0x04C1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bHasPerInstanceHitProxies : 1;                            // 0x04C1(0x0001)
	unsigned char                                      UnknownData05[0x2];                                       // 0x04C2(0x0002) MISSED OFFSET
	TEnumAsByte<EIndoorOutdoorMask>                    IndoorOutdoorMask;                                        // 0x04C4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x04C5(0x0003) MISSED OFFSET
	unsigned char                                      CastShadow : 1;                                           // 0x04C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bAffectDynamicIndirectLighting : 1;                       // 0x04C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bAffectDistanceFieldLighting : 1;                         // 0x04C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCastDynamicShadow : 1;                                   // 0x04C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCastStaticShadow : 1;                                    // 0x04C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCastVolumetricTranslucentShadow : 1;                     // 0x04C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bSelfShadowOnly : 1;                                      // 0x04C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCastFarShadow : 1;                                       // 0x04C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData07 : 8;                                        // 0x04C9(0x0001)
	unsigned char                                      bCastInsetShadow : 1;                                     // 0x04C9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCastCinematicShadow : 1;                                 // 0x04C9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCastHiddenShadow : 1;                                    // 0x04C9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCastShadowAsTwoSided : 1;                                // 0x04C9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bLightAsIfStatic : 1;                                     // 0x04C9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bLightAttachmentsAsGroup : 1;                             // 0x04C9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData08[0x2];                                       // 0x04CA(0x0002) MISSED OFFSET
	TEnumAsByte<EIndirectLightingCacheQuality>         IndirectLightingCacheQuality;                             // 0x04CC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x04CD(0x0003) MISSED OFFSET
	unsigned char                                      bReceiveCombinedCSMAndStaticShadowsFromStationaryLights : 1;// 0x04D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bSingleSampleShadowFromStationaryLights : 1;              // 0x04D0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData10[0x3];                                       // 0x04D1(0x0003) MISSED OFFSET
	struct FLightingChannels                           LightingChannels;                                         // 0x04D4(0x0003) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData11[0x1];                                       // 0x04D7(0x0001) MISSED OFFSET
	unsigned char                                      bIgnoreRadialImpulse : 1;                                 // 0x04D8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bIgnoreRadialForce : 1;                                   // 0x04D8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bApplyImpulseOnDamage : 1;                                // 0x04D8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bSyncBodySleep : 1;                                       // 0x04D8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      AlwaysLoadOnClient : 1;                                   // 0x04D8(0x0001)
	unsigned char                                      AlwaysLoadOnServer : 1;                                   // 0x04D8(0x0001)
	unsigned char                                      bUseEditorCompositing : 1;                                // 0x04D8(0x0001)
	unsigned char                                      bRenderCustomDepth : 1;                                   // 0x04D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData12[0x3];                                       // 0x04D9(0x0003) MISSED OFFSET
	int                                                CustomDepthStencilValue;                                  // 0x04DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ERendererStencilMask                               CustomDepthStencilWriteMask;                              // 0x04E0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x7];                                       // 0x04E1(0x0007) MISSED OFFSET
	TArray<TEnumAsByte<ECollisionChannel>>             IgnoreCollisionMaskOnSweep;                               // 0x04E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                TranslucencySortPriority;                                 // 0x04F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                VisibilityId;                                             // 0x04FC(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x0500(0x0004) MISSED OFFSET
	float                                              LpvBiasMultiplier;                                        // 0x0504(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x8];                                       // 0x0508(0x0008) MISSED OFFSET
	struct FBodyInstance                               BodyInstance;                                             // 0x0510(0x0230) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData16[0x8];                                       // 0x0740(0x0008) MISSED OFFSET
	TEnumAsByte<EHasCustomNavigableGeometry>           bHasCustomNavigableGeometry;                              // 0x0748(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x3B];                                      // 0x0749(0x003B) MISSED OFFSET
	float                                              BoundsScale;                                              // 0x0784(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LastSubmitTime;                                           // 0x0788(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              LastRenderTime;                                           // 0x078C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              LastRenderTimeOnScreen;                                   // 0x0790(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<ECanBeCharacterBase>                   CanBeCharacterBase;                                       // 0x0794(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData18[0x1];                                       // 0x0795(0x0001) MISSED OFFSET
	TEnumAsByte<ECanBeCharacterBase>                   CanCharacterStepUpOn;                                     // 0x0796(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x1];                                       // 0x0797(0x0001) MISSED OFFSET
	TArray<class AActor*>                              MoveIgnoreActors;                                         // 0x0798(0x0010) (ZeroConstructor, Transient, DuplicateTransient)
	TArray<class UPrimitiveComponent*>                 MoveIgnoreComponents;                                     // 0x07A8(0x0010) (ExportObject, ZeroConstructor, Transient, DuplicateTransient)
	unsigned char                                      UnknownData20[0xB8];                                      // 0x07B8(0x00B8) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnComponentHit;                                           // 0x0870(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnComponentBeginOverlap;                                  // 0x0880(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnComponentEndOverlap;                                    // 0x0890(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnComponentWake;                                          // 0x08A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnComponentSleep;                                         // 0x08B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData21[0x10];                                      // 0x08C0(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBeginCursorOver;                                        // 0x08D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEndCursorOver;                                          // 0x08E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnClicked;                                                // 0x08F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReleased;                                               // 0x0900(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnInputTouchBegin;                                        // 0x0910(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnInputTouchEnd;                                          // 0x0920(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnInputTouchEnter;                                        // 0x0930(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnInputTouchLeave;                                        // 0x0940(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData22[0x28];                                      // 0x0950(0x0028) MISSED OFFSET
	class UPrimitiveComponent*                         LODParentPrimitive;                                       // 0x0978(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UPrimitiveComponent*                         SubstitutionBoundsPrimitive;                              // 0x0980(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FPrimitiveComponentPostPhysicsTickFunction  PostPhysicsComponentTick;                                 // 0x0988(0x0058)

	// Function Engine.PrimitiveComponent.WakeRigidBody
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_WakeRigidBody(const struct FName& BoneName);// sub_3E40120()

	// Function Engine.PrimitiveComponent.WakeAllRigidBodies
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_WakeAllRigidBodies();// sub_17A7450()

	// Function Engine.PrimitiveComponent.SetWalkableSlopeOverride
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetWalkableSlopeOverride(const struct FWalkableSlopeOverride& NewOverride);// sub_1EA4370()

	// Function Engine.PrimitiveComponent.SetUseCCD
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetUseCCD(unsigned char InUseCCD, const struct FName& BoneName);// sub_4475610()

	// Function Engine.PrimitiveComponent.SetTranslucentSortPriority
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTranslucentSortPriority(int NewTranslucentSortPriority);// sub_1C78600()

	// Function Engine.PrimitiveComponent.SetSimulatePhysics
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSimulatePhysics(unsigned char bSimulate);// sub_60BE120()

	// Function Engine.PrimitiveComponent.SetRenderInMono
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetRenderInMono(unsigned char bValue);// sub_1327010()

	// Function Engine.PrimitiveComponent.SetRenderInMainPass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetRenderInMainPass(unsigned char bValue);// sub_3AFC730()

	// Function Engine.PrimitiveComponent.SetRenderCustomDepth
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetRenderCustomDepth(unsigned char bValue);// sub_45582D0()

	// Function Engine.PrimitiveComponent.SetPhysMaterialOverride
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPhysMaterialOverride(class UPhysicalMaterial* NewPhysMaterial);// sub_1733C10()

	// Function Engine.PrimitiveComponent.SetPhysicsMaxAngularVelocity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPhysicsMaxAngularVelocity(float NewMaxAngVel, unsigned char bAddToCurrent, const struct FName& BoneName);// sub_427A250()

	// Function Engine.PrimitiveComponent.SetPhysicsLinearVelocity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPhysicsLinearVelocity(const struct FVector& NewVel, unsigned char bAddToCurrent, const struct FName& BoneName);// sub_5485700()

	// Function Engine.PrimitiveComponent.SetPhysicsAngularVelocity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPhysicsAngularVelocity(const struct FVector& NewAngVel, unsigned char bAddToCurrent, const struct FName& BoneName);// sub_16C60E0()

	// Function Engine.PrimitiveComponent.SetOwnerNoSee
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetOwnerNoSee(unsigned char bNewOwnerNoSee);// sub_5BF5EA0()

	// Function Engine.PrimitiveComponent.SetOnlyOwnerSee
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetOnlyOwnerSee(unsigned char bNewOnlyOwnerSee);// sub_1D59F40()

	// Function Engine.PrimitiveComponent.SetNotifyRigidBodyCollision
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetNotifyRigidBodyCollision(unsigned char bNewNotifyRigidBodyCollision);// sub_42A9EB0()

	// Function Engine.PrimitiveComponent.SetMaterialByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetMaterialByName(const struct FName& MaterialSlotName, class UMaterialInterface* Material);// sub_24E6C80()

	// Function Engine.PrimitiveComponent.SetMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetMaterial(int ElementIndex, class UMaterialInterface* Material);// sub_18ECE80()

	// Function Engine.PrimitiveComponent.SetMassScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetMassScale(const struct FName& BoneName, float InMassScale);// sub_1AFB370()

	// Function Engine.PrimitiveComponent.SetMassOverrideInKg
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetMassOverrideInKg(const struct FName& BoneName, float MassInKg, unsigned char bOverrideMass);// sub_4674A00()

	// Function Engine.PrimitiveComponent.SetLockedAxis
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLockedAxis(TEnumAsByte<EDOFMode> LockedAxis);// sub_4F80FD0()

	// Function Engine.PrimitiveComponent.SetLinearDamping
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLinearDamping(float InDamping);// sub_161D560()

	// Function Engine.PrimitiveComponent.SetEnableGravity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetEnableGravity(unsigned char bGravityEnabled);// sub_4232950()

	// Function Engine.PrimitiveComponent.SetCustomDepthStencilWriteMask
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCustomDepthStencilWriteMask(ERendererStencilMask WriteMaskBit);// sub_3E5F7E0()

	// Function Engine.PrimitiveComponent.SetCustomDepthStencilValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCustomDepthStencilValue(int Value);// sub_5EE2CC0()

	// Function Engine.PrimitiveComponent.SetCullDistance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCullDistance(float NewCullDistance);// sub_156A4A0()

	// Function Engine.PrimitiveComponent.SetConstraintMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetConstraintMode(TEnumAsByte<EDOFMode> ConstraintMode);// sub_1AAB660()

	// Function Engine.PrimitiveComponent.SetCollisionResponseToChannel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCollisionResponseToChannel(TEnumAsByte<ECollisionChannel> Channel, TEnumAsByte<ECollisionResponse> NewResponse);// sub_CCE7C0()

	// Function Engine.PrimitiveComponent.SetCollisionResponseToAllChannels
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCollisionResponseToAllChannels(TEnumAsByte<ECollisionResponse> NewResponse);// sub_171C140()

	// Function Engine.PrimitiveComponent.SetCollisionProfileName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCollisionProfileName(const struct FName& InCollisionProfileName);// sub_4778910()

	// Function Engine.PrimitiveComponent.SetCollisionObjectType
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCollisionObjectType(TEnumAsByte<ECollisionChannel> Channel);// sub_5C97560()

	// Function Engine.PrimitiveComponent.SetCollisionEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCollisionEnabled(TEnumAsByte<ECollisionEnabled> NewType);// sub_48C6E10()

	// Function Engine.PrimitiveComponent.SetCenterOfMass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCenterOfMass(const struct FVector& CenterOfMassOffset, const struct FName& BoneName);// sub_45FF500()

	// Function Engine.PrimitiveComponent.SetCastShadow
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCastShadow(unsigned char NewCastShadow);// sub_4FCA910()

	// Function Engine.PrimitiveComponent.SetBoundsScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBoundsScale(float NewBoundsScale);// sub_95AB70()

	// Function Engine.PrimitiveComponent.SetAngularDamping
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAngularDamping(float InDamping);// sub_3D80B40()

	// Function Engine.PrimitiveComponent.SetAllUseCCD
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAllUseCCD(unsigned char InUseCCD);// sub_1037200()

	// Function Engine.PrimitiveComponent.SetAllPhysicsLinearVelocity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAllPhysicsLinearVelocity(const struct FVector& NewVel, unsigned char bAddToCurrent);// sub_4D1300()

	// Function Engine.PrimitiveComponent.SetAllPhysicsAngularVelocity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAllPhysicsAngularVelocity(const struct FVector& NewAngVel, unsigned char bAddToCurrent);// sub_5C9910()

	// Function Engine.PrimitiveComponent.SetAllMassScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAllMassScale(float InMassScale);// sub_855200()

	// Function Engine.PrimitiveComponent.ScaleByMomentOfInertia
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_ScaleByMomentOfInertia(const struct FVector& InputVector, const struct FName& BoneName);// sub_1E596F0()

	// Function Engine.PrimitiveComponent.PutRigidBodyToSleep
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PutRigidBodyToSleep(const struct FName& BoneName);// sub_3AD4910()

	// Function Engine.PrimitiveComponent.K2_LineTraceComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_LineTraceComponent(const struct FVector& TraceStart, const struct FVector& TraceEnd, unsigned char bTraceComplex, unsigned char bShowTrace, struct FVector* HitLocation, struct FVector* HitNormal, struct FName* BoneName, struct FHitResult* OutHit);// sub_43C0D80()

	// Function Engine.PrimitiveComponent.K2_IsQueryCollisionEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_IsQueryCollisionEnabled();// sub_1DA4DC0()

	// Function Engine.PrimitiveComponent.K2_IsPhysicsCollisionEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_IsPhysicsCollisionEnabled();// sub_46749C0()

	// Function Engine.PrimitiveComponent.K2_IsCollisionEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_IsCollisionEnabled();// sub_5FB1640()

	// Function Engine.PrimitiveComponent.IsOverlappingComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsOverlappingComponent(class UPrimitiveComponent* OtherComp);// sub_10C1440()

	// Function Engine.PrimitiveComponent.IsOverlappingActor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsOverlappingActor(class AActor* Other);// sub_18D5650()

	// Function Engine.PrimitiveComponent.IsGravityEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsGravityEnabled();// sub_3B60DB0()

	// Function Engine.PrimitiveComponent.IsAnyRigidBodyAwake
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsAnyRigidBodyAwake();// sub_9BA9E0()

	// Function Engine.PrimitiveComponent.IgnoreComponentWhenMoving
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_IgnoreComponentWhenMoving(class UPrimitiveComponent* Component, unsigned char bShouldIgnore);// sub_291370()

	// Function Engine.PrimitiveComponent.IgnoreActorWhenMoving
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_IgnoreActorWhenMoving(class AActor* Actor, unsigned char bShouldIgnore);// sub_61CBF80()

	// Function Engine.PrimitiveComponent.GetWalkableSlopeOverride
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FWalkableSlopeOverride STATIC_GetWalkableSlopeOverride();// sub_17F4F40()

	// Function Engine.PrimitiveComponent.GetPhysicsLinearVelocityAtPoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetPhysicsLinearVelocityAtPoint(const struct FVector& Point, const struct FName& BoneName);// sub_4232860()

	// Function Engine.PrimitiveComponent.GetPhysicsLinearVelocity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetPhysicsLinearVelocity(const struct FName& BoneName);// sub_5C453F0()

	// Function Engine.PrimitiveComponent.GetPhysicsAngularVelocity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetPhysicsAngularVelocity(const struct FName& BoneName);// sub_4BA25E0()

	// Function Engine.PrimitiveComponent.GetOverlappingComponents
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetOverlappingComponents(TArray<class UPrimitiveComponent*>* InOverlappingComponents);// sub_1A29C00()

	// Function Engine.PrimitiveComponent.GetOverlappingActors
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetOverlappingActors(class AActor* ClassFilter, TArray<class AActor*>* OverlappingActors);// sub_5B10E20()

	// Function Engine.PrimitiveComponent.GetOverlapInfos
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TArray<struct FOverlapInfo> STATIC_GetOverlapInfos();// sub_C89600()

	// Function Engine.PrimitiveComponent.GetNumMaterials
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetNumMaterials();// sub_12ED710()

	// Function Engine.PrimitiveComponent.GetMaterialFromCollisionFaceIndex
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UMaterialInterface* STATIC_GetMaterialFromCollisionFaceIndex(int FaceIndex);// sub_2047010()

	// Function Engine.PrimitiveComponent.GetMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UMaterialInterface* STATIC_GetMaterial(int ElementIndex);// sub_10D9E60()

	// Function Engine.PrimitiveComponent.GetMassScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetMassScale(const struct FName& BoneName);// sub_5AB1840()

	// Function Engine.PrimitiveComponent.GetMass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetMass();// sub_5558C00()

	// Function Engine.PrimitiveComponent.GetLinearDamping
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetLinearDamping();// sub_50AF220()

	// Function Engine.PrimitiveComponent.GetInertiaTensor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetInertiaTensor(const struct FName& BoneName);// sub_3BE7D80()

	// Function Engine.PrimitiveComponent.GetCollisionResponseToChannel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TEnumAsByte<ECollisionResponse> STATIC_GetCollisionResponseToChannel(TEnumAsByte<ECollisionChannel> Channel);// sub_D8AC70()

	// Function Engine.PrimitiveComponent.GetCollisionProfileName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FName STATIC_GetCollisionProfileName();// sub_53C7E20()

	// Function Engine.PrimitiveComponent.GetCollisionObjectType
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TEnumAsByte<ECollisionChannel> STATIC_GetCollisionObjectType();// sub_130A440()

	// Function Engine.PrimitiveComponent.GetCollisionEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TEnumAsByte<ECollisionEnabled> STATIC_GetCollisionEnabled();// sub_1E596C0()

	// Function Engine.PrimitiveComponent.GetClosestPointOnCollision
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetClosestPointOnCollision(const struct FVector& Point, const struct FName& BoneName, struct FVector* OutPointOnBody);// sub_4111C70()

	// Function Engine.PrimitiveComponent.GetCenterOfMass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetCenterOfMass(const struct FName& BoneName);// sub_1EBE280()

	// Function Engine.PrimitiveComponent.GetAngularDamping
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetAngularDamping();// sub_1550F60()

	// Function Engine.PrimitiveComponent.CreateDynamicMaterialInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UMaterialInstanceDynamic* STATIC_CreateDynamicMaterialInstance(int ElementIndex, class UMaterialInterface* SourceMaterial);// sub_19AD730()

	// Function Engine.PrimitiveComponent.CreateAndSetMaterialInstanceDynamicFromMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UMaterialInstanceDynamic* STATIC_CreateAndSetMaterialInstanceDynamicFromMaterial(int ElementIndex, class UMaterialInterface* Parent);// sub_4F107E0()

	// Function Engine.PrimitiveComponent.CreateAndSetMaterialInstanceDynamic
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UMaterialInstanceDynamic* STATIC_CreateAndSetMaterialInstanceDynamic(int ElementIndex);// sub_52B0A70()

	// Function Engine.PrimitiveComponent.CopyArrayOfMoveIgnoreComponents
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TArray<class UPrimitiveComponent*> STATIC_CopyArrayOfMoveIgnoreComponents();// sub_161D4D0()

	// Function Engine.PrimitiveComponent.CopyArrayOfMoveIgnoreActors
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TArray<class AActor*> STATIC_CopyArrayOfMoveIgnoreActors();// sub_23A4D90()

	// Function Engine.PrimitiveComponent.ClearMoveIgnoreComponents
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearMoveIgnoreComponents();// sub_10D9E30()

	// Function Engine.PrimitiveComponent.ClearMoveIgnoreActors
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearMoveIgnoreActors();// sub_20E62B0()

	// Function Engine.PrimitiveComponent.CanCharacterStepUp
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_CanCharacterStepUp(class APawn* Pawn);// sub_5276880()

	// Function Engine.PrimitiveComponent.AddTorque
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddTorque(const struct FVector& Torque, const struct FName& BoneName, unsigned char bAccelChange);// sub_10150E0()

	// Function Engine.PrimitiveComponent.AddRadialImpulse
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddRadialImpulse(const struct FVector& Origin, float Radius, float Strength, TEnumAsByte<ERadialImpulseFalloff> Falloff, unsigned char bVelChange);// sub_1965E60()

	// Function Engine.PrimitiveComponent.AddRadialForce
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddRadialForce(const struct FVector& Origin, float Radius, float Strength, TEnumAsByte<ERadialImpulseFalloff> Falloff, unsigned char bAccelChange);// sub_4C64040()

	// Function Engine.PrimitiveComponent.AddImpulseAtLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddImpulseAtLocation(const struct FVector& Impulse, const struct FVector& Location, const struct FName& BoneName);// sub_209D100()

	// Function Engine.PrimitiveComponent.AddImpulse
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddImpulse(const struct FVector& Impulse, const struct FName& BoneName, unsigned char bVelChange);// sub_46FE320()

	// Function Engine.PrimitiveComponent.AddForceAtLocationLocal
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddForceAtLocationLocal(const struct FVector& force, const struct FVector& Location, const struct FName& BoneName);// sub_23FC9A0()

	// Function Engine.PrimitiveComponent.AddForceAtLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddForceAtLocation(const struct FVector& force, const struct FVector& Location, const struct FName& BoneName);// sub_DEEC40()

	// Function Engine.PrimitiveComponent.AddForce
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddForce(const struct FVector& force, const struct FName& BoneName, unsigned char bAccelChange);// sub_5F153E0()

	// Function Engine.PrimitiveComponent.AddAngularImpulse
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddAngularImpulse(const struct FVector& Impulse, const struct FName& BoneName, unsigned char bVelChange);// sub_59E0640()


}


//Class Engine.ShapeComponent
//0x0020 (0x0A00 - 0x09E0)
class UShapeComponent : public UPrimitiveComponent
{
public:
	struct FColor                                      ShapeColor;                                               // 0x09E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x09E4(0x0004) MISSED OFFSET
	class UBodySetup*                                  ShapeBodySetup;                                           // 0x09E8(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData)
	unsigned char                                      bDrawOnlyIfSelected : 1;                                  // 0x09F0(0x0001)
	unsigned char                                      bShouldCollideWhenPlacing : 1;                            // 0x09F0(0x0001)
	unsigned char                                      bDynamicObstacle : 1;                                     // 0x09F0(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x7];                                       // 0x09F1(0x0007) MISSED OFFSET
	class UNavArea*                                    AreaClass;                                                // 0x09F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.PostProcessComponent
//0x0590 (0x0A30 - 0x04A0)
class UPostProcessComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x04A0(0x0010) MISSED OFFSET
	struct FPostProcessSettings                        Settings;                                                 // 0x04B0(0x0570) (Edit, BlueprintVisible)
	float                                              Priority;                                                 // 0x0A20(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlendRadius;                                              // 0x0A24(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlendWeight;                                              // 0x0A28(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnabled : 1;                                             // 0x0A2C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUnbound : 1;                                             // 0x0A2C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0A2D(0x0003) MISSED OFFSET

	// Function Engine.PostProcessComponent.AddOrUpdateBlendable
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddOrUpdateBlendable(const TScriptInterface<class UBlendableInterface>& InBlendableObject, float InWeight);// sub_1A8B9C0()


}


//Class Engine.ArrowComponent
//0x0020 (0x0A00 - 0x09E0)
class UArrowComponent : public UPrimitiveComponent
{
public:
	struct FColor                                      ArrowColor;                                               // 0x09E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ArrowSize;                                                // 0x09E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsScreenSizeScaled : 1;                                  // 0x09E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x09E9(0x0003) MISSED OFFSET
	float                                              ScreenSize;                                               // 0x09EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bTreatAsASprite : 1;                                      // 0x09F0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0xF];                                       // 0x09F1(0x000F) MISSED OFFSET

	// Function Engine.ArrowComponent.SetArrowColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetArrowColor(const struct FLinearColor& NewColor);// sub_5206A50()


}


//Class Engine.BrushComponent
//0x0020 (0x0A00 - 0x09E0)
class UBrushComponent : public UPrimitiveComponent
{
public:
	class UModel*                                      Brush;                                                    // 0x09E0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UBodySetup*                                  BrushBodySetup;                                           // 0x09E8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     PrePivot;                                                 // 0x09F0(0x000C) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x09FC(0x0004) MISSED OFFSET

}


//Class Engine.ConcreteCollisionComponent
//0x0030 (0x0A10 - 0x09E0)
class UConcreteCollisionComponent : public UPrimitiveComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x09E0(0x0008) MISSED OFFSET
	TArray<class UPhysicalMaterial*>                   PhysicalMaterials;                                        // 0x09E8(0x0010) (ZeroConstructor)
	TArray<struct FConcreteCollisionSourceData>        SourceData;                                               // 0x09F8(0x0010) (ZeroConstructor)
	class UBodySetup*                                  BodySetup;                                                // 0x0A08(0x0008) (ZeroConstructor, IsPlainOldData)

}


//Class Engine.DrawFrustumComponent
//0x0020 (0x0A00 - 0x09E0)
class UDrawFrustumComponent : public UPrimitiveComponent
{
public:
	struct FColor                                      FrustumColor;                                             // 0x09E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FrustumAngle;                                             // 0x09E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FrustumAspectRatio;                                       // 0x09E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FrustumStartDist;                                         // 0x09EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FrustumEndDist;                                           // 0x09F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x09F4(0x0004) MISSED OFFSET
	class UTexture*                                    Texture;                                                  // 0x09F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

}


//Class Engine.FoliageBlockingVolumeComponent
//0x0010 (0x09F0 - 0x09E0)
class UFoliageBlockingVolumeComponent : public UPrimitiveComponent
{
public:
	TArray<struct FVector2D>                           Points;                                                   // 0x09E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)

}


//Class Engine.BoxComponent
//0x0010 (0x0A10 - 0x0A00)
class UBoxComponent : public UShapeComponent
{
public:
	struct FVector                                     BoxExtent;                                                // 0x0A00(0x000C) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0A0C(0x0004) MISSED OFFSET

	// Function Engine.BoxComponent.SetBoxExtent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBoxExtent(const struct FVector& InBoxExtent, unsigned char bUpdateOverlaps);// sub_4B2BD70()

	// Function Engine.BoxComponent.GetUnscaledBoxExtent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetUnscaledBoxExtent();// sub_626A940()

	// Function Engine.BoxComponent.GetScaledBoxExtent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetScaledBoxExtent();// sub_57526B0()


}


//Class Engine.GrassVolumeComponent
//0x0000 (0x0A10 - 0x0A10)
class UGrassVolumeComponent : public UBoxComponent
{
public:

}


//Class Engine.GrassVolumesContainerComponent
//0x0010 (0x09F0 - 0x09E0)
class UGrassVolumesContainerComponent : public UPrimitiveComponent
{
public:
	TArray<struct FGrassBoxVolumeData>                 GrassBoxVolumes;                                          // 0x09E0(0x0010) (Edit, ZeroConstructor)

}


//Class Engine.LevelBlockLandscapeGizmoComponent
//0x0060 (0x0A40 - 0x09E0)
class ULevelBlockLandscapeGizmoComponent : public UPrimitiveComponent
{
public:
	TLazyObjectPtr<class ALandscape>                   SourceLandscapeActor;                                     // 0x09E0(0x001C) (Edit, IsPlainOldData)
	TLazyObjectPtr<class ALandscape>                   TargetLandscapeActor;                                     // 0x09FC(0x001C) (Edit, IsPlainOldData)
	class UTexture2D*                                  BlendMask;                                                // 0x0A18(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Extent;                                                   // 0x0A20(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FIntPoint                                   TargetLandscapeRect;                                      // 0x0A28(0x0008) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      bHeightmap : 1;                                           // 0x0A30(0x0001) (Edit, EditConst)
	unsigned char                                      bWeightmaps : 1;                                          // 0x0A30(0x0001) (Edit, EditConst)
	unsigned char                                      bVisibility : 1;                                          // 0x0A30(0x0001) (Edit, EditConst)
	unsigned char                                      bHideFoliage : 1;                                         // 0x0A30(0x0001) (Edit)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0A31(0x000F) MISSED OFFSET

}


//Class Engine.LineBatchComponent
//0x0040 (0x0A20 - 0x09E0)
class ULineBatchComponent : public UPrimitiveComponent
{
public:
	unsigned char                                      UnknownData00[0x40];                                      // 0x09E0(0x0040) MISSED OFFSET

}


//Class Engine.MaterialBillboardComponent
//0x0010 (0x09F0 - 0x09E0)
class UMaterialBillboardComponent : public UPrimitiveComponent
{
public:
	TArray<struct FMaterialSpriteElement>              Elements;                                                 // 0x09E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	// Function Engine.MaterialBillboardComponent.SetElements
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetElements(TArray<struct FMaterialSpriteElement> NewElements);// sub_492070()

	// Function Engine.MaterialBillboardComponent.AddElement
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddElement(class UMaterialInterface* Material, class UCurveFloat* DistanceToOpacityCurve, unsigned char bSizeIsInScreenSpace, float BaseSizeX, float BaseSizeY, class UCurveFloat* DistanceToSizeCurve);// sub_5C95190()


}


//Class Engine.MeshComponent
//0x0110 (0x0AF0 - 0x09E0)
class UMeshComponent : public UPrimitiveComponent
{
public:
	TArray<class UMaterialInterface*>                  OverrideMaterials;                                        // 0x09E0(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0x100];                                     // 0x09F0(0x0100) MISSED OFFSET

	// Function Engine.MeshComponent.SetVectorParameterValueOnMaterials
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVectorParameterValueOnMaterials(const struct FName& ParameterName, const struct FVector& ParameterValue);// sub_2234E00()

	// Function Engine.MeshComponent.SetScalarParameterValueOnMaterials
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetScalarParameterValueOnMaterials(const struct FName& ParameterName, float ParameterValue);// sub_1AAB6E0()

	// Function Engine.MeshComponent.IsMaterialSlotNameValid
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsMaterialSlotNameValid(const struct FName& MaterialSlotName);// sub_4DCA2E0()

	// Function Engine.MeshComponent.GetMaterialSlotNames
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TArray<struct FName> STATIC_GetMaterialSlotNames();// sub_DD3D50()

	// Function Engine.MeshComponent.GetMaterials
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TArray<class UMaterialInterface*> STATIC_GetMaterials();// sub_42CD2E0()

	// Function Engine.MeshComponent.GetMaterialIndex
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetMaterialIndex(const struct FName& MaterialSlotName);// sub_6204E80()


}


//Class Engine.SkinnedMeshComponent
//0x01A0 (0x0C90 - 0x0AF0)
class USkinnedMeshComponent : public UMeshComponent
{
public:
	TWeakObjectPtr<class USkinnedMeshComponent>        MasterPoseComponent;                                      // 0x0AF0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x60];                                      // 0x0AF8(0x0060) MISSED OFFSET
	unsigned char                                      bUseBoundsFromMasterPoseComponent : 1;                    // 0x0B58(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0B59(0x0007) MISSED OFFSET
	TArray<struct FBoxSphereBounds>                    ExtendedBoundsArray;                                      // 0x0B60(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0B70(0x0020) MISSED OFFSET
	class UPhysicsAsset*                               PhysicsAssetOverride;                                     // 0x0B90(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ForcedLodModel;                                           // 0x0B98(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MinLodModel;                                              // 0x0B9C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0BA0(0x0010) MISSED OFFSET
	TArray<struct FSkelMeshComponentLODInfo>           LODInfo;                                                  // 0x0BB0(0x0010) (ZeroConstructor, Transient)
	float                                              StreamingDistanceMultiplier;                              // 0x0BC0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FColor                                      WireframeColor;                                           // 0x0BC4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bForceWireframe : 1;                                      // 0x0BC8(0x0001)
	unsigned char                                      bDisplayBones : 1;                                        // 0x0BC8(0x0001)
	unsigned char                                      bDisableMorphTarget : 1;                                  // 0x0BC8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bHideSkin : 1;                                            // 0x0BC8(0x0001)
	unsigned char                                      UnknownData04[0x17];                                      // 0x0BC9(0x0017) MISSED OFFSET
	unsigned char                                      bPerBoneMotionBlur : 1;                                   // 0x0BE0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bComponentUseFixedSkelBounds : 1;                         // 0x0BE0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bConsiderAllBodiesForBounds : 1;                          // 0x0BE0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bSyncAttachParentLOD : 1;                                 // 0x0BE0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0BE1(0x0003) MISSED OFFSET
	TEnumAsByte<EMeshComponentUpdateFlag>              MeshComponentUpdateFlag;                                  // 0x0BE4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0BE5(0x0003) MISSED OFFSET
	unsigned char                                      bForceMeshObjectUpdate : 1;                               // 0x0BE8(0x0001) (Transient)
	unsigned char                                      bCanHighlightSelectedSections : 1;                        // 0x0BE8(0x0001) (Transient)
	unsigned char                                      bRecentlyRendered : 1;                                    // 0x0BE8(0x0001) (Transient)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0BE9(0x0003) MISSED OFFSET
	unsigned char                                      CustomSortAlternateIndexMode;                             // 0x0BEC(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0BED(0x0003) MISSED OFFSET
	unsigned char                                      bCastCapsuleDirectShadow : 1;                             // 0x0BF0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCastCapsuleIndirectShadow : 1;                           // 0x0BF0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0BF1(0x0003) MISSED OFFSET
	unsigned char                                      bRenderStatic : 1;                                        // 0x0BF4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0BF5(0x0003) MISSED OFFSET
	float                                              CapsuleIndirectShadowMinVisibility;                       // 0x0BF8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bCPUSkinning : 1;                                         // 0x0BFC(0x0001) (Transient)
	unsigned char                                      UnknownData11[0xF];                                       // 0x0BFD(0x000F) MISSED OFFSET
	struct FBoxSphereBounds                            CachedLocalBounds;                                        // 0x0C0C(0x001C) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bCachedLocalBoundsUpToDate : 1;                           // 0x0C28(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData12 : 8;                                        // 0x0C29(0x0001)
	unsigned char                                      bEnableUpdateRateOptimizations : 1;                       // 0x0C29(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13 : 8;                                        // 0x0C2A(0x0001)
	unsigned char                                      bDisplayDebugUpdateRateOptimizations : 1;                 // 0x0C2A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x56];                                      // 0x0C2B(0x0056) MISSED OFFSET
	unsigned char                                      bShouldRefreshTransformOnce : 1;                          // 0x0C81(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15 : 8;                                        // 0x0C82(0x0001)
	unsigned char                                      bSkipEvaluationAndFinalization : 1;                       // 0x0C82(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData16[0xD];                                       // 0x0C83(0x000D) MISSED OFFSET

	// Function Engine.SkinnedMeshComponent.UnHideBoneByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_UnHideBoneByName(const struct FName& BoneName);// sub_F4C650()

	// Function Engine.SkinnedMeshComponent.TransformToBoneSpace
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_TransformToBoneSpace(const struct FName& BoneName, const struct FVector& InPosition, const struct FRotator& InRotation, struct FVector* OutPosition, struct FRotator* OutRotation);// sub_1143030()

	// Function Engine.SkinnedMeshComponent.TransformFromBoneSpace
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_TransformFromBoneSpace(const struct FName& BoneName, const struct FVector& InPosition, const struct FRotator& InRotation, struct FVector* OutPosition, struct FRotator* OutRotation);// sub_50F4F20()

	// Function Engine.SkinnedMeshComponent.SetVertexColorOverride_LinearColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVertexColorOverride_LinearColor(int LODIndex, TArray<struct FLinearColor> VertexColors);// sub_3C4E510()

	// Function Engine.SkinnedMeshComponent.SetSkinWeightOverride
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSkinWeightOverride(int LODIndex, TArray<struct FSkelMeshSkinWeightInfo> SkinWeights);// sub_5DB4A0()

	// Function Engine.SkinnedMeshComponent.SetSkeletalMesh
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSkeletalMesh(class USkeletalMesh* NewMesh, unsigned char bReinitPose);// sub_818B20()

	// Function Engine.SkinnedMeshComponent.SetRenderStatic
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetRenderStatic(unsigned char bNewValue);// sub_1FA2EF0()

	// Function Engine.SkinnedMeshComponent.SetPhysicsAsset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPhysicsAsset(class UPhysicsAsset* NewPhysicsAsset, unsigned char bForceReInit);// sub_44EEB40()

	// Function Engine.SkinnedMeshComponent.SetMinLOD
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetMinLOD(int InNewMinLOD);// sub_15FBAA0()

	// Function Engine.SkinnedMeshComponent.SetMasterPoseComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetMasterPoseComponent(class USkinnedMeshComponent* NewMasterBoneComponent);// sub_11D520()

	// Function Engine.SkinnedMeshComponent.SetForcedLOD
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetForcedLOD(int InNewForcedLOD);// sub_5BF1C90()

	// Function Engine.SkinnedMeshComponent.SetCastCapsuleIndirectShadow
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCastCapsuleIndirectShadow(unsigned char bNewValue);// sub_1CFE490()

	// Function Engine.SkinnedMeshComponent.SetCastCapsuleDirectShadow
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCastCapsuleDirectShadow(unsigned char bNewValue);// sub_49BDB80()

	// Function Engine.SkinnedMeshComponent.SetCapsuleIndirectShadowMinVisibility
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCapsuleIndirectShadowMinVisibility(float NewValue);// sub_2172510()

	// Function Engine.SkinnedMeshComponent.IsBoneHiddenByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsBoneHiddenByName(const struct FName& BoneName);// sub_21CA320()

	// Function Engine.SkinnedMeshComponent.HideBoneByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_HideBoneByName(const struct FName& BoneName, TEnumAsByte<EPhysBodyOp> PhysBodyOption);// sub_5768A90()

	// Function Engine.SkinnedMeshComponent.GetSocketBoneName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FName STATIC_GetSocketBoneName(const struct FName& InSocketName);// sub_44BA7B0()

	// Function Engine.SkinnedMeshComponent.GetParentBone
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FName STATIC_GetParentBone(const struct FName& BoneName);// sub_5665270()

	// Function Engine.SkinnedMeshComponent.GetNumBones
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetNumBones();// sub_443EA80()

	// Function Engine.SkinnedMeshComponent.GetBoneName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FName STATIC_GetBoneName(int BoneIndex);// sub_4D186E0()

	// Function Engine.SkinnedMeshComponent.GetBoneIndex
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetBoneIndex(const struct FName& BoneName);// sub_4A0CE60()

	// Function Engine.SkinnedMeshComponent.FindClosestBone_K2
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FName STATIC_FindClosestBone_K2(const struct FVector& TestLocation, float IgnoreScale, unsigned char bRequirePhysicsAsset, struct FVector* BoneLocation);// sub_48F4EF0()

	// Function Engine.SkinnedMeshComponent.ClearVertexColorOverride
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearVertexColorOverride(int LODIndex);// sub_3DE2BD0()

	// Function Engine.SkinnedMeshComponent.ClearSkinWeightOverride
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearSkinWeightOverride(int LODIndex);// sub_4AFECC0()

	// Function Engine.SkinnedMeshComponent.BoneIsChildOf
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BoneIsChildOf(const struct FName& BoneName, const struct FName& ParentBoneName);// sub_3C67590()


}


//Class Engine.DestructibleComponent
//0x00C0 (0x0D50 - 0x0C90)
class UDestructibleComponent : public USkinnedMeshComponent
{
public:
	TArray<struct FFractureEffect>                     FractureEffects;                                          // 0x0C90(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor)
	unsigned char                                      bEnableHardSleeping : 1;                                  // 0x0CA0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0CA1(0x0003) MISSED OFFSET
	float                                              LargeChunkThreshold;                                      // 0x0CA4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0CA8(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnComponentFracture;                                      // 0x0CB8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0x88];                                      // 0x0CC8(0x0088) MISSED OFFSET

	// Function Engine.DestructibleComponent.SetDestructibleMesh
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDestructibleMesh(class UDestructibleMesh* NewMesh);// sub_3FDE7C0()

	// Function Engine.DestructibleComponent.GetDestructibleMesh
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UDestructibleMesh* STATIC_GetDestructibleMesh();// sub_13E3970()

	// Function Engine.DestructibleComponent.ApplyRadiusDamage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ApplyRadiusDamage(float BaseDamage, const struct FVector& HurtOrigin, float DamageRadius, float ImpulseStrength, unsigned char bFullDamage);// sub_4892720()

	// Function Engine.DestructibleComponent.ApplyDamage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ApplyDamage(float DamageAmount, const struct FVector& HitLocation, const struct FVector& ImpulseDir, float ImpulseStrength);// sub_3D96AE0()


}


//Class Engine.PoseableMeshComponent
//0x00E0 (0x0D70 - 0x0C90)
class UPoseableMeshComponent : public USkinnedMeshComponent
{
public:
	unsigned char                                      UnknownData00[0xE0];                                      // 0x0C90(0x00E0) MISSED OFFSET

	// Function Engine.PoseableMeshComponent.SetBoneTransformByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBoneTransformByName(const struct FName& BoneName, const struct FTransform& InTransform, TEnumAsByte<EBoneSpaces> BoneSpace);// sub_419F9F0()

	// Function Engine.PoseableMeshComponent.SetBoneScaleByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBoneScaleByName(const struct FName& BoneName, const struct FVector& InScale3D, TEnumAsByte<EBoneSpaces> BoneSpace);// sub_E02850()

	// Function Engine.PoseableMeshComponent.SetBoneRotationByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBoneRotationByName(const struct FName& BoneName, const struct FRotator& InRotation, TEnumAsByte<EBoneSpaces> BoneSpace);// sub_3EACC90()

	// Function Engine.PoseableMeshComponent.SetBoneLocationByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBoneLocationByName(const struct FName& BoneName, const struct FVector& InLocation, TEnumAsByte<EBoneSpaces> BoneSpace);// sub_24AD400()

	// Function Engine.PoseableMeshComponent.ResetBoneTransformByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ResetBoneTransformByName(const struct FName& BoneName);// sub_4DFFEF0()

	// Function Engine.PoseableMeshComponent.GetBoneTransformByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTransform STATIC_GetBoneTransformByName(const struct FName& BoneName, TEnumAsByte<EBoneSpaces> BoneSpace);// sub_612C7F0()

	// Function Engine.PoseableMeshComponent.GetBoneScaleByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetBoneScaleByName(const struct FName& BoneName, TEnumAsByte<EBoneSpaces> BoneSpace);// sub_D00050()

	// Function Engine.PoseableMeshComponent.GetBoneRotationByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_GetBoneRotationByName(const struct FName& BoneName, TEnumAsByte<EBoneSpaces> BoneSpace);// sub_E99610()

	// Function Engine.PoseableMeshComponent.GetBoneLocationByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetBoneLocationByName(const struct FName& BoneName, TEnumAsByte<EBoneSpaces> BoneSpace);// sub_1CB9D30()

	// Function Engine.PoseableMeshComponent.CopyPoseFromSkeletalComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_CopyPoseFromSkeletalComponent(class USkeletalMeshComponent* InComponentToCopy);// sub_3BCC1E0()


}


//Class Engine.SkeletalMeshComponent
//0x04F0 (0x1180 - 0x0C90)
class USkeletalMeshComponent : public USkinnedMeshComponent
{
public:
	class UObject*                                     AnimBlueprintGeneratedClass;                              // 0x0C90(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimInstance*                               AnimClass;                                                // 0x0C98(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimInstance*                               AnimScriptInstance;                                       // 0x0CA0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UAnimInstance*>                       SubInstances;                                             // 0x0CA8(0x0010) (ZeroConstructor, Transient)
	class UAnimInstance*                               PostProcessAnimInstance;                                  // 0x0CB8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FSingleAnimationPlayData                    AnimationData;                                            // 0x0CC0(0x0018) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0CD8(0x0030) MISSED OFFSET
	TArray<struct FTransform>                          CachedBoneSpaceTransforms;                                // 0x0D08(0x0010) (ZeroConstructor, Transient)
	TArray<struct FTransform>                          CachedComponentSpaceTransforms;                           // 0x0D18(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0D28(0x0020) MISSED OFFSET
	float                                              GlobalAnimRateScale;                                      // 0x0D48(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EKinematicBonesUpdateToPhysics>        KinematicBonesUpdateType;                                 // 0x0D4C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EPhysicsTransformUpdateMode>           PhysicsTransformUpdateMode;                               // 0x0D4D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0D4E(0x0001) MISSED OFFSET
	TEnumAsByte<EAnimationMode>                        AnimationMode;                                            // 0x0D4F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0D50(0x0004) MISSED OFFSET
	unsigned char                                      bHasValidBodies : 1;                                      // 0x0D54(0x0001) (Transient)
	unsigned char                                      bBlendPhysics : 1;                                        // 0x0D54(0x0001) (Transient)
	unsigned char                                      bEnablePhysicsOnDedicatedServer : 1;                      // 0x0D54(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUpdateJointsFromAnimation : 1;                           // 0x0D54(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData04 : 8;                                        // 0x0D55(0x0001)
	unsigned char                                      bDisableClothSimulation : 1;                              // 0x0D55(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCollideWithEnvironment : 1;                              // 0x0D55(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCollideWithAttachedChildren : 1;                         // 0x0D55(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bLocalSpaceSimulation : 1;                                // 0x0D55(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bClothMorphTarget : 1;                                    // 0x0D55(0x0001) (Edit)
	unsigned char                                      bResetAfterTeleport : 1;                                  // 0x0D55(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData05 : 8;                                        // 0x0D56(0x0001)
	unsigned char                                      bNoSkeletonUpdate : 1;                                    // 0x0D56(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bPauseAnims : 1;                                          // 0x0D56(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUseRefPoseOnInitAnim : 1;                                // 0x0D56(0x0001) (Edit)
	unsigned char                                      bEnablePerPolyCollision : 1;                              // 0x0D56(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bOnlyAllowAutonomousTickPose : 1;                         // 0x0D56(0x0001) (Transient)
	unsigned char                                      bIsAutonomousTickPose : 1;                                // 0x0D56(0x0001) (Transient)
	unsigned char                                      bForceRefpose : 1;                                        // 0x0D56(0x0001)
	unsigned char                                      UnknownData06 : 8;                                        // 0x0D57(0x0001)
	unsigned char                                      bOldForceRefPose : 1;                                     // 0x0D57(0x0001)
	unsigned char                                      bShowPrePhysBones : 1;                                    // 0x0D57(0x0001)
	unsigned char                                      bRequiredBonesUpToDate : 1;                               // 0x0D57(0x0001) (Transient)
	unsigned char                                      bAnimTreeInitialised : 1;                                 // 0x0D57(0x0001) (Transient)
	unsigned char                                      bIncludeComponentLocationIntoBounds : 1;                  // 0x0D57(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bEnableLineCheckWithBounds : 1;                           // 0x0D57(0x0001)
	unsigned char                                      UnknownData07 : 8;                                        // 0x0D58(0x0001)
	unsigned char                                      bNeedsQueuedAnimEventsDispatched : 1;                     // 0x0D58(0x0001) (Transient)
	unsigned char                                      UnknownData08 : 8;                                        // 0x0D59(0x0001)
	unsigned char                                      bDefaultLooping : 1;                                      // 0x0D59(0x0001) (Deprecated)
	unsigned char                                      bDefaultPlaying : 1;                                      // 0x0D59(0x0001) (Deprecated)
	uint16_t                                           CachedAnimCurveUidVersion;                                // 0x0D5A(0x0002) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ClothBlendWeight;                                         // 0x0D5C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RootBoneTranslation;                                      // 0x0D60(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x0D6C(0x0004) MISSED OFFSET
	class UBodySetup*                                  BodySetup;                                                // 0x0D70(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              TeleportDistanceThreshold;                                // 0x0D78(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TeleportRotationThreshold;                                // 0x0D7C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LineCheckBoundsScale;                                     // 0x0D80(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x0D8C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnConstraintBroken;                                       // 0x0D90(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData11[0xE0];                                      // 0x0DA0(0x00E0) MISSED OFFSET
	class UClothingSimulationFactory*                  ClothingSimulationFactory;                                // 0x0E80(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x1E8];                                     // 0x0E88(0x01E8) MISSED OFFSET
	class UAnimSequence*                               SequenceToPlay;                                           // 0x1070(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	class UAnimationAsset*                             AnimToPlay;                                               // 0x1078(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              DefaultPosition;                                          // 0x1080(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              DefaultPlayRate;                                          // 0x1084(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	uint32_t                                           LastPoseTickFrame;                                        // 0x1088(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              LastPoseTickTime;                                         // 0x108C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData13[0xF0];                                      // 0x1090(0x00F0) MISSED OFFSET

	// Function Engine.SkeletalMeshComponent.UnbindClothFromMasterPoseComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_UnbindClothFromMasterPoseComponent(unsigned char bRestoreSimulationSpace);// sub_3B5EF40()

	// Function Engine.SkeletalMeshComponent.SuspendClothingSimulation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SuspendClothingSimulation();// sub_1E09970()

	// Function Engine.SkeletalMeshComponent.Stop
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Stop();// sub_391320()

	// Function Engine.SkeletalMeshComponent.SnapshotPose
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SnapshotPose(struct FPoseSnapshot* Snapshot);// sub_4AFEE90()

	// Function Engine.SkeletalMeshComponent.SetUpdateAnimationInEditor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetUpdateAnimationInEditor(unsigned char NewUpdateState);// sub_38D7D0()

	// Function Engine.SkeletalMeshComponent.SetPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPosition(float InPos, unsigned char bFireNotifies);// sub_D88110()

	// Function Engine.SkeletalMeshComponent.SetPlayRate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPlayRate(float Rate);// sub_50DCED0()

	// Function Engine.SkeletalMeshComponent.SetPhysicsBlendWeight
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPhysicsBlendWeight(float PhysicsBlendWeight);// sub_3FDE840()

	// Function Engine.SkeletalMeshComponent.SetNotifyRigidBodyCollisionBelow
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetNotifyRigidBodyCollisionBelow(unsigned char bNewNotifyRigidBodyCollision, const struct FName& BoneName, unsigned char bIncludeSelf);// sub_1F0B8D0()

	// Function Engine.SkeletalMeshComponent.SetMorphTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetMorphTarget(const struct FName& MorphTargetName, float Value, unsigned char bRemoveZeroWeight);// sub_1567F70()

	// Function Engine.SkeletalMeshComponent.SetEnablePhysicsBlending
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetEnablePhysicsBlending(unsigned char bNewBlendPhysics);// sub_2232280()

	// Function Engine.SkeletalMeshComponent.SetEnableGravityOnAllBodiesBelow
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetEnableGravityOnAllBodiesBelow(unsigned char bEnableGravity, const struct FName& BoneName, unsigned char bIncludeSelf);// sub_616B2E0()

	// Function Engine.SkeletalMeshComponent.SetEnableBodyGravity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetEnableBodyGravity(unsigned char bEnableGravity, const struct FName& BoneName);// sub_5DB3E0()

	// Function Engine.SkeletalMeshComponent.SetConstraintProfileForAll
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetConstraintProfileForAll(const struct FName& ProfileName, unsigned char bDefaultIfNotFound);// sub_45FD180()

	// Function Engine.SkeletalMeshComponent.SetConstraintProfile
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetConstraintProfile(const struct FName& JointName, const struct FName& ProfileName, unsigned char bDefaultIfNotFound);// sub_4715C30()

	// Function Engine.SkeletalMeshComponent.SetClothMaxDistanceScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetClothMaxDistanceScale(float Scale);// sub_4B51220()

	// Function Engine.SkeletalMeshComponent.SetBodyNotifyRigidBodyCollision
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBodyNotifyRigidBodyCollision(unsigned char bNewNotifyRigidBodyCollision, const struct FName& BoneName);// sub_708600()

	// Function Engine.SkeletalMeshComponent.SetAnimInstanceClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAnimInstanceClass(class UObject* NewClass);// sub_4BA0AA0()

	// Function Engine.SkeletalMeshComponent.SetAnimationMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAnimationMode(TEnumAsByte<EAnimationMode> InAnimationMode);// sub_462BEC0()

	// Function Engine.SkeletalMeshComponent.SetAnimation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAnimation(class UAnimationAsset* NewAnimToPlay);// sub_1BFA450()

	// Function Engine.SkeletalMeshComponent.SetAngularLimits
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAngularLimits(const struct FName& InBoneName, float Swing1LimitAngle, float TwistLimitAngle, float Swing2LimitAngle);// sub_556EFD0()

	// Function Engine.SkeletalMeshComponent.SetAllMotorsAngularVelocityDrive
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAllMotorsAngularVelocityDrive(unsigned char bEnableSwingDrive, unsigned char bEnableTwistDrive, unsigned char bSkipCustomPhysicsType);// sub_4A40150()

	// Function Engine.SkeletalMeshComponent.SetAllMotorsAngularPositionDrive
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAllMotorsAngularPositionDrive(unsigned char bEnableSwingDrive, unsigned char bEnableTwistDrive, unsigned char bSkipCustomPhysicsType);// sub_19F4D40()

	// Function Engine.SkeletalMeshComponent.SetAllMotorsAngularDriveParams
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAllMotorsAngularDriveParams(float InSpring, float InDamping, float InForceLimit, unsigned char bSkipCustomPhysicsType);// sub_1207750()

	// Function Engine.SkeletalMeshComponent.SetAllBodiesSimulatePhysics
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAllBodiesSimulatePhysics(unsigned char bNewSimulate);// sub_1CB9F10()

	// Function Engine.SkeletalMeshComponent.SetAllBodiesPhysicsBlendWeight
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAllBodiesPhysicsBlendWeight(float PhysicsBlendWeight, unsigned char bSkipCustomPhysicsType);// sub_425FE50()

	// Function Engine.SkeletalMeshComponent.SetAllBodiesBelowSimulatePhysics
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAllBodiesBelowSimulatePhysics(const struct FName& InBoneName, unsigned char bNewSimulate, unsigned char bIncludeSelf);// sub_10BE910()

	// Function Engine.SkeletalMeshComponent.SetAllBodiesBelowPhysicsBlendWeight
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAllBodiesBelowPhysicsBlendWeight(const struct FName& InBoneName, float PhysicsBlendWeight, unsigned char bSkipCustomPhysicsType, unsigned char bIncludeSelf);// sub_434C2A0()

	// Function Engine.SkeletalMeshComponent.ResumeClothingSimulation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ResumeClothingSimulation();// sub_45AA00()

	// Function Engine.SkeletalMeshComponent.ResetClothTeleportMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ResetClothTeleportMode();// sub_4BBE4B0()

	// Function Engine.SkeletalMeshComponent.ResetAllBodiesSimulatePhysics
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ResetAllBodiesSimulatePhysics();// sub_1034470()

	// Function Engine.SkeletalMeshComponent.PlayAnimation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PlayAnimation(class UAnimationAsset* NewAnimToPlay, unsigned char bLooping);// sub_4A0D100()

	// Function Engine.SkeletalMeshComponent.Play
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Play(unsigned char bLooping);// sub_3DAD30()

	// Function Engine.SkeletalMeshComponent.OverrideAnimationData
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OverrideAnimationData(class UAnimationAsset* InAnimToPlay, unsigned char bIsLooping, unsigned char bIsPlaying, float Position, float PlayRate);// sub_22F33C0()

	// Function Engine.SkeletalMeshComponent.K2_GetClosestPointOnPhysicsAsset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_GetClosestPointOnPhysicsAsset(const struct FVector& WorldPosition, struct FVector* ClosestWorldPosition, struct FVector* Normal, struct FName* BoneName, float* Distance);// sub_410DFB0()

	// Function Engine.SkeletalMeshComponent.IsPlaying
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsPlaying();// sub_D1C5D0()

	// Function Engine.SkeletalMeshComponent.IsClothingSimulationSuspended
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsClothingSimulationSuspended();// sub_5275A40()

	// Function Engine.SkeletalMeshComponent.IsBodyGravityEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsBodyGravityEnabled(const struct FName& BoneName);// sub_448CC90()

	// Function Engine.SkeletalMeshComponent.HasValidAnimationInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_HasValidAnimationInstance();// sub_FE18D0()

	// Function Engine.SkeletalMeshComponent.GetSkeletalCenterOfMass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetSkeletalCenterOfMass();// sub_478720()

	// Function Engine.SkeletalMeshComponent.GetPostProcessInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UAnimInstance* STATIC_GetPostProcessInstance();// sub_CB1DD0()

	// Function Engine.SkeletalMeshComponent.GetPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetPosition();// sub_E7CBA0()

	// Function Engine.SkeletalMeshComponent.GetPlayRate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetPlayRate();// sub_1A42C50()

	// Function Engine.SkeletalMeshComponent.GetMorphTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetMorphTarget(const struct FName& MorphTargetName);// sub_3CBB790()

	// Function Engine.SkeletalMeshComponent.GetCurrentJointAngles
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetCurrentJointAngles(const struct FName& InBoneName, float* Swing1Angle, float* TwistAngle, float* Swing2Angle);// sub_4FB3AB0()

	// Function Engine.SkeletalMeshComponent.GetClothMaxDistanceScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetClothMaxDistanceScale();// sub_50DCEA0()

	// Function Engine.SkeletalMeshComponent.GetBoneMass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetBoneMass(const struct FName& BoneName, unsigned char bScaleMass);// sub_3D96C50()

	// Function Engine.SkeletalMeshComponent.GetAnimInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UAnimInstance* STATIC_GetAnimInstance();// sub_425FBA0()

	// Function Engine.SkeletalMeshComponent.GetAnimationMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TEnumAsByte<EAnimationMode> STATIC_GetAnimationMode();// sub_4F7F5D0()

	// Function Engine.SkeletalMeshComponent.ForceClothNextUpdateTeleportAndReset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ForceClothNextUpdateTeleportAndReset();// sub_17DE160()

	// Function Engine.SkeletalMeshComponent.ForceClothNextUpdateTeleport
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ForceClothNextUpdateTeleport();// sub_3C83420()

	// Function Engine.SkeletalMeshComponent.FindConstraintBoneName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FName STATIC_FindConstraintBoneName(int ConstraintIndex);// sub_5AD91F0()

	// Function Engine.SkeletalMeshComponent.ClearMorphTargets
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearMorphTargets();// sub_1C0ED40()

	// Function Engine.SkeletalMeshComponent.BreakConstraint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BreakConstraint(const struct FVector& Impulse, const struct FVector& HitLocation, const struct FName& InBoneName);// sub_5EFD740()

	// Function Engine.SkeletalMeshComponent.BindClothToMasterPoseComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BindClothToMasterPoseComponent();// sub_1CA3040()

	// Function Engine.SkeletalMeshComponent.AddImpulseToAllBodiesBelow
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddImpulseToAllBodiesBelow(const struct FVector& Impulse, const struct FName& BoneName, unsigned char bVelChange, unsigned char bIncludeSelf);// sub_CB18B0()

	// Function Engine.SkeletalMeshComponent.AddForceToAllBodiesBelow
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddForceToAllBodiesBelow(const struct FVector& force, const struct FName& BoneName, unsigned char bAccelChange, unsigned char bIncludeSelf);// sub_3D63470()

	// Function Engine.SkeletalMeshComponent.AccumulateAllBodiesBelowPhysicsBlendWeight
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AccumulateAllBodiesBelowPhysicsBlendWeight(const struct FName& InBoneName, float AddPhysicsBlendWeight, unsigned char bSkipCustomPhysicsType);// sub_1746390()


}


//Class Engine.StaticMeshComponent
//0x00A0 (0x0B90 - 0x0AF0)
class UStaticMeshComponent : public UMeshComponent
{
public:
	unsigned char                                      bOverrideMinLOD : 1;                                      // 0x0AF0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0AF1(0x0003) MISSED OFFSET
	int                                                MinLOD;                                                   // 0x0AF4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 StaticMesh;                                               // 0x0AF8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bOverrideWireframeColor : 1;                              // 0x0B00(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0B01(0x0003) MISSED OFFSET
	struct FColor                                      WireframeColorOverride;                                   // 0x0B04(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                PerInstanceCustomData;                                    // 0x0B08(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bOverrideNavigationExport : 1;                            // 0x0B18(0x0001) (Transient)
	unsigned char                                      bForceNavigationObstacle : 1;                             // 0x0B18(0x0001) (Transient)
	unsigned char                                      bDisallowMeshPaintPerInstance : 1;                        // 0x0B18(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bIgnoreInstanceForTextureStreaming : 1;                   // 0x0B18(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOverrideLightMapRes : 1;                                 // 0x0B18(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0B19(0x0003) MISSED OFFSET
	int                                                OverriddenLightMapRes;                                    // 0x0B1C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bCastDistanceFieldIndirectShadow : 1;                     // 0x0B20(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0B21(0x0003) MISSED OFFSET
	float                                              DistanceFieldIndirectShadowMinVisibility;                 // 0x0B24(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StreamingDistanceMultiplier;                              // 0x0B28(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                SubDivisionStepSize;                                      // 0x0B2C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseSubDivisions : 1;                                     // 0x0B30(0x0001)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0B31(0x0007) MISSED OFFSET
	TArray<struct FGuid>                               IrrelevantLights;                                         // 0x0B38(0x0010) (ZeroConstructor, Deprecated)
	TArray<struct FStaticMeshComponentLODInfo>         LODData;                                                  // 0x0B48(0x0010) (ZeroConstructor, Transient)
	TArray<struct FStreamingTextureBuildInfo>          StreamingTextureData;                                     // 0x0B58(0x0010) (ZeroConstructor)
	unsigned char                                      bUseDefaultCollision : 1;                                 // 0x0B68(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0B69(0x0003) MISSED OFFSET
	struct FLightmassPrimitiveSettings                 LightmassSettings;                                        // 0x0B6C(0x0018) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData06[0xC];                                       // 0x0B84(0x000C) MISSED OFFSET

	// Function Engine.StaticMeshComponent.SetStaticMesh
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_SetStaticMesh(class UStaticMesh* NewMesh);// sub_E9B300()

	// Function Engine.StaticMeshComponent.SetForcedLodModel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetForcedLodModel(int NewForcedLodModel);// sub_46921E0()

	// Function Engine.StaticMeshComponent.OnRep_StaticMesh
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_StaticMesh(class UStaticMesh* OldStaticMesh);// sub_855180()

	// Function Engine.StaticMeshComponent.GetLocalBounds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetLocalBounds(struct FVector* Min, struct FVector* Max);// sub_2203FE0()


}


//Class Engine.SplineMeshComponent
//0x00A0 (0x0C30 - 0x0B90)
class USplineMeshComponent : public UStaticMeshComponent
{
public:
	struct FSplineMeshParams                           SplineParams;                                             // 0x0B90(0x0058) (Edit)
	struct FVector                                     SplineUpDir;                                              // 0x0BE8(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAllowSplineEditingPerInstance : 1;                       // 0x0BF4(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bSmoothInterpRollScale : 1;                               // 0x0BF4(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0BF5(0x0003) MISSED OFFSET
	TEnumAsByte<ESplineMeshAxis>                       ForwardAxis;                                              // 0x0BF8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0BF9(0x0003) MISSED OFFSET
	float                                              SplineBoundaryMin;                                        // 0x0BFC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SplineBoundaryMax;                                        // 0x0C00(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0C04(0x0004) MISSED OFFSET
	class UBodySetup*                                  BodySetup;                                                // 0x0C08(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FGuid                                       CachedMeshBodySetupGuid;                                  // 0x0C10(0x0010) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bMeshDirty : 1;                                           // 0x0C20(0x0001) (Transient)
	unsigned char                                      UnknownData03[0xF];                                       // 0x0C21(0x000F) MISSED OFFSET

	// Function Engine.SplineMeshComponent.UpdateMesh
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_UpdateMesh();// sub_428360()

	// Function Engine.SplineMeshComponent.SetStartTangent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetStartTangent(const struct FVector& StartTangent, unsigned char bUpdateMesh);// sub_5AB0350()

	// Function Engine.SplineMeshComponent.SetStartScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetStartScale(const struct FVector2D& StartScale, unsigned char bUpdateMesh);// sub_4671910()

	// Function Engine.SplineMeshComponent.SetStartRoll
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetStartRoll(float StartRoll, unsigned char bUpdateMesh);// sub_473E730()

	// Function Engine.SplineMeshComponent.SetStartPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetStartPosition(const struct FVector& StartPos, unsigned char bUpdateMesh);// sub_4D33270()

	// Function Engine.SplineMeshComponent.SetStartOffset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetStartOffset(const struct FVector2D& StartOffset, unsigned char bUpdateMesh);// sub_14EE70()

	// Function Engine.SplineMeshComponent.SetStartAndEnd
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetStartAndEnd(const struct FVector& StartPos, const struct FVector& StartTangent, const struct FVector& EndPos, const struct FVector& EndTangent, unsigned char bUpdateMesh);// sub_183AD40()

	// Function Engine.SplineMeshComponent.SetSplineUpDir
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSplineUpDir(const struct FVector& InSplineUpDir, unsigned char bUpdateMesh);// sub_1E3EFE0()

	// Function Engine.SplineMeshComponent.SetForwardAxis
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetForwardAxis(TEnumAsByte<ESplineMeshAxis> InForwardAxis, unsigned char bUpdateMesh);// sub_19F4E60()

	// Function Engine.SplineMeshComponent.SetEndTangent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetEndTangent(const struct FVector& EndTangent, unsigned char bUpdateMesh);// sub_18A00B0()

	// Function Engine.SplineMeshComponent.SetEndScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetEndScale(const struct FVector2D& EndScale, unsigned char bUpdateMesh);// sub_52C4920()

	// Function Engine.SplineMeshComponent.SetEndRoll
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetEndRoll(float EndRoll, unsigned char bUpdateMesh);// sub_4455EB0()

	// Function Engine.SplineMeshComponent.SetEndPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetEndPosition(const struct FVector& EndPos, unsigned char bUpdateMesh);// sub_49EE540()

	// Function Engine.SplineMeshComponent.SetEndOffset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetEndOffset(const struct FVector2D& EndOffset, unsigned char bUpdateMesh);// sub_5665300()

	// Function Engine.SplineMeshComponent.SetBoundaryMin
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBoundaryMin(float InBoundaryMin, unsigned char bUpdateMesh);// sub_52AE5A0()

	// Function Engine.SplineMeshComponent.SetBoundaryMax
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBoundaryMax(float InBoundaryMax, unsigned char bUpdateMesh);// sub_1963930()

	// Function Engine.SplineMeshComponent.GetStartTangent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetStartTangent();// sub_4B139C0()

	// Function Engine.SplineMeshComponent.GetStartScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_GetStartScale();// sub_4B511E0()

	// Function Engine.SplineMeshComponent.GetStartRoll
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetStartRoll();// sub_1488160()

	// Function Engine.SplineMeshComponent.GetStartPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetStartPosition();// sub_5DA8420()

	// Function Engine.SplineMeshComponent.GetStartOffset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_GetStartOffset();// sub_20CA900()

	// Function Engine.SplineMeshComponent.GetSplineUpDir
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetSplineUpDir();// sub_4364220()

	// Function Engine.SplineMeshComponent.GetForwardAxis
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TEnumAsByte<ESplineMeshAxis> STATIC_GetForwardAxis();// sub_3F622A0()

	// Function Engine.SplineMeshComponent.GetEndTangent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetEndTangent();// sub_1D57DA0()

	// Function Engine.SplineMeshComponent.GetEndScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_GetEndScale();// sub_2291400()

	// Function Engine.SplineMeshComponent.GetEndRoll
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetEndRoll();// sub_59FF210()

	// Function Engine.SplineMeshComponent.GetEndPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetEndPosition();// sub_E02810()

	// Function Engine.SplineMeshComponent.GetEndOffset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_GetEndOffset();// sub_3B78160()

	// Function Engine.SplineMeshComponent.GetBoundaryMin
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetBoundaryMin();// sub_1306900()

	// Function Engine.SplineMeshComponent.GetBoundaryMax
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetBoundaryMax();// sub_5FDD970()

	// Function Engine.SplineMeshComponent.CalculateSplineMeshParams
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_CalculateSplineMeshParams(class USplineComponent* SplineComponent, class USplineComponent* UpSplineComponent, int SegmentsCount, unsigned char bUseSplineRotation, TArray<struct FSplineMeshParams>* SegmentParams, TArray<struct FVector>* SegmentsUpVectors);// sub_5B81C80()


}


//Class Engine.InstancedSplineMeshComponent
//0x0070 (0x0C00 - 0x0B90)
class UInstancedSplineMeshComponent : public UStaticMeshComponent
{
public:
	TArray<struct FSplineInstanceData>                 PerInstanceSMData;                                        // 0x0B90(0x0010) (Edit, ZeroConstructor)
	struct FVector                                     SplineUpDir;                                              // 0x0BA0(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bSmoothInterpRollScale : 1;                               // 0x0BAC(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0BAD(0x0003) MISSED OFFSET
	TEnumAsByte<ESplineMeshAxis>                       ForwardAxis;                                              // 0x0BB0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0BB1(0x0003) MISSED OFFSET
	float                                              SplineBoundaryMin;                                        // 0x0BB4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SplineBoundaryMax;                                        // 0x0BB8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bOptimizeInstanceOrder : 1;                               // 0x0BBC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0BBD(0x0003) MISSED OFFSET
	int                                                InstanceStartCullDistance;                                // 0x0BC0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InstanceEndCullDistance;                                  // 0x0BC4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x18];                                      // 0x0BC8(0x0018) MISSED OFFSET
	class UBodySetup*                                  BodySetup;                                                // 0x0BE0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FGuid                                       CachedMeshBodySetupGuid;                                  // 0x0BE8(0x0010) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0BF8(0x0008) MISSED OFFSET

	// Function Engine.InstancedSplineMeshComponent.UpdateMesh
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_UpdateMesh();// sub_1FD8BE0()

	// Function Engine.InstancedSplineMeshComponent.SetForwardAxis
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetForwardAxis(TEnumAsByte<ESplineMeshAxis> InForwardAxis, unsigned char bUpdateMesh);// sub_D1BC0()

	// Function Engine.InstancedSplineMeshComponent.SetCullDistances
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCullDistances(int StartCullDistance, int EndCullDistance, unsigned char bUpdateMesh);// sub_53EC1A0()

	// Function Engine.InstancedSplineMeshComponent.SetBoundaryMin
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBoundaryMin(float InBoundaryMin, unsigned char bUpdateMesh);// sub_110FFE0()

	// Function Engine.InstancedSplineMeshComponent.SetBoundaryMax
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBoundaryMax(float InBoundaryMax, unsigned char bUpdateMesh);// sub_2AB6D0()

	// Function Engine.InstancedSplineMeshComponent.RemoveInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_RemoveInstance(int InstanceIndex, unsigned char bUpdateMesh);// sub_1FFC4A0()

	// Function Engine.InstancedSplineMeshComponent.OptimizeInstancesOrder
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OptimizeInstancesOrder();// sub_108E3E0()

	// Function Engine.InstancedSplineMeshComponent.GetInstanceSpline
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetInstanceSpline(int InstanceIndex, unsigned char bWorldSpace, struct FSplineMeshParams* OutSplineSegment, struct FVector* InSplineUpDir);// sub_5EB1100()

	// Function Engine.InstancedSplineMeshComponent.GetInstanceCount
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetInstanceCount();// sub_DB0290()

	// Function Engine.InstancedSplineMeshComponent.GetForwardAxis
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TEnumAsByte<ESplineMeshAxis> STATIC_GetForwardAxis();// sub_BD2F0()

	// Function Engine.InstancedSplineMeshComponent.GetBoundaryMin
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetBoundaryMin();// sub_48F5080()

	// Function Engine.InstancedSplineMeshComponent.GetBoundaryMax
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetBoundaryMax();// sub_4043890()

	// Function Engine.InstancedSplineMeshComponent.ClearInstances
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearInstances(unsigned char bUpdateMesh);// sub_1A8BAB0()

	// Function Engine.InstancedSplineMeshComponent.AddInstanceWorldSpace
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_AddInstanceWorldSpace(const struct FSplineMeshParams& WorldSplineSegment, const struct FVector& InSplineUpDir, unsigned char bUpdateMesh);// sub_1691440()

	// Function Engine.InstancedSplineMeshComponent.AddInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_AddInstance(const struct FSplineMeshParams& SplineSegment, const struct FVector& InSplineUpDir, unsigned char bUpdateMesh);// sub_851AB0()


}


//Class Engine.InstancedStaticMeshComponent
//0x00E0 (0x0C70 - 0x0B90)
class UInstancedStaticMeshComponent : public UStaticMeshComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0B90(0x0008) MISSED OFFSET
	int                                                InstancingRandomSeed;                                     // 0x0B98(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                InstanceStartCullDistance;                                // 0x0B9C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                InstanceEndCullDistance;                                  // 0x0BA0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0BA4(0x0004) MISSED OFFSET
	TArray<int>                                        InstanceReorderTable;                                     // 0x0BA8(0x0010) (ZeroConstructor)
	TArray<int>                                        RemovedInstances;                                         // 0x0BB8(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x78];                                      // 0x0BC8(0x0078) MISSED OFFSET
	class UPhysicsSerializer*                          PhysicsSerializer;                                        // 0x0C40(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      bUseWorldTransformHashAsRandom : 1;                       // 0x0C48(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0C49(0x0003) MISSED OFFSET
	int                                                NumPendingLightmaps;                                      // 0x0C4C(0x0004) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData)
	TArray<struct FInstancedStaticMeshMappingInfo>     CachedMappings;                                           // 0x0C50(0x0010) (ZeroConstructor, Transient, DuplicateTransient)
	unsigned char                                      UnknownData04[0x10];                                      // 0x0C60(0x0010) MISSED OFFSET

	// Function Engine.InstancedStaticMeshComponent.UpdateInstanceTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_UpdateInstanceTransform(int InstanceIndex, const struct FTransform& NewInstanceTransform, unsigned char bWorldSpace, unsigned char bMarkRenderStateDirty, unsigned char bTeleport);// sub_619A00()

	// Function Engine.InstancedStaticMeshComponent.SetInstanceCustomData
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_SetInstanceCustomData(int InstanceIndex, const struct FVector4& InPerInstanceCustomData);// sub_958E80()

	// Function Engine.InstancedStaticMeshComponent.SetCullDistances
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCullDistances(int StartCullDistance, int EndCullDistance);// sub_165C80()

	// Function Engine.InstancedStaticMeshComponent.RemoveInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_RemoveInstance(int InstanceIndex);// sub_1D6EDE0()

	// Function Engine.InstancedStaticMeshComponent.GetInstanceTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetInstanceTransform(int InstanceIndex, unsigned char bWorldSpace, struct FTransform* OutInstanceTransform);// sub_D687D0()

	// Function Engine.InstancedStaticMeshComponent.GetInstancesOverlappingSphere
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TArray<int> STATIC_GetInstancesOverlappingSphere(const struct FVector& Center, float Radius, unsigned char bSphereInWorldSpace);// sub_1BE4DD0()

	// Function Engine.InstancedStaticMeshComponent.GetInstancesOverlappingBox
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TArray<int> STATIC_GetInstancesOverlappingBox(const struct FBox& Box, unsigned char bBoxInWorldSpace);// sub_567B890()

	// Function Engine.InstancedStaticMeshComponent.GetInstanceCustomData
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetInstanceCustomData(int InstanceIndex, struct FVector4* OutPerInstanceCustomData);// sub_118AC30()

	// Function Engine.InstancedStaticMeshComponent.GetInstanceCount
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetInstanceCount();// sub_66D650()

	// Function Engine.InstancedStaticMeshComponent.ClearInstances
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearInstances();// sub_4570AC0()

	// Function Engine.InstancedStaticMeshComponent.AddInstanceWorldSpace
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_AddInstanceWorldSpace(const struct FTransform& WorldTransform, const struct FVector4& InPerInstanceCustomData);// sub_50445B0()

	// Function Engine.InstancedStaticMeshComponent.AddInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_AddInstance(const struct FTransform& InstanceTransform, const struct FVector4& InPerInstanceCustomData);// sub_4043570()


}


//Class Engine.HierarchicalInstancedStaticMeshComponent
//0x0120 (0x0D90 - 0x0C70)
class UHierarchicalInstancedStaticMeshComponent : public UInstancedStaticMeshComponent
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x0C70(0x0060) MISSED OFFSET
	TArray<int>                                        SortedInstances;                                          // 0x0CD0(0x0010) (ZeroConstructor)
	int                                                NumBuiltInstances;                                        // 0x0CE0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0CE4(0x0004) MISSED OFFSET
	struct FBox                                        BuiltInstanceBounds;                                      // 0x0CE8(0x001C) (ZeroConstructor, IsPlainOldData)
	struct FBox                                        UnbuiltInstanceBounds;                                    // 0x0D04(0x001C) (ZeroConstructor, IsPlainOldData)
	TArray<struct FBox>                                UnbuiltInstanceBoundsList;                                // 0x0D20(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x20];                                      // 0x0D30(0x0020) MISSED OFFSET
	int                                                OcclusionLayerNumNodes;                                   // 0x0D50(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FBoxSphereBounds                            CacheMeshExtendedBounds;                                  // 0x0D54(0x001C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnableDensityScaling : 1;                                // 0x0D70(0x0001)
	unsigned char                                      bDisableCollision : 1;                                    // 0x0D70(0x0001)
	unsigned char                                      UnknownData03[0x1F];                                      // 0x0D71(0x001F) MISSED OFFSET

	// Function Engine.HierarchicalInstancedStaticMeshComponent.RemoveInstances
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_RemoveInstances(TArray<int> InstancesToRemove);// sub_64C750()


}


//Class Engine.GridInstancedStaticMeshComponent
//0x0010 (0x0DA0 - 0x0D90)
class UGridInstancedStaticMeshComponent : public UHierarchicalInstancedStaticMeshComponent
{
public:
	int                                                MinVertsToSplitNodeForGrid;                               // 0x0D90(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0D94(0x000C) MISSED OFFSET

}


//Class Engine.LODParentComponent
//0x0000 (0x0B90 - 0x0B90)
class ULODParentComponent : public UStaticMeshComponent
{
public:

}


//Class Engine.Texture
//0x0090 (0x00D0 - 0x0040)
class UTexture : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	struct FGuid                                       LightingGuid;                                             // 0x0048(0x0010) (ZeroConstructor, IsPlainOldData)
	int                                                LODBias;                                                  // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                NumCinematicMipLevels;                                    // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                GlobalLODBias;                                            // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      SRGB : 1;                                                 // 0x0064(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      NeverStream : 1;                                          // 0x0064(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bNoTiling : 1;                                            // 0x0064(0x0001)
	unsigned char                                      bUseCinematicMipLevels : 1;                               // 0x0064(0x0001) (Transient)
	unsigned char                                      bAsyncResourceReleaseHasBeenStarted : 1;                  // 0x0064(0x0001) (Transient)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	int                                                CachedCombinedLODBias;                                    // 0x0068(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<ETextureCompressionSettings>           CompressionSettings;                                      // 0x006C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETextureFilter>                        Filter;                                                   // 0x006D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETextureGroup>                         LODGroup;                                                 // 0x006E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x006F(0x0001) MISSED OFFSET
	TArray<class UAssetUserData*>                      AssetUserData;                                            // 0x0070(0x0010) (Edit, ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData03[0x50];                                      // 0x0080(0x0050) MISSED OFFSET

}


//Class Engine.Texture2D
//0x0040 (0x0110 - 0x00D0)
class UTexture2D : public UTexture
{
public:
	int                                                StreamingIndex;                                           // 0x00D0(0x0004) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData)
	int                                                LevelIndex;                                               // 0x00D4(0x0004) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData)
	int                                                FirstResourceMemMip;                                      // 0x00D8(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FIntPoint                                   ImportedSize;                                             // 0x00DC(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00E4(0x0004) MISSED OFFSET
	double                                             ForceMipLevelsToBeResidentTimestamp;                      // 0x00E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bTemporarilyDisableStreaming : 1;                         // 0x00F0(0x0001) (Transient)
	unsigned char                                      bIsStreamable : 1;                                        // 0x00F0(0x0001) (Transient)
	unsigned char                                      bHasStreamingUpdatePending : 1;                           // 0x00F0(0x0001) (Transient)
	unsigned char                                      bForceMiplevelsToBeResident : 1;                          // 0x00F0(0x0001) (Transient)
	unsigned char                                      bIgnoreStreamingMipBias : 1;                              // 0x00F0(0x0001) (Transient)
	unsigned char                                      bGlobalForceMipLevelsToBeResident : 1;                    // 0x00F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsTransient : 1;                                         // 0x00F0(0x0001) (Transient)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	TEnumAsByte<ETextureAddress>                       AddressX;                                                 // 0x00F4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETextureAddress>                       AddressY;                                                 // 0x00F5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1A];                                      // 0x00F6(0x001A) MISSED OFFSET

	// Function Engine.Texture2D.SetForceMipLevelsToBeResident
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetForceMipLevelsToBeResident(float Seconds, int CinematicTextureGroups);// sub_215B1F0()

	// Function Engine.Texture2D.Blueprint_GetSizeY
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Blueprint_GetSizeY();// sub_632D40()

	// Function Engine.Texture2D.Blueprint_GetSizeX
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Blueprint_GetSizeX();// sub_4926520()


}


//Class Engine.MinimapLabelData
//0x0020 (0x0068 - 0x0048)
class UMinimapLabelData : public UDataAsset
{
public:
	TAssetPtr<classUTexture2D>                         Color;                                                    // 0x0048(0x0020) (Edit)

}


//Class Engine.MinimapLabelComponent
//0x0010 (0x09F0 - 0x09E0)
class UMinimapLabelComponent : public UPrimitiveComponent
{
public:
	class UMinimapLabelData*                           LabelData;                                                // 0x09E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   Offset;                                                   // 0x09E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MinimapObjectData
//0x00B8 (0x0100 - 0x0048)
class UMinimapObjectData : public UDataAsset
{
public:
	TAssetPtr<classUTexture2D>                         Color;                                                    // 0x0048(0x0020) (Edit)
	TAssetPtr<classUTexture2D>                         Normal;                                                   // 0x0068(0x0020) (Edit)
	float                                              Height;                                                   // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x74];                                      // 0x008C(0x0074) MISSED OFFSET

}


//Class Engine.MinimapObjectComponent
//0x0010 (0x09F0 - 0x09E0)
class UMinimapObjectComponent : public UPrimitiveComponent
{
public:
	class UMinimapObjectData*                          ObjectData;                                               // 0x09E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x09E8(0x0008) MISSED OFFSET

}


//Class Engine.ModelComponent
//0x0040 (0x0A20 - 0x09E0)
class UModelComponent : public UPrimitiveComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x09E0(0x0018) MISSED OFFSET
	class UBodySetup*                                  ModelBodySetup;                                           // 0x09F8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0A00(0x0020) MISSED OFFSET

}


//Class Engine.NavLinkComponent
//0x0020 (0x0A00 - 0x09E0)
class UNavLinkComponent : public UPrimitiveComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x09E0(0x0008) MISSED OFFSET
	TArray<struct FNavigationLink>                     Links;                                                    // 0x09E8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x09F8(0x0008) MISSED OFFSET

}


//Class Engine.NavLinkRenderingComponent
//0x0000 (0x09E0 - 0x09E0)
class UNavLinkRenderingComponent : public UPrimitiveComponent
{
public:

}


//Class Engine.NavMeshRenderingComponent
//0x0010 (0x09F0 - 0x09E0)
class UNavMeshRenderingComponent : public UPrimitiveComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x09E0(0x0010) MISSED OFFSET

}


//Class Engine.NavTestRenderingComponent
//0x0000 (0x09E0 - 0x09E0)
class UNavTestRenderingComponent : public UPrimitiveComponent
{
public:

}


//Class Engine.MeshClippingUnderwaterComponent
//0x0040 (0x0A50 - 0x0A10)
class UMeshClippingUnderwaterComponent : public UBoxComponent
{
public:
	unsigned char                                      bEnabled : 1;                                             // 0x0A10(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0A11(0x0001)
	unsigned char                                      bUseParentBounds : 1;                                     // 0x0A11(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0A12(0x0002) MISSED OFFSET
	float                                              ExtendUpwards;                                            // 0x0A14(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ExtendDownwards;                                          // 0x0A18(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x34];                                      // 0x0A1C(0x0034) MISSED OFFSET

	// Function Engine.MeshClippingUnderwaterComponent.GetOrientedBoxBounds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FOrientedBox STATIC_GetOrientedBoxBounds(const struct FTransform& LocalToWorld);// sub_604EF0()


}


//Class Engine.CapsuleComponent
//0x0010 (0x0A10 - 0x0A00)
class UCapsuleComponent : public UShapeComponent
{
public:
	float                                              CapsuleHalfHeight;                                        // 0x0A00(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CapsuleRadius;                                            // 0x0A04(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CapsuleHeight;                                            // 0x0A08(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0A0C(0x0004) MISSED OFFSET

	// Function Engine.CapsuleComponent.SetCapsuleSize
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCapsuleSize(float InRadius, float InHalfHeight, unsigned char bUpdateOverlaps);// sub_4AE7870()

	// Function Engine.CapsuleComponent.SetCapsuleRadius
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCapsuleRadius(float Radius, unsigned char bUpdateOverlaps);// sub_131FFC0()

	// Function Engine.CapsuleComponent.SetCapsuleHalfHeight
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCapsuleHalfHeight(float HalfHeight, unsigned char bUpdateOverlaps);// sub_D1AF0()

	// Function Engine.CapsuleComponent.GetUnscaledCapsuleSize_WithoutHemisphere
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetUnscaledCapsuleSize_WithoutHemisphere(float* OutRadius, float* OutHalfHeightWithoutHemisphere);// sub_3FBE690()

	// Function Engine.CapsuleComponent.GetUnscaledCapsuleSize
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetUnscaledCapsuleSize(float* OutRadius, float* OutHalfHeight);// sub_44EEA50()

	// Function Engine.CapsuleComponent.GetUnscaledCapsuleRadius
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetUnscaledCapsuleRadius();// sub_6BA370()

	// Function Engine.CapsuleComponent.GetUnscaledCapsuleHalfHeight_WithoutHemisphere
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetUnscaledCapsuleHalfHeight_WithoutHemisphere();// sub_146D870()

	// Function Engine.CapsuleComponent.GetUnscaledCapsuleHalfHeight
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetUnscaledCapsuleHalfHeight();// sub_11730D0()

	// Function Engine.CapsuleComponent.GetShapeScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetShapeScale();// sub_DED5C0()

	// Function Engine.CapsuleComponent.GetScaledCapsuleSize_WithoutHemisphere
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetScaledCapsuleSize_WithoutHemisphere(float* OutRadius, float* OutHalfHeightWithoutHemisphere);// sub_1BD0780()

	// Function Engine.CapsuleComponent.GetScaledCapsuleSize
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetScaledCapsuleSize(float* OutRadius, float* OutHalfHeight);// sub_5120E70()

	// Function Engine.CapsuleComponent.GetScaledCapsuleRadius
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetScaledCapsuleRadius();// sub_501CFC0()

	// Function Engine.CapsuleComponent.GetScaledCapsuleHalfHeight_WithoutHemisphere
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetScaledCapsuleHalfHeight_WithoutHemisphere();// sub_3E5D010()

	// Function Engine.CapsuleComponent.GetScaledCapsuleHalfHeight
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetScaledCapsuleHalfHeight();// sub_1B2E6D0()


}


//Class Engine.SphereComponent
//0x0010 (0x0A10 - 0x0A00)
class USphereComponent : public UShapeComponent
{
public:
	float                                              SphereRadius;                                             // 0x0A00(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0A04(0x000C) MISSED OFFSET

	// Function Engine.SphereComponent.SetSphereRadius
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSphereRadius(float InSphereRadius, unsigned char bUpdateOverlaps);// sub_2445810()

	// Function Engine.SphereComponent.GetUnscaledSphereRadius
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetUnscaledSphereRadius();// sub_11730D0()

	// Function Engine.SphereComponent.GetShapeScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetShapeScale();// sub_DED5C0()

	// Function Engine.SphereComponent.GetScaledSphereRadius
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetScaledSphereRadius();// sub_1B2E6D0()


}


//Class Engine.DrawSphereComponent
//0x0000 (0x0A10 - 0x0A10)
class UDrawSphereComponent : public USphereComponent
{
public:

}


//Class Engine.SplineComponent
//0x00F0 (0x0AD0 - 0x09E0)
class USplineComponent : public UPrimitiveComponent
{
public:
	struct FSplineCurves                               SplineCurves;                                             // 0x09E0(0x0060) (Edit)
	struct FInterpCurveVector                          SplineInfo;                                               // 0x0A40(0x0018) (ZeroConstructor, Deprecated)
	struct FInterpCurveQuat                            SplineRotInfo;                                            // 0x0A58(0x0018) (ZeroConstructor, Deprecated)
	struct FInterpCurveVector                          SplineScaleInfo;                                          // 0x0A70(0x0018) (ZeroConstructor, Deprecated)
	struct FInterpCurveFloat                           SplineReparamTable;                                       // 0x0A88(0x0018) (ZeroConstructor, Deprecated)
	unsigned char                                      bAllowSplineEditingPerInstance : 1;                       // 0x0AA0(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0AA1(0x0003) MISSED OFFSET
	int                                                ReparamStepsPerSegment;                                   // 0x0AA4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAutoCurvedReparamTable : 1;                              // 0x0AA8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0AA9(0x0001)
	unsigned char                                      bAdaptiveDistanceReparamTable : 1;                        // 0x0AA9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0AAA(0x0002) MISSED OFFSET
	float                                              ReparamMaxStepDistance;                                   // 0x0AAC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // 0x0AB0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bStationaryEndpoints : 1;                                 // 0x0AB4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03 : 8;                                        // 0x0AB5(0x0001)
	unsigned char                                      bSplineHasBeenEdited : 1;                                 // 0x0AB5(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04 : 8;                                        // 0x0AB6(0x0001)
	unsigned char                                      bModifiedByConstructionScript : 1;                        // 0x0AB6(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05 : 8;                                        // 0x0AB7(0x0001)
	unsigned char                                      bInputSplinePointsToConstructionScript : 1;               // 0x0AB7(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06 : 8;                                        // 0x0AB8(0x0001)
	unsigned char                                      bDrawDebug : 1;                                           // 0x0AB8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07 : 8;                                        // 0x0AB9(0x0001)
	unsigned char                                      bClosedLoop : 1;                                          // 0x0AB9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08 : 8;                                        // 0x0ABA(0x0001)
	unsigned char                                      bLoopPositionOverride : 1;                                // 0x0ABA(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x1];                                       // 0x0ABB(0x0001) MISSED OFFSET
	float                                              LoopPosition;                                             // 0x0ABC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     DefaultUpVector;                                          // 0x0AC0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x0ACC(0x0004) MISSED OFFSET

	// Function Engine.SplineComponent.UpdateSpline
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_UpdateSpline();// sub_60B2D10()

	// Function Engine.SplineComponent.SetWorldLocationAtSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetWorldLocationAtSplinePoint(int PointIndex, const struct FVector& InLocation);// sub_3E92A00()

	// Function Engine.SplineComponent.SetUpVectorAtSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetUpVectorAtSplinePoint(int PointIndex, const struct FVector& InUpVector, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, unsigned char bUpdateSpline);// sub_1658270()

	// Function Engine.SplineComponent.SetUnselectedSplineSegmentColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetUnselectedSplineSegmentColor(const struct FLinearColor& SegmentColor);// sub_1CFE620()

	// Function Engine.SplineComponent.SetTangentsAtSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTangentsAtSplinePoint(int PointIndex, const struct FVector& InArriveTangent, const struct FVector& InLeaveTangent, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, unsigned char bUpdateSpline);// sub_55CB190()

	// Function Engine.SplineComponent.SetTangentAtSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTangentAtSplinePoint(int PointIndex, const struct FVector& InTangent, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, unsigned char bUpdateSpline);// sub_242B200()

	// Function Engine.SplineComponent.SetSplineWorldPoints
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSplineWorldPoints(TArray<struct FVector> Points);// sub_64C810()

	// Function Engine.SplineComponent.SetSplinePointType
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSplinePointType(int PointIndex, TEnumAsByte<ESplinePointType> Type, unsigned char bUpdateSpline);// sub_E7CD40()

	// Function Engine.SplineComponent.SetSplinePoints
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSplinePoints(TArray<struct FVector> Points, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, unsigned char bUpdateSpline);// sub_1D6EE80()

	// Function Engine.SplineComponent.SetSplineLocalPoints
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSplineLocalPoints(TArray<struct FVector> Points);// sub_126CA40()

	// Function Engine.SplineComponent.SetSelectedSplineSegmentColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSelectedSplineSegmentColor(const struct FLinearColor& SegmentColor);// sub_4B89F80()

	// Function Engine.SplineComponent.SetLocationAtSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLocationAtSplinePoint(int PointIndex, const struct FVector& InLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, unsigned char bUpdateSpline);// sub_185D00()

	// Function Engine.SplineComponent.SetDrawDebug
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDrawDebug(unsigned char bShow);// sub_6029550()

	// Function Engine.SplineComponent.SetDefaultUpVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDefaultUpVector(const struct FVector& UpVector, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_D32D70()

	// Function Engine.SplineComponent.SetClosedLoopAtPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetClosedLoopAtPosition(unsigned char bInClosedLoop, float Key, unsigned char bUpdateSpline);// sub_3E5D190()

	// Function Engine.SplineComponent.SetClosedLoop
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetClosedLoop(unsigned char bInClosedLoop, unsigned char bUpdateSpline);// sub_3B1A900()

	// Function Engine.SplineComponent.RemoveSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RemoveSplinePoint(int Index, unsigned char bUpdateSpline);// sub_55CB050()

	// Function Engine.SplineComponent.IsClosedLoop
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsClosedLoop();// sub_4BA0A70()

	// Function Engine.SplineComponent.GetWorldTangentAtDistanceAlongSpline
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetWorldTangentAtDistanceAlongSpline(float Distance);// sub_1D57DE0()

	// Function Engine.SplineComponent.GetWorldRotationAtTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_GetWorldRotationAtTime(float Time, unsigned char bUseConstantVelocity);// sub_49D7A90()

	// Function Engine.SplineComponent.GetWorldRotationAtDistanceAlongSpline
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_GetWorldRotationAtDistanceAlongSpline(float Distance);// sub_851C00()

	// Function Engine.SplineComponent.GetWorldLocationAtTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetWorldLocationAtTime(float Time, unsigned char bUseConstantVelocity);// sub_416BDF0()

	// Function Engine.SplineComponent.GetWorldLocationAtSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetWorldLocationAtSplinePoint(int PointIndex);// sub_4B13A00()

	// Function Engine.SplineComponent.GetWorldLocationAtDistanceAlongSpline
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetWorldLocationAtDistanceAlongSpline(float Distance);// sub_834AE0()

	// Function Engine.SplineComponent.GetWorldDirectionAtTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetWorldDirectionAtTime(float Time, unsigned char bUseConstantVelocity);// sub_52C4830()

	// Function Engine.SplineComponent.GetWorldDirectionAtDistanceAlongSpline
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetWorldDirectionAtDistanceAlongSpline(float Distance);// sub_491FC0()

	// Function Engine.SplineComponent.GetUpVectorAtTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetUpVectorAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, unsigned char bUseConstantVelocity);// sub_5BDA310()

	// Function Engine.SplineComponent.GetUpVectorAtSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetUpVectorAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_553A1C0()

	// Function Engine.SplineComponent.GetUpVectorAtDistanceAlongSpline
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetUpVectorAtDistanceAlongSpline(float Distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_4138D80()

	// Function Engine.SplineComponent.GetTransformAtTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTransform STATIC_GetTransformAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, unsigned char bUseConstantVelocity, unsigned char bUseScale);// sub_5044C80()

	// Function Engine.SplineComponent.GetTransformAtSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTransform STATIC_GetTransformAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, unsigned char bUseScale);// sub_4C2BE20()

	// Function Engine.SplineComponent.GetTransformAtDistanceAlongSpline
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTransform STATIC_GetTransformAtDistanceAlongSpline(float Distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, unsigned char bUseScale);// sub_11A0EC0()

	// Function Engine.SplineComponent.GetTangentAtTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetTangentAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, unsigned char bUseConstantVelocity);// sub_4364260()

	// Function Engine.SplineComponent.GetTangentAtSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetTangentAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_876300()

	// Function Engine.SplineComponent.GetTangentAtDistanceAlongSpline
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetTangentAtDistanceAlongSpline(float Distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_2746F0()

	// Function Engine.SplineComponent.GetSplinePointType
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TEnumAsByte<ESplinePointType> STATIC_GetSplinePointType(int PointIndex);// sub_47F3600()

	// Function Engine.SplineComponent.GetSplineLength
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetSplineLength();// sub_1B61900()

	// Function Engine.SplineComponent.GetScaleAtTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetScaleAtTime(float Time, unsigned char bUseConstantVelocity);// sub_43DE6B0()

	// Function Engine.SplineComponent.GetScaleAtSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetScaleAtSplinePoint(int PointIndex);// sub_1F6D480()

	// Function Engine.SplineComponent.GetScaleAtDistanceAlongSpline
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetScaleAtDistanceAlongSpline(float Distance);// sub_5A378D0()

	// Function Engine.SplineComponent.GetRotationAtTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_GetRotationAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, unsigned char bUseConstantVelocity);// sub_3EF1480()

	// Function Engine.SplineComponent.GetRotationAtSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_GetRotationAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_77CBC0()

	// Function Engine.SplineComponent.GetRotationAtDistanceAlongSpline
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_GetRotationAtDistanceAlongSpline(float Distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_1AA8CA0()

	// Function Engine.SplineComponent.GetRollAtTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetRollAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, unsigned char bUseConstantVelocity);// sub_1415C50()

	// Function Engine.SplineComponent.GetRollAtSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetRollAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_186B250()

	// Function Engine.SplineComponent.GetRollAtDistanceAlongSpline
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetRollAtDistanceAlongSpline(float Distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_1078410()

	// Function Engine.SplineComponent.GetRightVectorAtTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetRightVectorAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, unsigned char bUseConstantVelocity);// sub_3E778C0()

	// Function Engine.SplineComponent.GetRightVectorAtSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetRightVectorAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_5D5C510()

	// Function Engine.SplineComponent.GetRightVectorAtDistanceAlongSpline
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetRightVectorAtDistanceAlongSpline(float Distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_110FE10()

	// Function Engine.SplineComponent.GetNumberOfSplinePoints
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetNumberOfSplinePoints();// sub_2746C0()

	// Function Engine.SplineComponent.GetLocationAtTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetLocationAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, unsigned char bUseConstantVelocity);// sub_13FDF30()

	// Function Engine.SplineComponent.GetLocationAtSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetLocationAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_48DF4E0()

	// Function Engine.SplineComponent.GetLocationAtDistanceAlongSpline
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetLocationAtDistanceAlongSpline(float Distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_5EC72D0()

	// Function Engine.SplineComponent.GetLocationAndTangentAtSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetLocationAndTangentAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, struct FVector* Location, struct FVector* Tangent);// sub_5275850()

	// Function Engine.SplineComponent.GetLocalLocationAndTangentAtSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetLocalLocationAndTangentAtSplinePoint(int PointIndex, struct FVector* LocalLocation, struct FVector* LocalTangent);// sub_1370970()

	// Function Engine.SplineComponent.GetLengthInRange
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetLengthInRange(int StartIndex, int EndIndex);// sub_4B89EC0()

	// Function Engine.SplineComponent.GetLeaveTangentAtSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetLeaveTangentAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_5F2A670()

	// Function Engine.SplineComponent.GetInputKeyAtDistanceAlongSpline
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetInputKeyAtDistanceAlongSpline(float Distance);// sub_49BD960()

	// Function Engine.SplineComponent.GetDistanceAlongSplineAtSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetDistanceAlongSplineAtSplinePoint(int PointIndex);// sub_3E0BBE0()

	// Function Engine.SplineComponent.GetDirectionAtTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetDirectionAtTime(float Time, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, unsigned char bUseConstantVelocity);// sub_1854140()

	// Function Engine.SplineComponent.GetDirectionAtSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetDirectionAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_108E2D0()

	// Function Engine.SplineComponent.GetDirectionAtDistanceAlongSpline
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetDirectionAtDistanceAlongSpline(float Distance, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_3D96D20()

	// Function Engine.SplineComponent.GetDefaultUpVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetDefaultUpVector(TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_5206810()

	// Function Engine.SplineComponent.GetArriveTangentAtSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetArriveTangentAtSplinePoint(int PointIndex, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_42314A0()

	// Function Engine.SplineComponent.FindUpVectorClosestToWorldLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_FindUpVectorClosestToWorldLocation(const struct FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_5E246F0()

	// Function Engine.SplineComponent.FindTransformClosestToWorldLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTransform STATIC_FindTransformClosestToWorldLocation(const struct FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, unsigned char bUseScale);// sub_DB6760()

	// Function Engine.SplineComponent.FindTangentClosestToWorldLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_FindTangentClosestToWorldLocation(const struct FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_1D6ECF0()

	// Function Engine.SplineComponent.FindScaleClosestToWorldLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_FindScaleClosestToWorldLocation(const struct FVector& WorldLocation);// sub_66D500()

	// Function Engine.SplineComponent.FindRotationClosestToWorldLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_FindRotationClosestToWorldLocation(const struct FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_4B2B9F0()

	// Function Engine.SplineComponent.FindRollClosestToWorldLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_FindRollClosestToWorldLocation(const struct FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_4C48D60()

	// Function Engine.SplineComponent.FindRightVectorClosestToWorldLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_FindRightVectorClosestToWorldLocation(const struct FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_1691590()

	// Function Engine.SplineComponent.FindLocationClosestToWorldLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_FindLocationClosestToWorldLocation(const struct FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_4A6F220()

	// Function Engine.SplineComponent.FindInputKeyClosestToWorldLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_FindInputKeyClosestToWorldLocation(const struct FVector& WorldLocation);// sub_3AD2F50()

	// Function Engine.SplineComponent.FindDirectionClosestToWorldLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_FindDirectionClosestToWorldLocation(const struct FVector& WorldLocation, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace);// sub_4A6F130()

	// Function Engine.SplineComponent.ClearSplinePoints
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearSplinePoints(unsigned char bUpdateSpline);// sub_3FBE600()

	// Function Engine.SplineComponent.AddSplineWorldPoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddSplineWorldPoint(const struct FVector& Position);// sub_1FB7DB0()

	// Function Engine.SplineComponent.AddSplinePointAtIndex
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddSplinePointAtIndex(const struct FVector& Position, int Index, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, unsigned char bUpdateSpline);// sub_1DA2640()

	// Function Engine.SplineComponent.AddSplinePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddSplinePoint(const struct FVector& Position, TEnumAsByte<ESplineCoordinateSpace> CoordinateSpace, unsigned char bUpdateSpline);// sub_612C420()

	// Function Engine.SplineComponent.AddSplineLocalPoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddSplineLocalPoint(const struct FVector& Position);// sub_5E24660()

	// Function Engine.SplineComponent.AddPoints
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddPoints(TArray<struct FSplinePoint> Points, unsigned char bUpdateSpline);// sub_45076C0()

	// Function Engine.SplineComponent.AddPoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddPoint(const struct FSplinePoint& Point, unsigned char bUpdateSpline);// sub_FF78C0()


}


//Class Engine.TextRenderComponent
//0x0050 (0x0A30 - 0x09E0)
class UTextRenderComponent : public UPrimitiveComponent
{
public:
	struct FText                                       Text;                                                     // 0x09E0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UMaterialInterface*                          TextMaterial;                                             // 0x09F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFont*                                       Font;                                                     // 0x0A00(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EHorizTextAligment>                    HorizontalAlignment;                                      // 0x0A08(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EVerticalTextAligment>                 VerticalAlignment;                                        // 0x0A09(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0A0A(0x0002) MISSED OFFSET
	struct FColor                                      TextRenderColor;                                          // 0x0A0C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              XScale;                                                   // 0x0A10(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              YScale;                                                   // 0x0A14(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WorldSize;                                                // 0x0A18(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              InvDefaultSize;                                           // 0x0A1C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              HorizSpacingAdjust;                                       // 0x0A20(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              VertSpacingAdjust;                                        // 0x0A24(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAlwaysRenderAsText : 1;                                  // 0x0A28(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0A29(0x0007) MISSED OFFSET

	// Function Engine.TextRenderComponent.SetYScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetYScale(float Value);// sub_5FF89A0()

	// Function Engine.TextRenderComponent.SetXScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetXScale(float Value);// sub_19D8F80()

	// Function Engine.TextRenderComponent.SetWorldSize
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetWorldSize(float Value);// sub_1ED4260()

	// Function Engine.TextRenderComponent.SetVertSpacingAdjust
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVertSpacingAdjust(float Value);// sub_1A118C0()

	// Function Engine.TextRenderComponent.SetVerticalAlignment
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVerticalAlignment(TEnumAsByte<EVerticalTextAligment> Value);// sub_510C440()

	// Function Engine.TextRenderComponent.SetTextRenderColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTextRenderColor(const struct FColor& Value);// sub_1FB80E0()

	// Function Engine.TextRenderComponent.SetTextMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTextMaterial(class UMaterialInterface* Material);// sub_1619A50()

	// Function Engine.TextRenderComponent.SetText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetText(const struct FString& Value);// sub_5D8EC10()

	// Function Engine.TextRenderComponent.SetHorizSpacingAdjust
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetHorizSpacingAdjust(float Value);// sub_21B3EB0()

	// Function Engine.TextRenderComponent.SetHorizontalAlignment
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetHorizontalAlignment(TEnumAsByte<EHorizTextAligment> Value);// sub_5B94F00()

	// Function Engine.TextRenderComponent.SetFont
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetFont(class UFont* Value);// sub_377AE0()

	// Function Engine.TextRenderComponent.K2_SetText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_SetText(const struct FText& Value);// sub_1A8BD30()

	// Function Engine.TextRenderComponent.GetTextWorldSize
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetTextWorldSize();// sub_10D63E0()

	// Function Engine.TextRenderComponent.GetTextLocalSize
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetTextLocalSize();// sub_1619A10()


}


//Class Engine.VectorFieldComponent
//0x0030 (0x0A10 - 0x09E0)
class UVectorFieldComponent : public UPrimitiveComponent
{
public:
	class UVectorField*                                VectorField;                                              // 0x09E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Intensity;                                                // 0x09E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Tightness;                                                // 0x09EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bPreviewVectorField : 1;                                  // 0x09F0(0x0001) (Transient)
	unsigned char                                      UnknownData00[0x1F];                                      // 0x09F1(0x001F) MISSED OFFSET

	// Function Engine.VectorFieldComponent.SetIntensity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetIntensity(float NewIntensity);// sub_DD25D0()


}


//Class Engine.RadialForceComponent
//0x0030 (0x04D0 - 0x04A0)
class URadialForceComponent : public USceneComponent
{
public:
	float                                              Radius;                                                   // 0x04A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERadialImpulseFalloff>                 Falloff;                                                  // 0x04A4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x04A5(0x0003) MISSED OFFSET
	float                                              ImpulseStrength;                                          // 0x04A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bImpulseVelChange : 1;                                    // 0x04AC(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bIgnoreOwningActor : 1;                                   // 0x04AC(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x3];                                       // 0x04AD(0x0003) MISSED OFFSET
	float                                              ForceStrength;                                            // 0x04B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DestructibleDamage;                                       // 0x04B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<TEnumAsByte<EObjectTypeQuery>>              ObjectTypesToAffect;                                      // 0x04B8(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData02[0x8];                                       // 0x04C8(0x0008) MISSED OFFSET

	// Function Engine.RadialForceComponent.RemoveObjectTypeToAffect
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RemoveObjectTypeToAffect(TEnumAsByte<EObjectTypeQuery> ObjectType);// sub_61C89A0()

	// Function Engine.RadialForceComponent.FireImpulse
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_FireImpulse();// sub_1995AD0()

	// Function Engine.RadialForceComponent.AddObjectTypeToAffect
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddObjectTypeToAffect(TEnumAsByte<EObjectTypeQuery> ObjectType);// sub_6080DC0()


}


//Class Engine.TextureCube
//0x0058 (0x0128 - 0x00D0)
class UTextureCube : public UTexture
{
public:
	unsigned char                                      UnknownData00[0x58];                                      // 0x00D0(0x0058) MISSED OFFSET

}


//Class Engine.ReflectionCaptureComponent
//0x0080 (0x0520 - 0x04A0)
class UReflectionCaptureComponent : public USceneComponent
{
public:
	class UBillboardComponent*                         CaptureOffsetComponent;                                   // 0x04A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	EReflectionSourceType                              ReflectionSourceType;                                     // 0x04A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bOverrideCullDistance : 1;                                // 0x04A9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x04AA(0x0001)
	unsigned char                                      bSharedComponent : 1;                                     // 0x04AA(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x04AB(0x0005) MISSED OFFSET
	class UTextureCube*                                Cubemap;                                                  // 0x04B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SourceCubemapAngle;                                       // 0x04B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Brightness;                                               // 0x04BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CaptureOffset;                                            // 0x04C0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CullDistance;                                             // 0x04CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x50];                                      // 0x04D0(0x0050) MISSED OFFSET

}


//Class Engine.BoxReflectionCaptureComponent
//0x0010 (0x0530 - 0x0520)
class UBoxReflectionCaptureComponent : public UReflectionCaptureComponent
{
public:
	class UBoxComponent*                               PreviewInfluenceBox;                                      // 0x0520(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               PreviewCaptureBox;                                        // 0x0528(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

}


//Class Engine.BoxReflectionCaptureSAComponent
//0x0000 (0x0530 - 0x0530)
class UBoxReflectionCaptureSAComponent : public UBoxReflectionCaptureComponent
{
public:

}


//Class Engine.PlaneReflectionCaptureComponent
//0x0010 (0x0530 - 0x0520)
class UPlaneReflectionCaptureComponent : public UReflectionCaptureComponent
{
public:
	class UDrawSphereComponent*                        PreviewInfluenceRadius;                                   // 0x0520(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBoxComponent*                               PreviewCaptureBox;                                        // 0x0528(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

}


//Class Engine.SphereReflectionCaptureComponent
//0x0010 (0x0530 - 0x0520)
class USphereReflectionCaptureComponent : public UReflectionCaptureComponent
{
public:
	class UDrawSphereComponent*                        PreviewInfluenceRadius;                                   // 0x0520(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0528(0x0008) MISSED OFFSET

}


//Class Engine.ScriptViewportClient
//0x0010 (0x0050 - 0x0040)
class UScriptViewportClient : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0040(0x0010) MISSED OFFSET

}


//Class Engine.Engine
//0x0EE0 (0x0F20 - 0x0040)
class UEngine : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	class UFont*                                       TinyFont;                                                 // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FStringAssetReference                       TinyFontName;                                             // 0x0050(0x0010) (Edit, ZeroConstructor, Config, GlobalConfig)
	class UFont*                                       SmallFont;                                                // 0x0060(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FStringAssetReference                       SmallFontName;                                            // 0x0068(0x0010) (Edit, ZeroConstructor, Config, GlobalConfig)
	class UFont*                                       MediumFont;                                               // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FStringAssetReference                       MediumFontName;                                           // 0x0080(0x0010) (Edit, ZeroConstructor, Config, GlobalConfig)
	class UFont*                                       LargeFont;                                                // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FStringAssetReference                       LargeFontName;                                            // 0x0098(0x0010) (Edit, ZeroConstructor, Config, GlobalConfig)
	class UFont*                                       SubtitleFont;                                             // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FStringAssetReference                       SubtitleFontName;                                         // 0x00B0(0x0010) (Edit, ZeroConstructor, Config, GlobalConfig)
	TArray<class UFont*>                               AdditionalFonts;                                          // 0x00C0(0x0010) (ZeroConstructor)
	struct FStringAssetReference                       PreIntegratedSkinBRDFTextureName;                         // 0x00D0(0x0010) (ZeroConstructor, Config, GlobalConfig)
	struct FString                                     VertexColorMaterialName;                                  // 0x00E0(0x0010) (ZeroConstructor, Config, GlobalConfig)
	class UTexture2D*                                  DefaultBokehTexture;                                      // 0x00F0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UAvoidanceManager*                           AvoidanceManagerClass;                                    // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FLinearColor>                        LightComplexityColors;                                    // 0x0100(0x0010) (ZeroConstructor, Config, GlobalConfig)
	struct FString                                     VertexColorViewModeMaterialName_RedOnly;                  // 0x0110(0x0010) (ZeroConstructor, Config, GlobalConfig)
	TArray<struct FPluginRedirect>                     ActivePluginRedirects;                                    // 0x0120(0x0010) (ZeroConstructor, Config)
	class UPhysicsCollisionHandler*                    PhysicsCollisionHandlerClass;                             // 0x0130(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     TransitionDescription;                                    // 0x0138(0x0010) (ZeroConstructor)
	int                                                ClientCycles;                                             // 0x0148(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x014C(0x0004) MISSED OFFSET
	struct FStringAssetReference                       ArrowMaterialName;                                        // 0x0150(0x0010) (ZeroConstructor, Config, GlobalConfig)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0160(0x0008) MISSED OFFSET
	class ALevelScriptActor*                           LevelScriptActorClass;                                    // 0x0168(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FStringClassReference                       GameUserSettingsClassName;                                // 0x0170(0x0010) (ZeroConstructor, Config, GlobalConfig, NoClear)
	class UNavigationSystem*                           NavigationSystemClass;                                    // 0x0180(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMaterial*                                   InvalidLightmapSettingsMaterial;                          // 0x0188(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FStringClassReference                       AssetManagerClassName;                                    // 0x0190(0x0010) (Edit, ZeroConstructor, Config, GlobalConfig, NoClear)
	unsigned char                                      bRenderLightMapDensityGrayscale : 1;                      // 0x01A0(0x0001) (Config, GlobalConfig)
	unsigned char                                      UnknownData03[0x7];                                       // 0x01A1(0x0007) MISSED OFFSET
	TArray<struct FString>                             AdditionalFontNames;                                      // 0x01A8(0x0010) (Edit, ZeroConstructor, Config, GlobalConfig)
	struct FStringAssetReference                       PreviewShadowsIndicatorMaterialName;                      // 0x01B8(0x0010) (Edit, ZeroConstructor, Config, GlobalConfig)
	class ULocalPlayer*                                LocalPlayerClass;                                         // 0x01C8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FStringAssetReference                       DefaultTextureName;                                       // 0x01D0(0x0010) (ZeroConstructor, Config, GlobalConfig)
	struct FString                                     ShadedLevelColorationLitMaterialName;                     // 0x01E0(0x0010) (ZeroConstructor, Config, GlobalConfig)
	struct FStringAssetReference                       DebugMeshMaterialName;                                    // 0x01F0(0x0010) (ZeroConstructor, Config, GlobalConfig)
	class UTexture*                                    WeightMapPlaceholderTexture;                              // 0x0200(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             DeferredCommands;                                         // 0x0208(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData04[0x18];                                      // 0x0218(0x0018) MISSED OFFSET
	class UMaterial*                                   PreviewShadowsIndicatorMaterial;                          // 0x0230(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              PrimitiveProbablyVisibleTime;                             // 0x0238(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x023C(0x0004) MISSED OFFSET
	class UMaterial*                                   RemoveSurfaceMaterial;                                    // 0x0240(0x0008) (ZeroConstructor, IsPlainOldData)
	class UPhysicalMaterial*                           DefaultPhysMaterial;                                      // 0x0248(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FStringClassReference                       AIControllerClassName;                                    // 0x0250(0x0010) (ZeroConstructor, Config, GlobalConfig, NoClear)
	struct FString                                     WireframeMaterialName;                                    // 0x0260(0x0010) (ZeroConstructor, Config, GlobalConfig)
	float                                              FixedFrameRate;                                           // 0x0270(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              NearClipPlane;                                            // 0x0274(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	struct FStringClassReference                       AvoidanceManagerClassName;                                // 0x0278(0x0010) (ZeroConstructor, Config, GlobalConfig, NoClear)
	float                                              MinDesiredFrameRate;                                      // 0x0288(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x028C(0x0004) MISSED OFFSET
	class UMaterialInstanceDynamic*                    ConstraintLimitMaterialPrismatic;                         // 0x0290(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FStringClassReference                       GameSingletonClassName;                                   // 0x0298(0x0010) (Edit, ZeroConstructor, Config, GlobalConfig, NoClear)
	TArray<struct FLinearColor>                        ShaderComplexityColors;                                   // 0x02A8(0x0010) (ZeroConstructor, Config, GlobalConfig)
	struct FString                                     VertexColorViewModeMaterialName_BlueOnly;                 // 0x02B8(0x0010) (ZeroConstructor, Config, GlobalConfig)
	struct FString                                     PlayOnConsoleSaveDir;                                     // 0x02C8(0x0010) (ZeroConstructor, Config)
	unsigned char                                      bHardwareSurveyEnabled : 1;                               // 0x02D8(0x0001) (Deprecated)
	unsigned char                                      UnknownData07[0x7];                                       // 0x02D9(0x0007) MISSED OFFSET
	struct FStringAssetReference                       RemoveSurfaceMaterialName;                                // 0x02E0(0x0010) (ZeroConstructor, Config, GlobalConfig)
	TEnumAsByte<ETransitionType>                       TransitionType;                                           // 0x02F0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x02F1(0x0003) MISSED OFFSET
	unsigned char                                      bCanBlueprintsTickByDefault : 1;                          // 0x02F4(0x0001) (Edit, Config)
	unsigned char                                      bOptimizeAnimBlueprintMemberVariableAccess : 1;           // 0x02F4(0x0001) (Edit, Config)
	unsigned char                                      bAllowMultiThreadedAnimationUpdate : 1;                   // 0x02F4(0x0001) (Edit, Config)
	unsigned char                                      bEnableEditorPSysRealtimeLOD : 1;                         // 0x02F4(0x0001) (Config)
	unsigned char                                      bSmoothFrameRate : 1;                                     // 0x02F4(0x0001) (Edit, Config)
	unsigned char                                      bUseFixedFrameRate : 1;                                   // 0x02F4(0x0001) (Edit, Config)
	unsigned char                                      UnknownData09[0x3];                                       // 0x02F5(0x0003) MISSED OFFSET
	class UMaterial*                                   VertexColorViewModeMaterial_ColorOnly;                    // 0x02F8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LightMapDensitySelectedColor;                             // 0x0300(0x0010) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	struct FColor                                      C_Volume;                                                 // 0x0310(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bSubtitlesEnabled : 1;                                    // 0x0314(0x0001) (Edit, Config)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0315(0x0003) MISSED OFFSET
	class UMaterialInstanceDynamic*                    ConstraintLimitMaterialZAxis;                             // 0x0318(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              RenderLightMapDensityColorScale;                          // 0x0320(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x0324(0x0004) MISSED OFFSET
	TArray<struct FLinearColor>                        HLODColorationColors;                                     // 0x0328(0x0010) (ZeroConstructor, Config, GlobalConfig)
	float                                              DisplayGamma;                                             // 0x0338(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData12[0x4];                                       // 0x033C(0x0004) MISSED OFFSET
	TArray<struct FLinearColor>                        StreamingAccuracyColors;                                  // 0x0340(0x0010) (ZeroConstructor, Config, GlobalConfig)
	class UMaterialInstanceDynamic*                    ConstraintLimitMaterialY;                                 // 0x0350(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     LevelColorationUnlitMaterialName;                         // 0x0358(0x0010) (ZeroConstructor, Config, GlobalConfig)
	unsigned char                                      bAllowMatureLanguage : 1;                                 // 0x0368(0x0001) (Config)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0369(0x0003) MISSED OFFSET
	float                                              CameraRotationThreshold;                                  // 0x036C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxPixelShaderAdditiveComplexityCount;                    // 0x0370(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData14[0x54];                                      // 0x0374(0x0054) MISSED OFFSET
	class UMaterial*                                   LevelColorationLitMaterial;                               // 0x03C8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMaterial*                                   VertexColorViewModeMaterial_RedOnly;                      // 0x03D0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FStringAssetReference                       DefaultBokehTextureName;                                  // 0x03D8(0x0010) (ZeroConstructor, Config, GlobalConfig)
	float                                              MaxES2PixelShaderAdditiveComplexityCount;                 // 0x03E8(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData15[0x4];                                       // 0x03EC(0x0004) MISSED OFFSET
	class UMaterial*                                   WireframeMaterial;                                        // 0x03F0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     LightingTexelDensityName;                                 // 0x03F8(0x0010) (ZeroConstructor, Config, GlobalConfig)
	class UGameViewportClient*                         GameViewportClientClass;                                  // 0x0408(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     VertexColorViewModeMaterialName_GreenOnly;                // 0x0410(0x0010) (ZeroConstructor, Config, GlobalConfig)
	struct FStringAssetReference                       InvalidLightmapSettingsMaterialName;                      // 0x0420(0x0010) (ZeroConstructor, Config, GlobalConfig)
	TArray<struct FStatColorMapping>                   StatColorMappings;                                        // 0x0430(0x0010) (ZeroConstructor, Config, GlobalConfig)
	float                                              NetClientTicksPerSecond;                                  // 0x0440(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData16[0x4];                                       // 0x0444(0x0004) MISSED OFFSET
	class UMaterial*                                   ShadedLevelColorationLitMaterial;                         // 0x0448(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bSubtitlesForcedOff : 1;                                  // 0x0450(0x0001) (Edit, Config)
	unsigned char                                      UnknownData17[0x3];                                       // 0x0451(0x0003) MISSED OFFSET
	struct FColor                                      C_WorldBox;                                               // 0x0454(0x0004) (ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  MiniFontTexture;                                          // 0x0458(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              RenderLightMapDensityGrayscaleScale;                      // 0x0460(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData18[0x4];                                       // 0x0464(0x0004) MISSED OFFSET
	class UMaterialInstanceDynamic*                    ConstraintLimitMaterialYAxis;                             // 0x0468(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FColor                                      C_WireBackground;                                         // 0x0470(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxOcclusionPixelsFraction;                               // 0x0474(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	struct FStringClassReference                       NavigationSystemClassName;                                // 0x0478(0x0010) (ZeroConstructor, Config, GlobalConfig, NoClear)
	float                                              MaxLightMapDensity;                                       // 0x0488(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData19[0x4];                                       // 0x048C(0x0004) MISSED OFFSET
	struct FStringClassReference                       LocalPlayerClassName;                                     // 0x0490(0x0010) (Edit, ZeroConstructor, Config, GlobalConfig, NoClear)
	struct FStringAssetReference                       MiniFontTextureName;                                      // 0x04A0(0x0010) (ZeroConstructor, Config, GlobalConfig)
	class UGameUserSettings*                           GameUserSettingsClass;                                    // 0x04B0(0x0008) (ZeroConstructor, IsPlainOldData)
	class AWorldSettings*                              WorldSettingsClass;                                       // 0x04B8(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              IdealLightMapDensity;                                     // 0x04C0(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      bPauseOnLossOfFocus : 1;                                  // 0x04C4(0x0001) (Config)
	unsigned char                                      UnknownData20[0x3];                                       // 0x04C5(0x0003) MISSED OFFSET
	int                                                MaxParticleResize;                                        // 0x04C8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData21[0x4];                                       // 0x04CC(0x0004) MISSED OFFSET
	class UMaterial*                                   DebugMeshMaterial;                                        // 0x04D0(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FLinearColor>                        LODColorationColors;                                      // 0x04D8(0x0010) (ZeroConstructor, Config, GlobalConfig)
	struct FStringAssetReference                       LightMapDensityTextureName;                               // 0x04E8(0x0010) (ZeroConstructor, Config, GlobalConfig)
	class UMaterial*                                   VertexColorViewModeMaterial_BlueOnly;                     // 0x04F8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMaterial*                                   ShadedLevelColorationUnlitMaterial;                       // 0x0500(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     TransitionGameMode;                                       // 0x0508(0x0010) (ZeroConstructor)
	class UMaterial*                                   ConstraintLimitMaterial;                                  // 0x0518(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FLinearColor>                        QuadComplexityColors;                                     // 0x0520(0x0010) (ZeroConstructor, Config, GlobalConfig)
	struct FColor                                      C_AddWire;                                                // 0x0530(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData22[0x4];                                       // 0x0534(0x0004) MISSED OFFSET
	struct FStringAssetReference                       HighFrequencyNoiseTextureName;                            // 0x0538(0x0010) (ZeroConstructor, Config, GlobalConfig)
	struct FStringClassReference                       PhysicsCollisionHandlerClassName;                         // 0x0548(0x0010) (Edit, ZeroConstructor, Config, GlobalConfig, NoClear)
	class UMaterial*                                   VertexColorMaterial;                                      // 0x0558(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FStringAssetReference                       DefaultBSPVertexTextureName;                              // 0x0560(0x0010) (ZeroConstructor, Config, GlobalConfig)
	class UTexture2D*                                  DefaultBSPVertexTexture;                                  // 0x0570(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     VertexColorViewModeMaterialName_AlphaAsColor;             // 0x0578(0x0010) (ZeroConstructor, Config, GlobalConfig)
	class UMaterialInstanceDynamic*                    ConstraintLimitMaterialX;                                 // 0x0588(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                GameCycles;                                               // 0x0590(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                LightingOnlyBrightness;                                   // 0x0594(0x0010) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData23[0x4];                                       // 0x05A4(0x0004) MISSED OFFSET
	TArray<struct FGameNameRedirect>                   ActiveGameNameRedirects;                                  // 0x05A8(0x0010) (ZeroConstructor, Config)
	struct FFloatRange                                 SmoothedFrameRateRange;                                   // 0x05B8(0x0010) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData24[0x8];                                       // 0x05C8(0x0008) MISSED OFFSET
	float                                              CameraTranslationThreshold;                               // 0x05D0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                TickCycles;                                               // 0x05D4(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FClassRedirect>                      ActiveClassRedirects;                                     // 0x05D8(0x0010) (ZeroConstructor, Config)
	struct FColor                                      C_OrthoBackground;                                        // 0x05E8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData25[0x4];                                       // 0x05EC(0x0004) MISSED OFFSET
	struct FStringAssetReference                       DefaultDiffuseTextureName;                                // 0x05F0(0x0010) (ZeroConstructor, Config, GlobalConfig)
	unsigned char                                      bCheckForMultiplePawnsSpawnedInAFrame : 1;                // 0x0600(0x0001) (Config)
	unsigned char                                      UnknownData26[0x3];                                       // 0x0601(0x0003) MISSED OFFSET
	int                                                NumPawnsAllowedToBeSpawnedInAFrame;                       // 0x0604(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bShouldGenerateLowQualityLightmaps : 1;                   // 0x0608(0x0001) (Config, GlobalConfig, Deprecated)
	unsigned char                                      UnknownData27[0x7];                                       // 0x0609(0x0007) MISSED OFFSET
	class UTexture*                                    DefaultDiffuseTexture;                                    // 0x0610(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMaterial*                                   LevelColorationUnlitMaterial;                             // 0x0618(0x0008) (ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  DefaultBloomKernelTexture;                                // 0x0620(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FStringAssetReference                       DefaultPhysMaterialName;                                  // 0x0628(0x0010) (ZeroConstructor, Config, GlobalConfig)
	class UTexture2D*                                  HighFrequencyNoiseTexture;                                // 0x0638(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    ConstraintLimitMaterialXAxis;                             // 0x0640(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMaterial*                                   VertexColorViewModeMaterial_GreenOnly;                    // 0x0648(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGameViewportClient*                         GameViewport;                                             // 0x0650(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FStringAssetReference                       WeightMapPlaceholderTextureName;                          // 0x0658(0x0010) (ZeroConstructor, Config, GlobalConfig)
	class UMaterial*                                   LightingTexelDensityMaterial;                             // 0x0668(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     ShadedLevelColorationUnlitMaterialName;                   // 0x0670(0x0010) (ZeroConstructor, Config, GlobalConfig)
	struct FStringAssetReference                       DefaultBloomKernelTextureName;                            // 0x0680(0x0010) (ZeroConstructor, Config, GlobalConfig)
	int                                                MaxParticleResizeWarn;                                    // 0x0690(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData28[0x4];                                       // 0x0694(0x0004) MISSED OFFSET
	struct FStringClassReference                       WorldSettingsClassName;                                   // 0x0698(0x0010) (Edit, ZeroConstructor, Config, GlobalConfig, NoClear)
	struct FStringClassReference                       GameViewportClientClassName;                              // 0x06A8(0x0010) (Edit, ZeroConstructor, Config, GlobalConfig, NoClear)
	struct FLinearColor                                DefaultSelectedMaterialColor;                             // 0x06B8(0x0010) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	struct FLinearColor                                SelectedMaterialColor;                                    // 0x06C8(0x0010) (ZeroConstructor, Transient, IsPlainOldData)
	struct FLinearColor                                SelectionOutlineColor;                                    // 0x06D8(0x0010) (ZeroConstructor, Transient, IsPlainOldData)
	struct FLinearColor                                SubduedSelectionOutlineColor;                             // 0x06E8(0x0010) (ZeroConstructor, Transient, IsPlainOldData)
	struct FLinearColor                                SelectedMaterialColorOverride;                            // 0x06F8(0x0010) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bIsOverridingSelectedColor : 1;                           // 0x0708(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData29[0x3];                                       // 0x0709(0x0003) MISSED OFFSET
	unsigned char                                      bEnableOnScreenDebugMessages : 1;                         // 0x070C(0x0001) (Config, GlobalConfig)
	unsigned char                                      bEnableOnScreenDebugMessagesDisplay : 1;                  // 0x070C(0x0001) (Transient)
	unsigned char                                      bSuppressMapWarnings : 1;                                 // 0x070C(0x0001) (Config, GlobalConfig)
	unsigned char                                      bDisableAILogging : 1;                                    // 0x070C(0x0001) (Config, GlobalConfig)
	unsigned char                                      UnknownData30[0x3];                                       // 0x070D(0x0003) MISSED OFFSET
	uint32_t                                           bEnableVisualLogRecordingOnStart;                         // 0x0710(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	struct FBox                                        StreamingLevelBounds;                                     // 0x0714(0x001C) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData31[0x4];                                       // 0x0730(0x0004) MISSED OFFSET
	int                                                ScreenSaverInhibitorSemaphore;                            // 0x0734(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bLockReadOnlyLevels : 1;                                  // 0x0738(0x0001) (Transient)
	unsigned char                                      UnknownData32[0x7];                                       // 0x0739(0x0007) MISSED OFFSET
	struct FString                                     ParticleEventManagerClassPath;                            // 0x0740(0x0010) (ZeroConstructor, Config, GlobalConfig)
	unsigned char                                      UnknownData33[0x20];                                      // 0x0750(0x0020) MISSED OFFSET
	float                                              SelectionHighlightIntensity;                              // 0x0770(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              SelectionMeshSectionHighlightIntensity;                   // 0x0774(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              BSPSelectionHighlightIntensity;                           // 0x0778(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              HoverHighlightIntensity;                                  // 0x077C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              SelectionHighlightIntensityBillboards;                    // 0x0780(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              PrimitiveBaseIntensity;                                   // 0x0784(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              PrimitiveSelectedIntensity;                               // 0x0788(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              PrimitiveHoverIntensity;                                  // 0x078C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData34[0x290];                                     // 0x0790(0x0290) MISSED OFFSET
	struct FColor                                      C_BrushWire;                                              // 0x0A20(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData35[0x4];                                       // 0x0A24(0x0004) MISSED OFFSET
	class UTexture2D*                                  PreIntegratedSkinBRDFTexture;                             // 0x0A28(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FLinearColor>                        StationaryLightOverlapColors;                             // 0x0A30(0x0010) (ZeroConstructor, Config, GlobalConfig)
	float                                              StreamingDistanceFactor;                                  // 0x0A40(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData36[0x4];                                       // 0x0A44(0x0004) MISSED OFFSET
	struct FStringClassReference                       DefaultBlueprintBaseClassName;                            // 0x0A48(0x0010) (Edit, ZeroConstructor, Config, GlobalConfig, NoClear)
	struct FColor                                      C_BrushShape;                                             // 0x0A58(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FColor                                      C_ScaleBoxHi;                                             // 0x0A5C(0x0004) (ZeroConstructor, IsPlainOldData)
	class UMaterial*                                   VertexColorViewModeMaterial_AlphaAsColor;                 // 0x0A60(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    ConstraintLimitMaterialZ;                                 // 0x0A68(0x0008) (ZeroConstructor, IsPlainOldData)
	class UObject*                                     GameSingleton;                                            // 0x0A70(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              MinLightMapDensity;                                       // 0x0A78(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData37[0x1D4];                                     // 0x0A7C(0x01D4) MISSED OFFSET
	TArray<struct FNetDriverDefinition>                NetDriverDefinitions;                                     // 0x0C50(0x0010) (ZeroConstructor, Transient, Config)
	TArray<struct FString>                             ServerActors;                                             // 0x0C60(0x0010) (ZeroConstructor, Config)
	TArray<struct FString>                             RuntimeServerActors;                                      // 0x0C70(0x0010) (ZeroConstructor)
	unsigned char                                      bStartedLoadMapMovie : 1;                                 // 0x0C80(0x0001) (Transient)
	unsigned char                                      UnknownData38[0x7];                                       // 0x0C81(0x0007) MISSED OFFSET
	class UMaterial*                                   ArrowMaterial;                                            // 0x0C88(0x0008) (ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  DefaultTexture;                                           // 0x0C90(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FDropNoteInfo>                       PendingDroppedNotes;                                      // 0x0C98(0x0010) (ZeroConstructor, Transient)
	struct FColor                                      C_SemiSolidWire;                                          // 0x0CA8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData39[0x4];                                       // 0x0CAC(0x0004) MISSED OFFSET
	struct FStringClassReference                       LevelScriptActorClassName;                                // 0x0CB0(0x0010) (Edit, ZeroConstructor, Config, GlobalConfig, NoClear)
	struct FStringClassReference                       ConsoleClassName;                                         // 0x0CC0(0x0010) (Edit, ZeroConstructor, Config, GlobalConfig, NoClear)
	class UAssetManager*                               AssetManager;                                             // 0x0CD0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FColor                                      C_BSPCollision;                                           // 0x0CD8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData40[0x4];                                       // 0x0CDC(0x0004) MISSED OFFSET
	class UConsole*                                    ConsoleClass;                                             // 0x0CE0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FColor                                      C_NonSolidWire;                                           // 0x0CE8(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FColor                                      C_SubtractWire;                                           // 0x0CEC(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     VertexColorViewModeMaterialName_ColorOnly;                // 0x0CF0(0x0010) (ZeroConstructor, Config, GlobalConfig)
	struct FString                                     LevelColorationLitMaterialName;                           // 0x0D00(0x0010) (ZeroConstructor, Config, GlobalConfig)
	TArray<struct FStructRedirect>                     ActiveStructRedirects;                                    // 0x0D10(0x0010) (ZeroConstructor, Config)
	struct FLinearColor                                LightMapDensityVertexMappedColor;                         // 0x0D20(0x0010) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	int                                                MaximumLoopIterationCount;                                // 0x0D30(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MeshLODRange;                                             // 0x0D34(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	struct FRigidBodyErrorCorrection                   PhysicErrorCorrection;                                    // 0x0D38(0x001C) (Config)
	unsigned char                                      UnknownData41[0x4];                                       // 0x0D54(0x0004) MISSED OFFSET
	class UGameUserSettings*                           GameUserSettings;                                         // 0x0D58(0x0008) (ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  LightMapDensityTexture;                                   // 0x0D60(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FColor                                      C_VolumeCollision;                                        // 0x0D68(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData42[0x14];                                      // 0x0D6C(0x0014) MISSED OFFSET
	int                                                NextWorldContextHandle;                                   // 0x0D80(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData43[0x19C];                                     // 0x0D84(0x019C) MISSED OFFSET

}


//Class Engine.GameViewportClient
//0x0630 (0x0680 - 0x0050)
class UGameViewportClient : public UScriptViewportClient
{
public:
	unsigned char                                      UnknownData00[0x80];                                      // 0x0050(0x0080) MISSED OFFSET
	class UConsole*                                    ViewportConsole;                                          // 0x00D0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x00D8(0x0018) MISSED OFFSET
	TArray<struct FDebugDisplayProperty>               DebugProperties;                                          // 0x00F0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x280];                                     // 0x0100(0x0280) MISSED OFFSET
	class UGameInstance*                               GameInstance;                                             // 0x0380(0x0008)
	unsigned char                                      UnknownData03[0x2F8];                                     // 0x0388(0x02F8) MISSED OFFSET

	// Function Engine.GameViewportClient.SSSwapControllers
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SSSwapControllers();// sub_44A300()

	// Function Engine.GameViewportClient.ShowTitleSafeArea
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ShowTitleSafeArea();// sub_76C420()

	// Function Engine.GameViewportClient.SetConsoleTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetConsoleTarget(int PlayerIndex);// sub_626A970()


}


//Class Engine.SceneCaptureComponent
//0x0080 (0x0520 - 0x04A0)
class USceneCaptureComponent : public USceneComponent
{
public:
	TArray<TWeakObjectPtr<class UPrimitiveComponent>>  HiddenComponents;                                         // 0x04A0(0x0010) (ExportObject, ZeroConstructor)
	TArray<class AActor*>                              HiddenActors;                                             // 0x04B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<TWeakObjectPtr<class UPrimitiveComponent>>  ShowOnlyComponents;                                       // 0x04C0(0x0010) (ExportObject, ZeroConstructor)
	TArray<class AActor*>                              ShowOnlyActors;                                           // 0x04D0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      bIsLobbyCapture : 1;                                      // 0x04E0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x04E1(0x0001)
	unsigned char                                      bCaptureEveryFrame : 1;                                   // 0x04E1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x04E2(0x0001)
	unsigned char                                      bCaptureOnMovement : 1;                                   // 0x04E2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x04E3(0x0001) MISSED OFFSET
	float                                              LODDistanceFactor;                                        // 0x04E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxViewDistanceOverride;                                  // 0x04E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                CaptureSortPriority;                                      // 0x04EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FEngineShowFlagsSetting>             ShowFlagSettings;                                         // 0x04F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData03[0x20];                                      // 0x0500(0x0020) MISSED OFFSET

	// Function Engine.SceneCaptureComponent.ShowOnlyComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ShowOnlyComponent(class UPrimitiveComponent* InComponent);// sub_48928D0()

	// Function Engine.SceneCaptureComponent.ShowOnlyActorComponents
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ShowOnlyActorComponents(class AActor* InActor);// sub_4364380()

	// Function Engine.SceneCaptureComponent.SetCaptureSortPriority
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCaptureSortPriority(int NewCaptureSortPriority);// sub_EF8680()

	// Function Engine.SceneCaptureComponent.RemoveShowOnlyComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RemoveShowOnlyComponent(class UPrimitiveComponent* InComponent);// sub_3AFB090()

	// Function Engine.SceneCaptureComponent.RemoveShowOnlyActorComponents
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RemoveShowOnlyActorComponents(class AActor* InActor);// sub_7CD620()

	// Function Engine.SceneCaptureComponent.HideComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_HideComponent(class UPrimitiveComponent* InComponent);// sub_5BAAD80()

	// Function Engine.SceneCaptureComponent.HideActorComponents
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_HideActorComponents(class AActor* InActor);// sub_4C2BF60()

	// Function Engine.SceneCaptureComponent.ClearShowOnlyComponents
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearShowOnlyComponents(class UPrimitiveComponent* InComponent);// sub_5E69720()


}


//Class Engine.PlanarReflectionComponent
//0x00E0 (0x0600 - 0x0520)
class UPlanarReflectionComponent : public USceneCaptureComponent
{
public:
	class UBoxComponent*                               PreviewBox;                                               // 0x0520(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              NormalDistortionStrength;                                 // 0x0528(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PrefilterRoughness;                                       // 0x052C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PrefilterRoughnessDistance;                               // 0x0530(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ScreenPercentage;                                         // 0x0534(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ExtraFOV;                                                 // 0x0538(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DistanceFromPlaneFadeStart;                               // 0x053C(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              DistanceFromPlaneFadeEnd;                                 // 0x0540(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              DistanceFromPlaneFadeoutStart;                            // 0x0544(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DistanceFromPlaneFadeoutEnd;                              // 0x0548(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AngleFromPlaneFadeStart;                                  // 0x054C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AngleFromPlaneFadeEnd;                                    // 0x0550(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRenderSceneTwoSided : 1;                                 // 0x0554(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xAB];                                      // 0x0555(0x00AB) MISSED OFFSET

}


//Class Engine.SceneCaptureComponent2D
//0x0610 (0x0B30 - 0x0520)
class USceneCaptureComponent2D : public USceneCaptureComponent
{
public:
	TEnumAsByte<ECameraProjectionMode>                 ProjectionType;                                           // 0x0520(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0521(0x0003) MISSED OFFSET
	float                                              FOVAngle;                                                 // 0x0524(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseNearClippingValue : 1;                                // 0x0528(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0529(0x0003) MISSED OFFSET
	float                                              NearClippingValue;                                        // 0x052C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OrthoWidth;                                               // 0x0530(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0534(0x0004) MISSED OFFSET
	class UTextureRenderTarget2D*                      TextureTarget;                                            // 0x0538(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESceneCaptureSource>                   CaptureSource;                                            // 0x0540(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESceneCaptureCompositeMode>            CompositeMode;                                            // 0x0541(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xE];                                       // 0x0542(0x000E) MISSED OFFSET
	struct FPostProcessSettings                        PostProcessSettings;                                      // 0x0550(0x0570) (Edit, BlueprintVisible)
	float                                              PostProcessBlendWeight;                                   // 0x0AC0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseCustomProjectionMatrix : 1;                           // 0x0AC4(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0xB];                                       // 0x0AC5(0x000B) MISSED OFFSET
	struct FMatrix                                     CustomProjectionMatrix;                                   // 0x0AD0(0x0040) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIgnoreTemporalJitter : 1;                                // 0x0B10(0x0001) (Edit)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0B11(0x0003) MISSED OFFSET
	unsigned char                                      bEnableClipPlane : 1;                                     // 0x0B14(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0B15(0x0003) MISSED OFFSET
	struct FVector                                     ClipPlaneBase;                                            // 0x0B18(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ClipPlaneNormal;                                          // 0x0B24(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	// Function Engine.SceneCaptureComponent2D.CaptureScene
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_CaptureScene();// sub_7B0FD0()

	// Function Engine.SceneCaptureComponent2D.AddOrUpdateBlendable
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddOrUpdateBlendable(const TScriptInterface<class UBlendableInterface>& InBlendableObject, float InWeight);// sub_5206720()


}


//Class Engine.SceneCaptureComponentCube
//0x0010 (0x0530 - 0x0520)
class USceneCaptureComponentCube : public USceneCaptureComponent
{
public:
	class UTextureRenderTargetCube*                    TextureTarget;                                            // 0x0520(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0528(0x0008) MISSED OFFSET

	// Function Engine.SceneCaptureComponentCube.CaptureScene
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_CaptureScene();// sub_D00030()


}


//Class Engine.SpringArmComponent
//0x0090 (0x0530 - 0x04A0)
class USpringArmComponent : public USceneComponent
{
public:
	float                                              TargetArmLength;                                          // 0x04A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SocketOffset;                                             // 0x04A4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TargetOffset;                                             // 0x04B0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ProbeSize;                                                // 0x04BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionChannel>                     ProbeChannel;                                             // 0x04C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x04C1(0x0003) MISSED OFFSET
	unsigned char                                      bDoCollisionTest : 1;                                     // 0x04C4(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUsePawnControlRotation : 1;                              // 0x04C4(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bInheritPitch : 1;                                        // 0x04C4(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bInheritYaw : 1;                                          // 0x04C4(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bInheritRoll : 1;                                         // 0x04C4(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bLockPitchLag : 1;                                        // 0x04C4(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bLockYawLag : 1;                                          // 0x04C4(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bLockRollLag : 1;                                         // 0x04C4(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01 : 8;                                        // 0x04C5(0x0001)
	unsigned char                                      bEnableCameraLag : 1;                                     // 0x04C5(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bEnableCameraRotationLag : 1;                             // 0x04C5(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUseCameraLagSubstepping : 1;                             // 0x04C5(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bDrawDebugLagMarkers : 1;                                 // 0x04C5(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02[0x2];                                       // 0x04C6(0x0002) MISSED OFFSET
	float                                              CameraLagSpeed;                                           // 0x04C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CameraRotationLagSpeed;                                   // 0x04CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CameraLagMaxTimeStep;                                     // 0x04D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CameraLagMaxDistance;                                     // 0x04D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x58];                                      // 0x04D8(0x0058) MISSED OFFSET

}


//Class Engine.StereoLayerComponent
//0x00A0 (0x0540 - 0x04A0)
class UStereoLayerComponent : public USceneComponent
{
public:
	unsigned char                                      bLiveTexture : 1;                                         // 0x04A0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bSupportsDepth : 1;                                       // 0x04A0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bNoAlphaChannel : 1;                                      // 0x04A0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x7];                                       // 0x04A1(0x0007) MISSED OFFSET
	class UTexture*                                    Texture;                                                  // 0x04A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture*                                    LeftTexture;                                              // 0x04B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bQuadPreserveTextureRatio : 1;                            // 0x04B8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x3];                                       // 0x04B9(0x0003) MISSED OFFSET
	struct FVector2D                                   QuadSize;                                                 // 0x04BC(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FBox2D                                      UVRect;                                                   // 0x04C4(0x0014) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	float                                              CylinderRadius;                                           // 0x04D8(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CylinderOverlayArc;                                       // 0x04DC(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CylinderHeight;                                           // 0x04E0(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EStereoLayerType>                      StereoLayerType;                                          // 0x04E4(0x0001) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EStereoLayerShape>                     StereoLayerShape;                                         // 0x04E5(0x0001) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x04E6(0x0002) MISSED OFFSET
	int                                                Priority;                                                 // 0x04E8(0x0004) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x54];                                      // 0x04EC(0x0054) MISSED OFFSET

	// Function Engine.StereoLayerComponent.SetUVRect
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetUVRect(const struct FBox2D& InUVRect);// sub_5ADA90()

	// Function Engine.StereoLayerComponent.SetTexture
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTexture(class UTexture* InTexture);// sub_11D4760()

	// Function Engine.StereoLayerComponent.SetQuadSize
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetQuadSize(const struct FVector2D& InQuadSize);// sub_6043010()

	// Function Engine.StereoLayerComponent.SetPriority
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPriority(int InPriority);// sub_45C6380()

	// Function Engine.StereoLayerComponent.MarkTextureForUpdate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_MarkTextureForUpdate();// sub_408CE50()

	// Function Engine.StereoLayerComponent.GetUVRect
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FBox2D STATIC_GetUVRect();// sub_209B740()

	// Function Engine.StereoLayerComponent.GetTexture
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UTexture* STATIC_GetTexture();// sub_1E1660()

	// Function Engine.StereoLayerComponent.GetQuadSize
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_GetQuadSize();// sub_443EAB0()

	// Function Engine.StereoLayerComponent.GetPriority
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetPriority();// sub_EF8660()


}


//Class Engine.WindDirectionalSourceComponent
//0x0020 (0x04C0 - 0x04A0)
class UWindDirectionalSourceComponent : public USceneComponent
{
public:
	float                                              Strength;                                                 // 0x04A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Speed;                                                    // 0x04A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinGustAmount;                                            // 0x04A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxGustAmount;                                            // 0x04AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // 0x04B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bPointWind : 1;                                           // 0x04B4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0xB];                                       // 0x04B5(0x000B) MISSED OFFSET

	// Function Engine.WindDirectionalSourceComponent.SetWindType
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetWindType(EWindSourceType InNewType);// sub_5C953F0()

	// Function Engine.WindDirectionalSourceComponent.SetStrength
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetStrength(float InNewStrength);// sub_42E2950()

	// Function Engine.WindDirectionalSourceComponent.SetSpeed
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSpeed(float InNewSpeed);// sub_5BBF2B0()

	// Function Engine.WindDirectionalSourceComponent.SetRadius
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetRadius(float InNewRadius);// sub_43BC730()

	// Function Engine.WindDirectionalSourceComponent.SetMinimumGustAmount
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetMinimumGustAmount(float InNewMinGust);// sub_23FAAA0()

	// Function Engine.WindDirectionalSourceComponent.SetMaximumGustAmount
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetMaximumGustAmount(float InNewMaxGust);// sub_612CBC0()


}


//Class Engine.TimelineComponent
//0x00F0 (0x0300 - 0x0210)
class UTimelineComponent : public UActorComponent
{
public:
	struct FTimeline                                   TheTimeline;                                              // 0x0210(0x00E0) (Net)
	unsigned char                                      bIgnoreTimeDilation : 1;                                  // 0x02F0(0x0001)
	unsigned char                                      UnknownData00[0xF];                                       // 0x02F1(0x000F) MISSED OFFSET

	// Function Engine.TimelineComponent.Stop
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Stop();// sub_3CBB8B0()

	// Function Engine.TimelineComponent.SetVectorCurve
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVectorCurve(class UCurveVector* NewVectorCurve, const struct FName& VectorTrackName);// sub_3D1A8B0()

	// Function Engine.TimelineComponent.SetTimelineLengthMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTimelineLengthMode(TEnumAsByte<ETimelineLengthMode> NewLengthMode);// sub_221B6C0()

	// Function Engine.TimelineComponent.SetTimelineLength
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTimelineLength(float NewLength);// sub_2128360()

	// Function Engine.TimelineComponent.SetPlayRate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPlayRate(float NewRate);// sub_DED600()

	// Function Engine.TimelineComponent.SetPlaybackPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPlaybackPosition(float NewPosition, unsigned char bFireEvents, unsigned char bFireUpdate);// sub_17F3B60()

	// Function Engine.TimelineComponent.SetNewTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetNewTime(float NewTime);// sub_146D8A0()

	// Function Engine.TimelineComponent.SetLooping
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLooping(unsigned char bNewLooping);// sub_1BE4F60()

	// Function Engine.TimelineComponent.SetLinearColorCurve
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLinearColorCurve(class UCurveLinearColor* NewLinearColorCurve, const struct FName& LinearColorTrackName);// sub_3D96F90()

	// Function Engine.TimelineComponent.SetIgnoreTimeDilation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetIgnoreTimeDilation(unsigned char bNewIgnoreTimeDilation);// sub_54993F0()

	// Function Engine.TimelineComponent.SetFloatCurve
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetFloatCurve(class UCurveFloat* NewFloatCurve, const struct FName& FloatTrackName);// sub_55A4690()

	// Function Engine.TimelineComponent.ReverseFromEnd
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReverseFromEnd();// sub_165C60()

	// Function Engine.TimelineComponent.Reverse
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Reverse();// sub_22AB9D0()

	// Function Engine.TimelineComponent.PlayFromStart
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PlayFromStart();// sub_118AD20()

	// Function Engine.TimelineComponent.Play
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Play();// sub_4860570()

	// Function Engine.TimelineComponent.OnRep_Timeline
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_Timeline();// sub_3E77A60()

	// Function Engine.TimelineComponent.IsReversing
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsReversing();// sub_1370AA0()

	// Function Engine.TimelineComponent.IsPlaying
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsPlaying();// sub_92B430()

	// Function Engine.TimelineComponent.IsLooping
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsLooping();// sub_4E389A0()

	// Function Engine.TimelineComponent.GetTimelineLength
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetTimelineLength();// sub_3B31F30()

	// Function Engine.TimelineComponent.GetPlayRate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetPlayRate();// sub_21B3D40()

	// Function Engine.TimelineComponent.GetPlaybackPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetPlaybackPosition();// sub_1D8A210()

	// Function Engine.TimelineComponent.GetIgnoreTimeDilation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetIgnoreTimeDilation();// sub_5524440()


}


//Class Engine.AISystemBase
//0x0020 (0x0060 - 0x0040)
class UAISystemBase : public UObject
{
public:
	struct FStringClassReference                       AISystemClassName;                                        // 0x0040(0x0010) (ZeroConstructor, Config, GlobalConfig, NoClear)
	struct FName                                       AISystemModuleName;                                       // 0x0050(0x0008) (ZeroConstructor, Config, GlobalConfig, NoClear, IsPlainOldData)
	unsigned char                                      bInstantiateAISystemOnClient : 1;                         // 0x0058(0x0001) (ZeroConstructor, Config, GlobalConfig, NoClear, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0059(0x0007) MISSED OFFSET

}


//Class Engine.AnimationAsset
//0x0050 (0x0090 - 0x0040)
class UAnimationAsset : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	class USkeleton*                                   Skeleton;                                                 // 0x0048(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0050(0x0020) MISSED OFFSET
	TArray<class UAnimMetaData*>                       MetaData;                                                 // 0x0070(0x0010) (Edit, ExportObject, ZeroConstructor)
	TArray<class UAssetUserData*>                      AssetUserData;                                            // 0x0080(0x0010) (Edit, ExportObject, ZeroConstructor)

}


//Class Engine.AnimSequenceBase
//0x0028 (0x00B8 - 0x0090)
class UAnimSequenceBase : public UAnimationAsset
{
public:
	TArray<struct FAnimNotifyEvent>                    Notifies;                                                 // 0x0090(0x0010) (ZeroConstructor)
	float                                              SequenceLength;                                           // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              RateScale;                                                // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRawCurveTracks                             RawCurveData;                                             // 0x00A8(0x0010)

	// Function Engine.AnimSequenceBase.GetPlayLength
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetPlayLength();// sub_16E0FC0()


}


//Class Engine.AnimCompositeBase
//0x0000 (0x00B8 - 0x00B8)
class UAnimCompositeBase : public UAnimSequenceBase
{
public:

}


//Class Engine.AnimComposite
//0x0010 (0x00C8 - 0x00B8)
class UAnimComposite : public UAnimCompositeBase
{
public:
	struct FAnimTrack                                  AnimationTrack;                                           // 0x00B8(0x0010)

}


//Class Engine.AnimSequence
//0x00F8 (0x01B0 - 0x00B8)
class UAnimSequence : public UAnimSequenceBase
{
public:
	int                                                NumFrames;                                                // 0x00B8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET
	TArray<struct FTrackToSkeletonMap>                 TrackToSkeletonMapTable;                                  // 0x00C0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x90];                                      // 0x00D0(0x0090) MISSED OFFSET
	TEnumAsByte<EAdditiveAnimationType>                AdditiveAnimType;                                         // 0x0160(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAdditiveBasePoseType>                 RefPoseType;                                              // 0x0161(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0162(0x0006) MISSED OFFSET
	class UAnimSequence*                               RefPoseSeq;                                               // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                RefFrameIndex;                                            // 0x0170(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                EncodingPkgVersion;                                       // 0x0174(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FName                                       RetargetSource;                                           // 0x0178(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EAnimInterpolationType                             Interpolation;                                            // 0x0180(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnableRootMotion : 1;                                    // 0x0181(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERootMotionRootLock>                   RootMotionRootLock;                                       // 0x0182(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bForceRootLock : 1;                                       // 0x0183(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03 : 8;                                        // 0x0184(0x0001)
	unsigned char                                      bRootMotionSettingsCopiedFromMontage : 1;                 // 0x0184(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0185(0x0003) MISSED OFFSET
	TArray<struct FAnimSyncMarker>                     AuthoredSyncMarkers;                                      // 0x0188(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData05[0x18];                                      // 0x0198(0x0018) MISSED OFFSET

}


//Class Engine.BlendSpaceBase
//0x00C8 (0x0158 - 0x0090)
class UBlendSpaceBase : public UAnimationAsset
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0090(0x0008) MISSED OFFSET
	unsigned char                                      bRotationBlendInMeshSpace : 1;                            // 0x0098(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0099(0x0003) MISSED OFFSET
	float                                              AnimLength;                                               // 0x009C(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FPerBoneInterpolation>               PerBoneBlend;                                             // 0x00A0(0x0010) (Edit, ZeroConstructor)
	struct FInterpolationParameter                     InterpolationParam[0x3];                                  // 0x00B0(0x0008) (Edit)
	float                                              TargetWeightInterpolationSpeedPerSec;                     // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ENotifyTriggerMode>                    NotifyTriggerMode;                                        // 0x00CC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00CD(0x0003) MISSED OFFSET
	int                                                SampleIndexWithMarkers;                                   // 0x00D0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00D4(0x0004) MISSED OFFSET
	TArray<struct FBlendSample>                        SampleData;                                               // 0x00D8(0x0010) (ZeroConstructor)
	TArray<struct FEditorElement>                      GridSamples;                                              // 0x00E8(0x0010) (ZeroConstructor)
	struct FBlendParameter                             BlendParameters[0x3];                                     // 0x00F8(0x0020) (Edit)

}


//Class Engine.BlendSpace
//0x0008 (0x0160 - 0x0158)
class UBlendSpace : public UBlendSpaceBase
{
public:
	TEnumAsByte<EBlendSpaceAxis>                       AxisToScaleAnimation;                                     // 0x0158(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0159(0x0007) MISSED OFFSET

}


//Class Engine.AimOffsetBlendSpace
//0x0000 (0x0160 - 0x0160)
class UAimOffsetBlendSpace : public UBlendSpace
{
public:

}


//Class Engine.BlendSpace1D
//0x0008 (0x0160 - 0x0158)
class UBlendSpace1D : public UBlendSpaceBase
{
public:
	unsigned char                                      bScaleAnimation : 1;                                      // 0x0158(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0159(0x0007) MISSED OFFSET

}


//Class Engine.AimOffsetBlendSpace1D
//0x0000 (0x0160 - 0x0160)
class UAimOffsetBlendSpace1D : public UBlendSpace1D
{
public:

}


//Class Engine.PoseAsset
//0x0110 (0x01A0 - 0x0090)
class UPoseAsset : public UAnimationAsset
{
public:
	struct FPoseDataContainer                          PoseContainer;                                            // 0x0090(0x0090)
	unsigned char                                      bAdditivePose : 1;                                        // 0x0120(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0121(0x0003) MISSED OFFSET
	int                                                BasePoseIndex;                                            // 0x0124(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FName                                       RetargetSource;                                           // 0x0128(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x70];                                      // 0x0130(0x0070) MISSED OFFSET

}


//Class Engine.AnimStateMachineTypes
//0x0000 (0x0040 - 0x0040)
class UAnimStateMachineTypes : public UObject
{
public:

}


//Class Engine.AnimClassInterface
//0x0000 (0x0040 - 0x0040)
class UAnimClassInterface : public UInterface
{
public:

}


//Class Engine.AnimClassData
//0x0070 (0x00B0 - 0x0040)
class UAnimClassData : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	TArray<struct FBakedAnimationStateMachine>         BakedStateMachines;                                       // 0x0048(0x0010) (ZeroConstructor)
	class USkeleton*                                   TargetSkeleton;                                           // 0x0058(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FAnimNotifyEvent>                    AnimNotifies;                                             // 0x0060(0x0010) (ZeroConstructor)
	int                                                RootAnimNodeIndex;                                        // 0x0070(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	TArray<int>                                        OrderedSavedPoseIndices;                                  // 0x0078(0x0010) (ZeroConstructor)
	class UStructProperty*                             RootAnimNodeProperty;                                     // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UStructProperty*>                     AnimNodeProperties;                                       // 0x0090(0x0010) (ZeroConstructor)
	TArray<struct FName>                               SyncGroupNames;                                           // 0x00A0(0x0010) (ZeroConstructor)

}


//Class Engine.AnimCompress
//0x0020 (0x0060 - 0x0040)
class UAnimCompress : public UObject
{
public:
	struct FString                                     Description;                                              // 0x0040(0x0010) (Edit, ZeroConstructor, EditConst)
	unsigned char                                      bNeedsSkeleton : 1;                                       // 0x0050(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	TEnumAsByte<EAnimationCompressionFormat>           TranslationCompressionFormat;                             // 0x0054(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAnimationCompressionFormat>           RotationCompressionFormat;                                // 0x0055(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAnimationCompressionFormat>           ScaleCompressionFormat;                                   // 0x0056(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0057(0x0001) MISSED OFFSET
	float                                              MaxCurveError;                                            // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

}


//Class Engine.AnimCompress_Automatic
//0x0008 (0x0068 - 0x0060)
class UAnimCompress_Automatic : public UAnimCompress
{
public:
	float                                              MaxEndEffectorError;                                      // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bTryFixedBitwiseCompression : 1;                          // 0x0064(0x0001) (Edit)
	unsigned char                                      bTryPerTrackBitwiseCompression : 1;                       // 0x0064(0x0001) (Edit)
	unsigned char                                      bTryLinearKeyRemovalCompression : 1;                      // 0x0064(0x0001) (Edit)
	unsigned char                                      bTryIntervalKeyRemoval : 1;                               // 0x0064(0x0001) (Edit)
	unsigned char                                      bRunCurrentDefaultCompressor : 1;                         // 0x0064(0x0001) (Edit)
	unsigned char                                      bAutoReplaceIfExistingErrorTooGreat : 1;                  // 0x0064(0x0001) (Edit)
	unsigned char                                      bRaiseMaxErrorToExisting : 1;                             // 0x0064(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0065(0x0003) MISSED OFFSET

}


//Class Engine.AnimCompress_BitwiseCompressOnly
//0x0000 (0x0060 - 0x0060)
class UAnimCompress_BitwiseCompressOnly : public UAnimCompress
{
public:

}


//Class Engine.AnimCompress_LeastDestructive
//0x0000 (0x0060 - 0x0060)
class UAnimCompress_LeastDestructive : public UAnimCompress
{
public:

}


//Class Engine.AnimCompress_RemoveEverySecondKey
//0x0008 (0x0068 - 0x0060)
class UAnimCompress_RemoveEverySecondKey : public UAnimCompress
{
public:
	int                                                MinKeys;                                                  // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bStartAtSecondKey : 1;                                    // 0x0064(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0065(0x0003) MISSED OFFSET

}


//Class Engine.AnimCompress_RemoveLinearKeys
//0x0020 (0x0080 - 0x0060)
class UAnimCompress_RemoveLinearKeys : public UAnimCompress
{
public:
	float                                              MaxPosDiff;                                               // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxAngleDiff;                                             // 0x0064(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxScaleDiff;                                             // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxEffectorDiff;                                          // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinEffectorDiff;                                          // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EffectorDiffSocket;                                       // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ParentKeyScale;                                           // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRetarget : 1;                                            // 0x007C(0x0001) (Edit)
	unsigned char                                      bActuallyFilterLinearKeys : 1;                            // 0x007C(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x007D(0x0003) MISSED OFFSET

}


//Class Engine.AnimCompress_PerTrackCompression
//0x0080 (0x0100 - 0x0080)
class UAnimCompress_PerTrackCompression : public UAnimCompress_RemoveLinearKeys
{
public:
	float                                              MaxZeroingThreshold;                                      // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxPosDiffBitwise;                                        // 0x0084(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxAngleDiffBitwise;                                      // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxScaleDiffBitwise;                                      // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<TEnumAsByte<EAnimationCompressionFormat>>   AllowedRotationFormats;                                   // 0x0090(0x0010) (Edit, ZeroConstructor)
	TArray<TEnumAsByte<EAnimationCompressionFormat>>   AllowedTranslationFormats;                                // 0x00A0(0x0010) (Edit, ZeroConstructor)
	TArray<TEnumAsByte<EAnimationCompressionFormat>>   AllowedScaleFormats;                                      // 0x00B0(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      bResampleAnimation : 1;                                   // 0x00C0(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00C1(0x0003) MISSED OFFSET
	float                                              ResampledFramerate;                                       // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MinKeysForResampling;                                     // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseAdaptiveError : 1;                                    // 0x00CC(0x0001) (Edit)
	unsigned char                                      bUseOverrideForEndEffectors : 1;                          // 0x00CC(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00CD(0x0003) MISSED OFFSET
	int                                                TrackHeightBias;                                          // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ParentingDivisor;                                         // 0x00D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ParentingDivisorExponent;                                 // 0x00D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseAdaptiveError2 : 1;                                   // 0x00DC(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00DD(0x0003) MISSED OFFSET
	float                                              RotationErrorSourceRatio;                                 // 0x00E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TranslationErrorSourceRatio;                              // 0x00E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScaleErrorSourceRatio;                                    // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxErrorPerTrackRatio;                                    // 0x00EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PerturbationProbeSize;                                    // 0x00F0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xC];                                       // 0x00F4(0x000C) MISSED OFFSET

}


//Class Engine.AnimCompress_RemoveTrivialKeys
//0x0010 (0x0070 - 0x0060)
class UAnimCompress_RemoveTrivialKeys : public UAnimCompress
{
public:
	float                                              MaxPosDiff;                                               // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxAngleDiff;                                             // 0x0064(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxScaleDiff;                                             // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

}


//Class Engine.AnimNotify
//0x0010 (0x0050 - 0x0040)
class UAnimNotify : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0040(0x0010) MISSED OFFSET

	// Function Engine.AnimNotify.Received_Notify
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);// sub_5C67A0()

	// Function Engine.AnimNotify.GetNotifyName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetNotifyName();// sub_6099130()


}


//Class Engine.AnimInstance
//0x0370 (0x03B0 - 0x0040)
class UAnimInstance : public UObject
{
public:
	float                                              DeltaTime;                                                // 0x0040(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	class USkeleton*                                   CurrentSkeleton;                                          // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<ERootMotionMode>                       RootMotionMode;                                           // 0x0050(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bRunUpdatesInWorkerThreads : 1;                           // 0x0051(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0052(0x0001)
	unsigned char                                      bCanUseParallelUpdateAnimation : 1;                       // 0x0052(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x0053(0x0001)
	unsigned char                                      bUseMultiThreadedAnimationUpdate : 1;                     // 0x0053(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03 : 8;                                        // 0x0054(0x0001)
	unsigned char                                      bWarnAboutBlueprintUsage : 1;                             // 0x0054(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnMontageBlendingOut;                                     // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMontageStarted;                                         // 0x0068(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMontageEnded;                                           // 0x0078(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMontageInterrupted;                                     // 0x0088(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAllMontageInstancesEnded;                               // 0x0098(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData05[0x60];                                      // 0x00A8(0x0060) MISSED OFFSET
	unsigned char                                      bQueueMontageEvents : 1;                                  // 0x0108(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x9F];                                      // 0x0109(0x009F) MISSED OFFSET
	TArray<struct FAnimNotifyEvent>                    ActiveAnimNotifyState;                                    // 0x01A8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData07[0x1F8];                                     // 0x01B8(0x01F8) MISSED OFFSET

	// Function Engine.AnimInstance.UnlockAIResources
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_UnlockAIResources(unsigned char bUnlockMovement, unsigned char UnlockAILogic);// sub_556F120()

	// Function Engine.AnimInstance.TryGetPawnOwner
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class APawn* STATIC_TryGetPawnOwner();// sub_47C3840()

	// Function Engine.AnimInstance.StopSlotAnimation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StopSlotAnimation(float inBlendOutTime, const struct FName& SlotNodeName);// sub_E5C9F0()

	// Function Engine.AnimInstance.SnapshotPose
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SnapshotPose(struct FPoseSnapshot* Snapshot);// sub_D1C600()

	// Function Engine.AnimInstance.SetRootMotionMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetRootMotionMode(TEnumAsByte<ERootMotionMode> Value);// sub_5E247E0()

	// Function Engine.AnimInstance.SetMorphTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetMorphTarget(const struct FName& MorphTargetName, float Value);// sub_6153770()

	// Function Engine.AnimInstance.SavePoseSnapshot
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SavePoseSnapshot(const struct FName& SnapshotName);// sub_4ECA50()

	// Function Engine.AnimInstance.PlaySlotAnimationAsDynamicMontage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UAnimMontage* STATIC_PlaySlotAnimationAsDynamicMontage(class UAnimSequenceBase* Asset, const struct FName& SlotNodeName, float BlendInTime, float BlendOutTime, float InPlayRate, int LoopCount, float BlendOutTriggerTime, float InTimeToStartMontageAt);// sub_3BE4F60()

	// Function Engine.AnimInstance.PlaySlotAnimation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_PlaySlotAnimation(class UAnimSequenceBase* Asset, const struct FName& SlotNodeName, float BlendInTime, float BlendOutTime, float InPlayRate, int LoopCount);// sub_1B17AF0()

	// Function Engine.AnimInstance.Montage_Stop
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Montage_Stop(float inBlendOutTime, class UAnimMontage* Montage);// sub_42C4CE0()

	// Function Engine.AnimInstance.Montage_SetPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Montage_SetPosition(class UAnimMontage* Montage, float NewPosition);// sub_1429AE0()

	// Function Engine.AnimInstance.Montage_SetPlayRate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Montage_SetPlayRate(class UAnimMontage* Montage, float NewPlayRate);// sub_15E3B60()

	// Function Engine.AnimInstance.Montage_SetNextSection
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Montage_SetNextSection(const struct FName& SectionNameToChange, const struct FName& NextSection, class UAnimMontage* Montage);// sub_180A7E0()

	// Function Engine.AnimInstance.Montage_Resume
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Montage_Resume(class UAnimMontage* Montage);// sub_5A9ADA0()

	// Function Engine.AnimInstance.Montage_Play
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Montage_Play(class UAnimMontage* MontageToPlay, float InPlayRate, EMontagePlayReturnType ReturnValueType, float InTimeToStartMontageAt);// sub_53C5FA0()

	// Function Engine.AnimInstance.Montage_Pause
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Montage_Pause(class UAnimMontage* Montage);// sub_5768B50()

	// Function Engine.AnimInstance.Montage_JumpToSectionsEnd
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Montage_JumpToSectionsEnd(const struct FName& SectionName, class UAnimMontage* Montage);// sub_56199F0()

	// Function Engine.AnimInstance.Montage_JumpToSection
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Montage_JumpToSection(const struct FName& SectionName, class UAnimMontage* Montage);// sub_3E06280()

	// Function Engine.AnimInstance.Montage_IsPlaying
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Montage_IsPlaying(class UAnimMontage* Montage);// sub_3D2EFF0()

	// Function Engine.AnimInstance.Montage_IsActive
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Montage_IsActive(class UAnimMontage* Montage);// sub_5074FB0()

	// Function Engine.AnimInstance.Montage_GetPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Montage_GetPosition(class UAnimMontage* Montage);// sub_CCBC80()

	// Function Engine.AnimInstance.Montage_GetPlayRate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Montage_GetPlayRate(class UAnimMontage* Montage);// sub_F314C0()

	// Function Engine.AnimInstance.Montage_GetIsStopped
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Montage_GetIsStopped(class UAnimMontage* Montage);// sub_3D96E80()

	// Function Engine.AnimInstance.Montage_GetCurrentSection
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FName STATIC_Montage_GetCurrentSection(class UAnimMontage* Montage);// sub_512290()

	// Function Engine.AnimInstance.Montage_GetBlendTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Montage_GetBlendTime(class UAnimMontage* Montage);// sub_3A6110()

	// Function Engine.AnimInstance.LockAIResources
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_LockAIResources(unsigned char bLockMovement, unsigned char LockAILogic);// sub_1D37280()

	// Function Engine.AnimInstance.IsSyncGroupBetweenMarkers
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsSyncGroupBetweenMarkers(const struct FName& InSyncGroupName, const struct FName& PreviousMarker, const struct FName& NextMarker, unsigned char bRespectMarkerOrder);// sub_105D330()

	// Function Engine.AnimInstance.IsPlayingSlotAnimation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsPlayingSlotAnimation(class UAnimSequenceBase* Asset, const struct FName& SlotNodeName);// sub_23D5250()

	// Function Engine.AnimInstance.IsAnyMontagePlaying
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsAnyMontagePlaying();// sub_225AEE0()

	// Function Engine.AnimInstance.HasMarkerBeenHitThisFrame
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_HasMarkerBeenHitThisFrame(const struct FName& SyncGroup, const struct FName& MarkerName);// sub_44A3B00()

	// Function Engine.AnimInstance.GetTimeToClosestMarker
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetTimeToClosestMarker(const struct FName& SyncGroup, const struct FName& MarkerName, float* OutMarkerTime);// sub_5163050()

	// Function Engine.AnimInstance.GetSyncGroupPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FMarkerSyncAnimPosition STATIC_GetSyncGroupPosition(const struct FName& InSyncGroupName);// sub_59C5710()

	// Function Engine.AnimInstance.GetStateWeight
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetStateWeight(int MachineIndex, int StateIndex);// sub_57393A0()

	// Function Engine.AnimInstance.GetRelevantAnimTimeRemainingFraction
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetRelevantAnimTimeRemainingFraction(int MachineIndex, int StateIndex);// sub_47766C0()

	// Function Engine.AnimInstance.GetRelevantAnimTimeRemaining
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetRelevantAnimTimeRemaining(int MachineIndex, int StateIndex);// sub_3CA3570()

	// Function Engine.AnimInstance.GetRelevantAnimTimeFraction
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetRelevantAnimTimeFraction(int MachineIndex, int StateIndex);// sub_22AB910()

	// Function Engine.AnimInstance.GetRelevantAnimTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetRelevantAnimTime(int MachineIndex, int StateIndex);// sub_77CB00()

	// Function Engine.AnimInstance.GetRelevantAnimLength
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetRelevantAnimLength(int MachineIndex, int StateIndex);// sub_5446ED0()

	// Function Engine.AnimInstance.GetOwningComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class USkeletalMeshComponent* STATIC_GetOwningComponent();// sub_12224E0()

	// Function Engine.AnimInstance.GetOwningActor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AActor* STATIC_GetOwningActor();// sub_1207720()

	// Function Engine.AnimInstance.GetInstanceTransitionTimeElapsedFraction
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetInstanceTransitionTimeElapsedFraction(int MachineIndex, int TransitionIndex);// sub_4A0CEF0()

	// Function Engine.AnimInstance.GetInstanceTransitionTimeElapsed
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetInstanceTransitionTimeElapsed(int MachineIndex, int TransitionIndex);// sub_5DEB320()

	// Function Engine.AnimInstance.GetInstanceTransitionCrossfadeDuration
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetInstanceTransitionCrossfadeDuration(int MachineIndex, int TransitionIndex);// sub_4ABC1D0()

	// Function Engine.AnimInstance.GetInstanceStateWeight
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetInstanceStateWeight(int MachineIndex, int StateIndex);// sub_241820()

	// Function Engine.AnimInstance.GetInstanceMachineWeight
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetInstanceMachineWeight(int MachineIndex);// sub_E7CB10()

	// Function Engine.AnimInstance.GetInstanceCurrentStateElapsedTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetInstanceCurrentStateElapsedTime(int MachineIndex);// sub_46FD6F0()

	// Function Engine.AnimInstance.GetInstanceAssetPlayerTimeFromEndFraction
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetInstanceAssetPlayerTimeFromEndFraction(int AssetPlayerIndex);// sub_1283FE0()

	// Function Engine.AnimInstance.GetInstanceAssetPlayerTimeFromEnd
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetInstanceAssetPlayerTimeFromEnd(int AssetPlayerIndex);// sub_5EC7240()

	// Function Engine.AnimInstance.GetInstanceAssetPlayerTimeFraction
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetInstanceAssetPlayerTimeFraction(int AssetPlayerIndex);// sub_4959EE0()

	// Function Engine.AnimInstance.GetInstanceAssetPlayerTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetInstanceAssetPlayerTime(int AssetPlayerIndex);// sub_4CAC590()

	// Function Engine.AnimInstance.GetInstanceAssetPlayerLength
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetInstanceAssetPlayerLength(int AssetPlayerIndex);// sub_4A597D0()

	// Function Engine.AnimInstance.GetCurveValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetCurveValue(const struct FName& CurveName);// sub_5797E0()

	// Function Engine.AnimInstance.GetCurrentStateName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FName STATIC_GetCurrentStateName(int MachineIndex);// sub_3C83440()

	// Function Engine.AnimInstance.GetCurrentStateElapsedTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetCurrentStateElapsedTime(int MachineIndex);// sub_20B3C30()

	// Function Engine.AnimInstance.GetCurrentActiveMontage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UAnimMontage* STATIC_GetCurrentActiveMontage();// sub_59DCDF0()

	// Function Engine.AnimInstance.GetAnimAssetPlayerTimeFromEndFraction
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetAnimAssetPlayerTimeFromEndFraction(class UAnimationAsset* AnimAsset, float CurrentTime);// sub_16DF500()

	// Function Engine.AnimInstance.GetAnimAssetPlayerTimeFromEnd
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetAnimAssetPlayerTimeFromEnd(class UAnimationAsset* AnimAsset, float CurrentTime);// sub_53AF540()

	// Function Engine.AnimInstance.GetAnimAssetPlayerTimeFraction
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetAnimAssetPlayerTimeFraction(class UAnimationAsset* AnimAsset, float CurrentTime);// sub_5A37800()

	// Function Engine.AnimInstance.GetAnimAssetPlayerLength
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetAnimAssetPlayerLength(class UAnimationAsset* AnimAsset);// sub_44EE9C0()

	// Function Engine.AnimInstance.ClearMorphTargets
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearMorphTargets();// sub_40A38F0()

	// Function Engine.AnimInstance.CalculateDirection
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_CalculateDirection(const struct FVector& Velocity, const struct FRotator& BaseRotation);// sub_3CBB690()

	// Function Engine.AnimInstance.BlueprintUpdateAnimation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BlueprintUpdateAnimation(float DeltaTimeX);// sub_5C67A0()

	// Function Engine.AnimInstance.BlueprintPostEvaluateAnimation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BlueprintPostEvaluateAnimation();// sub_5C67A0()

	// Function Engine.AnimInstance.BlueprintInitializeAnimation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BlueprintInitializeAnimation();// sub_5C67A0()


}


//Class Engine.AnimSingleNodeInstance
//0x0018 (0x03C8 - 0x03B0)
class UAnimSingleNodeInstance : public UAnimInstance
{
public:
	class UAnimationAsset*                             CurrentAsset;                                             // 0x03B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FScriptDelegate                             PostEvaluateAnimEvent;                                    // 0x03B8(0x0014) (ZeroConstructor, Transient, InstancedReference)

	// Function Engine.AnimSingleNodeInstance.StopAnim
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StopAnim();// sub_185E60()

	// Function Engine.AnimSingleNodeInstance.SetReverse
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetReverse(unsigned char bInReverse);// sub_46A69D0()

	// Function Engine.AnimSingleNodeInstance.SetPreviewCurveOverride
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPreviewCurveOverride(const struct FName& PoseName, float Value, unsigned char bRemoveIfZero);// sub_319A00()

	// Function Engine.AnimSingleNodeInstance.SetPositionWithPreviousTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPositionWithPreviousTime(float InPosition, float InPreviousTime, unsigned char bFireNotifies);// sub_69DB60()

	// Function Engine.AnimSingleNodeInstance.SetPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPosition(float InPosition, unsigned char bFireNotifies);// sub_4860590()

	// Function Engine.AnimSingleNodeInstance.SetPlayRate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPlayRate(float InPlayRate);// sub_624F860()

	// Function Engine.AnimSingleNodeInstance.SetPlaying
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPlaying(unsigned char bIsPlaying);// sub_4671880()

	// Function Engine.AnimSingleNodeInstance.SetLooping
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLooping(unsigned char bIsLooping);// sub_205B6D0()

	// Function Engine.AnimSingleNodeInstance.SetBlendSpaceInput
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBlendSpaceInput(const struct FVector& InBlendInput);// sub_1142FA0()

	// Function Engine.AnimSingleNodeInstance.SetAnimationAsset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAnimationAsset(class UAnimationAsset* NewAsset, unsigned char bIsLooping, float InPlayRate);// sub_1995AF0()

	// Function Engine.AnimSingleNodeInstance.PlayAnim
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PlayAnim(unsigned char bIsLooping, float InPlayRate, float InStartPosition);// sub_24E5260()

	// Function Engine.AnimSingleNodeInstance.GetLength
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetLength();// sub_EDF4C0()


}


//Class Engine.AnimMetaData
//0x0000 (0x0040 - 0x0040)
class UAnimMetaData : public UObject
{
public:

}


//Class Engine.AnimNotify_PlayParticleEffect
//0x0040 (0x0090 - 0x0050)
class UAnimNotify_PlayParticleEffect : public UAnimNotify
{
public:
	class UParticleSystem*                             PSTemplate;                                               // 0x0050(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LocationOffset;                                           // 0x0058(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x0064(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0070(0x0010) MISSED OFFSET
	unsigned char                                      Attached : 1;                                             // 0x0080(0x0001) (Edit, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
	struct FName                                       SocketName;                                               // 0x0088(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

}


//Class Engine.AnimNotify_PlaySound
//0x0020 (0x0070 - 0x0050)
class UAnimNotify_PlaySound : public UAnimNotify
{
public:
	class USoundBase*                                  Sound;                                                    // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bFollow : 1;                                              // 0x0060(0x0001) (Edit, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	struct FName                                       AttachName;                                               // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

}


//Class Engine.AnimNotify_ResetClothingSimulation
//0x0000 (0x0050 - 0x0050)
class UAnimNotify_ResetClothingSimulation : public UAnimNotify
{
public:

}


//Class Engine.AnimNotifyState
//0x0008 (0x0048 - 0x0040)
class UAnimNotifyState : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET

	// Function Engine.AnimNotifyState.Received_NotifyTick
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Received_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);// sub_5C67A0()

	// Function Engine.AnimNotifyState.Received_NotifyEnd
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Received_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);// sub_5C67A0()

	// Function Engine.AnimNotifyState.Received_NotifyBegin
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Received_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);// sub_5C67A0()

	// Function Engine.AnimNotifyState.GetNotifyName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetNotifyName();// sub_5FDD9A0()


}


//Class Engine.AnimNotifyState_DisableRootMotion
//0x0000 (0x0048 - 0x0048)
class UAnimNotifyState_DisableRootMotion : public UAnimNotifyState
{
public:

}


//Class Engine.AnimNotifyState_TimedParticleEffect
//0x0030 (0x0078 - 0x0048)
class UAnimNotifyState_TimedParticleEffect : public UAnimNotifyState
{
public:
	class UParticleSystem*                             PSTemplate;                                               // 0x0048(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0050(0x0008) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LocationOffset;                                           // 0x0058(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RotationOffset;                                           // 0x0064(0x000C) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bDestroyAtEnd : 1;                                        // 0x0070(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

}


//Class Engine.AnimNotifyState_Trail
//0x0030 (0x0078 - 0x0048)
class UAnimNotifyState_Trail : public UAnimNotifyState
{
public:
	class UParticleSystem*                             PSTemplate;                                               // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       FirstSocketName;                                          // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       SecondSocketName;                                         // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETrailWidthMode>                       WidthScaleMode;                                           // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	struct FName                                       WidthScaleCurve;                                          // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRecycleSpawnedSystems : 1;                               // 0x0070(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

	// Function Engine.AnimNotifyState_Trail.OverridePSTemplate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UParticleSystem* STATIC_OverridePSTemplate(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);// sub_5C67A0()


}


//Class Engine.AnimSet
//0x00C8 (0x0108 - 0x0040)
class UAnimSet : public UObject
{
public:
	unsigned char                                      bAnimRotationOnly : 1;                                    // 0x0040(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	TArray<struct FName>                               TrackBoneNames;                                           // 0x0048(0x0010) (ZeroConstructor)
	TArray<struct FAnimSetMeshLinkup>                  LinkupCache;                                              // 0x0058(0x0010) (ZeroConstructor, Transient)
	TArray<unsigned char>                              BoneUseAnimTranslation;                                   // 0x0068(0x0010) (ZeroConstructor, Transient)
	TArray<unsigned char>                              ForceUseMeshTranslation;                                  // 0x0078(0x0010) (ZeroConstructor, Transient)
	TArray<struct FName>                               UseTranslationBoneNames;                                  // 0x0088(0x0010) (Edit, ZeroConstructor)
	TArray<struct FName>                               ForceMeshTranslationBoneNames;                            // 0x0098(0x0010) (Edit, ZeroConstructor)
	struct FName                                       PreviewSkelMeshName;                                      // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       BestRatioSkelMeshName;                                    // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x50];                                      // 0x00B8(0x0050) MISSED OFFSET

}


//Class Engine.AssetImportData
//0x0000 (0x0040 - 0x0040)
class UAssetImportData : public UObject
{
public:

}


//Class Engine.AssetManager
//0x0378 (0x03B8 - 0x0040)
class UAssetManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x260];                                     // 0x0040(0x0260) MISSED OFFSET
	TArray<class UObject*>                             ObjectReferenceList;                                      // 0x02A0(0x0010) (ZeroConstructor)
	unsigned char                                      bIsGlobalAsyncScanEnvironment : 1;                        // 0x02B0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x02B1(0x0001)
	unsigned char                                      bShouldKeepHardRefs : 1;                                  // 0x02B1(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x02B2(0x0001)
	unsigned char                                      bShouldGuessTypeAndName : 1;                              // 0x02B2(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03 : 8;                                        // 0x02B3(0x0001)
	unsigned char                                      bShouldUseSynchronousLoad : 1;                            // 0x02B3(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04 : 8;                                        // 0x02B4(0x0001)
	unsigned char                                      bIsBulkScanning : 1;                                      // 0x02B4(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05 : 8;                                        // 0x02B5(0x0001)
	unsigned char                                      bIsManagementDatabaseCurrent : 1;                         // 0x02B5(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06 : 8;                                        // 0x02B6(0x0001)
	unsigned char                                      bUpdateManagementDatabaseAfterScan : 1;                   // 0x02B6(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x101];                                     // 0x02B7(0x0101) MISSED OFFSET

}


//Class Engine.AssetMappingTable
//0x0010 (0x0050 - 0x0040)
class UAssetMappingTable : public UObject
{
public:
	TArray<struct FAssetMapping>                       MappedAssets;                                             // 0x0040(0x0010) (Edit, EditFixedSize, ZeroConstructor, EditConst)

}


//Class Engine.AutomationTestSettings
//0x02F8 (0x0338 - 0x0040)
class UAutomationTestSettings : public UObject
{
public:
	TArray<struct FString>                             EngineTestModules;                                        // 0x0040(0x0010) (Edit, ZeroConstructor, Config)
	TArray<struct FString>                             EditorTestModules;                                        // 0x0050(0x0010) (Edit, ZeroConstructor, Config)
	struct FStringAssetReference                       AutomationTestmap;                                        // 0x0060(0x0010) (Edit, ZeroConstructor, Config)
	TArray<struct FEditorMapPerformanceTestDefinition> EditorPerformanceTestMaps;                                // 0x0070(0x0010) (Edit, ZeroConstructor, Config)
	TArray<struct FStringAssetReference>               AssetsToOpen;                                             // 0x0080(0x0010) (Edit, ZeroConstructor, Config)
	struct FBuildPromotionTestSettings                 BuildPromotionTest;                                       // 0x0090(0x01F0) (Edit, Config)
	struct FMaterialEditorPromotionSettings            MaterialEditorPromotionTest;                              // 0x0280(0x0030) (Edit, Config)
	struct FParticleEditorPromotionSettings            ParticleEditorPromotionTest;                              // 0x02B0(0x0010) (Edit, Config)
	struct FBlueprintEditorPromotionSettings           BlueprintEditorPromotionTest;                             // 0x02C0(0x0030) (Edit, Config)
	TArray<struct FString>                             TestLevelFolders;                                         // 0x02F0(0x0010) (Edit, ZeroConstructor, Config)
	TArray<struct FExternalToolDefinition>             ExternalTools;                                            // 0x0300(0x0010) (Edit, ZeroConstructor, Config)
	TArray<struct FEditorImportExportTestDefinition>   ImportExportTestDefinitions;                              // 0x0310(0x0010) (Edit, ZeroConstructor, Config)
	TArray<struct FLaunchOnTestSettings>               LaunchOnSettings;                                         // 0x0320(0x0010) (Edit, ZeroConstructor, Config)
	struct FIntPoint                                   DefaultScreenshotResolution;                              // 0x0330(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData)

}


//Class Engine.AvoidanceManager
//0x00B8 (0x00F8 - 0x0040)
class UAvoidanceManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	float                                              DefaultTimeToLive;                                        // 0x0048(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              LockTimeAfterAvoid;                                       // 0x004C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              LockTimeAfterClean;                                       // 0x0050(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              DeltaTimeToPredict;                                       // 0x0054(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              ArtificialRadiusExpansion;                                // 0x0058(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              TestHeightDifference;                                     // 0x005C(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              HeightCheckMargin;                                        // 0x0060(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x94];                                      // 0x0064(0x0094) MISSED OFFSET

	// Function Engine.AvoidanceManager.RegisterMovementComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_RegisterMovementComponent(class UMovementComponent* MovementComp, float AvoidanceWeight);// sub_40F940()

	// Function Engine.AvoidanceManager.GetObjectCount
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetObjectCount();// sub_24457E0()

	// Function Engine.AvoidanceManager.GetNewAvoidanceUID
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetNewAvoidanceUID();// sub_143EE30()

	// Function Engine.AvoidanceManager.GetAvoidanceVelocityIgnoringUID
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetAvoidanceVelocityIgnoringUID(const struct FNavAvoidanceData& AvoidanceData, float DeltaTime, int IgnoreThisUID);// sub_22C2640()

	// Function Engine.AvoidanceManager.GetAvoidanceVelocityForComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetAvoidanceVelocityForComponent(class UMovementComponent* MovementComp);// sub_4E1C8C0()

	// Function Engine.AvoidanceManager.GetAvoidanceVelocity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetAvoidanceVelocity(const struct FNavAvoidanceData& AvoidanceData, float DeltaTime);// sub_42E2690()


}


//Class Engine.Skeleton
//0x0370 (0x03B0 - 0x0040)
class USkeleton : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	TArray<struct FBoneNode>                           BoneTree;                                                 // 0x0048(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<struct FTransform>                          RefLocalPoses;                                            // 0x0058(0x0010) (ZeroConstructor, Deprecated)
	unsigned char                                      UnknownData01[0x110];                                     // 0x0068(0x0110) MISSED OFFSET
	struct FGuid                                       VirtualBoneGuid;                                          // 0x0178(0x0010) (ZeroConstructor, IsPlainOldData)
	TArray<struct FVirtualBone>                        VirtualBones;                                             // 0x0188(0x0010) (ZeroConstructor)
	TArray<struct FSkeletonToMeshLinkup>               LinkupCache;                                              // 0x0198(0x0010) (ZeroConstructor, Transient)
	TArray<class USkeletalMeshSocket*>                 Sockets;                                                  // 0x01A8(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x50];                                      // 0x01B8(0x0050) MISSED OFFSET
	struct FSmartNameContainer                         SmartNames;                                               // 0x0208(0x0050)
	unsigned char                                      UnknownData03[0x18];                                      // 0x0258(0x0018) MISSED OFFSET
	TArray<class UBlendProfile*>                       BlendProfiles;                                            // 0x0270(0x0010) (ExportObject, ZeroConstructor)
	TArray<struct FAnimSlotGroup>                      SlotGroups;                                               // 0x0280(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData04[0x110];                                     // 0x0290(0x0110) MISSED OFFSET
	TArray<class UAssetUserData*>                      AssetUserData;                                            // 0x03A0(0x0010) (Edit, ExportObject, ZeroConstructor)

}


//Class Engine.BlendProfile
//0x0020 (0x0060 - 0x0040)
class UBlendProfile : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	class USkeleton*                                   OwningSkeleton;                                           // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FBlendProfileBoneEntry>              ProfileEntries;                                           // 0x0050(0x0010) (ZeroConstructor)

}


//Class Engine.BlueprintAsyncActionBase
//0x0000 (0x0040 - 0x0040)
class UBlueprintAsyncActionBase : public UObject
{
public:

	// Function Engine.BlueprintAsyncActionBase.Activate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Activate();// sub_44A300()


}


//Class Engine.BlueprintCore
//0x0028 (0x0068 - 0x0040)
class UBlueprintCore : public UObject
{
public:
	class UObject*                                     SkeletonGeneratedClass;                                   // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UObject*                                     GeneratedClass;                                           // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bLegacyNeedToPurgeSkelRefs : 1;                           // 0x0050(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0051(0x0001)
	unsigned char                                      bLegacyGeneratedClassIsAuthoritative : 1;                 // 0x0051(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0052(0x0002) MISSED OFFSET
	struct FGuid                                       BlueprintGuid;                                            // 0x0054(0x0010) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

}


//Class Engine.Blueprint
//0x0148 (0x01B0 - 0x0068)
class UBlueprint : public UBlueprintCore
{
public:
	unsigned char                                      bRecompileOnLoad : 1;                                     // 0x0068(0x0001) (Config)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
	class UObject*                                     ParentClass;                                              // 0x0070(0x0008) (ZeroConstructor, IsPlainOldData)
	class UObject*                                     PRIVATE_InnermostPreviousCDO;                             // 0x0078(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bHasBeenRegenerated : 1;                                  // 0x0080(0x0001) (Transient)
	unsigned char                                      bIsRegeneratingOnLoad : 1;                                // 0x0080(0x0001) (Transient)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
	class USimpleConstructionScript*                   SimpleConstructionScript;                                 // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UActorComponent*>                     ComponentTemplates;                                       // 0x0090(0x0010) (ExportObject, ZeroConstructor)
	TArray<class UTimelineTemplate*>                   Timelines;                                                // 0x00A0(0x0010) (ZeroConstructor)
	class UInheritableComponentHandler*                InheritableComponentHandler;                              // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBlueprintType>                        BlueprintType;                                            // 0x00B8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00B9(0x0003) MISSED OFFSET
	int                                                BlueprintSystemVersion;                                   // 0x00BC(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xE0];                                      // 0x00C0(0x00E0) MISSED OFFSET
	unsigned char                                      bNativize : 1;                                            // 0x01A0(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData04[0xF];                                       // 0x01A1(0x000F) MISSED OFFSET

}


//Class Engine.AnimBlueprint
//0x0020 (0x01D0 - 0x01B0)
class UAnimBlueprint : public UBlueprint
{
public:
	TArray<struct FAnimGroupInfo>                      Groups;                                                   // 0x01B0(0x0010) (ZeroConstructor)
	unsigned char                                      bUseMultiThreadedAnimationUpdate : 1;                     // 0x01C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x01C1(0x0001)
	unsigned char                                      bWarnAboutBlueprintUsage : 1;                             // 0x01C1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xE];                                       // 0x01C2(0x000E) MISSED OFFSET

}


//Class Engine.LevelScriptBlueprint
//0x0000 (0x01B0 - 0x01B0)
class ULevelScriptBlueprint : public UBlueprint
{
public:

}


//Class Engine.BlueprintFunctionLibrary
//0x0000 (0x0040 - 0x0040)
class UBlueprintFunctionLibrary : public UObject
{
public:

	// Function Engine.BlueprintFunctionLibrary.MakeStringAssetReference
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FStringAssetReference STATIC_MakeStringAssetReference(const struct FString& AssetLongPathname);// sub_4C60160()


}


//Class Engine.BlueprintMapLibrary
//0x0000 (0x0040 - 0x0040)
class UBlueprintMapLibrary : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.BlueprintMapLibrary.Map_Values
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Map_Values(TMap<int, int> TargetMap, TArray<int>* Values);// sub_1B79E80()

	// Function Engine.BlueprintMapLibrary.Map_Remove
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Map_Remove(TMap<int, int> TargetMap, int Key);// sub_405A680()

	// Function Engine.BlueprintMapLibrary.Map_Length
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Map_Length(TMap<int, int> TargetMap);// sub_11A1010()

	// Function Engine.BlueprintMapLibrary.Map_Keys
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Map_Keys(TMap<int, int> TargetMap, TArray<int>* Keys);// sub_45A8790()

	// Function Engine.BlueprintMapLibrary.Map_Find
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Map_Find(TMap<int, int> TargetMap, int Key, int* Value);// sub_41BC480()

	// Function Engine.BlueprintMapLibrary.Map_Contains
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Map_Contains(TMap<int, int> TargetMap, int Key);// sub_4AA30A0()

	// Function Engine.BlueprintMapLibrary.Map_Clear
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Map_Clear(TMap<int, int> TargetMap);// sub_5483C20()

	// Function Engine.BlueprintMapLibrary.Map_Add
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Map_Add(TMap<int, int> TargetMap, int Key, int Value);// sub_4A3FEE0()


}


//Class Engine.Subsystem
//0x0008 (0x0048 - 0x0040)
class USubsystem : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET

}


//Class Engine.DynamicSubsystem
//0x0000 (0x0048 - 0x0048)
class UDynamicSubsystem : public USubsystem
{
public:

}


//Class Engine.GameInstance
//0x01B0 (0x01F0 - 0x0040)
class UGameInstance : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0040(0x0010) MISSED OFFSET
	class UReplayCustomEventManager*                   ReplayCustomEventManager;                                 // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xB0];                                      // 0x0058(0x00B0) MISSED OFFSET
	class UOnlineSession*                              OnlineSession;                                            // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnKillcamLoadingFinished;                                 // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0xD0];                                      // 0x0120(0x00D0) MISSED OFFSET

	// Function Engine.GameInstance.ReceiveShutdown
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveShutdown();// sub_5C67A0()

	// Function Engine.GameInstance.ReceiveInit
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveInit();// sub_5C67A0()

	// DelegateFunction Engine.GameInstance.KillcamLoadingFinishedDelegate__DelegateSignature
	// (NetReliable, Exec, Event, NetMulticast, MulticastDelegate, Private, Protected, HasOutParms, BlueprintEvent)
	void KillcamLoadingFinishedDelegate__DelegateSignature();// sub_5C67A0()

	// Function Engine.GameInstance.HandleTravelError
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_HandleTravelError(TEnumAsByte<ETravelFailure> FailureType);// sub_5C67A0()

	// Function Engine.GameInstance.HandleNetworkError
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_HandleNetworkError(TEnumAsByte<ENetworkFailure> FailureType, unsigned char bIsServer);// sub_5C67A0()

	// Function Engine.GameInstance.DebugRemovePlayer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DebugRemovePlayer(int ControllerId);// sub_5E7F9E0()

	// Function Engine.GameInstance.DebugCreatePlayer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DebugCreatePlayer(int ControllerId);// sub_3E26070()


}


//Class Engine.GameInstanceSubsystem
//0x0000 (0x0048 - 0x0048)
class UGameInstanceSubsystem : public USubsystem
{
public:

}


//Class Engine.PlatformGameInstance
//0x00B0 (0x02A0 - 0x01F0)
class UPlatformGameInstance : public UGameInstance
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x01F0(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    ApplicationHasReactivatedDelegate;                        // 0x01F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ApplicationWillEnterBackgroundDelegate;                   // 0x0208(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ApplicationHasEnteredForegroundDelegate;                  // 0x0218(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ApplicationWillTerminateDelegate;                         // 0x0228(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ApplicationRegisteredForRemoteNotificationsDelegate;      // 0x0238(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ApplicationRegisteredForUserNotificationsDelegate;        // 0x0248(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ApplicationFailedToRegisterForRemoteNotificationsDelegate;// 0x0258(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ApplicationReceivedRemoteNotificationDelegate;            // 0x0268(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ApplicationReceivedLocalNotificationDelegate;             // 0x0278(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ApplicationReceivedScreenOrientationChangedNotificationDelegate;// 0x0288(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0298(0x0008) MISSED OFFSET

	// DelegateFunction Engine.PlatformGameInstance.PlatformScreenOrientationChangedDelegate__DelegateSignature
	// (NetReliable, Exec, Event, NetMulticast, MulticastDelegate, Private, Protected, HasOutParms, BlueprintEvent)
	void PlatformScreenOrientationChangedDelegate__DelegateSignature(TEnumAsByte<EScreenOrientation> inScreenOrientation);// sub_5C67A0()

	// DelegateFunction Engine.PlatformGameInstance.PlatformRegisteredForUserNotificationsDelegate__DelegateSignature
	// (NetReliable, Exec, Event, NetMulticast, MulticastDelegate, Private, Protected, HasOutParms, BlueprintEvent)
	void PlatformRegisteredForUserNotificationsDelegate__DelegateSignature(int inInt);// sub_5C67A0()

	// DelegateFunction Engine.PlatformGameInstance.PlatformRegisteredForRemoteNotificationsDelegate__DelegateSignature
	// (NetReliable, Exec, Event, NetMulticast, MulticastDelegate, Private, Protected, HasOutParms, BlueprintEvent)
	void PlatformRegisteredForRemoteNotificationsDelegate__DelegateSignature(TArray<unsigned char> inArray);// sub_5C67A0()

	// DelegateFunction Engine.PlatformGameInstance.PlatformReceivedRemoteNotificationDelegate__DelegateSignature
	// (NetReliable, Exec, Event, NetMulticast, MulticastDelegate, Private, Protected, HasOutParms, BlueprintEvent)
	void PlatformReceivedRemoteNotificationDelegate__DelegateSignature(const struct FString& inString);// sub_5C67A0()

	// DelegateFunction Engine.PlatformGameInstance.PlatformReceivedLocalNotificationDelegate__DelegateSignature
	// (NetReliable, Exec, Event, NetMulticast, MulticastDelegate, Private, Protected, HasOutParms, BlueprintEvent)
	void PlatformReceivedLocalNotificationDelegate__DelegateSignature(const struct FString& inString, int inInt);// sub_5C67A0()

	// DelegateFunction Engine.PlatformGameInstance.PlatformFailedToRegisterForRemoteNotificationsDelegate__DelegateSignature
	// (NetReliable, Exec, Event, NetMulticast, MulticastDelegate, Private, Protected, HasOutParms, BlueprintEvent)
	void PlatformFailedToRegisterForRemoteNotificationsDelegate__DelegateSignature(const struct FString& inString);// sub_5C67A0()

	// DelegateFunction Engine.PlatformGameInstance.PlatformDelegate__DelegateSignature
	// (NetReliable, Exec, Event, NetMulticast, MulticastDelegate, Private, Protected, HasOutParms, BlueprintEvent)
	void PlatformDelegate__DelegateSignature();// sub_5C67A0()


}


//Class Engine.BlueprintPlatformLibrary
//0x0000 (0x0040 - 0x0040)
class UBlueprintPlatformLibrary : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationFromNow
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ScheduleLocalNotificationFromNow(int inSecondsFromNow, const struct FText& Title, const struct FText& Body, const struct FText& Action, const struct FString& ActivationEvent);// sub_163E110()

	// Function Engine.BlueprintPlatformLibrary.ScheduleLocalNotificationAtTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ScheduleLocalNotificationAtTime(const struct FDateTime& FireDateTime, unsigned char LocalTime, const struct FText& Title, const struct FText& Body, const struct FText& Action, const struct FString& ActivationEvent);// sub_505D300()

	// Function Engine.BlueprintPlatformLibrary.GetLaunchNotification
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetLaunchNotification(unsigned char* NotificationLaunchedApp, struct FString* ActivationEvent, int* FireDate);// sub_4A0CFB0()

	// Function Engine.BlueprintPlatformLibrary.ClearAllLocalNotifications
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearAllLocalNotifications();// sub_20E25D0()

	// Function Engine.BlueprintPlatformLibrary.CancelLocalNotification
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_CancelLocalNotification(const struct FString& ActivationEvent);// sub_180A6A0()


}


//Class Engine.BlueprintSetLibrary
//0x0000 (0x0040 - 0x0040)
class UBlueprintSetLibrary : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.BlueprintSetLibrary.Set_Union
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Set_Union();// sub_746B60()

	// Function Engine.BlueprintSetLibrary.Set_ToArray
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Set_ToArray(TArray<int>* Result);// sub_5C437A0()

	// Function Engine.BlueprintSetLibrary.Set_RemoveItems
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Set_RemoveItems(TArray<int> Items);// sub_432FC20()

	// Function Engine.BlueprintSetLibrary.Set_Remove
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Set_Remove(int Item);// sub_432FA70()

	// Function Engine.BlueprintSetLibrary.Set_Length
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Set_Length();// sub_1568080()

	// Function Engine.BlueprintSetLibrary.Set_Intersection
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Set_Intersection();// sub_1370AD0()

	// Function Engine.BlueprintSetLibrary.Set_Difference
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Set_Difference();// sub_230AD30()

	// Function Engine.BlueprintSetLibrary.Set_Contains
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Set_Contains(int ItemToFind);// sub_2199AE0()

	// Function Engine.BlueprintSetLibrary.Set_Clear
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Set_Clear();// sub_123B770()

	// Function Engine.BlueprintSetLibrary.Set_AddItems
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Set_AddItems(TArray<int> NewItems);// sub_55B83C0()

	// Function Engine.BlueprintSetLibrary.Set_Add
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Set_Add(int NewItem);// sub_16FF670()


}


//Class Engine.DataTable
//0x0058 (0x0098 - 0x0040)
class UDataTable : public UObject
{
public:
	class UScriptStruct*                               RowStruct;                                                // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0048(0x0050) MISSED OFFSET

}


//Class Engine.DataTableFunctionLibrary
//0x0000 (0x0040 - 0x0040)
class UDataTableFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.DataTableFunctionLibrary.GetDataTableRowNames
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetDataTableRowNames(class UDataTable* Table, TArray<struct FName>* OutRowNames);// sub_3C21E20()

	// Function Engine.DataTableFunctionLibrary.GetDataTableRowFromName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetDataTableRowFromName(class UDataTable* Table, const struct FName& RowName, struct FTableRowBase* OutRow);// sub_61996F0()

	// Function Engine.DataTableFunctionLibrary.EvaluateCurveTableRow
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_EvaluateCurveTableRow(class UCurveTable* CurveTable, const struct FName& RowName, float InXY, const struct FString& ContextString, TEnumAsByte<EEvaluateCurveTableResult>* OutResult, float* OutXY);// sub_13C7890()


}


//Class Engine.DebugDrawService
//0x0000 (0x0040 - 0x0040)
class UDebugDrawService : public UBlueprintFunctionLibrary
{
public:

}


//Class Engine.DeveloperSettings
//0x0010 (0x0050 - 0x0040)
class UDeveloperSettings : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0040(0x0010) MISSED OFFSET

}


//Class Engine.CollisionProfile
//0x0120 (0x0170 - 0x0050)
class UCollisionProfile : public UDeveloperSettings
{
public:
	TArray<struct FCollisionResponseTemplate>          Profiles;                                                 // 0x0050(0x0010) (ZeroConstructor, Config, GlobalConfig)
	TArray<struct FCustomChannelSetup>                 DefaultChannelResponses;                                  // 0x0060(0x0010) (ZeroConstructor, Config, GlobalConfig)
	TArray<struct FCustomProfile>                      EditProfiles;                                             // 0x0070(0x0010) (ZeroConstructor, Config, GlobalConfig)
	TArray<struct FRedirector>                         ProfileRedirects;                                         // 0x0080(0x0010) (ZeroConstructor, Config, GlobalConfig)
	TArray<struct FRedirector>                         CollisionChannelRedirects;                                // 0x0090(0x0010) (ZeroConstructor, Config, GlobalConfig)
	unsigned char                                      UnknownData00[0xD0];                                      // 0x00A0(0x00D0) MISSED OFFSET

}


//Class Engine.KismetSystemLibrary
//0x0000 (0x0040 - 0x0040)
class UKismetSystemLibrary : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.KismetSystemLibrary.StackTrace
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StackTrace();// sub_424AA10()

	// Function Engine.KismetSystemLibrary.SphereTraceSingleForObjects
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_SphereTraceSingleForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, struct FHitResult* OutHit);// sub_400F5A0()

	// Function Engine.KismetSystemLibrary.SphereTraceSingleByProfile
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_SphereTraceSingleByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, const struct FName& ProfileName, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, struct FHitResult* OutHit);// sub_23A27C0()

	// Function Engine.KismetSystemLibrary.SphereTraceSingle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_SphereTraceSingle(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, TEnumAsByte<ETraceTypeQuery> TraceChannel, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, struct FHitResult* OutHit);// sub_165D40()

	// Function Engine.KismetSystemLibrary.SphereTraceMultiForObjects
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_SphereTraceMultiForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, TArray<struct FHitResult>* OutHits);// sub_DB68B0()

	// Function Engine.KismetSystemLibrary.SphereTraceMultiByProfile
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_SphereTraceMultiByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, const struct FName& ProfileName, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, TArray<struct FHitResult>* OutHits);// sub_5031B50()

	// Function Engine.KismetSystemLibrary.SphereTraceMulti
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_SphereTraceMulti(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, TEnumAsByte<ETraceTypeQuery> TraceChannel, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, TArray<struct FHitResult>* OutHits);// sub_1F25710()

	// Function Engine.KismetSystemLibrary.SphereOverlapComponents
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_SphereOverlapComponents(class UObject* WorldContextObject, const struct FVector& SpherePos, float SphereRadius, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, class UObject* ComponentClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class UPrimitiveComponent*>* OutComponents);// sub_197AC80()

	// Function Engine.KismetSystemLibrary.SphereOverlapActors
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_SphereOverlapActors(class UObject* WorldContextObject, const struct FVector& SpherePos, float SphereRadius, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, class UObject* ActorClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class AActor*>* OutActors);// sub_3D4CE30()

	// Function Engine.KismetSystemLibrary.ShowPlatformSpecificLeaderboardScreen
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ShowPlatformSpecificLeaderboardScreen(const struct FString& CategoryName);// sub_1E89E80()

	// Function Engine.KismetSystemLibrary.ShowPlatformSpecificAchievementsScreen
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ShowPlatformSpecificAchievementsScreen(class APlayerController* SpecificPlayer);// sub_4F7F6F0()

	// Function Engine.KismetSystemLibrary.ShowInterstitialAd
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ShowInterstitialAd();// sub_428340()

	// Function Engine.KismetSystemLibrary.ShowAdBanner
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ShowAdBanner(int AdIdIndex, unsigned char bShowOnBottomOfScreen);// sub_45AA20()

	// Function Engine.KismetSystemLibrary.SetWindowTitle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetWindowTitle(const struct FText& Title);// sub_760F40()

	// Function Engine.KismetSystemLibrary.SetVolumeButtonsHandledBySystem
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVolumeButtonsHandledBySystem(unsigned char bEnabled);// sub_571B9B0()

	// Function Engine.KismetSystemLibrary.SetVectorPropertyByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVectorPropertyByName(class UObject* Object, const struct FName& PropertyName, const struct FVector& Value);// sub_5F13ED0()

	// Function Engine.KismetSystemLibrary.SetUserActivity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetUserActivity(const struct FUserActivity& UserActivity);// sub_600CFD0()

	// Function Engine.KismetSystemLibrary.SetTransformPropertyByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTransformPropertyByName(class UObject* Object, const struct FName& PropertyName, const struct FTransform& Value);// sub_24C5690()

	// Function Engine.KismetSystemLibrary.SetTextPropertyByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTextPropertyByName(class UObject* Object, const struct FName& PropertyName, const struct FText& Value);// sub_1AE2040()

	// Function Engine.KismetSystemLibrary.SetSuppressViewportTransitionMessage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSuppressViewportTransitionMessage(class UObject* WorldContextObject, unsigned char bState);// sub_D32E50()

	// Function Engine.KismetSystemLibrary.SetStructurePropertyByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetStructurePropertyByName(class UObject* Object, const struct FName& PropertyName, const struct FGenericStruct& Value);// sub_F61050()

	// Function Engine.KismetSystemLibrary.SetStringPropertyByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetStringPropertyByName(class UObject* Object, const struct FName& PropertyName, const struct FString& Value);// sub_1CCD430()

	// Function Engine.KismetSystemLibrary.SetRotatorPropertyByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetRotatorPropertyByName(class UObject* Object, const struct FName& PropertyName, const struct FRotator& Value);// sub_4FFF220()

	// Function Engine.KismetSystemLibrary.SetObjectPropertyByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetObjectPropertyByName(class UObject* Object, const struct FName& PropertyName, class UObject* Value);// sub_8A7260()

	// Function Engine.KismetSystemLibrary.SetNamePropertyByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetNamePropertyByName(class UObject* Object, const struct FName& PropertyName, const struct FName& Value);// sub_1CFE520()

	// Function Engine.KismetSystemLibrary.SetLinearColorPropertyByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLinearColorPropertyByName(class UObject* Object, const struct FName& PropertyName, const struct FLinearColor& Value);// sub_391220()

	// Function Engine.KismetSystemLibrary.SetIntPropertyByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetIntPropertyByName(class UObject* Object, const struct FName& PropertyName, int Value);// sub_4474500()

	// Function Engine.KismetSystemLibrary.SetInterfacePropertyByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetInterfacePropertyByName(class UObject* Object, const struct FName& PropertyName, const TScriptInterface<class UInterface>& Value);// sub_3B5EE30()

	// Function Engine.KismetSystemLibrary.SetFloatPropertyByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetFloatPropertyByName(class UObject* Object, const struct FName& PropertyName, float Value);// sub_44A3C40()

	// Function Engine.KismetSystemLibrary.SetCollisionProfileNameProperty
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCollisionProfileNameProperty(class UObject* Object, const struct FName& PropertyName, const struct FCollisionProfileName& Value);// sub_F61050()

	// Function Engine.KismetSystemLibrary.SetClassPropertyByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetClassPropertyByName(class UObject* Object, const struct FName& PropertyName, class UObject* Value);// sub_8BD590()

	// Function Engine.KismetSystemLibrary.SetBytePropertyByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBytePropertyByName(class UObject* Object, const struct FName& PropertyName, unsigned char Value);// sub_118AE60()

	// Function Engine.KismetSystemLibrary.SetBoolPropertyByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBoolPropertyByName(class UObject* Object, const struct FName& PropertyName, unsigned char Value);// sub_48F50A0()

	// Function Engine.KismetSystemLibrary.SetAssetPropertyByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAssetPropertyByName(class UObject* Object, const struct FName& PropertyName, TAssetPtr<classUObject> Value);// sub_10BEA30()

	// Function Engine.KismetSystemLibrary.SetAssetClassPropertyByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAssetClassPropertyByName(class UObject* Object, const struct FName& PropertyName);// sub_579880()

	// Function Engine.KismetSystemLibrary.RetriggerableDelay
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RetriggerableDelay(class UObject* WorldContextObject, float Duration, const struct FLatentActionInfo& LatentInfo);// sub_23D5310()

	// Function Engine.KismetSystemLibrary.ResetGamepadAssignmentToController
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ResetGamepadAssignmentToController(int ControllerId);// sub_BD310()

	// Function Engine.KismetSystemLibrary.ResetGamepadAssignments
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ResetGamepadAssignments();// sub_143EE60()

	// Function Engine.KismetSystemLibrary.RegisterForRemoteNotifications
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RegisterForRemoteNotifications();// sub_3DB0460()

	// Function Engine.KismetSystemLibrary.QuitGame
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_QuitGame(class UObject* WorldContextObject, class APlayerController* SpecificPlayer, TEnumAsByte<EQuitPreference> QuitPreference);// sub_12A1C00()

	// Function Engine.KismetSystemLibrary.PrintWarning
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PrintWarning(const struct FString& inString);// sub_5636C40()

	// Function Engine.KismetSystemLibrary.PrintText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PrintText(class UObject* WorldContextObject, const struct FText& InText, unsigned char bPrintToScreen, unsigned char bPrintToLog, const struct FLinearColor& TextColor, float Duration);// sub_41F0520()

	// Function Engine.KismetSystemLibrary.PrintString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PrintString(class UObject* WorldContextObject, const struct FString& inString, unsigned char bPrintToScreen, unsigned char bPrintToLog, const struct FLinearColor& TextColor, float Duration);// sub_19F4B40()

	// DelegateFunction Engine.KismetSystemLibrary.OnAssetLoaded__DelegateSignature
	// (NetReliable, Exec, Event, NetMulticast, MulticastDelegate, Private, Protected, HasOutParms, BlueprintEvent)
	void OnAssetLoaded__DelegateSignature(class UObject* Loaded);// sub_5C67A0()

	// DelegateFunction Engine.KismetSystemLibrary.OnAssetClassLoaded__DelegateSignature
	// (NetReliable, Exec, Event, NetMulticast, MulticastDelegate, Private, Protected, HasOutParms, BlueprintEvent)
	void OnAssetClassLoaded__DelegateSignature(class UObject* Loaded);// sub_5C67A0()

	// Function Engine.KismetSystemLibrary.MoveComponentTo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_MoveComponentTo(class USceneComponent* Component, const struct FVector& TargetRelativeLocation, const struct FRotator& TargetRelativeRotation, unsigned char bEaseOut, unsigned char bEaseIn, float OverTime, unsigned char bForceShortestRotationPath, TEnumAsByte<EMoveComponentAction> MoveAction, const struct FLatentActionInfo& LatentInfo);// sub_41F0250()

	// Function Engine.KismetSystemLibrary.MakeLiteralText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_MakeLiteralText(const struct FText& Value);// sub_56AD8D0()

	// Function Engine.KismetSystemLibrary.MakeLiteralString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_MakeLiteralString(const struct FString& Value);// sub_1FD8AB0()

	// Function Engine.KismetSystemLibrary.MakeLiteralName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FName STATIC_MakeLiteralName(const struct FName& Value);// sub_88C000()

	// Function Engine.KismetSystemLibrary.MakeLiteralInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_MakeLiteralInt(int Value);// sub_3D96E00()

	// Function Engine.KismetSystemLibrary.MakeLiteralFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_MakeLiteralFloat(float Value);// sub_5524470()

	// Function Engine.KismetSystemLibrary.MakeLiteralByte
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_MakeLiteralByte(unsigned char Value);// sub_4F67EF0()

	// Function Engine.KismetSystemLibrary.MakeLiteralBool
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_MakeLiteralBool(unsigned char Value);// sub_90D130()

	// Function Engine.KismetSystemLibrary.LoadInterstitialAd
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_LoadInterstitialAd(int AdIdIndex);// sub_1B96390()

	// Function Engine.KismetSystemLibrary.LoadAssetClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_LoadAssetClass(class UObject* WorldContextObject, const struct FScriptDelegate& OnLoaded, const struct FLatentActionInfo& LatentInfo);// sub_186B310()

	// Function Engine.KismetSystemLibrary.LoadAsset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_LoadAsset(class UObject* WorldContextObject, TAssetPtr<classUObject> Asset, const struct FScriptDelegate& OnLoaded, const struct FLatentActionInfo& LatentInfo);// sub_50F4D40()

	// Function Engine.KismetSystemLibrary.LineTraceSingleForObjects
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_LineTraceSingleForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, struct FHitResult* OutHit);// sub_D16C0()

	// Function Engine.KismetSystemLibrary.LineTraceSingleByProfile
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_LineTraceSingleByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FName& ProfileName, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, struct FHitResult* OutHit);// sub_4B13AB0()

	// Function Engine.KismetSystemLibrary.LineTraceSingle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_LineTraceSingle(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, TEnumAsByte<ETraceTypeQuery> TraceChannel, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, struct FHitResult* OutHit);// sub_3DE2C80()

	// Function Engine.KismetSystemLibrary.LineTraceMultiForObjects
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_LineTraceMultiForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, TArray<struct FHitResult>* OutHits);// sub_510C020()

	// Function Engine.KismetSystemLibrary.LineTraceMultiByProfile
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_LineTraceMultiByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FName& ProfileName, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, TArray<struct FHitResult>* OutHits);// sub_5F13AD0()

	// Function Engine.KismetSystemLibrary.LineTraceMulti
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_LineTraceMulti(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, TEnumAsByte<ETraceTypeQuery> TraceChannel, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, TArray<struct FHitResult>* OutHits);// sub_1854260()

	// Function Engine.KismetSystemLibrary.LaunchURL
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_LaunchURL(const struct FString& URL);// sub_52F040()

	// Function Engine.KismetSystemLibrary.K2_UnPauseTimerHandle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_UnPauseTimerHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);// sub_2AB620()

	// Function Engine.KismetSystemLibrary.K2_UnPauseTimerDelegate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_UnPauseTimerDelegate(const struct FScriptDelegate& Delegate);// sub_55DF090()

	// Function Engine.KismetSystemLibrary.K2_UnPauseTimer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_UnPauseTimer(class UObject* Object, const struct FString& FunctionName);// sub_3B1A7D0()

	// Function Engine.KismetSystemLibrary.K2_TimerExistsHandle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_TimerExistsHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);// sub_4E97F70()

	// Function Engine.KismetSystemLibrary.K2_TimerExistsDelegate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_TimerExistsDelegate(const struct FScriptDelegate& Delegate);// sub_28DEB0()

	// Function Engine.KismetSystemLibrary.K2_TimerExists
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_TimerExists(class UObject* Object, const struct FString& FunctionName);// sub_7E6190()

	// Function Engine.KismetSystemLibrary.K2_SetTimerDelegate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTimerHandle STATIC_K2_SetTimerDelegate(const struct FScriptDelegate& Delegate, float Time, unsigned char bLooping);// sub_48C3D10()

	// Function Engine.KismetSystemLibrary.K2_SetTimer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTimerHandle STATIC_K2_SetTimer(class UObject* Object, const struct FString& FunctionName, float Time, unsigned char bLooping);// sub_42E2790()

	// Function Engine.KismetSystemLibrary.K2_PauseTimerHandle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_PauseTimerHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);// sub_20FCBF0()

	// Function Engine.KismetSystemLibrary.K2_PauseTimerDelegate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_PauseTimerDelegate(const struct FScriptDelegate& Delegate);// sub_4B2BAE0()

	// Function Engine.KismetSystemLibrary.K2_PauseTimer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_PauseTimer(class UObject* Object, const struct FString& FunctionName);// sub_131FE90()

	// Function Engine.KismetSystemLibrary.K2_IsValidTimerHandle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_IsValidTimerHandle(const struct FTimerHandle& Handle);// sub_2AB5A0()

	// Function Engine.KismetSystemLibrary.K2_IsTimerPausedHandle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_IsTimerPausedHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);// sub_5A37970()

	// Function Engine.KismetSystemLibrary.K2_IsTimerPausedDelegate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_IsTimerPausedDelegate(const struct FScriptDelegate& Delegate);// sub_180A730()

	// Function Engine.KismetSystemLibrary.K2_IsTimerPaused
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_IsTimerPaused(class UObject* Object, const struct FString& FunctionName);// sub_6050C0()

	// Function Engine.KismetSystemLibrary.K2_IsTimerActiveHandle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_IsTimerActiveHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);// sub_1DE760()

	// Function Engine.KismetSystemLibrary.K2_IsTimerActiveDelegate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_IsTimerActiveDelegate(const struct FScriptDelegate& Delegate);// sub_53C5EF0()

	// Function Engine.KismetSystemLibrary.K2_IsTimerActive
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_IsTimerActive(class UObject* Object, const struct FString& FunctionName);// sub_5D770C0()

	// Function Engine.KismetSystemLibrary.K2_InvalidateTimerHandle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTimerHandle STATIC_K2_InvalidateTimerHandle(struct FTimerHandle* Handle);// sub_53444D0()

	// Function Engine.KismetSystemLibrary.K2_GetTimerRemainingTimeHandle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_K2_GetTimerRemainingTimeHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);// sub_48170C0()

	// Function Engine.KismetSystemLibrary.K2_GetTimerRemainingTimeDelegate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_K2_GetTimerRemainingTimeDelegate(const struct FScriptDelegate& Delegate);// sub_4B2850()

	// Function Engine.KismetSystemLibrary.K2_GetTimerRemainingTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_K2_GetTimerRemainingTime(class UObject* Object, const struct FString& FunctionName);// sub_3B31F60()

	// Function Engine.KismetSystemLibrary.K2_GetTimerElapsedTimeHandle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_K2_GetTimerElapsedTimeHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);// sub_9442A0()

	// Function Engine.KismetSystemLibrary.K2_GetTimerElapsedTimeDelegate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_K2_GetTimerElapsedTimeDelegate(const struct FScriptDelegate& Delegate);// sub_22C2790()

	// Function Engine.KismetSystemLibrary.K2_GetTimerElapsedTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_K2_GetTimerElapsedTime(class UObject* Object, const struct FString& FunctionName);// sub_5FDDA30()

	// Function Engine.KismetSystemLibrary.K2_ClearTimerHandle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_ClearTimerHandle(class UObject* WorldContextObject, const struct FTimerHandle& Handle);// sub_221B610()

	// Function Engine.KismetSystemLibrary.K2_ClearTimerDelegate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_ClearTimerDelegate(const struct FScriptDelegate& Delegate);// sub_43DE790()

	// Function Engine.KismetSystemLibrary.K2_ClearTimer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_ClearTimer(class UObject* Object, const struct FString& FunctionName);// sub_7FF290()

	// Function Engine.KismetSystemLibrary.K2_ClearAndInvalidateTimerHandle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_ClearAndInvalidateTimerHandle(class UObject* WorldContextObject, struct FTimerHandle* Handle);// sub_197A7F0()

	// Function Engine.KismetSystemLibrary.IsValidClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsValidClass(class UObject* Class);// sub_1E57080()

	// Function Engine.KismetSystemLibrary.IsValid
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsValid(class UObject* Object);// sub_612C980()

	// Function Engine.KismetSystemLibrary.IsStandalone
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsStandalone(class UObject* WorldContextObject);// sub_4F42D90()

	// Function Engine.KismetSystemLibrary.IsServer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsServer(class UObject* WorldContextObject);// sub_53003A0()

	// Function Engine.KismetSystemLibrary.IsPackagedForDistribution
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsPackagedForDistribution();// sub_927C80()

	// Function Engine.KismetSystemLibrary.IsLoggedIn
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsLoggedIn(class APlayerController* SpecificPlayer);// sub_2291440()

	// Function Engine.KismetSystemLibrary.IsInterstitialAdRequested
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsInterstitialAdRequested();// sub_22D6F20()

	// Function Engine.KismetSystemLibrary.IsInterstitialAdAvailable
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsInterstitialAdAvailable();// sub_1BB18B0()

	// Function Engine.KismetSystemLibrary.IsDedicatedServer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsDedicatedServer(class UObject* WorldContextObject);// sub_5F43A50()

	// Function Engine.KismetSystemLibrary.IsControllerAssignedToGamepad
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsControllerAssignedToGamepad(int ControllerId);// sub_1AC61F0()

	// Function Engine.KismetSystemLibrary.HideAdBanner
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_HideAdBanner();// sub_EC1A0()

	// Function Engine.KismetSystemLibrary.GetVolumeButtonsHandledBySystem
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetVolumeButtonsHandledBySystem();// sub_927C80()

	// Function Engine.KismetSystemLibrary.GetUniqueDeviceId
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetUniqueDeviceId();// sub_443EAE0()

	// Function Engine.KismetSystemLibrary.GetSupportedFullscreenResolutions
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetSupportedFullscreenResolutions(TArray<struct FIntPoint>* Resolutions);// sub_624F700()

	// Function Engine.KismetSystemLibrary.GetRenderingMaterialQualityLevel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetRenderingMaterialQualityLevel();// sub_4278220()

	// Function Engine.KismetSystemLibrary.GetRenderingDetailMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetRenderingDetailMode();// sub_432FA40()

	// Function Engine.KismetSystemLibrary.GetPreferredLanguages
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TArray<struct FString> STATIC_GetPreferredLanguages();// sub_41D6280()

	// Function Engine.KismetSystemLibrary.GetPlatformUserName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetPlatformUserName();// sub_5C95360()

	// Function Engine.KismetSystemLibrary.GetPathName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetPathName(class UObject* Object);// sub_18B9990()

	// Function Engine.KismetSystemLibrary.GetObjectName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetObjectName(class UObject* Object);// sub_72E5E0()

	// Function Engine.KismetSystemLibrary.GetMinYResolutionForUI
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetMinYResolutionForUI();// sub_5BBF200()

	// Function Engine.KismetSystemLibrary.GetMinYResolutionFor3DView
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetMinYResolutionFor3DView();// sub_21CA2F0()

	// Function Engine.KismetSystemLibrary.GetLocalCurrencySymbol
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetLocalCurrencySymbol();// sub_21134C0()

	// Function Engine.KismetSystemLibrary.GetLocalCurrencyCode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetLocalCurrencyCode();// sub_612C8F0()

	// Function Engine.KismetSystemLibrary.GetGameTimeInSeconds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetGameTimeInSeconds(class UObject* WorldContextObject);// sub_238A3F0()

	// Function Engine.KismetSystemLibrary.GetGameName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetGameName();// sub_1FA2D50()

	// Function Engine.KismetSystemLibrary.GetGameBundleId
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetGameBundleId();// sub_3A5FA0()

	// Function Engine.KismetSystemLibrary.GetEngineVersion
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetEngineVersion();// sub_5222EA0()

	// Function Engine.KismetSystemLibrary.GetDisplayName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetDisplayName(class UObject* Object);// sub_390FC0()

	// Function Engine.KismetSystemLibrary.GetDeviceId
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetDeviceId();// sub_616B250()

	// Function Engine.KismetSystemLibrary.GetDefaultLocale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetDefaultLocale();// sub_2356BE0()

	// Function Engine.KismetSystemLibrary.GetConvenientWindowedResolutions
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetConvenientWindowedResolutions(TArray<struct FIntPoint>* Resolutions);// sub_5222DF0()

	// Function Engine.KismetSystemLibrary.GetComponentBounds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetComponentBounds(class USceneComponent* Component, struct FVector* Origin, struct FVector* BoxExtent, float* SphereRadius);// sub_52EEE0()

	// Function Engine.KismetSystemLibrary.GetCommandLine
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetCommandLine();// sub_3E77830()

	// Function Engine.KismetSystemLibrary.GetClassDisplayName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetClassDisplayName(class UObject* Class);// sub_45A900()

	// Function Engine.KismetSystemLibrary.GetAdIDCount
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetAdIDCount();// sub_5F2A640()

	// Function Engine.KismetSystemLibrary.GetActorListFromComponentList
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetActorListFromComponentList(TArray<class UPrimitiveComponent*> ComponentList, class UObject* ActorClassFilter, TArray<class AActor*>* OutActorList);// sub_1F5A260()

	// Function Engine.KismetSystemLibrary.GetActorBounds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetActorBounds(class AActor* Actor, struct FVector* Origin, struct FVector* BoxExtent);// sub_4AE7490()

	// Function Engine.KismetSystemLibrary.ForceCloseAdBanner
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ForceCloseAdBanner();// sub_15B2080()

	// Function Engine.KismetSystemLibrary.FlushPersistentDebugLines
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_FlushPersistentDebugLines(class UObject* WorldContextObject);// sub_133E490()

	// Function Engine.KismetSystemLibrary.FlushDebugStrings
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_FlushDebugStrings(class UObject* WorldContextObject);// sub_133E490()

	// Function Engine.KismetSystemLibrary.ExecuteConsoleCommand
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ExecuteConsoleCommand(class UObject* WorldContextObject, const struct FString& Command, class APlayerController* SpecificPlayer);// sub_5238B80()

	// Function Engine.KismetSystemLibrary.DrawDebugString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawDebugString(class UObject* WorldContextObject, const struct FVector& TextLocation, const struct FString& Text, class AActor* TestBaseActor, const struct FLinearColor& TextColor, float Duration);// sub_1A8BB40()

	// Function Engine.KismetSystemLibrary.DrawDebugSphere
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawDebugSphere(class UObject* WorldContextObject, const struct FVector& Center, float Radius, int Segments, const struct FLinearColor& LineColor, float Duration, float Thickness);// sub_1AA8A90()

	// Function Engine.KismetSystemLibrary.DrawDebugPoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawDebugPoint(class UObject* WorldContextObject, const struct FVector& Position, float Size, const struct FLinearColor& PointColor, float Duration);// sub_5F786A0()

	// Function Engine.KismetSystemLibrary.DrawDebugPlane
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawDebugPlane(class UObject* WorldContextObject, const struct FPlane& PlaneCoordinates, const struct FVector& Location, float Size, const struct FLinearColor& PlaneColor, float Duration);// sub_19F4970()

	// Function Engine.KismetSystemLibrary.DrawDebugLine
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawDebugLine(class UObject* WorldContextObject, const struct FVector& LineStart, const struct FVector& LineEnd, const struct FLinearColor& LineColor, float Duration, float Thickness);// sub_616B070()

	// Function Engine.KismetSystemLibrary.DrawDebugFrustum
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawDebugFrustum(class UObject* WorldContextObject, const struct FTransform& FrustumTransform, const struct FLinearColor& FrustumColor, float Duration, float Thickness);// sub_40436A0()

	// Function Engine.KismetSystemLibrary.DrawDebugFloatHistoryTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawDebugFloatHistoryTransform(class UObject* WorldContextObject, const struct FDebugFloatHistory& FloatHistory, const struct FTransform& DrawTransform, const struct FVector2D& DrawSize, const struct FLinearColor& DrawColor, float Duration);// sub_4BDB170()

	// Function Engine.KismetSystemLibrary.DrawDebugFloatHistoryLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawDebugFloatHistoryLocation(class UObject* WorldContextObject, const struct FDebugFloatHistory& FloatHistory, const struct FVector& DrawLocation, const struct FVector2D& DrawSize, const struct FLinearColor& DrawColor, float Duration);// sub_5BBEF70()

	// Function Engine.KismetSystemLibrary.DrawDebugCylinder
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawDebugCylinder(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, int Segments, const struct FLinearColor& LineColor, float Duration, float Thickness);// sub_90CEE0()

	// Function Engine.KismetSystemLibrary.DrawDebugCoordinateSystem
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawDebugCoordinateSystem(class UObject* WorldContextObject, const struct FVector& AxisLoc, const struct FRotator& AxisRot, float Scale, float Duration, float Thickness);// sub_11D4510()

	// Function Engine.KismetSystemLibrary.DrawDebugConeInDegrees
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawDebugConeInDegrees(class UObject* WorldContextObject, const struct FVector& Origin, const struct FVector& Direction, float Length, float AngleWidth, float AngleHeight, int NumSides, const struct FLinearColor& LineColor, float Duration, float Thickness);// sub_F7C400()

	// Function Engine.KismetSystemLibrary.DrawDebugCone
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawDebugCone(class UObject* WorldContextObject, const struct FVector& Origin, const struct FVector& Direction, float Length, float AngleWidth, float AngleHeight, int NumSides, const struct FLinearColor& LineColor, float Duration, float Thickness);// sub_3CD67B0()

	// Function Engine.KismetSystemLibrary.DrawDebugCircle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawDebugCircle(class UObject* WorldContextObject, const struct FVector& Center, float Radius, int NumSegments, const struct FLinearColor& LineColor, float Duration, float Thickness, const struct FVector& YAxis, const struct FVector& ZAxis, unsigned char bDrawAxis);// sub_1796E20()

	// Function Engine.KismetSystemLibrary.DrawDebugCapsule
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawDebugCapsule(class UObject* WorldContextObject, const struct FVector& Center, float HalfHeight, float Radius, const struct FRotator& Rotation, const struct FLinearColor& LineColor, float Duration, float Thickness);// sub_5A375A0()

	// Function Engine.KismetSystemLibrary.DrawDebugCamera
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawDebugCamera(class ACameraActor* CameraActor, const struct FLinearColor& CameraColor, float Duration);// sub_3FDE560()

	// Function Engine.KismetSystemLibrary.DrawDebugBox
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawDebugBox(class UObject* WorldContextObject, const struct FVector& Center, const struct FVector& Extent, const struct FLinearColor& LineColor, const struct FRotator& Rotation, float Duration, float Thickness);// sub_1C472F0()

	// Function Engine.KismetSystemLibrary.DrawDebugArrow
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawDebugArrow(class UObject* WorldContextObject, const struct FVector& LineStart, const struct FVector& LineEnd, float ArrowSize, const struct FLinearColor& LineColor, float Duration, float Thickness);// sub_47C3530()

	// Function Engine.KismetSystemLibrary.DoesImplementInterface
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_DoesImplementInterface(class UObject* TestObject, class UInterface* Interface);// sub_16ABC30()

	// Function Engine.KismetSystemLibrary.Delay
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Delay(class UObject* WorldContextObject, float Duration, const struct FLatentActionInfo& LatentInfo);// sub_4C784D0()

	// Function Engine.KismetSystemLibrary.CreateCopyForUndoBuffer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_CreateCopyForUndoBuffer(class UObject* ObjectToModify);// sub_5619940()

	// Function Engine.KismetSystemLibrary.Conv_InterfaceToObject
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UObject* STATIC_Conv_InterfaceToObject(const TScriptInterface<class UInterface>& Interface);// sub_4ED92A0()

	// Function Engine.KismetSystemLibrary.Conv_AssetToObject
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UObject* STATIC_Conv_AssetToObject(TAssetPtr<classUObject> Asset);// sub_1415B60()

	// Function Engine.KismetSystemLibrary.Conv_AssetClassToClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UObject* STATIC_Conv_AssetClassToClass();// sub_CB1C50()

	// Function Engine.KismetSystemLibrary.ControlScreensaver
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ControlScreensaver(unsigned char bAllowScreenSaver);// sub_405A570()

	// Function Engine.KismetSystemLibrary.ComponentOverlapComponents
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_ComponentOverlapComponents(class UPrimitiveComponent* Component, const struct FTransform& ComponentTransform, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, class UObject* ComponentClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class UPrimitiveComponent*>* OutComponents);// sub_5EC6FB0()

	// Function Engine.KismetSystemLibrary.ComponentOverlapActors
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_ComponentOverlapActors(class UPrimitiveComponent* Component, const struct FTransform& ComponentTransform, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, class UObject* ActorClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class AActor*>* OutActors);// sub_241590()

	// Function Engine.KismetSystemLibrary.CollectGarbage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_CollectGarbage();// sub_10F3AE0()

	// Function Engine.KismetSystemLibrary.CapsuleTraceSingleForObjects
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_CapsuleTraceSingleForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, struct FHitResult* OutHit);// sub_5AD8D40()

	// Function Engine.KismetSystemLibrary.CapsuleTraceSingleByProfile
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_CapsuleTraceSingleByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, const struct FName& ProfileName, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, struct FHitResult* OutHit);// sub_1CCCE10()

	// Function Engine.KismetSystemLibrary.CapsuleTraceSingle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_CapsuleTraceSingle(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, TEnumAsByte<ETraceTypeQuery> TraceChannel, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, struct FHitResult* OutHit);// sub_3FBE170()

	// Function Engine.KismetSystemLibrary.CapsuleTraceMultiForObjects
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_CapsuleTraceMultiForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, TArray<struct FHitResult>* OutHits);// sub_5222950()

	// Function Engine.KismetSystemLibrary.CapsuleTraceMultiByProfile
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_CapsuleTraceMultiByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, const struct FName& ProfileName, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, TArray<struct FHitResult>* OutHits);// sub_4816C40()

	// Function Engine.KismetSystemLibrary.CapsuleTraceMulti
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_CapsuleTraceMulti(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, TEnumAsByte<ETraceTypeQuery> TraceChannel, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, TArray<struct FHitResult>* OutHits);// sub_4D32DF0()

	// Function Engine.KismetSystemLibrary.CapsuleOverlapComponents
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_CapsuleOverlapComponents(class UObject* WorldContextObject, const struct FVector& CapsulePos, float Radius, float HalfHeight, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, class UObject* ComponentClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class UPrimitiveComponent*>* OutComponents);// sub_612C530()

	// Function Engine.KismetSystemLibrary.CapsuleOverlapActors
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_CapsuleOverlapActors(class UObject* WorldContextObject, const struct FVector& CapsulePos, float Radius, float HalfHeight, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, class UObject* ActorClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class AActor*>* OutActors);// sub_1172E10()

	// Function Engine.KismetSystemLibrary.CanLaunchURL
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_CanLaunchURL(const struct FString& URL);// sub_4CE240()

	// Function Engine.KismetSystemLibrary.BoxTraceSingleForObjects
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BoxTraceSingleForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, struct FHitResult* OutHit);// sub_390B00()

	// Function Engine.KismetSystemLibrary.BoxTraceSingleByProfile
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BoxTraceSingleByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, const struct FName& ProfileName, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, struct FHitResult* OutHit);// sub_D87BF0()

	// Function Engine.KismetSystemLibrary.BoxTraceSingle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BoxTraceSingle(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, TEnumAsByte<ETraceTypeQuery> TraceChannel, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, struct FHitResult* OutHit);// sub_14D5190()

	// Function Engine.KismetSystemLibrary.BoxTraceMultiForObjects
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BoxTraceMultiForObjects(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, TArray<struct FHitResult>* OutHits);// sub_2171FA0()

	// Function Engine.KismetSystemLibrary.BoxTraceMultiByProfile
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BoxTraceMultiByProfile(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, const struct FName& ProfileName, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, TArray<struct FHitResult>* OutHits);// sub_54B0380()

	// Function Engine.KismetSystemLibrary.BoxTraceMulti
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BoxTraceMulti(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, const struct FVector& HalfSize, const struct FRotator& Orientation, TEnumAsByte<ETraceTypeQuery> TraceChannel, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, unsigned char bIgnoreSelf, const struct FLinearColor& TraceColor, const struct FLinearColor& TraceHitColor, float DrawTime, TArray<struct FHitResult>* OutHits);// sub_546DD90()

	// Function Engine.KismetSystemLibrary.BoxOverlapComponents
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BoxOverlapComponents(class UObject* WorldContextObject, const struct FVector& BoxPos, const struct FVector& Extent, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, class UObject* ComponentClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class UPrimitiveComponent*>* OutComponents);// sub_746790()

	// Function Engine.KismetSystemLibrary.BoxOverlapActors
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BoxOverlapActors(class UObject* WorldContextObject, const struct FVector& BoxPos, const struct FVector& BoxExtent, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, class UObject* ActorClassFilter, TArray<class AActor*> ActorsToIgnore, TArray<class AActor*>* OutActors);// sub_60F80C0()

	// Function Engine.KismetSystemLibrary.AddFloatHistorySample
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FDebugFloatHistory STATIC_AddFloatHistorySample(float Value, const struct FDebugFloatHistory& FloatHistory);// sub_126C780()


}


//Class Engine.GameplayStatics
//0x0000 (0x0040 - 0x0040)
class UGameplayStatics : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.GameplayStatics.UnloadStreamLevel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_UnloadStreamLevel(class UObject* WorldContextObject, const struct FName& LevelName, const struct FLatentActionInfo& LatentInfo);// sub_419FBD0()

	// Function Engine.GameplayStatics.SuggestProjectileVelocity_CustomArc
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_SuggestProjectileVelocity_CustomArc(class UObject* WorldContextObject, const struct FVector& StartPos, const struct FVector& EndPos, float OverrideGravityZ, float ArcParam, struct FVector* OutLaunchVelocity);// sub_5C65C0()

	// Function Engine.GameplayStatics.SpawnSoundAttached
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UAudioComponent* STATIC_SpawnSoundAttached(class USoundBase* Sound, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<EAttachLocation> LocationType, unsigned char bStopWhenAttachedToDestroyed, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings, unsigned char bAutoDestroy);// sub_157CDD0()

	// Function Engine.GameplayStatics.SpawnSoundAtLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UAudioComponent* STATIC_SpawnSoundAtLocation(class UObject* WorldContextObject, class USoundBase* Sound, const struct FVector& Location, const struct FRotator& Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings, unsigned char bAutoDestroy);// sub_F31560()

	// Function Engine.GameplayStatics.SpawnSound2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UAudioComponent* STATIC_SpawnSound2D(class UObject* WorldContextObject, class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundConcurrency* ConcurrencySettings, unsigned char bPersistAcrossLevelTransition, unsigned char bAutoDestroy);// sub_3F20B60()

	// Function Engine.GameplayStatics.SpawnObject
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UObject* STATIC_SpawnObject(class UObject* ObjectClass, class UObject* Outer);// sub_363610()

	// Function Engine.GameplayStatics.SpawnForceFeedbackAttached
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UForceFeedbackComponent* STATIC_SpawnForceFeedbackAttached(class UForceFeedbackEffect* ForceFeedbackEffect, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<EAttachLocation> LocationType, unsigned char bStopWhenAttachedToDestroyed, unsigned char bLooping, float IntensityMultiplier, float StartTime, class UForceFeedbackAttenuation* AttenuationSettings, unsigned char bAutoDestroy);// sub_4392BB0()

	// Function Engine.GameplayStatics.SpawnForceFeedbackAtLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UForceFeedbackComponent* STATIC_SpawnForceFeedbackAtLocation(class UObject* WorldContextObject, class UForceFeedbackEffect* ForceFeedbackEffect, const struct FVector& Location, const struct FRotator& Rotation, unsigned char bLooping, float IntensityMultiplier, float StartTime, class UForceFeedbackAttenuation* AttenuationSettings, unsigned char bAutoDestroy);// sub_5BBF3F0()

	// Function Engine.GameplayStatics.SpawnEmitterAttached
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UParticleSystemComponent* STATIC_SpawnEmitterAttached(class UParticleSystem* EmitterTemplate, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<EAttachLocation> LocationType, unsigned char bAutoDestroy);// sub_1597A30()

	// Function Engine.GameplayStatics.SpawnEmitterAtLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UParticleSystemComponent* STATIC_SpawnEmitterAtLocation(class UObject* WorldContextObject, class UParticleSystem* EmitterTemplate, const struct FVector& Location, const struct FRotator& Rotation, unsigned char bAutoDestroy);// sub_14A10B0()

	// Function Engine.GameplayStatics.SpawnDialogueAttached
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UAudioComponent* STATIC_SpawnDialogueAttached(class UDialogueWave* Dialogue, const struct FDialogueContext& Context, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<EAttachLocation> LocationType, unsigned char bStopWhenAttachedToDestroyed, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, unsigned char bAutoDestroy);// sub_256210()

	// Function Engine.GameplayStatics.SpawnDialogueAtLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UAudioComponent* STATIC_SpawnDialogueAtLocation(class UObject* WorldContextObject, class UDialogueWave* Dialogue, const struct FDialogueContext& Context, const struct FVector& Location, const struct FRotator& Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, unsigned char bAutoDestroy);// sub_4185920()

	// Function Engine.GameplayStatics.SpawnDialogue2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UAudioComponent* STATIC_SpawnDialogue2D(class UObject* WorldContextObject, class UDialogueWave* Dialogue, const struct FDialogueContext& Context, float VolumeMultiplier, float PitchMultiplier, float StartTime, unsigned char bAutoDestroy);// sub_FF79D0()

	// Function Engine.GameplayStatics.SpawnDecalAttached
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UDecalComponent* STATIC_SpawnDecalAttached(class UMaterialInterface* DecalMaterial, const struct FVector& DecalSize, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, const struct FVector& Location, const struct FRotator& Rotation, TEnumAsByte<EAttachLocation> LocationType, float LifeSpan);// sub_44EEC10()

	// Function Engine.GameplayStatics.SpawnDecalAtLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UDecalComponent* STATIC_SpawnDecalAtLocation(class UObject* WorldContextObject, class UMaterialInterface* DecalMaterial, const struct FVector& DecalSize, const struct FVector& Location, const struct FRotator& Rotation, float LifeSpan);// sub_180A8E0()

	// Function Engine.GameplayStatics.SetWorldOriginLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetWorldOriginLocation(class UObject* WorldContextObject, const struct FIntVector& NewLocation);// sub_4314040()

	// Function Engine.GameplayStatics.SetSubtitlesEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSubtitlesEnabled(unsigned char bEnabled);// sub_5A6E5F0()

	// Function Engine.GameplayStatics.SetSoundMixClassOverride
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSoundMixClassOverride(class UObject* WorldContextObject, class USoundMix* InSoundMixModifier, class USoundClass* InSoundClass, float Volume, float Pitch, float FadeInTime, unsigned char bApplyToChildren);// sub_1DE820()

	// Function Engine.GameplayStatics.SetPlayerControllerID
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPlayerControllerID(class APlayerController* Player, int ControllerId);// sub_1F89450()

	// Function Engine.GameplayStatics.SetGlobalTimeDilation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetGlobalTimeDilation(class UObject* WorldContextObject, float TimeDilation);// sub_4474440()

	// Function Engine.GameplayStatics.SetGlobalPitchModulation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetGlobalPitchModulation(class UObject* WorldContextObject, float PitchModulation, float TimeSec);// sub_4776780()

	// Function Engine.GameplayStatics.SetGlobalListenerFocusParameters
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetGlobalListenerFocusParameters(class UObject* WorldContextObject, float FocusAzimuthScale, float NonFocusAzimuthScale, float FocusDistanceScale, float NonFocusDistanceScale, float FocusVolumeScale, float NonFocusVolumeScale, float FocusPriorityScale, float NonFocusPriorityScale);// sub_19ABD00()

	// Function Engine.GameplayStatics.SetGamePaused
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_SetGamePaused(class UObject* WorldContextObject, unsigned char bPaused);// sub_CCBED0()

	// Function Engine.GameplayStatics.SetBaseSoundMix
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBaseSoundMix(class UObject* WorldContextObject, class USoundMix* InSoundMix);// sub_4474390()

	// Function Engine.GameplayStatics.SaveGameToSlot
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_SaveGameToSlot(class USaveGame* SaveGameObject, const struct FString& SlotName, int UserIndex);// sub_FC8770()

	// Function Engine.GameplayStatics.RemovePlayer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RemovePlayer(class APlayerController* Player, unsigned char bDestroyPawn);// sub_1CCD2A0()

	// Function Engine.GameplayStatics.RebaseZeroOriginOntoLocal
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_RebaseZeroOriginOntoLocal(class UObject* WorldContextObject, const struct FVector& WorldLocation);// sub_600CEF0()

	// Function Engine.GameplayStatics.RebaseLocalOriginOntoZero
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_RebaseLocalOriginOntoZero(class UObject* WorldContextObject, const struct FVector& WorldLocation);// sub_E7CBD0()

	// Function Engine.GameplayStatics.PushSoundMixModifier
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PushSoundMixModifier(class UObject* WorldContextObject, class USoundMix* InSoundMixModifier);// sub_5A9AE20()

	// Function Engine.GameplayStatics.ProjectWorldToScreen
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_ProjectWorldToScreen(class APlayerController* Player, const struct FVector& WorldPosition, unsigned char bPlayerViewportRelative, struct FVector2D* ScreenPosition);// sub_15978E0()

	// Function Engine.GameplayStatics.PopSoundMixModifier
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PopSoundMixModifier(class UObject* WorldContextObject, class USoundMix* InSoundMixModifier);// sub_478E9A0()

	// Function Engine.GameplayStatics.PlayWorldCameraShake
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PlayWorldCameraShake(class UObject* WorldContextObject, class UCameraShake* Shake, const struct FVector& Epicenter, float InnerRadius, float OuterRadius, float Falloff, unsigned char bOrientShakeTowardsEpicenter);// sub_45C6170()

	// Function Engine.GameplayStatics.PlaySoundAtLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PlaySoundAtLocation(class UObject* WorldContextObject, class USoundBase* Sound, const struct FVector& Location, const struct FRotator& Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings, class USoundConcurrency* ConcurrencySettings);// sub_1FB7E50()

	// Function Engine.GameplayStatics.PlaySound2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PlaySound2D(class UObject* WorldContextObject, class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundConcurrency* ConcurrencySettings);// sub_CCBD20()

	// Function Engine.GameplayStatics.PlayDialogueAtLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PlayDialogueAtLocation(class UObject* WorldContextObject, class UDialogueWave* Dialogue, const struct FDialogueContext& Context, const struct FVector& Location, const struct FRotator& Rotation, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundAttenuation* AttenuationSettings);// sub_4421A0()

	// Function Engine.GameplayStatics.PlayDialogue2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PlayDialogue2D(class UObject* WorldContextObject, class UDialogueWave* Dialogue, const struct FDialogueContext& Context, float VolumeMultiplier, float PitchMultiplier, float StartTime);// sub_3BB960()

	// Function Engine.GameplayStatics.ParseOption
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_ParseOption(const struct FString& Options, const struct FString& Key);// sub_55F85A0()

	// Function Engine.GameplayStatics.OpenLevel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OpenLevel(class UObject* WorldContextObject, const struct FName& LevelName, unsigned char bAbsolute, const struct FString& Options);// sub_5483CD0()

	// Function Engine.GameplayStatics.MakeHitResult
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FHitResult STATIC_MakeHitResult(unsigned char bBlockingHit, unsigned char bInitialOverlap, float Time, const struct FVector& Location, const struct FVector& ImpactPoint, const struct FVector& Normal, const struct FVector& ImpactNormal, class UPhysicalMaterial* PhysMat, class AActor* HitActor, class UPrimitiveComponent* HitComponent, const struct FName& HitBoneName, int HitItem, int FaceIndex, const struct FVector& TraceStart, const struct FVector& TraceEnd);// sub_55CAAF0()

	// Function Engine.GameplayStatics.LoadStreamLevel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_LoadStreamLevel(class UObject* WorldContextObject, const struct FName& LevelName, unsigned char bMakeVisibleAfterLoad, unsigned char bShouldBlockOnLoad, const struct FLatentActionInfo& LatentInfo);// sub_487A2D0()

	// Function Engine.GameplayStatics.LoadGameFromSlot
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class USaveGame* STATIC_LoadGameFromSlot(const struct FString& SlotName, int UserIndex);// sub_45C6090()

	// Function Engine.GameplayStatics.IsGamePaused
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsGamePaused(class UObject* WorldContextObject);// sub_3E779E0()

	// Function Engine.GameplayStatics.HasOption
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_HasOption(const struct FString& Options, const struct FString& InKey);// sub_53AF610()

	// Function Engine.GameplayStatics.HasLaunchOption
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_HasLaunchOption(const struct FString& OptionToCheck);// sub_45FD0E0()

	// Function Engine.GameplayStatics.GrassOverlappingSphereCount
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GrassOverlappingSphereCount(class UObject* WorldContextObject, class UStaticMesh* StaticMesh, const struct FVector& CenterPosition, float Radius);// sub_66D680()

	// Function Engine.GameplayStatics.GetWorldOriginLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FIntVector STATIC_GetWorldOriginLocation(class UObject* WorldContextObject);// sub_4D88060()

	// Function Engine.GameplayStatics.GetWorldDeltaSeconds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetWorldDeltaSeconds(class UObject* WorldContextObject);// sub_5E7FA70()

	// Function Engine.GameplayStatics.GetUnpausedTimeSeconds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetUnpausedTimeSeconds(class UObject* WorldContextObject);// sub_1B96300()

	// Function Engine.GameplayStatics.GetTimeSeconds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetTimeSeconds(class UObject* WorldContextObject);// sub_4E38910()

	// Function Engine.GameplayStatics.GetSurfaceType
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TEnumAsByte<EPhysicalSurface> STATIC_GetSurfaceType(const struct FHitResult& Hit);// sub_4EF0650()

	// Function Engine.GameplayStatics.GetStreamingLevel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class ULevelStreaming* STATIC_GetStreamingLevel(class UObject* WorldContextObject, const struct FName& PackageName);// sub_3DAC70()

	// Function Engine.GameplayStatics.GetRealTimeSeconds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetRealTimeSeconds(class UObject* WorldContextObject);// sub_55B8160()

	// Function Engine.GameplayStatics.GetPlayerPawn
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class APawn* STATIC_GetPlayerPawn(class UObject* WorldContextObject, int PlayerIndex);// sub_5E697A0()

	// Function Engine.GameplayStatics.GetPlayerControllerID
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetPlayerControllerID(class APlayerController* Player);// sub_5C0BFA0()

	// Function Engine.GameplayStatics.GetPlayerController
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class APlayerController* STATIC_GetPlayerController(class UObject* WorldContextObject, int PlayerIndex);// sub_4F0E000()

	// Function Engine.GameplayStatics.GetPlayerCharacter
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class ACharacter* STATIC_GetPlayerCharacter(class UObject* WorldContextObject, int PlayerIndex);// sub_3EACAC0()

	// Function Engine.GameplayStatics.GetPlayerCameraManager
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class APlayerCameraManager* STATIC_GetPlayerCameraManager(class UObject* WorldContextObject, int PlayerIndex);// sub_60D3C60()

	// Function Engine.GameplayStatics.GetObjectClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UObject* STATIC_GetObjectClass(class UObject* Object);// sub_2015ED0()

	// Function Engine.GameplayStatics.GetKeyValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetKeyValue(const struct FString& Pair, struct FString* Key, struct FString* Value);// sub_4AD2170()

	// Function Engine.GameplayStatics.GetIntOption
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetIntOption(const struct FString& Options, const struct FString& Key, int DefaultValue);// sub_1AE1F00()

	// Function Engine.GameplayStatics.GetGlobalTimeDilation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetGlobalTimeDilation(class UObject* WorldContextObject);// sub_4FB3C30()

	// Function Engine.GameplayStatics.GetGameState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AGameStateBase* STATIC_GetGameState(class UObject* WorldContextObject);// sub_5CBCC30()

	// Function Engine.GameplayStatics.GetGameMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AGameModeBase* STATIC_GetGameMode(class UObject* WorldContextObject);// sub_21EBE30()

	// Function Engine.GameplayStatics.GetGameInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UGameInstance* STATIC_GetGameInstance(class UObject* WorldContextObject);// sub_5BBF180()

	// Function Engine.GameplayStatics.GetFirstActorOfClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AActor* STATIC_GetFirstActorOfClass(class UObject* WorldContextObject, class AActor* ActorClass);// sub_2496440()

	// Function Engine.GameplayStatics.GetCurrentReverbEffect
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UReverbEffect* STATIC_GetCurrentReverbEffect(class UObject* WorldContextObject);// sub_3F5B60()

	// Function Engine.GameplayStatics.GetCurrentLevelName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetCurrentLevelName(class UObject* WorldContextObject, unsigned char bRemovePrefixString);// sub_1EF0B70()

	// Function Engine.GameplayStatics.GetAudioTimeSeconds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetAudioTimeSeconds(class UObject* WorldContextObject);// sub_24E51D0()

	// Function Engine.GameplayStatics.GetAllActorsWithTag
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetAllActorsWithTag(class UObject* WorldContextObject, const struct FName& Tag, TArray<class AActor*>* OutActors);// sub_61142B0()

	// Function Engine.GameplayStatics.GetAllActorsWithInterface
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetAllActorsWithInterface(class UObject* WorldContextObject, class UInterface* Interface, TArray<class AActor*>* OutActors);// sub_FE17B0()

	// Function Engine.GameplayStatics.GetAllActorsOfClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetAllActorsOfClass(class UObject* WorldContextObject, class AActor* ActorClass, TArray<class AActor*>* OutActors);// sub_545CF0()

	// Function Engine.GameplayStatics.GetActorArrayBounds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetActorArrayBounds(TArray<class AActor*> Actors, unsigned char bOnlyCollidingComponents, struct FVector* Center, struct FVector* BoxExtent);// sub_818980()

	// Function Engine.GameplayStatics.GetActorArrayAverageLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetActorArrayAverageLocation(TArray<class AActor*> Actors);// sub_546E220()

	// Function Engine.GameplayStatics.GetAccurateRealTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetAccurateRealTime(class UObject* WorldContextObject, int* Seconds, float* PartialSeconds);// sub_20E2680()

	// Function Engine.GameplayStatics.FlushLevelStreaming
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_FlushLevelStreaming(class UObject* WorldContextObject);// sub_2E0A20()

	// Function Engine.GameplayStatics.FinishSpawningActor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AActor* STATIC_FinishSpawningActor(class AActor* Actor, const struct FTransform& SpawnTransform);// sub_4BBE2D0()

	// Function Engine.GameplayStatics.FindCollisionUV
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_FindCollisionUV(const struct FHitResult& Hit, int UVChannel, struct FVector2D* UV);// sub_4A89D90()

	// Function Engine.GameplayStatics.EnableLiveStreaming
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_EnableLiveStreaming(unsigned char Enable);// sub_2199A60()

	// Function Engine.GameplayStatics.DoesSaveGameExist
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_DoesSaveGameExist(const struct FString& SlotName, int UserIndex);// sub_3D635E0()

	// Function Engine.GameplayStatics.DeprojectScreenToWorld
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_DeprojectScreenToWorld(class APlayerController* Player, const struct FVector2D& ScreenPosition, struct FVector* WorldPosition, struct FVector* WorldDirection);// sub_47F3490()

	// Function Engine.GameplayStatics.DeleteGameInSlot
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_DeleteGameInSlot(const struct FString& SlotName, int UserIndex);// sub_1536010()

	// Function Engine.GameplayStatics.DeactivateReverbEffect
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DeactivateReverbEffect(class UObject* WorldContextObject, const struct FName& TagName);// sub_5A1D080()

	// Function Engine.GameplayStatics.CreateSound2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UAudioComponent* STATIC_CreateSound2D(class UObject* WorldContextObject, class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier, float StartTime, class USoundConcurrency* ConcurrencySettings, unsigned char bPersistAcrossLevelTransition, unsigned char bAutoDestroy);// sub_1F5A030()

	// Function Engine.GameplayStatics.CreateSaveGameObjectFromBlueprint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class USaveGame* STATIC_CreateSaveGameObjectFromBlueprint(class UBlueprint* SaveGameBlueprint);// sub_3F62220()

	// Function Engine.GameplayStatics.CreateSaveGameObject
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class USaveGame* STATIC_CreateSaveGameObject(class USaveGame* SaveGameClass);// sub_19E0E0()

	// Function Engine.GameplayStatics.CreatePlayer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class APlayerController* STATIC_CreatePlayer(class UObject* WorldContextObject, int ControllerId, unsigned char bSpawnPawn);// sub_5F785B0()

	// Function Engine.GameplayStatics.ClearSoundMixModifiers
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearSoundMixModifiers(class UObject* WorldContextObject);// sub_FB04E0()

	// Function Engine.GameplayStatics.ClearSoundMixClassOverride
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearSoundMixClassOverride(class UObject* WorldContextObject, class USoundMix* InSoundMixModifier, class USoundClass* InSoundClass, float FadeOutTime);// sub_1A11780()

	// Function Engine.GameplayStatics.CancelAsyncLoading
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_CancelAsyncLoading();// sub_61882A0()

	// Function Engine.GameplayStatics.BreakHitResult
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BreakHitResult(const struct FHitResult& Hit, unsigned char* bBlockingHit, unsigned char* bInitialOverlap, float* Time, struct FVector* Location, struct FVector* ImpactPoint, struct FVector* Normal, struct FVector* ImpactNormal, class UPhysicalMaterial** PhysMat, class AActor** HitActor, class UPrimitiveComponent** HitComponent, struct FName* HitBoneName, int* HitItem, int* FaceIndex, struct FVector* TraceStart, struct FVector* TraceEnd);// sub_50446E0()

	// Function Engine.GameplayStatics.BlueprintSuggestProjectileVelocity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BlueprintSuggestProjectileVelocity(class UObject* WorldContextObject, const struct FVector& StartLocation, const struct FVector& EndLocation, float LaunchSpeed, float OverrideGravityZ, TEnumAsByte<ESuggestProjVelocityTraceOption> TraceOption, float CollisionRadius, unsigned char bFavorHighArc, unsigned char bDrawDebug, struct FVector* TossVelocity);// sub_59FEE50()

	// Function Engine.GameplayStatics.Blueprint_PredictProjectilePath_ByTraceChannel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Blueprint_PredictProjectilePath_ByTraceChannel(class UObject* WorldContextObject, const struct FVector& StartPos, const struct FVector& LaunchVelocity, unsigned char bTracePath, float ProjectileRadius, TEnumAsByte<ECollisionChannel> TraceChannel, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, float DrawDebugTime, float SimFrequency, float MaxSimTime, float OverrideGravityZ, struct FHitResult* OutHit, TArray<struct FVector>* OutPathPositions, struct FVector* OutLastTraceDestination);// sub_4959990()

	// Function Engine.GameplayStatics.Blueprint_PredictProjectilePath_ByObjectType
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Blueprint_PredictProjectilePath_ByObjectType(class UObject* WorldContextObject, const struct FVector& StartPos, const struct FVector& LaunchVelocity, unsigned char bTracePath, float ProjectileRadius, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, unsigned char bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<EDrawDebugTrace> DrawDebugType, float DrawDebugTime, float SimFrequency, float MaxSimTime, float OverrideGravityZ, struct FHitResult* OutHit, TArray<struct FVector>* OutPathPositions, struct FVector* OutLastTraceDestination);// sub_53EBC40()

	// Function Engine.GameplayStatics.Blueprint_PredictProjectilePath_Advanced
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Blueprint_PredictProjectilePath_Advanced(class UObject* WorldContextObject, const struct FPredictProjectilePathParams& PredictParams, struct FPredictProjectilePathResult* PredictResult);// sub_54838D0()

	// Function Engine.GameplayStatics.BeginSpawningActorFromClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AActor* STATIC_BeginSpawningActorFromClass(class UObject* WorldContextObject, class AActor* ActorClass, const struct FTransform& SpawnTransform, unsigned char bNoCollisionFail, class AActor* Owner);// sub_2081600()

	// Function Engine.GameplayStatics.BeginSpawningActorFromBlueprint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AActor* STATIC_BeginSpawningActorFromBlueprint(class UObject* WorldContextObject, class UBlueprint* Blueprint, const struct FTransform& SpawnTransform, unsigned char bNoCollisionFail);// sub_496F3E0()

	// Function Engine.GameplayStatics.BeginDeferredActorSpawnFromClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AActor* STATIC_BeginDeferredActorSpawnFromClass(class UObject* WorldContextObject, class AActor* ActorClass, const struct FTransform& SpawnTransform, ESpawnActorCollisionHandlingMethod CollisionHandlingOverride, class AActor* Owner);// sub_4942670()

	// Function Engine.GameplayStatics.AreSubtitlesEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_AreSubtitlesEnabled();// sub_19ABC20()

	// Function Engine.GameplayStatics.AreAnyListenersWithinRange
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_AreAnyListenersWithinRange(class UObject* WorldContextObject, const struct FVector& Location, float MaximumRange);// sub_5FF86A0()

	// Function Engine.GameplayStatics.ApplyRadialDamageWithFalloff
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_ApplyRadialDamageWithFalloff(class UObject* WorldContextObject, float BaseDamage, float MinimumDamage, const struct FVector& Origin, float DamageInnerRadius, float DamageOuterRadius, float DamageFalloff, class UDamageType* DamageTypeClass, TArray<class AActor*> IgnoreActors, class AActor* DamageCauser, class AController* InstigatedByController, TEnumAsByte<ECollisionChannel> DamagePreventionChannel);// sub_48DF160()

	// Function Engine.GameplayStatics.ApplyRadialDamage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_ApplyRadialDamage(class UObject* WorldContextObject, float BaseDamage, const struct FVector& Origin, float DamageRadius, class UDamageType* DamageTypeClass, TArray<class AActor*> IgnoreActors, class AActor* DamageCauser, class AController* InstigatedByController, unsigned char bDoFullDamage, TEnumAsByte<ECollisionChannel> DamagePreventionChannel);// sub_1B2E3D0()

	// Function Engine.GameplayStatics.ApplyPointDamage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_ApplyPointDamage(class AActor* DamagedActor, float BaseDamage, const struct FVector& HitFromDirection, const struct FHitResult& HitInfo, class AController* EventInstigator, class AActor* DamageCauser, class UDamageType* DamageTypeClass);// sub_760C70()

	// Function Engine.GameplayStatics.ApplyDamage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_ApplyDamage(class AActor* DamagedActor, float BaseDamage, class AController* EventInstigator, class AActor* DamageCauser, class UDamageType* DamageTypeClass);// sub_17464B0()

	// Function Engine.GameplayStatics.ActivateReverbEffect
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ActivateReverbEffect(class UObject* WorldContextObject, class UReverbEffect* ReverbEffect, const struct FName& TagName, float Priority, float Volume, float FadeTime);// sub_13C76E0()


}


//Class Engine.HeadMountedDisplayFunctionLibrary
//0x0000 (0x0040 - 0x0040)
class UHeadMountedDisplayFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.HeadMountedDisplayFunctionLibrary.SetWorldToMetersScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetWorldToMetersScale(class UObject* WorldContext, float NewScale);// sub_5BBF330()

	// Function Engine.HeadMountedDisplayFunctionLibrary.SetTrackingOrigin
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTrackingOrigin(TEnumAsByte<EHMDTrackingOrigin> Origin);// sub_3BE51A0()

	// Function Engine.HeadMountedDisplayFunctionLibrary.SetClippingPlanes
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetClippingPlanes(float Near, float Far);// sub_3DADC0()

	// Function Engine.HeadMountedDisplayFunctionLibrary.ResetOrientationAndPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ResetOrientationAndPosition(float Yaw, TEnumAsByte<EOrientPositionSelector> Options);// sub_19ABC50()

	// Function Engine.HeadMountedDisplayFunctionLibrary.IsInLowPersistenceMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsInLowPersistenceMode();// sub_50AC470()

	// Function Engine.HeadMountedDisplayFunctionLibrary.IsHeadMountedDisplayEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsHeadMountedDisplayEnabled();// sub_3DE2C50()

	// Function Engine.HeadMountedDisplayFunctionLibrary.IsHeadMountedDisplayConnected
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsHeadMountedDisplayConnected();// sub_571B980()

	// Function Engine.HeadMountedDisplayFunctionLibrary.HasValidTrackingPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_HasValidTrackingPosition();// sub_45A9D0()

	// Function Engine.HeadMountedDisplayFunctionLibrary.GetWorldToMetersScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetWorldToMetersScale(class UObject* WorldContext);// sub_EC4BD0()

	// Function Engine.HeadMountedDisplayFunctionLibrary.GetVRFocusState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetVRFocusState(unsigned char* bUseFocus, unsigned char* bHasFocus);// sub_5EE0980()

	// Function Engine.HeadMountedDisplayFunctionLibrary.GetTrackingSensorParameters
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetTrackingSensorParameters(int Index, struct FVector* Origin, struct FRotator* Rotation, float* LeftFOV, float* RightFOV, float* TopFOV, float* BottomFOV, float* Distance, float* NearPlane, float* FarPlane, unsigned char* IsActive);// sub_600C7F0()

	// Function Engine.HeadMountedDisplayFunctionLibrary.GetTrackingOrigin
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TEnumAsByte<EHMDTrackingOrigin> STATIC_GetTrackingOrigin();// sub_105D2F0()

	// Function Engine.HeadMountedDisplayFunctionLibrary.GetScreenPercentage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetScreenPercentage();// sub_3F97A80()

	// Function Engine.HeadMountedDisplayFunctionLibrary.GetPositionalTrackingCameraParameters
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetPositionalTrackingCameraParameters(struct FVector* CameraOrigin, struct FRotator* CameraRotation, float* HFOV, float* VFOV, float* CameraDistance, float* NearPlane, float* FarPlane);// sub_491D50()

	// Function Engine.HeadMountedDisplayFunctionLibrary.GetOrientationAndPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetOrientationAndPosition(struct FRotator* DeviceRotation, struct FVector* DevicePosition);// sub_2496500()

	// Function Engine.HeadMountedDisplayFunctionLibrary.GetNumOfTrackingSensors
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetNumOfTrackingSensors();// sub_5768A60()

	// Function Engine.HeadMountedDisplayFunctionLibrary.GetHMDDeviceName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FName STATIC_GetHMDDeviceName();// sub_108E3A0()

	// Function Engine.HeadMountedDisplayFunctionLibrary.EnableLowPersistenceMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_EnableLowPersistenceMode(unsigned char bEnable);// sub_3DB03F0()

	// Function Engine.HeadMountedDisplayFunctionLibrary.EnableHMD
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EnableHMD(unsigned char bEnable);// sub_5B36130()


}


//Class Engine.KismetArrayLibrary
//0x0000 (0x0040 - 0x0040)
class UKismetArrayLibrary : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.KismetArrayLibrary.SetArrayPropertyByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetArrayPropertyByName(class UObject* Object, const struct FName& PropertyName, TArray<int> Value);// sub_5D8EB20()

	// Function Engine.KismetArrayLibrary.FilterArray
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_FilterArray(TArray<class AActor*> TargetArray, class AActor* FilterClass, TArray<class AActor*>* FilteredArray);// sub_5499220()

	// Function Engine.KismetArrayLibrary.Array_Shuffle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Array_Shuffle(TArray<int> TargetArray);// sub_4E97E40()

	// Function Engine.KismetArrayLibrary.Array_Set
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Array_Set(TArray<int> TargetArray, int Index, int Item, unsigned char bSizeToFit);// sub_52C45A0()

	// Function Engine.KismetArrayLibrary.Array_Resize
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Array_Resize(TArray<int> TargetArray, int Size);// sub_2232100()

	// Function Engine.KismetArrayLibrary.Array_RemoveItem
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Array_RemoveItem(TArray<int> TargetArray, int Item);// sub_3E0BA30()

	// Function Engine.KismetArrayLibrary.Array_Remove
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Array_Remove(TArray<int> TargetArray, int IndexToRemove);// sub_50F4C60()

	// Function Engine.KismetArrayLibrary.Array_Length
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Array_Length(TArray<int> TargetArray);// sub_2325220()

	// Function Engine.KismetArrayLibrary.Array_LastIndex
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Array_LastIndex(TArray<int> TargetArray);// sub_4E762D0()

	// Function Engine.KismetArrayLibrary.Array_IsValidIndex
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Array_IsValidIndex(TArray<int> TargetArray, int IndexToTest);// sub_13E3700()

	// Function Engine.KismetArrayLibrary.Array_Insert
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Array_Insert(TArray<int> TargetArray, int NewItem, int Index);// sub_797D90()

	// Function Engine.KismetArrayLibrary.Array_Get
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Array_Get(TArray<int> TargetArray, int Index, int* Item);// sub_18239E0()

	// Function Engine.KismetArrayLibrary.Array_Find
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Array_Find(TArray<int> TargetArray, int ItemToFind);// sub_52DF2B0()

	// Function Engine.KismetArrayLibrary.Array_Contains
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Array_Contains(TArray<int> TargetArray, int ItemToFind);// sub_5619780()

	// Function Engine.KismetArrayLibrary.Array_Clear
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Array_Clear(TArray<int> TargetArray);// sub_1A75550()

	// Function Engine.KismetArrayLibrary.Array_Append
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Array_Append(TArray<int> TargetArray, TArray<int> SourceArray);// sub_5A6E4F0()

	// Function Engine.KismetArrayLibrary.Array_AddUnique
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Array_AddUnique(TArray<int> TargetArray, int NewItem);// sub_45C5E70()

	// Function Engine.KismetArrayLibrary.Array_Add
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Array_Add(TArray<int> TargetArray, int NewItem);// sub_60F7DE0()


}


//Class Engine.KismetGuidLibrary
//0x0000 (0x0040 - 0x0040)
class UKismetGuidLibrary : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.KismetGuidLibrary.Parse_StringToGuid
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Parse_StringToGuid(const struct FString& GuidString, struct FGuid* OutGuid, unsigned char* SUCCESS);// sub_52DF500()

	// Function Engine.KismetGuidLibrary.NotEqual_GuidGuid
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_NotEqual_GuidGuid(const struct FGuid& A, const struct FGuid& B);// sub_1E89D00()

	// Function Engine.KismetGuidLibrary.NewGuid
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FGuid STATIC_NewGuid();// sub_11A10D0()

	// Function Engine.KismetGuidLibrary.IsValid_Guid
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsValid_Guid(const struct FGuid& InGuid);// sub_1F3E890()

	// Function Engine.KismetGuidLibrary.Invalidate_Guid
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Invalidate_Guid(struct FGuid* InGuid);// sub_5344440()

	// Function Engine.KismetGuidLibrary.EqualEqual_GuidGuid
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EqualEqual_GuidGuid(const struct FGuid& A, const struct FGuid& B);// sub_2356AE0()

	// Function Engine.KismetGuidLibrary.Conv_GuidToString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Conv_GuidToString(const struct FGuid& InGuid);// sub_3E77750()


}


//Class Engine.KismetInputLibrary
//0x0000 (0x0040 - 0x0040)
class UKismetInputLibrary : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.KismetInputLibrary.PointerEvent_IsTouchEvent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_PointerEvent_IsTouchEvent(const struct FPointerEvent& Input);// sub_118AD40()

	// Function Engine.KismetInputLibrary.PointerEvent_IsMouseButtonDown
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_PointerEvent_IsMouseButtonDown(const struct FPointerEvent& Input, const struct FKey& MouseButton);// sub_1A26660()

	// Function Engine.KismetInputLibrary.PointerEvent_GetWheelDelta
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_PointerEvent_GetWheelDelta(const struct FPointerEvent& Input);// sub_797FE0()

	// Function Engine.KismetInputLibrary.PointerEvent_GetUserIndex
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_PointerEvent_GetUserIndex(const struct FPointerEvent& Input);// sub_1B17CB0()

	// Function Engine.KismetInputLibrary.PointerEvent_GetTouchpadIndex
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_PointerEvent_GetTouchpadIndex(const struct FPointerEvent& Input);// sub_15E3C30()

	// Function Engine.KismetInputLibrary.PointerEvent_GetScreenSpacePosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_PointerEvent_GetScreenSpacePosition(const struct FPointerEvent& Input);// sub_514BCD0()

	// Function Engine.KismetInputLibrary.PointerEvent_GetPointerIndex
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_PointerEvent_GetPointerIndex(const struct FPointerEvent& Input);// sub_123B650()

	// Function Engine.KismetInputLibrary.PointerEvent_GetLastScreenSpacePosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_PointerEvent_GetLastScreenSpacePosition(const struct FPointerEvent& Input);// sub_1D37350()

	// Function Engine.KismetInputLibrary.PointerEvent_GetGestureDelta
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_PointerEvent_GetGestureDelta(const struct FPointerEvent& Input);// sub_605D070()

	// Function Engine.KismetInputLibrary.PointerEvent_GetEffectingButton
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FKey STATIC_PointerEvent_GetEffectingButton(const struct FPointerEvent& Input);// sub_542BB70()

	// Function Engine.KismetInputLibrary.PointerEvent_GetCursorDelta
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_PointerEvent_GetCursorDelta(const struct FPointerEvent& Input);// sub_49D7B80()

	// Function Engine.KismetInputLibrary.Key_IsVectorAxis
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Key_IsVectorAxis(const struct FKey& Key);// sub_5C24310()

	// Function Engine.KismetInputLibrary.Key_IsMouseButton
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Key_IsMouseButton(const struct FKey& Key);// sub_2143960()

	// Function Engine.KismetInputLibrary.Key_IsModifierKey
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Key_IsModifierKey(const struct FKey& Key);// sub_151B800()

	// Function Engine.KismetInputLibrary.Key_IsKeyboardKey
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Key_IsKeyboardKey(const struct FKey& Key);// sub_52068B0()

	// Function Engine.KismetInputLibrary.Key_IsGamepadKey
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Key_IsGamepadKey(const struct FKey& Key);// sub_510BF50()

	// Function Engine.KismetInputLibrary.Key_IsFloatAxis
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Key_IsFloatAxis(const struct FKey& Key);// sub_4942860()

	// Function Engine.KismetInputLibrary.Key_GetDisplayName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_Key_GetDisplayName(const struct FKey& Key);// sub_238A480()

	// Function Engine.KismetInputLibrary.InputEvent_IsShiftDown
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_InputEvent_IsShiftDown(const struct FInputEvent& Input);// sub_20B3CC0()

	// Function Engine.KismetInputLibrary.InputEvent_IsRightShiftDown
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_InputEvent_IsRightShiftDown(const struct FInputEvent& Input);// sub_205B610()

	// Function Engine.KismetInputLibrary.InputEvent_IsRightControlDown
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_InputEvent_IsRightControlDown(const struct FInputEvent& Input);// sub_D9CC50()

	// Function Engine.KismetInputLibrary.InputEvent_IsRightCommandDown
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_InputEvent_IsRightCommandDown(const struct FInputEvent& Input);// sub_18B9A60()

	// Function Engine.KismetInputLibrary.InputEvent_IsRightAltDown
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_InputEvent_IsRightAltDown(const struct FInputEvent& Input);// sub_4FB3CC0()

	// Function Engine.KismetInputLibrary.InputEvent_IsRepeat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_InputEvent_IsRepeat(const struct FInputEvent& Input);// sub_44742D0()

	// Function Engine.KismetInputLibrary.InputEvent_IsLeftShiftDown
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_InputEvent_IsLeftShiftDown(const struct FInputEvent& Input);// sub_1D1BBE0()

	// Function Engine.KismetInputLibrary.InputEvent_IsLeftControlDown
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_InputEvent_IsLeftControlDown(const struct FInputEvent& Input);// sub_192C860()

	// Function Engine.KismetInputLibrary.InputEvent_IsLeftCommandDown
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_InputEvent_IsLeftCommandDown(const struct FInputEvent& Input);// sub_14EDB0()

	// Function Engine.KismetInputLibrary.InputEvent_IsLeftAltDown
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_InputEvent_IsLeftAltDown(const struct FInputEvent& Input);// sub_2E0A90()

	// Function Engine.KismetInputLibrary.InputEvent_IsControlDown
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_InputEvent_IsControlDown(const struct FInputEvent& Input);// sub_4B2790()

	// Function Engine.KismetInputLibrary.InputEvent_IsCommandDown
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_InputEvent_IsCommandDown(const struct FInputEvent& Input);// sub_3DF42F0()

	// Function Engine.KismetInputLibrary.InputEvent_IsAltDown
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_InputEvent_IsAltDown(const struct FInputEvent& Input);// sub_4BBE3F0()

	// Function Engine.KismetInputLibrary.GetUserIndex
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetUserIndex(const struct FKeyEvent& Input);// sub_42CC330()

	// Function Engine.KismetInputLibrary.GetKey
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FKey STATIC_GetKey(const struct FKeyEvent& Input);// sub_15017B0()

	// Function Engine.KismetInputLibrary.GetAnalogValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetAnalogValue(const struct FAnalogInputEvent& Input);// sub_1B40520()

	// Function Engine.KismetInputLibrary.EqualEqual_KeyKey
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EqualEqual_KeyKey(const struct FKey& A, const struct FKey& B);// sub_1DA27A0()

	// Function Engine.KismetInputLibrary.EqualEqual_InputChordInputChord
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EqualEqual_InputChordInputChord(const struct FInputChord& A, const struct FInputChord& B);// sub_5EE07D0()

	// Function Engine.KismetInputLibrary.ControllerEvent_GetUserIndex
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_ControllerEvent_GetUserIndex(const struct FControllerEvent& Input);// sub_5401C00()

	// Function Engine.KismetInputLibrary.ControllerEvent_GetEffectingButton
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FKey STATIC_ControllerEvent_GetEffectingButton(const struct FControllerEvent& Input);// sub_16ABAD0()

	// Function Engine.KismetInputLibrary.ControllerEvent_GetAnalogValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_ControllerEvent_GetAnalogValue(const struct FControllerEvent& Input);// sub_46A68B0()

	// Function Engine.KismetInputLibrary.CalibrateTilt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_CalibrateTilt();// sub_8BD4F0()


}


//Class Engine.KismetMaterialLibrary
//0x0000 (0x0040 - 0x0040)
class UKismetMaterialLibrary : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.KismetMaterialLibrary.SetVectorParameterValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVectorParameterValue(class UObject* WorldContextObject, class UMaterialParameterCollection* Collection, const struct FName& ParameterName, const struct FLinearColor& ParameterValue);// sub_54B08D0()

	// Function Engine.KismetMaterialLibrary.SetScalarParameterValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetScalarParameterValue(class UObject* WorldContextObject, class UMaterialParameterCollection* Collection, const struct FName& ParameterName, float ParameterValue);// sub_4909DC0()

	// Function Engine.KismetMaterialLibrary.GetVectorParameterValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FLinearColor STATIC_GetVectorParameterValue(class UObject* WorldContextObject, class UMaterialParameterCollection* Collection, const struct FName& ParameterName);// sub_16DF5D0()

	// Function Engine.KismetMaterialLibrary.GetScalarParameterValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetScalarParameterValue(class UObject* WorldContextObject, class UMaterialParameterCollection* Collection, const struct FName& ParameterName);// sub_4A24900()

	// Function Engine.KismetMaterialLibrary.CreateDynamicMaterialInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UMaterialInstanceDynamic* STATIC_CreateDynamicMaterialInstance(class UObject* WorldContextObject, class UMaterialInterface* Parent);// sub_4410080()


}


//Class Engine.KismetMathLibrary
//0x0000 (0x0040 - 0x0040)
class UKismetMathLibrary : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.KismetMathLibrary.Xor_IntInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Xor_IntInt(int A, int B);// sub_DED680()

	// Function Engine.KismetMathLibrary.VSizeSquared
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_VSizeSquared(const struct FVector& A);// sub_496F580()

	// Function Engine.KismetMathLibrary.VSize2DSquared
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_VSize2DSquared(const struct FVector2D& A);// sub_5206AD0()

	// Function Engine.KismetMathLibrary.VSize2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_VSize2D(const struct FVector2D& A);// sub_616B3F0()

	// Function Engine.KismetMathLibrary.VSize
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_VSize(const struct FVector& A);// sub_151B8D0()

	// Function Engine.KismetMathLibrary.VLerp
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_VLerp(const struct FVector& A, const struct FVector& B, float ALPHA);// sub_4FE3160()

	// Function Engine.KismetMathLibrary.VInterpTo_Constant
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_VInterpTo_Constant(const struct FVector& Current, const struct FVector& Target, float DeltaTime, float InterpSpeed);// sub_C872F0()

	// Function Engine.KismetMathLibrary.VInterpTo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_VInterpTo(const struct FVector& Current, const struct FVector& Target, float DeltaTime, float InterpSpeed);// sub_5238C90()

	// Function Engine.KismetMathLibrary.VectorSpringInterp
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_VectorSpringInterp(const struct FVector& Current, const struct FVector& Target, float Stiffness, float CriticalDampingFactor, float DeltaTime, float Mass, struct FVectorSpringState* SpringState);// sub_5C7C2B0()

	// Function Engine.KismetMathLibrary.Vector2DInterpTo_Constant
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_Vector2DInterpTo_Constant(const struct FVector2D& Current, const struct FVector2D& Target, float DeltaTime, float InterpSpeed);// sub_1AE2260()

	// Function Engine.KismetMathLibrary.Vector2DInterpTo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_Vector2DInterpTo(const struct FVector2D& Current, const struct FVector2D& Target, float DeltaTime, float InterpSpeed);// sub_57527E0()

	// Function Engine.KismetMathLibrary.VEase
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_VEase(const struct FVector& A, const struct FVector& B, float ALPHA, TEnumAsByte<EEasingFunc> EasingFunc, float BlendExp, int Steps);// sub_1E57380()

	// Function Engine.KismetMathLibrary.UtcNow
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FDateTime STATIC_UtcNow();// sub_4A59980()

	// Function Engine.KismetMathLibrary.TransformLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_TransformLocation(const struct FTransform& T, const struct FVector& Location);// sub_15E3D50()

	// Function Engine.KismetMathLibrary.TransformDirection
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_TransformDirection(const struct FTransform& T, const struct FVector& Direction);// sub_E5CAC0()

	// Function Engine.KismetMathLibrary.Today
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FDateTime STATIC_Today();// sub_58D810()

	// Function Engine.KismetMathLibrary.TLerp
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTransform STATIC_TLerp(const struct FTransform& A, const struct FTransform& B, float ALPHA, TEnumAsByte<ELerpInterpolationMode> InterpMode);// sub_5619AB0()

	// Function Engine.KismetMathLibrary.TInterpTo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTransform STATIC_TInterpTo(const struct FTransform& Current, const struct FTransform& Target, float DeltaTime, float InterpSpeed);// sub_1B79F80()

	// Function Engine.KismetMathLibrary.TimespanZeroValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTimespan STATIC_TimespanZeroValue();// sub_FE1900()

	// Function Engine.KismetMathLibrary.TimespanRatio
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_TimespanRatio(const struct FTimespan& A, const struct FTimespan& B);// sub_5DB590()

	// Function Engine.KismetMathLibrary.TimespanMinValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTimespan STATIC_TimespanMinValue();// sub_4314100()

	// Function Engine.KismetMathLibrary.TimespanMaxValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTimespan STATIC_TimespanMaxValue();// sub_1AC6270()

	// Function Engine.KismetMathLibrary.TimespanFromString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_TimespanFromString(const struct FString& TimespanString, struct FTimespan* Result);// sub_1E57230()

	// Function Engine.KismetMathLibrary.TEase
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTransform STATIC_TEase(const struct FTransform& A, const struct FTransform& B, float ALPHA, TEnumAsByte<EEasingFunc> EasingFunc, float BlendExp, int Steps);// sub_1D37480()

	// Function Engine.KismetMathLibrary.Tan
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Tan(float A);// sub_501D010()

	// Function Engine.KismetMathLibrary.Subtract_VectorVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_Subtract_VectorVector(const struct FVector& A, const struct FVector& B);// sub_5AEF880()

	// Function Engine.KismetMathLibrary.Subtract_VectorInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_Subtract_VectorInt(const struct FVector& A, int B);// sub_EDF4F0()

	// Function Engine.KismetMathLibrary.Subtract_VectorFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_Subtract_VectorFloat(const struct FVector& A, float B);// sub_2199C90()

	// Function Engine.KismetMathLibrary.Subtract_Vector2DVector2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_Subtract_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B);// sub_185E80()

	// Function Engine.KismetMathLibrary.Subtract_Vector2DFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_Subtract_Vector2DFloat(const struct FVector2D& A, float B);// sub_3F48430()

	// Function Engine.KismetMathLibrary.Subtract_TimespanTimespan
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTimespan STATIC_Subtract_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);// sub_1619AD0()

	// Function Engine.KismetMathLibrary.Subtract_IntInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Subtract_IntInt(int A, int B);// sub_4FB3D80()

	// Function Engine.KismetMathLibrary.Subtract_FloatFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Subtract_FloatFloat(float A, float B);// sub_4959F70()

	// Function Engine.KismetMathLibrary.Subtract_DateTimeTimespan
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FDateTime STATIC_Subtract_DateTimeTimespan(const struct FDateTime& A, const struct FTimespan& B);// sub_1619AD0()

	// Function Engine.KismetMathLibrary.Subtract_DateTimeDateTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTimespan STATIC_Subtract_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);// sub_1619AD0()

	// Function Engine.KismetMathLibrary.Subtract_ByteByte
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Subtract_ByteByte(unsigned char A, unsigned char B);// sub_46147B0()

	// Function Engine.KismetMathLibrary.Square
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Square(float A);// sub_5F78830()

	// Function Engine.KismetMathLibrary.Sqrt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Sqrt(float A);// sub_7E62C0()

	// Function Engine.KismetMathLibrary.Sin
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Sin(float A);// sub_465A360()

	// Function Engine.KismetMathLibrary.SignOfInteger
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_SignOfInteger(int A);// sub_442480()

	// Function Engine.KismetMathLibrary.SignOfFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_SignOfFloat(float A);// sub_1AE2190()

	// Function Engine.KismetMathLibrary.SetRandomStreamSeed
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetRandomStreamSeed(int NewSeed, struct FRandomStream* Stream);// sub_1F3EA80()

	// Function Engine.KismetMathLibrary.SelectVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_SelectVector(const struct FVector& A, const struct FVector& B, unsigned char bPickA);// sub_5DB2B0()

	// Function Engine.KismetMathLibrary.SelectTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTransform STATIC_SelectTransform(const struct FTransform& A, const struct FTransform& B, unsigned char bPickA);// sub_425FC90()

	// Function Engine.KismetMathLibrary.SelectString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_SelectString(const struct FString& A, const struct FString& B, unsigned char bPickA);// sub_1903840()

	// Function Engine.KismetMathLibrary.SelectRotator
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_SelectRotator(const struct FRotator& A, const struct FRotator& B, unsigned char bPickA);// sub_5DB2B0()

	// Function Engine.KismetMathLibrary.SelectObject
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UObject* STATIC_SelectObject(class UObject* A, class UObject* B, unsigned char bSelectA);// sub_400F4B0()

	// Function Engine.KismetMathLibrary.SelectInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_SelectInt(int A, int B, unsigned char bPickA);// sub_4278250()

	// Function Engine.KismetMathLibrary.SelectFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_SelectFloat(float A, float B, unsigned char bPickA);// sub_612CAB0()

	// Function Engine.KismetMathLibrary.SelectColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FLinearColor STATIC_SelectColor(const struct FLinearColor& A, const struct FLinearColor& B, unsigned char bPickA);// sub_20E27A0()

	// Function Engine.KismetMathLibrary.SelectClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UObject* STATIC_SelectClass(class UObject* A, class UObject* B, unsigned char bSelectA);// sub_400F4B0()

	// Function Engine.KismetMathLibrary.SeedRandomStream
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SeedRandomStream(struct FRandomStream* Stream);// sub_54EF2D0()

	// Function Engine.KismetMathLibrary.Round
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Round(float A);// sub_2E0B50()

	// Function Engine.KismetMathLibrary.RotatorFromAxisAndAngle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_RotatorFromAxisAndAngle(const struct FVector& Axis, float Angle);// sub_478760()

	// Function Engine.KismetMathLibrary.RotateAngleAxis
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_RotateAngleAxis(const struct FVector& InVect, float AngleDeg, const struct FVector& Axis);// sub_5031940()

	// Function Engine.KismetMathLibrary.RLerp
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_RLerp(const struct FRotator& A, const struct FRotator& B, float ALPHA, unsigned char bShortestPath);// sub_1F5A3B0()

	// Function Engine.KismetMathLibrary.RInterpTo_Constant
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_RInterpTo_Constant(const struct FRotator& Current, const struct FRotator& Target, float DeltaTime, float InterpSpeed);// sub_13C7A80()

	// Function Engine.KismetMathLibrary.RInterpTo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_RInterpTo(const struct FRotator& Current, const struct FRotator& Target, float DeltaTime, float InterpSpeed);// sub_22F3560()

	// Function Engine.KismetMathLibrary.RGBToHSV_Vector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RGBToHSV_Vector(const struct FLinearColor& RGB, struct FLinearColor* HSV);// sub_44D45F0()

	// Function Engine.KismetMathLibrary.RGBToHSV
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RGBToHSV(const struct FLinearColor& InColor, float* H, float* S, float* V, float* A);// sub_484CC50()

	// Function Engine.KismetMathLibrary.ResetVectorSpringState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ResetVectorSpringState(struct FVectorSpringState* SpringState);// sub_90D1B0()

	// Function Engine.KismetMathLibrary.ResetRandomStream
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ResetRandomStream(const struct FRandomStream& Stream);// sub_45912B0()

	// Function Engine.KismetMathLibrary.ResetFloatSpringState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ResetFloatSpringState(struct FFloatSpringState* SpringState);// sub_1F0B840()

	// Function Engine.KismetMathLibrary.REase
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_REase(const struct FRotator& A, const struct FRotator& B, float ALPHA, unsigned char bShortestPath, TEnumAsByte<EEasingFunc> EasingFunc, float BlendExp, int Steps);// sub_24C5460()

	// Function Engine.KismetMathLibrary.RandomUnitVectorInConeWithYawAndPitch
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_RandomUnitVectorInConeWithYawAndPitch(const struct FVector& ConeDir, float MaxYawInDegrees, float MaxPitchInDegrees);// sub_5222F30()

	// Function Engine.KismetMathLibrary.RandomUnitVectorInCone
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_RandomUnitVectorInCone(const struct FVector& ConeDir, float ConeHalfAngle);// sub_5E7FB00()

	// Function Engine.KismetMathLibrary.RandomUnitVectorFromStream
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_RandomUnitVectorFromStream(const struct FRandomStream& Stream);// sub_10784E0()

	// Function Engine.KismetMathLibrary.RandomUnitVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_RandomUnitVector();// sub_47F3690()

	// Function Engine.KismetMathLibrary.RandomRotatorFromStream
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_RandomRotatorFromStream(unsigned char bRoll, const struct FRandomStream& Stream);// sub_1253B10()

	// Function Engine.KismetMathLibrary.RandomRotator
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_RandomRotator(unsigned char bRoll);// sub_49889A0()

	// Function Engine.KismetMathLibrary.RandomPointInBoundingBox
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_RandomPointInBoundingBox(const struct FVector& Origin, const struct FVector& BoxExtent);// sub_55DF130()

	// Function Engine.KismetMathLibrary.RandomIntegerInRangeFromStream
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_RandomIntegerInRangeFromStream(int Min, int Max, const struct FRandomStream& Stream);// sub_462BDC0()

	// Function Engine.KismetMathLibrary.RandomIntegerInRange
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_RandomIntegerInRange(int Min, int Max);// sub_2412340()

	// Function Engine.KismetMathLibrary.RandomIntegerFromStream
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_RandomIntegerFromStream(int Max, const struct FRandomStream& Stream);// sub_428270()

	// Function Engine.KismetMathLibrary.RandomInteger
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_RandomInteger(int Max);// sub_468F210()

	// Function Engine.KismetMathLibrary.RandomFloatInRangeFromStream
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_RandomFloatInRangeFromStream(float Min, float Max, const struct FRandomStream& Stream);// sub_1CB9E00()

	// Function Engine.KismetMathLibrary.RandomFloatInRange
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_RandomFloatInRange(float Min, float Max);// sub_110FEF0()

	// Function Engine.KismetMathLibrary.RandomFloatFromStream
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_RandomFloatFromStream(const struct FRandomStream& Stream);// sub_838A0()

	// Function Engine.KismetMathLibrary.RandomFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_RandomFloat();// sub_13FE050()

	// Function Engine.KismetMathLibrary.RandomBoolWithWeightFromStream
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_RandomBoolWithWeightFromStream(float Weight, const struct FRandomStream& RandomStream);// sub_47A9F40()

	// Function Engine.KismetMathLibrary.RandomBoolWithWeight
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_RandomBoolWithWeight(float Weight);// sub_8BD510()

	// Function Engine.KismetMathLibrary.RandomBoolFromStream
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_RandomBoolFromStream(const struct FRandomStream& Stream);// sub_5F43BB0()

	// Function Engine.KismetMathLibrary.RandomBool
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_RandomBool();// sub_2418E0()

	// Function Engine.KismetMathLibrary.RadiansToDegrees
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_RadiansToDegrees(float A);// sub_834B90()

	// Function Engine.KismetMathLibrary.ProjectVectorOnToVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_ProjectVectorOnToVector(const struct FVector& V, const struct FVector& Target);// sub_4BF7D70()

	// Function Engine.KismetMathLibrary.ProjectVectorOnToPlane
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_ProjectVectorOnToPlane(const struct FVector& V, const struct FVector& PlaneNormal);// sub_55B82A0()

	// Function Engine.KismetMathLibrary.ProjectPointOnToPlane
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_ProjectPointOnToPlane(const struct FVector& Point, const struct FVector& PlaneBase, const struct FVector& PlaneNormal);// sub_4455D40()

	// Function Engine.KismetMathLibrary.PointsAreCoplanar
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_PointsAreCoplanar(TArray<struct FVector> Points, float Tolerance);// sub_8763D0()

	// Function Engine.KismetMathLibrary.Percent_IntInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Percent_IntInt(int A, int B);// sub_105D480()

	// Function Engine.KismetMathLibrary.Percent_FloatFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Percent_FloatFloat(float A, float B);// sub_10D6420()

	// Function Engine.KismetMathLibrary.Percent_ByteByte
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Percent_ByteByte(unsigned char A, unsigned char B);// sub_478E8D0()

	// Function Engine.KismetMathLibrary.Or_IntInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Or_IntInt(int A, int B);// sub_3B781A0()

	// Function Engine.KismetMathLibrary.Now
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FDateTime STATIC_Now();// sub_4C785F0()

	// Function Engine.KismetMathLibrary.NotEqual_VectorVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_NotEqual_VectorVector(const struct FVector& A, const struct FVector& B, float ErrorTolerance);// sub_60D3D20()

	// Function Engine.KismetMathLibrary.NotEqual_Vector2DVector2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_NotEqual_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B, float ErrorTolerance);// sub_197AB60()

	// Function Engine.KismetMathLibrary.NotEqual_TimespanTimespan
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_NotEqual_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);// sub_4AE77C0()

	// Function Engine.KismetMathLibrary.NotEqual_RotatorRotator
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_NotEqual_RotatorRotator(const struct FRotator& A, const struct FRotator& B, float ErrorTolerance);// sub_54EF140()

	// Function Engine.KismetMathLibrary.NotEqual_ObjectObject
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_NotEqual_ObjectObject(class UObject* A, class UObject* B);// sub_746AA0()

	// Function Engine.KismetMathLibrary.NotEqual_NameName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_NotEqual_NameName(const struct FName& A, const struct FName& B);// sub_746AA0()

	// Function Engine.KismetMathLibrary.NotEqual_IntInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_NotEqual_IntInt(int A, int B);// sub_4B2900()

	// Function Engine.KismetMathLibrary.NotEqual_FloatFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_NotEqual_FloatFloat(float A, float B);// sub_4026190()

	// Function Engine.KismetMathLibrary.NotEqual_DateTimeDateTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_NotEqual_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);// sub_624F7B0()

	// Function Engine.KismetMathLibrary.NotEqual_ClassClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_NotEqual_ClassClass(class UObject* A, class UObject* B);// sub_746AA0()

	// Function Engine.KismetMathLibrary.NotEqual_ByteByte
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_NotEqual_ByteByte(unsigned char A, unsigned char B);// sub_3ECFC70()

	// Function Engine.KismetMathLibrary.NotEqual_BoolBool
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_NotEqual_BoolBool(unsigned char A, unsigned char B);// sub_1B61930()

	// Function Engine.KismetMathLibrary.Not_PreBool
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Not_PreBool(unsigned char A);// sub_238A5A0()

	// Function Engine.KismetMathLibrary.Not_Int
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Not_Int(int A);// sub_55F8520()

	// Function Engine.KismetMathLibrary.NormalizeToRange
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_NormalizeToRange(float Value, float RangeMin, float RangeMax);// sub_3EACB80()

	// Function Engine.KismetMathLibrary.NormalizedDeltaRotator
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_NormalizedDeltaRotator(const struct FRotator& A, const struct FRotator& B);// sub_4F7F600()

	// Function Engine.KismetMathLibrary.NormalizeAxis
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_NormalizeAxis(float Angle);// sub_197AAE0()

	// Function Engine.KismetMathLibrary.Normal2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_Normal2D(const struct FVector2D& A);// sub_3E5D070()

	// Function Engine.KismetMathLibrary.Normal
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_Normal(const struct FVector& A);// sub_550B6C0()

	// Function Engine.KismetMathLibrary.NegateVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_NegateVector(const struct FVector& A);// sub_4BF7CD0()

	// Function Engine.KismetMathLibrary.NegateRotator
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_NegateRotator(const struct FRotator& A);// sub_24C53C0()

	// Function Engine.KismetMathLibrary.NearlyEqual_TransformTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_NearlyEqual_TransformTransform(const struct FTransform& A, const struct FTransform& B, float LocationTolerance, float RotationTolerance, float Scale3DTolerance);// sub_5739460()

	// Function Engine.KismetMathLibrary.NearlyEqual_FloatFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_NearlyEqual_FloatFloat(float A, float B, float ErrorTolerance);// sub_5DEB3E0()

	// Function Engine.KismetMathLibrary.MultiplyMultiply_FloatFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_MultiplyMultiply_FloatFloat(float Base, float Exp);// sub_1746840()

	// Function Engine.KismetMathLibrary.MultiplyByPi
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_MultiplyByPi(float Value);// sub_3C3C560()

	// Function Engine.KismetMathLibrary.Multiply_VectorVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_Multiply_VectorVector(const struct FVector& A, const struct FVector& B);// sub_5F43AD0()

	// Function Engine.KismetMathLibrary.Multiply_VectorInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_Multiply_VectorInt(const struct FVector& A, int B);// sub_D9CD10()

	// Function Engine.KismetMathLibrary.Multiply_VectorFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_Multiply_VectorFloat(const struct FVector& A, float B);// sub_197AA00()

	// Function Engine.KismetMathLibrary.Multiply_Vector2DVector2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_Multiply_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B);// sub_20441B0()

	// Function Engine.KismetMathLibrary.Multiply_Vector2DFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_Multiply_Vector2DFloat(const struct FVector2D& A, float B);// sub_1AA8E40()

	// Function Engine.KismetMathLibrary.Multiply_TimespanFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTimespan STATIC_Multiply_TimespanFloat(const struct FTimespan& A, float Scalar);// sub_405A830()

	// Function Engine.KismetMathLibrary.Multiply_RotatorInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_Multiply_RotatorInt(const struct FRotator& A, int B);// sub_D9CD10()

	// Function Engine.KismetMathLibrary.Multiply_RotatorFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_Multiply_RotatorFloat(const struct FRotator& A, float B);// sub_197AA00()

	// Function Engine.KismetMathLibrary.Multiply_LinearColorLinearColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FLinearColor STATIC_Multiply_LinearColorLinearColor(const struct FLinearColor& A, const struct FLinearColor& B);// sub_1C0ED60()

	// Function Engine.KismetMathLibrary.Multiply_LinearColorFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FLinearColor STATIC_Multiply_LinearColorFloat(const struct FLinearColor& A, float B);// sub_20B3D80()

	// Function Engine.KismetMathLibrary.Multiply_IntInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Multiply_IntInt(int A, int B);// sub_2172450()

	// Function Engine.KismetMathLibrary.Multiply_IntFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Multiply_IntFloat(int A, float B);// sub_69690()

	// Function Engine.KismetMathLibrary.Multiply_FloatFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Multiply_FloatFloat(float A, float B);// sub_4AD22E0()

	// Function Engine.KismetMathLibrary.Multiply_ByteByte
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Multiply_ByteByte(unsigned char A, unsigned char B);// sub_4EAF2D0()

	// Function Engine.KismetMathLibrary.MirrorVectorByNormal
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_MirrorVectorByNormal(const struct FVector& InVect, const struct FVector& InNormal);// sub_24965D0()

	// Function Engine.KismetMathLibrary.MinOfIntArray
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_MinOfIntArray(TArray<int> IntArray, int* IndexOfMinValue, int* MinValue);// sub_3F5BE0()

	// Function Engine.KismetMathLibrary.MinOfFloatArray
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_MinOfFloatArray(TArray<float> FloatArray, int* IndexOfMinValue, float* MinValue);// sub_197A8B0()

	// Function Engine.KismetMathLibrary.MinOfByteArray
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_MinOfByteArray(TArray<unsigned char> ByteArray, int* IndexOfMinValue, unsigned char* MinValue);// sub_5179950()

	// Function Engine.KismetMathLibrary.MinimumAreaRectangle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_MinimumAreaRectangle(class UObject* WorldContextObject, TArray<struct FVector> InVerts, const struct FVector& SampleSurfaceNormal, unsigned char bDebugDraw, struct FVector* OutRectCenter, struct FRotator* OutRectRotation, float* OutSideLengthX, float* OutSideLengthY);// sub_5AD9280()

	// Function Engine.KismetMathLibrary.Min
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Min(int A, int B);// sub_3F97AB0()

	// Function Engine.KismetMathLibrary.MaxOfIntArray
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_MaxOfIntArray(TArray<int> IntArray, int* IndexOfMaxValue, int* MaxValue);// sub_5FF87C0()

	// Function Engine.KismetMathLibrary.MaxOfFloatArray
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_MaxOfFloatArray(TArray<float> FloatArray, int* IndexOfMaxValue, float* MaxValue);// sub_23252E0()

	// Function Engine.KismetMathLibrary.MaxOfByteArray
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_MaxOfByteArray(TArray<unsigned char> ByteArray, int* IndexOfMaxValue, unsigned char* MaxValue);// sub_686320()

	// Function Engine.KismetMathLibrary.Max
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Max(int A, int B);// sub_1488190()

	// Function Engine.KismetMathLibrary.MapRangeUnclamped
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_MapRangeUnclamped(float Value, float InRangeA, float InRangeB, float OutRangeA, float OutRangeB);// sub_DD2430()

	// Function Engine.KismetMathLibrary.MapRangeClamped
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_MapRangeClamped(float Value, float InRangeA, float InRangeB, float OutRangeA, float OutRangeB);// sub_600CD50()

	// Function Engine.KismetMathLibrary.MakeVector2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_MakeVector2D(float X, float Y);// sub_391090()

	// Function Engine.KismetMathLibrary.MakeVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_MakeVector(float X, float Y, float Z);// sub_41BC370()

	// Function Engine.KismetMathLibrary.MakeTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTransform STATIC_MakeTransform(const struct FVector& Location, const struct FRotator& Rotation, const struct FVector& Scale);// sub_4B13EC0()

	// Function Engine.KismetMathLibrary.MakeTimespan
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTimespan STATIC_MakeTimespan(int Days, int Hours, int Minutes, int Seconds, int Milliseconds);// sub_C51F60()

	// Function Engine.KismetMathLibrary.MakeRotFromZY
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_MakeRotFromZY(const struct FVector& Z, const struct FVector& Y);// sub_4CFBDE0()

	// Function Engine.KismetMathLibrary.MakeRotFromZX
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_MakeRotFromZX(const struct FVector& Z, const struct FVector& X);// sub_17C27C0()

	// Function Engine.KismetMathLibrary.MakeRotFromZ
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_MakeRotFromZ(const struct FVector& Z);// sub_23FA9E0()

	// Function Engine.KismetMathLibrary.MakeRotFromYZ
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_MakeRotFromYZ(const struct FVector& Y, const struct FVector& Z);// sub_11D410()

	// Function Engine.KismetMathLibrary.MakeRotFromYX
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_MakeRotFromYX(const struct FVector& Y, const struct FVector& X);// sub_1F25500()

	// Function Engine.KismetMathLibrary.MakeRotFromY
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_MakeRotFromY(const struct FVector& Y);// sub_5401D20()

	// Function Engine.KismetMathLibrary.MakeRotFromXZ
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_MakeRotFromXZ(const struct FVector& X, const struct FVector& Z);// sub_154F460()

	// Function Engine.KismetMathLibrary.MakeRotFromXY
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_MakeRotFromXY(const struct FVector& X, const struct FVector& Y);// sub_1FA2DE0()

	// Function Engine.KismetMathLibrary.MakeRotFromX
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_MakeRotFromX(const struct FVector& X);// sub_28DF60()

	// Function Engine.KismetMathLibrary.MakeRotator
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_MakeRotator(float Roll, float Pitch, float Yaw);// sub_487A480()

	// Function Engine.KismetMathLibrary.MakeRotationFromAxes
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_MakeRotationFromAxes(const struct FVector& Forward, const struct FVector& Right, const struct FVector& Up);// sub_12D2060()

	// Function Engine.KismetMathLibrary.MakeRandomStream
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRandomStream STATIC_MakeRandomStream(int InitialSeed);// sub_1E098E0()

	// Function Engine.KismetMathLibrary.MakePulsatingValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_MakePulsatingValue(float InCurrentTime, float InPulsesPerSecond, float InPhase);// sub_1D57E90()

	// Function Engine.KismetMathLibrary.MakePlaneFromPointAndNormal
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FPlane STATIC_MakePlaneFromPointAndNormal(const struct FVector& Point, const struct FVector& Normal);// sub_632D70()

	// Function Engine.KismetMathLibrary.MakeDateTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FDateTime STATIC_MakeDateTime(int Year, int Month, int Day, int Hour, int Minute, int second, int Millisecond);// sub_189FEC0()

	// Function Engine.KismetMathLibrary.MakeColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FLinearColor STATIC_MakeColor(float R, float G, float B, float A);// sub_3C834D0()

	// Function Engine.KismetMathLibrary.MakeBox2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FBox2D STATIC_MakeBox2D(const struct FVector2D& Min, const struct FVector2D& Max);// sub_5206980()

	// Function Engine.KismetMathLibrary.MakeBox
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FBox STATIC_MakeBox(const struct FVector& Min, const struct FVector& Max);// sub_3A6030()

	// Function Engine.KismetMathLibrary.Loge
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Loge(float A);// sub_44A3BC0()

	// Function Engine.KismetMathLibrary.Log
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Log(float A, float Base);// sub_1AA8D80()

	// Function Engine.KismetMathLibrary.LinePlaneIntersection_OriginNormal
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_LinePlaneIntersection_OriginNormal(const struct FVector& LineStart, const struct FVector& LineEnd, const struct FVector& PlaneOrigin, const struct FVector& PlaneNormal, float* T, struct FVector* Intersection);// sub_3D636C0()

	// Function Engine.KismetMathLibrary.LinePlaneIntersection
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_LinePlaneIntersection(const struct FVector& LineStart, const struct FVector& LineEnd, const struct FPlane& APlane, float* T, struct FVector* Intersection);// sub_4B2BB80()

	// Function Engine.KismetMathLibrary.LinearColorLerpUsingHSV
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FLinearColor STATIC_LinearColorLerpUsingHSV(const struct FLinearColor& A, const struct FLinearColor& B, float ALPHA);// sub_5AB0230()

	// Function Engine.KismetMathLibrary.LinearColorLerp
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FLinearColor STATIC_LinearColorLerp(const struct FLinearColor& A, const struct FLinearColor& B, float ALPHA);// sub_3FDE660()

	// Function Engine.KismetMathLibrary.LessLess_VectorRotator
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_LessLess_VectorRotator(const struct FVector& A, const struct FRotator& B);// sub_47C3750()

	// Function Engine.KismetMathLibrary.LessEqual_TimespanTimespan
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_LessEqual_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);// sub_55B81F0()

	// Function Engine.KismetMathLibrary.LessEqual_IntInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_LessEqual_IntInt(int A, int B);// sub_185C40()

	// Function Engine.KismetMathLibrary.LessEqual_FloatFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_LessEqual_FloatFloat(float A, float B);// sub_21CA3B0()

	// Function Engine.KismetMathLibrary.LessEqual_DateTimeDateTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_LessEqual_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);// sub_55B81F0()

	// Function Engine.KismetMathLibrary.LessEqual_ByteByte
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_LessEqual_ByteByte(unsigned char A, unsigned char B);// sub_4521030()

	// Function Engine.KismetMathLibrary.Less_TimespanTimespan
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Less_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);// sub_5483B70()

	// Function Engine.KismetMathLibrary.Less_IntInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Less_IntInt(int A, int B);// sub_1F3E930()

	// Function Engine.KismetMathLibrary.Less_FloatFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Less_FloatFloat(float A, float B);// sub_14A0FF0()

	// Function Engine.KismetMathLibrary.Less_DateTimeDateTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Less_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);// sub_5483B70()

	// Function Engine.KismetMathLibrary.Less_ByteByte
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Less_ByteByte(unsigned char A, unsigned char B);// sub_61E2E60()

	// Function Engine.KismetMathLibrary.Lerp
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Lerp(float A, float B, float ALPHA);// sub_92B460()

	// Function Engine.KismetMathLibrary.IsPointInBoxWithTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsPointInBoxWithTransform(const struct FVector& Point, const struct FTransform& BoxWorldTransform, const struct FVector& BoxExtent);// sub_49BD9F0()

	// Function Engine.KismetMathLibrary.IsPointInBox
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsPointInBox(const struct FVector& Point, const struct FVector& BoxOrigin, const struct FVector& BoxExtent);// sub_48DF5B0()

	// Function Engine.KismetMathLibrary.IsMorning
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsMorning(const struct FDateTime& A);// sub_18D24F0()

	// Function Engine.KismetMathLibrary.IsLeapYear
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsLeapYear(int Year);// sub_4ED9340()

	// Function Engine.KismetMathLibrary.IsAfternoon
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsAfternoon(const struct FDateTime& A);// sub_448CBE0()

	// Function Engine.KismetMathLibrary.InvertTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTransform STATIC_InvertTransform(const struct FTransform& T);// sub_61B6030()

	// Function Engine.KismetMathLibrary.InverseTransformLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_InverseTransformLocation(const struct FTransform& T, const struct FVector& Location);// sub_4AE75A0()

	// Function Engine.KismetMathLibrary.InverseTransformDirection
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_InverseTransformDirection(const struct FTransform& T, const struct FVector& Direction);// sub_600CBA0()

	// Function Engine.KismetMathLibrary.InverseLerp
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_InverseLerp(float A, float B, float Value);// sub_165B50()

	// Function Engine.KismetMathLibrary.InRange_FloatFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_InRange_FloatFloat(float Value, float Min, float Max, unsigned char InclusiveMin, unsigned char InclusiveMax);// sub_550B520()

	// Function Engine.KismetMathLibrary.Hypotenuse
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Hypotenuse(float Width, float Height);// sub_545E10()

	// Function Engine.KismetMathLibrary.HSVToRGB_Vector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_HSVToRGB_Vector(const struct FLinearColor& HSV, struct FLinearColor* RGB);// sub_6153690()

	// Function Engine.KismetMathLibrary.HSVToRGB
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FLinearColor STATIC_HSVToRGB(float H, float S, float V, float A);// sub_E40E90()

	// Function Engine.KismetMathLibrary.GridSnap_Float
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GridSnap_Float(float Location, float GridSize);// sub_1DA2920()

	// Function Engine.KismetMathLibrary.GreaterGreater_VectorRotator
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GreaterGreater_VectorRotator(const struct FVector& A, const struct FRotator& B);// sub_17DE350()

	// Function Engine.KismetMathLibrary.GreaterEqual_TimespanTimespan
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GreaterEqual_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);// sub_1ED41B0()

	// Function Engine.KismetMathLibrary.GreaterEqual_IntInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GreaterEqual_IntInt(int A, int B);// sub_4F0E0C0()

	// Function Engine.KismetMathLibrary.GreaterEqual_FloatFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GreaterEqual_FloatFloat(float A, float B);// sub_21B3DF0()

	// Function Engine.KismetMathLibrary.GreaterEqual_DateTimeDateTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GreaterEqual_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);// sub_1ED41B0()

	// Function Engine.KismetMathLibrary.GreaterEqual_ByteByte
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GreaterEqual_ByteByte(unsigned char A, unsigned char B);// sub_19C25D0()

	// Function Engine.KismetMathLibrary.Greater_TimespanTimespan
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Greater_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);// sub_D32CC0()

	// Function Engine.KismetMathLibrary.Greater_IntInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Greater_IntInt(int A, int B);// sub_55F8460()

	// Function Engine.KismetMathLibrary.Greater_FloatFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Greater_FloatFloat(float A, float B);// sub_1BB17F0()

	// Function Engine.KismetMathLibrary.Greater_DateTimeDateTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Greater_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);// sub_D32CC0()

	// Function Engine.KismetMathLibrary.Greater_ByteByte
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Greater_ByteByte(unsigned char A, unsigned char B);// sub_4A89EE0()

	// Function Engine.KismetMathLibrary.GetYear
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetYear(const struct FDateTime& A);// sub_202C510()

	// Function Engine.KismetMathLibrary.GetYawPitchFromVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetYawPitchFromVector(const struct FVector& InVec, float* Yaw, float* Pitch);// sub_1142E70()

	// Function Engine.KismetMathLibrary.GetVectorArrayAverage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetVectorArrayAverage(TArray<struct FVector> Vectors);// sub_605000()

	// Function Engine.KismetMathLibrary.GetUpVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetUpVector(const struct FRotator& InRot);// sub_4CAC620()

	// Function Engine.KismetMathLibrary.GetTotalSeconds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetTotalSeconds(const struct FTimespan& A);// sub_21B3D70()

	// Function Engine.KismetMathLibrary.GetTotalMinutes
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetTotalMinutes(const struct FTimespan& A);// sub_3C21F00()

	// Function Engine.KismetMathLibrary.GetTotalMilliseconds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetTotalMilliseconds(const struct FTimespan& A);// sub_46FD780()

	// Function Engine.KismetMathLibrary.GetTotalHours
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetTotalHours(const struct FTimespan& A);// sub_1C28D50()

	// Function Engine.KismetMathLibrary.GetTotalDays
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetTotalDays(const struct FTimespan& A);// sub_D88090()

	// Function Engine.KismetMathLibrary.GetTimeOfDay
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTimespan STATIC_GetTimeOfDay(const struct FDateTime& A);// sub_61C8920()

	// Function Engine.KismetMathLibrary.GetTAU
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetTAU();// sub_126CA20()

	// Function Engine.KismetMathLibrary.GetSeconds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetSeconds(const struct FTimespan& A);// sub_17AAFD0()

	// Function Engine.KismetMathLibrary.GetSecond
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetSecond(const struct FDateTime& A);// sub_17AAFD0()

	// Function Engine.KismetMathLibrary.GetRightVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetRightVector(const struct FRotator& InRot);// sub_3CD6A90()

	// Function Engine.KismetMathLibrary.GetReflectionVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetReflectionVector(const struct FVector& Direction, const struct FVector& SurfaceNormal);// sub_1D8A240()

	// Function Engine.KismetMathLibrary.GetPointDistanceToSegment
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetPointDistanceToSegment(const struct FVector& Point, const struct FVector& SegmentStart, const struct FVector& SegmentEnd);// sub_5135320()

	// Function Engine.KismetMathLibrary.GetPointDistanceToLine
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetPointDistanceToLine(const struct FVector& Point, const struct FVector& LineOrigin, const struct FVector& LineDirection);// sub_3198D0()

	// Function Engine.KismetMathLibrary.GetPI
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetPI();// sub_3D7E9D0()

	// Function Engine.KismetMathLibrary.GetMonth
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetMonth(const struct FDateTime& A);// sub_52759C0()

	// Function Engine.KismetMathLibrary.GetMinutes
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetMinutes(const struct FTimespan& A);// sub_453E8E0()

	// Function Engine.KismetMathLibrary.GetMinute
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetMinute(const struct FDateTime& A);// sub_453E8E0()

	// Function Engine.KismetMathLibrary.GetMinElement
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetMinElement(const struct FVector& A);// sub_6153610()

	// Function Engine.KismetMathLibrary.GetMilliseconds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetMilliseconds(const struct FTimespan& A);// sub_4A59860()

	// Function Engine.KismetMathLibrary.GetMillisecond
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetMillisecond(const struct FDateTime& A);// sub_4A59860()

	// Function Engine.KismetMathLibrary.GetMaxElement
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetMaxElement(const struct FVector& A);// sub_1F6D400()

	// Function Engine.KismetMathLibrary.GetHours
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetHours(const struct FTimespan& A);// sub_3BB8B0()

	// Function Engine.KismetMathLibrary.GetHour12
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetHour12(const struct FDateTime& A);// sub_11D46E0()

	// Function Engine.KismetMathLibrary.GetHour
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetHour(const struct FDateTime& A);// sub_3BB8B0()

	// Function Engine.KismetMathLibrary.GetForwardVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetForwardVector(const struct FRotator& InRot);// sub_66D5B0()

	// Function Engine.KismetMathLibrary.GetDuration
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTimespan STATIC_GetDuration(const struct FTimespan& A);// sub_245CBE0()

	// Function Engine.KismetMathLibrary.GetDirectionUnitVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetDirectionUnitVector(const struct FVector& From, const struct FVector& To);// sub_3BE4D90()

	// Function Engine.KismetMathLibrary.GetDays
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetDays(const struct FTimespan& A);// sub_4281F0()

	// Function Engine.KismetMathLibrary.GetDayOfYear
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetDayOfYear(const struct FDateTime& A);// sub_C51EE0()

	// Function Engine.KismetMathLibrary.GetDay
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetDay(const struct FDateTime& A);// sub_4FC8EF0()

	// Function Engine.KismetMathLibrary.GetDate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FDateTime STATIC_GetDate(const struct FDateTime& A);// sub_4C48E40()

	// Function Engine.KismetMathLibrary.GetAxes
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetAxes(const struct FRotator& A, struct FVector* X, struct FVector* Y, struct FVector* Z);// sub_13E37F0()

	// Function Engine.KismetMathLibrary.FTruncVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FIntVector STATIC_FTruncVector(const struct FVector& InVector);// sub_626A8A0()

	// Function Engine.KismetMathLibrary.FTrunc
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_FTrunc(float A);// sub_1B404A0()

	// Function Engine.KismetMathLibrary.FromSeconds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTimespan STATIC_FromSeconds(float Seconds);// sub_183ACB0()

	// Function Engine.KismetMathLibrary.FromMinutes
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTimespan STATIC_FromMinutes(float Minutes);// sub_604E60()

	// Function Engine.KismetMathLibrary.FromMilliseconds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTimespan STATIC_FromMilliseconds(float Milliseconds);// sub_14D5630()

	// Function Engine.KismetMathLibrary.FromHours
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTimespan STATIC_FromHours(float Hours);// sub_478690()

	// Function Engine.KismetMathLibrary.FromDays
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTimespan STATIC_FromDays(float Days);// sub_7FF200()

	// Function Engine.KismetMathLibrary.Fraction
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Fraction(float A);// sub_405A5F0()

	// Function Engine.KismetMathLibrary.FMod
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_FMod(float Dividend, float Divisor, float* Remainder);// sub_1D37170()

	// Function Engine.KismetMathLibrary.FMin
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_FMin(float A, float B);// sub_1674280()

	// Function Engine.KismetMathLibrary.FMax
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_FMax(float A, float B);// sub_F7C6E0()

	// Function Engine.KismetMathLibrary.FloatSpringInterp
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_FloatSpringInterp(float Current, float Target, float Stiffness, float CriticalDampingFactor, float DeltaTime, float Mass, struct FFloatSpringState* SpringState);// sub_514BAC0()

	// Function Engine.KismetMathLibrary.FixedTurn
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_FixedTurn(float InCurrent, float InDesired, float InDeltaRate);// sub_4EAF1C0()

	// Function Engine.KismetMathLibrary.FInterpTo_Constant
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_FInterpTo_Constant(float Current, float Target, float DeltaTime, float InterpSpeed);// sub_88BEB0()

	// Function Engine.KismetMathLibrary.FInterpTo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_FInterpTo(float Current, float Target, float DeltaTime, float InterpSpeed);// sub_4C983E0()

	// Function Engine.KismetMathLibrary.FInterpEaseInOut
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_FInterpEaseInOut(float A, float B, float ALPHA, float Exponent);// sub_17466F0()

	// Function Engine.KismetMathLibrary.FindNearestPointsOnLineSegments
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_FindNearestPointsOnLineSegments(const struct FVector& Segment1Start, const struct FVector& Segment1End, const struct FVector& Segment2Start, const struct FVector& Segment2End, struct FVector* Segment1Point, struct FVector* Segment2Point);// sub_215AFE0()

	// Function Engine.KismetMathLibrary.FindLookAtRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_FindLookAtRotation(const struct FVector& Start, const struct FVector& Target);// sub_F60F10()

	// Function Engine.KismetMathLibrary.FindClosestPointOnSegment
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_FindClosestPointOnSegment(const struct FVector& Point, const struct FVector& SegmentStart, const struct FVector& SegmentEnd);// sub_11BBB70()

	// Function Engine.KismetMathLibrary.FindClosestPointOnLine
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_FindClosestPointOnLine(const struct FVector& Point, const struct FVector& LineOrigin, const struct FVector& LineDirection);// sub_5702050()

	// Function Engine.KismetMathLibrary.FFloor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_FFloor(float A);// sub_4642D00()

	// Function Engine.KismetMathLibrary.FClamp
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_FClamp(float Value, float Min, float Max);// sub_3E26100()

	// Function Engine.KismetMathLibrary.FCeil
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_FCeil(float A);// sub_1253A70()

	// Function Engine.KismetMathLibrary.Exp
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Exp(float A);// sub_4988920()

	// Function Engine.KismetMathLibrary.EqualEqual_VectorVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EqualEqual_VectorVector(const struct FVector& A, const struct FVector& B, float ErrorTolerance);// sub_4AE7350()

	// Function Engine.KismetMathLibrary.EqualEqual_Vector2DVector2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EqualEqual_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B, float ErrorTolerance);// sub_3AFAF70()

	// Function Engine.KismetMathLibrary.EqualEqual_TransformTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EqualEqual_TransformTransform(const struct FTransform& A, const struct FTransform& B);// sub_425FA20()

	// Function Engine.KismetMathLibrary.EqualEqual_TimespanTimespan
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EqualEqual_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);// sub_5E3C730()

	// Function Engine.KismetMathLibrary.EqualEqual_RotatorRotator
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EqualEqual_RotatorRotator(const struct FRotator& A, const struct FRotator& B, float ErrorTolerance);// sub_10342E0()

	// Function Engine.KismetMathLibrary.EqualEqual_ObjectObject
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EqualEqual_ObjectObject(class UObject* A, class UObject* B);// sub_14880A0()

	// Function Engine.KismetMathLibrary.EqualEqual_NameName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EqualEqual_NameName(const struct FName& A, const struct FName& B);// sub_14880A0()

	// Function Engine.KismetMathLibrary.EqualEqual_IntInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EqualEqual_IntInt(int A, int B);// sub_54B0810()

	// Function Engine.KismetMathLibrary.EqualEqual_FloatFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EqualEqual_FloatFloat(float A, float B);// sub_1A26590()

	// Function Engine.KismetMathLibrary.EqualEqual_DateTimeDateTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EqualEqual_DateTimeDateTime(const struct FDateTime& A, const struct FDateTime& B);// sub_5E3C730()

	// Function Engine.KismetMathLibrary.EqualEqual_ClassClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EqualEqual_ClassClass(class UObject* A, class UObject* B);// sub_14880A0()

	// Function Engine.KismetMathLibrary.EqualEqual_ByteByte
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EqualEqual_ByteByte(unsigned char A, unsigned char B);// sub_5162F90()

	// Function Engine.KismetMathLibrary.EqualEqual_BoolBool
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EqualEqual_BoolBool(unsigned char A, unsigned char B);// sub_72E510()

	// Function Engine.KismetMathLibrary.Ease
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Ease(float A, float B, float ALPHA, TEnumAsByte<EEasingFunc> EasingFunc, float BlendExp, int Steps);// sub_5C24140()

	// Function Engine.KismetMathLibrary.DotProduct2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_DotProduct2D(const struct FVector2D& A, const struct FVector2D& B);// sub_4A3FE20()

	// Function Engine.KismetMathLibrary.Dot_VectorVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Dot_VectorVector(const struct FVector& A, const struct FVector& B);// sub_4AFED40()

	// Function Engine.KismetMathLibrary.Divide_VectorVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_Divide_VectorVector(const struct FVector& A, const struct FVector& B);// sub_126C8F0()

	// Function Engine.KismetMathLibrary.Divide_VectorInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_Divide_VectorInt(const struct FVector& A, int B);// sub_605CF30()

	// Function Engine.KismetMathLibrary.Divide_VectorFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_Divide_VectorFloat(const struct FVector& A, float B);// sub_5031810()

	// Function Engine.KismetMathLibrary.Divide_Vector2DFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_Divide_Vector2DFloat(const struct FVector2D& A, float B);// sub_4556490()

	// Function Engine.KismetMathLibrary.Divide_IntInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Divide_IntInt(int A, int B);// sub_5C436C0()

	// Function Engine.KismetMathLibrary.Divide_FloatFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Divide_FloatFloat(float A, float B);// sub_16FF500()

	// Function Engine.KismetMathLibrary.Divide_ByteByte
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Divide_ByteByte(unsigned char A, unsigned char B);// sub_1CB9C60()

	// Function Engine.KismetMathLibrary.DegTan
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_DegTan(float A);// sub_1222450()

	// Function Engine.KismetMathLibrary.DegSin
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_DegSin(float A);// sub_CB1D40()

	// Function Engine.KismetMathLibrary.DegreesToRadians
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_DegreesToRadians(float A);// sub_1A26510()

	// Function Engine.KismetMathLibrary.DegCos
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_DegCos(float A);// sub_4455CB0()

	// Function Engine.KismetMathLibrary.DegAtan2
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_DegAtan2(float A, float B);// sub_1CA3060()

	// Function Engine.KismetMathLibrary.DegAtan
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_DegAtan(float A);// sub_478600()

	// Function Engine.KismetMathLibrary.DegAsin
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_DegAsin(float A);// sub_40A3910()

	// Function Engine.KismetMathLibrary.DegAcos
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_DegAcos(float A);// sub_4614690()

	// Function Engine.KismetMathLibrary.DaysInYear
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_DaysInYear(int Year);// sub_DED540()

	// Function Engine.KismetMathLibrary.DaysInMonth
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_DaysInMonth(int Year, int Month);// sub_54C71A0()

	// Function Engine.KismetMathLibrary.DateTimeMinValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FDateTime STATIC_DateTimeMinValue();// sub_FE1900()

	// Function Engine.KismetMathLibrary.DateTimeMaxValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FDateTime STATIC_DateTimeMaxValue();// sub_473E700()

	// Function Engine.KismetMathLibrary.DateTimeFromString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_DateTimeFromString(const struct FString& DateTimeString, struct FDateTime* Result);// sub_C51D90()

	// Function Engine.KismetMathLibrary.DateTimeFromIsoString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_DateTimeFromIsoString(const struct FString& IsoString, struct FDateTime* Result);// sub_5E7F880()

	// Function Engine.KismetMathLibrary.CrossProduct2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_CrossProduct2D(const struct FVector2D& A, const struct FVector2D& B);// sub_60B2C50()

	// Function Engine.KismetMathLibrary.Cross_VectorVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_Cross_VectorVector(const struct FVector& A, const struct FVector& B);// sub_CCBB70()

	// Function Engine.KismetMathLibrary.CreateVectorFromYawPitch
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_CreateVectorFromYawPitch(float Yaw, float Pitch, float Length);// sub_4DE4CB0()

	// Function Engine.KismetMathLibrary.Cos
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Cos(float A);// sub_66D480()

	// Function Engine.KismetMathLibrary.ConvertTransformToRelative
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTransform STATIC_ConvertTransformToRelative(const struct FTransform& Transform, const struct FTransform& ParentTransform);// sub_4988790()

	// Function Engine.KismetMathLibrary.Conv_VectorToVector2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_Conv_VectorToVector2D(const struct FVector& InVector);// sub_210BB0()

	// Function Engine.KismetMathLibrary.Conv_VectorToTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTransform STATIC_Conv_VectorToTransform(const struct FVector& InLocation);// sub_3FF4770()

	// Function Engine.KismetMathLibrary.Conv_VectorToRotator
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_Conv_VectorToRotator(const struct FVector& InVec);// sub_4832870()

	// Function Engine.KismetMathLibrary.Conv_VectorToLinearColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FLinearColor STATIC_Conv_VectorToLinearColor(const struct FVector& InVec);// sub_5A53C00()

	// Function Engine.KismetMathLibrary.Conv_Vector2DToVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_Conv_Vector2DToVector(const struct FVector2D& InVector2D, float Z);// sub_10A35F0()

	// Function Engine.KismetMathLibrary.Conv_RotatorToVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_Conv_RotatorToVector(const struct FRotator& InRot);// sub_52DF460()

	// Function Engine.KismetMathLibrary.Conv_LinearColorToVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_Conv_LinearColorToVector(const struct FLinearColor& InLinearColor);// sub_20E25F0()

	// Function Engine.KismetMathLibrary.Conv_LinearColorToColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FColor STATIC_Conv_LinearColorToColor(const struct FLinearColor& InLinearColor);// sub_E02780()

	// Function Engine.KismetMathLibrary.Conv_IntVectorToVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_Conv_IntVectorToVector(const struct FIntVector& InIntVector);// sub_13708A0()

	// Function Engine.KismetMathLibrary.Conv_IntToIntVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FIntVector STATIC_Conv_IntToIntVector(int inInt);// sub_60B2BD0()

	// Function Engine.KismetMathLibrary.Conv_IntToFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Conv_IntToFloat(int inInt);// sub_5D42A00()

	// Function Engine.KismetMathLibrary.Conv_IntToByte
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Conv_IntToByte(int inInt);// sub_746A20()

	// Function Engine.KismetMathLibrary.Conv_IntToBool
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Conv_IntToBool(int inInt);// sub_90D130()

	// Function Engine.KismetMathLibrary.Conv_FloatToVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_Conv_FloatToVector(float InFloat);// sub_4BBE240()

	// Function Engine.KismetMathLibrary.Conv_FloatToLinearColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FLinearColor STATIC_Conv_FloatToLinearColor(float InFloat);// sub_118AB90()

	// Function Engine.KismetMathLibrary.Conv_ColorToLinearColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FLinearColor STATIC_Conv_ColorToLinearColor(const struct FColor& InColor);// sub_3EACA30()

	// Function Engine.KismetMathLibrary.Conv_ByteToInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Conv_ByteToInt(unsigned char InByte);// sub_556EF60()

	// Function Engine.KismetMathLibrary.Conv_ByteToFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Conv_ByteToFloat(unsigned char InByte);// sub_5B94E80()

	// Function Engine.KismetMathLibrary.Conv_BoolToInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Conv_BoolToInt(unsigned char InBool);// sub_4E97EF0()

	// Function Engine.KismetMathLibrary.Conv_BoolToFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Conv_BoolToFloat(unsigned char InBool);// sub_4185890()

	// Function Engine.KismetMathLibrary.Conv_BoolToByte
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Conv_BoolToByte(unsigned char InBool);// sub_90D130()

	// Function Engine.KismetMathLibrary.ComposeTransforms
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTransform STATIC_ComposeTransforms(const struct FTransform& A, const struct FTransform& B);// sub_1207590()

	// Function Engine.KismetMathLibrary.ComposeRotators
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_ComposeRotators(const struct FRotator& A, const struct FRotator& B);// sub_1FA350()

	// Function Engine.KismetMathLibrary.ClassIsChildOf
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_ClassIsChildOf(class UObject* TestClass, class UObject* ParentClass);// sub_1746630()

	// Function Engine.KismetMathLibrary.ClampVectorSize
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_ClampVectorSize(const struct FVector& A, float Min, float Max);// sub_1903720()

	// Function Engine.KismetMathLibrary.ClampAxis
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_ClampAxis(float Angle);// sub_41D6200()

	// Function Engine.KismetMathLibrary.ClampAngle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_ClampAngle(float AngleDegrees, float MinAngleDegrees, float MaxAngleDegrees);// sub_118AA80()

	// Function Engine.KismetMathLibrary.Clamp
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Clamp(int Value, int Min, int Max);// sub_23FA8F0()

	// Function Engine.KismetMathLibrary.CInterpTo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FLinearColor STATIC_CInterpTo(const struct FLinearColor& Current, const struct FLinearColor& Target, float DeltaTime, float InterpSpeed);// sub_5120CF0()

	// Function Engine.KismetMathLibrary.BreakVector2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BreakVector2D(const struct FVector2D& InVec, float* X, float* Y);// sub_3DAB50()

	// Function Engine.KismetMathLibrary.BreakVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BreakVector(const struct FVector& InVec, float* X, float* Y, float* Z);// sub_83730()

	// Function Engine.KismetMathLibrary.BreakTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BreakTransform(const struct FTransform& InTransform, struct FVector* Location, struct FRotator* Rotation, struct FVector* Scale);// sub_5E97BE0()

	// Function Engine.KismetMathLibrary.BreakTimespan
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BreakTimespan(const struct FTimespan& InTimespan, int* Days, int* Hours, int* Minutes, int* Seconds, int* Milliseconds);// sub_CB1A20()

	// Function Engine.KismetMathLibrary.BreakRotIntoAxes
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BreakRotIntoAxes(const struct FRotator& InRot, struct FVector* X, struct FVector* Y, struct FVector* Z);// sub_442020()

	// Function Engine.KismetMathLibrary.BreakRotator
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BreakRotator(const struct FRotator& InRot, float* Roll, float* Pitch, float* Yaw);// sub_4BDB000()

	// Function Engine.KismetMathLibrary.BreakRandomStream
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BreakRandomStream(const struct FRandomStream& InRandomStream, int* InitialSeed);// sub_98ABE0()

	// Function Engine.KismetMathLibrary.BreakDateTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BreakDateTime(const struct FDateTime& InDateTime, int* Year, int* Month, int* Day, int* Hour, int* Minute, int* second, int* Millisecond);// sub_3D7E720()

	// Function Engine.KismetMathLibrary.BreakColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BreakColor(const struct FLinearColor& InColor, float* R, float* G, float* B, float* A);// sub_600C610()

	// Function Engine.KismetMathLibrary.BooleanXOR
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BooleanXOR(unsigned char A, unsigned char B);// sub_600C550()

	// Function Engine.KismetMathLibrary.BooleanOR
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BooleanOR(unsigned char A, unsigned char B);// sub_54C70D0()

	// Function Engine.KismetMathLibrary.BooleanNOR
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BooleanNOR(unsigned char A, unsigned char B);// sub_54C7000()

	// Function Engine.KismetMathLibrary.BooleanNAND
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BooleanNAND(unsigned char A, unsigned char B);// sub_59FF140()

	// Function Engine.KismetMathLibrary.BooleanAND
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BooleanAND(unsigned char A, unsigned char B);// sub_EC4AD0()

	// Function Engine.KismetMathLibrary.BMin
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BMin(unsigned char A, unsigned char B);// sub_60F8000()

	// Function Engine.KismetMathLibrary.BMax
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BMax(unsigned char A, unsigned char B);// sub_1AC6130()

	// Function Engine.KismetMathLibrary.Atan2
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Atan2(float A, float B);// sub_43BC670()

	// Function Engine.KismetMathLibrary.Atan
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Atan(float A);// sub_4C600B0()

	// Function Engine.KismetMathLibrary.Asin
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Asin(float A);// sub_4F9AB40()

	// Function Engine.KismetMathLibrary.And_IntInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_And_IntInt(int A, int B);// sub_5FDD8B0()

	// Function Engine.KismetMathLibrary.Add_VectorVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_Add_VectorVector(const struct FVector& A, const struct FVector& B);// sub_15B1FA0()

	// Function Engine.KismetMathLibrary.Add_VectorInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_Add_VectorInt(const struct FVector& A, int B);// sub_43F4E90()

	// Function Engine.KismetMathLibrary.Add_VectorFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_Add_VectorFloat(const struct FVector& A, float B);// sub_CE7A90()

	// Function Engine.KismetMathLibrary.Add_Vector2DVector2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_Add_Vector2DVector2D(const struct FVector2D& A, const struct FVector2D& B);// sub_1AC6070()

	// Function Engine.KismetMathLibrary.Add_Vector2DFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_Add_Vector2DFloat(const struct FVector2D& A, float B);// sub_2FE060()

	// Function Engine.KismetMathLibrary.Add_TimespanTimespan
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTimespan STATIC_Add_TimespanTimespan(const struct FTimespan& A, const struct FTimespan& B);// sub_1012F00()

	// Function Engine.KismetMathLibrary.Add_IntInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Add_IntInt(int A, int B);// sub_205B550()

	// Function Engine.KismetMathLibrary.Add_FloatFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Add_FloatFloat(float A, float B);// sub_12EB8E0()

	// Function Engine.KismetMathLibrary.Add_DateTimeTimespan
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FDateTime STATIC_Add_DateTimeTimespan(const struct FDateTime& A, const struct FTimespan& B);// sub_1012F00()

	// Function Engine.KismetMathLibrary.Add_ByteByte
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Add_ByteByte(unsigned char A, unsigned char B);// sub_1FFC3F0()

	// Function Engine.KismetMathLibrary.Acos
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Acos(float A);// sub_3F59E0()

	// Function Engine.KismetMathLibrary.Abs_Int
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Abs_Int(int A);// sub_49425F0()

	// Function Engine.KismetMathLibrary.Abs
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Abs(float A);// sub_1719ED0()


}


//Class Engine.SoundBase
//0x0078 (0x00B8 - 0x0040)
class USoundBase : public UObject
{
public:
	class USoundClass*                                 SoundClassObject;                                         // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bDebug : 1;                                               // 0x0048(0x0001) (Edit)
	unsigned char                                      bOverrideConcurrency : 1;                                 // 0x0048(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bIgnoreFocus : 1;                                         // 0x0048(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	class USoundConcurrency*                           SoundConcurrencySettings;                                 // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FSoundConcurrencySettings                   ConcurrencyOverrides;                                     // 0x0058(0x0010) (Edit, BlueprintVisible)
	TEnumAsByte<EMaxConcurrentResolutionRule>          MaxConcurrentResolutionRule;                              // 0x0068(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	int                                                MaxConcurrentPlayCount;                                   // 0x006C(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              Duration;                                                 // 0x0070(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	class USoundAttenuation*                           AttenuationSettings;                                      // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Priority;                                                 // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	class USoundSubmix*                                SoundSubmixObject;                                        // 0x0088(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FSoundSubmixSendInfo>                SoundSubmixSends;                                         // 0x0090(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              DefaultMasterReverbSendAmount;                            // 0x00A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	class USoundEffectSourcePresetChain*               SourceEffectChain;                                        // 0x00A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET

}


//Class Engine.SoundWave
//0x01E0 (0x0298 - 0x00B8)
class USoundWave : public USoundBase
{
public:
	int                                                CompressionQuality;                                       // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bLooping : 1;                                             // 0x00BC(0x0001) (Edit)
	unsigned char                                      bStreaming : 1;                                           // 0x00BC(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00BD(0x0003) MISSED OFFSET
	int                                                StreamingPriority;                                        // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bMature : 1;                                              // 0x00C4(0x0001) (Edit)
	unsigned char                                      bManualWordWrap : 1;                                      // 0x00C4(0x0001) (Edit)
	unsigned char                                      bSingleLine : 1;                                          // 0x00C4(0x0001) (Edit)
	unsigned char                                      bVirtualizeWhenSilent : 1;                                // 0x00C4(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00C5(0x0003) MISSED OFFSET
	TEnumAsByte<ESoundGroup>                           SoundGroup;                                               // 0x00C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x00C9(0x0007) MISSED OFFSET
	struct FString                                     SpokenText;                                               // 0x00D0(0x0010) (Edit, ZeroConstructor)
	float                                              SubtitlePriority;                                         // 0x00E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Volume;                                                   // 0x00E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Pitch;                                                    // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                NumChannels;                                              // 0x00EC(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                SampleRate;                                               // 0x00F0(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                RawPCMDataSize;                                           // 0x00F4(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FSubtitleCue>                        Subtitles;                                                // 0x00F8(0x0010) (Edit, ZeroConstructor)
	TArray<struct FLocalizedSubtitle>                  LocalizedSubtitles;                                       // 0x0108(0x0010) (ZeroConstructor)
	class UCurveTable*                                 Curves;                                                   // 0x0118(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveTable*                                 InternalCurves;                                           // 0x0120(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x170];                                     // 0x0128(0x0170) MISSED OFFSET

}


//Class Engine.Actor
//0x03C8 (0x0408 - 0x0040)
class AActor : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0040(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTakePointDamage;                                        // 0x0050(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0060(0x0004) MISSED OFFSET
	unsigned char                                      bActorEnableCollision : 1;                                // 0x0064(0x0001)
	unsigned char                                      UnknownData02 : 8;                                        // 0x0065(0x0001)
	unsigned char                                      bReplayRewindable : 1;                                    // 0x0065(0x0001)
	unsigned char                                      bReplicates : 1;                                          // 0x0065(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0066(0x0002) MISSED OFFSET
	struct FName                                       NetDriverName;                                            // 0x0068(0x0008) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ENetRole>                              RemoteRole;                                               // 0x0070(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
	class AActor*                                      Owner;                                                    // 0x0078(0x0008) (Net)
	struct FRepMovement                                ReplicatedMovement;                                       // 0x0080(0x0034) (Edit, Net, DisableEditOnInstance)
	unsigned char                                      UnknownData05[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET
	struct FRepAttachment                              AttachmentReplication;                                    // 0x00B8(0x0040) (Net, Transient)
	float                                              NetUpdateFrequency;                                       // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x10];                                      // 0x00FC(0x0010) MISSED OFFSET
	float                                              NetPriority;                                              // 0x010C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NetCullDistanceSquared;                                   // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FGuid                                       DestructibleId;                                           // 0x0114(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsDestroyedVersion : 1;                                  // 0x0124(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07 : 8;                                        // 0x0125(0x0001)
	unsigned char                                      RemoveFromLevelLOD : 1;                                   // 0x0125(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x2];                                       // 0x0126(0x0002) MISSED OFFSET
	struct FActorTickFunction                          PrimaryActorTick;                                         // 0x0128(0x0058) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData09[0x1];                                       // 0x0180(0x0001) MISSED OFFSET
	unsigned char                                      bAutoDestroyWhenFinished : 1;                             // 0x0181(0x0001) (BlueprintVisible)
	unsigned char                                      bCanBeDamaged : 1;                                        // 0x0181(0x0001) (Edit, BlueprintVisible, Net, SaveGame)
	unsigned char                                      bActorIsBeingDestroyed : 1;                               // 0x0181(0x0001) (Transient, DuplicateTransient)
	unsigned char                                      bCollideWhenPlacing : 1;                                  // 0x0181(0x0001)
	unsigned char                                      bFindCameraComponentWhenViewTarget : 1;                   // 0x0181(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bRelevantForNetworkReplays : 1;                           // 0x0181(0x0001)
	unsigned char                                      bGenerateOverlapEventsDuringLevelStreaming : 1;           // 0x0181(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bIgnoreDestroyActorFromBlueprint : 1;                     // 0x0181(0x0001) (Transient)
	unsigned char                                      UnknownData10 : 8;                                        // 0x0182(0x0001)
	unsigned char                                      bCanBeInCluster : 1;                                      // 0x0182(0x0001) (Edit)
	unsigned char                                      UnknownData11[0x5];                                       // 0x0183(0x0005) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnInputTouchEnd;                                          // 0x0188(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class UActorComponent*>                     InstanceComponents;                                       // 0x0198(0x0010) (ExportObject, ZeroConstructor)
	float                                              ForceReplicateInterleavingFreq;                           // 0x01A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData12[0x4];                                       // 0x01AC(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnClicked;                                                // 0x01B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	int                                                NetTag;                                                   // 0x01C0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData13[0x4];                                       // 0x01C4(0x0004) MISSED OFFSET
	TArray<class AActor*>                              Children;                                                 // 0x01C8(0x0010) (ZeroConstructor, Transient)
	float                                              InitialLifeSpan;                                          // 0x01D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAllowReceiveTickEventOnDedicatedServer : 1;              // 0x01DC(0x0001)
	unsigned char                                      bActorSeamlessTraveled : 1;                               // 0x01DC(0x0001)
	unsigned char                                      bIgnoresOriginShifting : 1;                               // 0x01DC(0x0001) (Edit)
	unsigned char                                      bEnableAutoLODGeneration : 1;                             // 0x01DC(0x0001) (Edit)
	EActorUpdateOverlapsMethod                         UpdateOverlapsMethodDuringLevelStreaming;                 // 0x01DD(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EActorUpdateOverlapsMethod                         DefaultUpdateOverlapsMethodDuringLevelStreaming;          // 0x01DE(0x0001) (Edit, ZeroConstructor, Config, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData14[0x51];                                      // 0x01DF(0x0051) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnInputTouchEnter;                                        // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnActorBeginOverlap;                                      // 0x0240(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEndCursorOver;                                          // 0x0250(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TEnumAsByte<ENetRole>                              Role;                                                     // 0x0260(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x7];                                       // 0x0261(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnReleased;                                               // 0x0268(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TEnumAsByte<EInputConsumeOptions>                  InputConsumeOption;                                       // 0x0278(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	TEnumAsByte<EAutoReceiveInput>                     AutoReceiveInput;                                         // 0x0279(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x6];                                       // 0x027A(0x0006) MISSED OFFSET
	int                                                InputPriority;                                            // 0x0280(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x4];                                       // 0x0284(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnInputTouchBegin;                                        // 0x0288(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTakeAnyDamage;                                          // 0x0298(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              MinNetUpdateFrequency;                                    // 0x02A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData18[0x4];                                       // 0x02AC(0x0004) MISSED OFFSET
	TArray<struct FName>                               Tags;                                                     // 0x02B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TWeakObjectPtr<class UChildActorComponent>         ParentComponent;                                          // 0x02C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class AActor>                       ParentComponentActor;                                     // 0x02C8(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	TArray<struct FName>                               Layers;                                                   // 0x02D0(0x0010) (ZeroConstructor)
	struct FScriptMulticastDelegate                    OnActorHit;                                               // 0x02E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnActorEndOverlap;                                        // 0x02F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	uint64_t                                           HiddenEditorViews;                                        // 0x0300(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnBeginCursorOver;                                        // 0x0308(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UInputComponent*                             InputComponent;                                           // 0x0318(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData19[0x8];                                       // 0x0320(0x0008) MISSED OFFSET
	class USceneComponent*                             RootComponent;                                            // 0x0328(0x0008) (ExportObject, InstancedReference)
	unsigned char                                      UnknownData20[0x8];                                       // 0x0330(0x0008) MISSED OFFSET
	class APawn*                                       Instigator;                                               // 0x0338(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bHidden : 1;                                              // 0x0340(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      bNetTemporary : 1;                                        // 0x0340(0x0001)
	unsigned char                                      bNetStartup : 1;                                          // 0x0340(0x0001)
	unsigned char                                      bOnlyRelevantToOwner : 1;                                 // 0x0340(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bAlwaysRelevant : 1;                                      // 0x0340(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      bReplicateMovement : 1;                                   // 0x0340(0x0001) (Edit, Net, DisableEditOnInstance)
	unsigned char                                      bIsSetSpectatedDelay : 1;                                 // 0x0340(0x0001) (Net)
	unsigned char                                      bTearOff : 1;                                             // 0x0340(0x0001) (Net)
	unsigned char                                      UnknownData21 : 8;                                        // 0x0341(0x0001)
	unsigned char                                      bExchangedRoles : 1;                                      // 0x0341(0x0001) (Transient)
	unsigned char                                      bNetLoadOnClient : 1;                                     // 0x0341(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bNetUseOwnerRelevancy : 1;                                // 0x0341(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      bBlockInput : 1;                                          // 0x0341(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bAllowTickBeforeBeginPlay : 1;                            // 0x0341(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData22[0x6];                                       // 0x0342(0x0006) MISSED OFFSET
	TArray<class AMatineeActor*>                       ControllingMatineeActors;                                 // 0x0348(0x0010) (ZeroConstructor, Transient)
	float                                              CustomTimeDilation;                                       // 0x0358(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData23[0x4];                                       // 0x035C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDestroyed;                                              // 0x0360(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEndPlay;                                                // 0x0370(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData24[0x8];                                       // 0x0380(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnInputTouchLeave;                                        // 0x0388(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData25[0x50];                                      // 0x0398(0x0050) MISSED OFFSET
	TArray<class UActorComponent*>                     BlueprintCreatedComponents;                               // 0x03E8(0x0010) (ExportObject, ZeroConstructor)
	ESpawnActorCollisionHandlingMethod                 SpawnCollisionHandlingMethod;                             // 0x03F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData26[0xF];                                       // 0x03F9(0x000F) MISSED OFFSET

	// Function Engine.Actor.WasRecentlyRendered
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_WasRecentlyRendered(float Tolerance);// sub_45FF5D0()

	// Function Engine.Actor.UserConstructionScript
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_UserConstructionScript();// sub_5C67A0()

	// Function Engine.Actor.TearOff
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_TearOff();// sub_E5EE40()

	// Function Engine.Actor.SnapRootComponentTo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SnapRootComponentTo(class AActor* InParentActor, const struct FName& InSocketName);// sub_2CBFB0()

	// Function Engine.Actor.SetTickGroup
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTickGroup(TEnumAsByte<ETickingGroup> NewTickGroup);// sub_4A0F5A0()

	// Function Engine.Actor.SetTickableWhenPaused
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTickableWhenPaused(unsigned char bTickableWhenPaused);// sub_48C6E90()

	// Function Engine.Actor.SetReplicates
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetReplicates(unsigned char bInReplicates);// sub_619B5E0()

	// Function Engine.Actor.SetReplicateMovement
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetReplicateMovement(unsigned char bInReplicateMovement);// sub_23BCEC0()

	// Function Engine.Actor.SetOwner
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetOwner(class AActor* NewOwner);// sub_571FFB0()

	// Function Engine.Actor.SetLifeSpan
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLifeSpan(float InLifespan);// sub_1287420()

	// Function Engine.Actor.SetActorTickInterval
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetActorTickInterval(float TickInterval);// sub_52257A0()

	// Function Engine.Actor.SetActorTickEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetActorTickEnabled(unsigned char bEnabled);// sub_3ED2290()

	// Function Engine.Actor.SetActorScale3D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetActorScale3D(const struct FVector& NewScale3D);// sub_1AE4200()

	// Function Engine.Actor.SetActorRelativeScale3D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetActorRelativeScale3D(const struct FVector& NewRelativeScale);// sub_6156FA0()

	// Function Engine.Actor.SetActorHiddenInGame
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetActorHiddenInGame(unsigned char bNewHidden);// sub_D1E8E0()

	// Function Engine.Actor.SetActorEnableCollision
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetActorEnableCollision(unsigned char bNewActorEnableCollision);// sub_4862540()

	// Function Engine.Actor.RemoveTickPrerequisiteComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RemoveTickPrerequisiteComponent(class UActorComponent* PrerequisiteComponent);// sub_11F200()

	// Function Engine.Actor.RemoveTickPrerequisiteActor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RemoveTickPrerequisiteActor(class AActor* PrerequisiteActor);// sub_939730()

	// Function Engine.Actor.ReceiveTick
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveTick(float DeltaSeconds);// sub_5C67A0()

	// Function Engine.Actor.ReceiveRadialDamage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveRadialDamage(float DamageReceived, class UDamageType* DamageType, const struct FVector& Origin, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser);// sub_5C67A0()

	// Function Engine.Actor.ReceivePointDamage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceivePointDamage(float Damage, class UDamageType* DamageType, const struct FVector& HitLocation, const struct FVector& HitNormal, class UPrimitiveComponent* HitComponent, const struct FName& BoneName, const struct FVector& ShotFromDirection, class AController* InstigatedBy, class AActor* DamageCauser, const struct FHitResult& HitInfo);// sub_5C67A0()

	// Function Engine.Actor.ReceiveHit
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, unsigned char bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);// sub_5C67A0()

	// Function Engine.Actor.ReceiveEndPlay
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);// sub_5C67A0()

	// Function Engine.Actor.ReceiveDestroyed
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveDestroyed();// sub_5C67A0()

	// Function Engine.Actor.ReceiveBeginPlay
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveBeginPlay();// sub_5C67A0()

	// Function Engine.Actor.ReceiveAnyDamage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveAnyDamage(float Damage, class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser);// sub_5C67A0()

	// Function Engine.Actor.ReceiveActorOnReleased
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveActorOnReleased(const struct FKey& ButtonReleased);// sub_5C67A0()

	// Function Engine.Actor.ReceiveActorOnInputTouchLeave
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveActorOnInputTouchLeave(TEnumAsByte<ETouchIndex> FingerIndex);// sub_5C67A0()

	// Function Engine.Actor.ReceiveActorOnInputTouchEnter
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveActorOnInputTouchEnter(TEnumAsByte<ETouchIndex> FingerIndex);// sub_5C67A0()

	// Function Engine.Actor.ReceiveActorOnInputTouchEnd
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveActorOnInputTouchEnd(TEnumAsByte<ETouchIndex> FingerIndex);// sub_5C67A0()

	// Function Engine.Actor.ReceiveActorOnInputTouchBegin
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveActorOnInputTouchBegin(TEnumAsByte<ETouchIndex> FingerIndex);// sub_5C67A0()

	// Function Engine.Actor.ReceiveActorOnClicked
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveActorOnClicked(const struct FKey& ButtonPressed);// sub_5C67A0()

	// Function Engine.Actor.ReceiveActorEndOverlap
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveActorEndOverlap(class AActor* OtherActor);// sub_5C67A0()

	// Function Engine.Actor.ReceiveActorEndCursorOver
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveActorEndCursorOver();// sub_5C67A0()

	// Function Engine.Actor.ReceiveActorBeginOverlap
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveActorBeginOverlap(class AActor* OtherActor);// sub_5C67A0()

	// Function Engine.Actor.ReceiveActorBeginCursorOver
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveActorBeginCursorOver();// sub_5C67A0()

	// Function Engine.Actor.OnRep_Role
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_Role();// sub_54F1340()

	// Function Engine.Actor.OnRep_ReplicateMovement
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_ReplicateMovement();// sub_B66B0()

	// Function Engine.Actor.OnRep_ReplicatedMovement
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_ReplicatedMovement();// sub_22B7310()

	// Function Engine.Actor.OnRep_Owner
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_Owner();// sub_11EACF0()

	// Function Engine.Actor.OnRep_Instigator
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_Instigator();// sub_1132CA0()

	// Function Engine.Actor.OnRep_AttachmentReplication
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_AttachmentReplication();// sub_4044CA0()

	// Function Engine.Actor.MakeNoise
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_MakeNoise(float Loudness, class APawn* NoiseInstigator, const struct FVector& NoiseLocation, float MaxRange, const struct FName& Tag);// sub_49F0CC0()

	// Function Engine.Actor.MakeMIDForMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UMaterialInstanceDynamic* STATIC_MakeMIDForMaterial(class UMaterialInterface* Parent);// sub_6082830()

	// Function Engine.Actor.K2_TeleportTo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_TeleportTo(const struct FVector& DestLocation, const struct FRotator& DestRotation);// sub_616E4C0()

	// Function Engine.Actor.K2_SetActorTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_SetActorTransform(const struct FTransform& NewTransform, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_1767D20()

	// Function Engine.Actor.K2_SetActorRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_SetActorRotation(const struct FRotator& NewRotation, unsigned char bTeleportPhysics);// sub_616E3E0()

	// Function Engine.Actor.K2_SetActorRelativeTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_SetActorRelativeTransform(const struct FTransform& NewRelativeTransform, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_60FA040()

	// Function Engine.Actor.K2_SetActorRelativeRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_SetActorRelativeRotation(const struct FRotator& NewRelativeRotation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_59E0A10()

	// Function Engine.Actor.K2_SetActorRelativeLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_SetActorRelativeLocation(const struct FVector& NewRelativeLocation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_4DE5B10()

	// Function Engine.Actor.K2_SetActorLocationAndRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_SetActorLocationAndRotation(const struct FVector& NewLocation, const struct FRotator& NewRotation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_1B999B0()

	// Function Engine.Actor.K2_SetActorLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_SetActorLocation(const struct FVector& NewLocation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_59E0860()

	// Function Engine.Actor.K2_OnReset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_OnReset();// sub_5C67A0()

	// Function Engine.Actor.K2_OnEndViewTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_OnEndViewTarget(class APlayerController* PC);// sub_5C67A0()

	// Function Engine.Actor.K2_OnBecomeViewTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_OnBecomeViewTarget(class APlayerController* PC);// sub_5C67A0()

	// Function Engine.Actor.K2_GetRootComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class USceneComponent* STATIC_K2_GetRootComponent();// sub_5A70DD0()

	// Function Engine.Actor.K2_GetActorRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_K2_GetActorRotation();// sub_1550FA0()

	// Function Engine.Actor.K2_GetActorLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_K2_GetActorLocation();// sub_23A4E20()

	// Function Engine.Actor.K2_DetachFromActor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_DetachFromActor(EDetachmentRule LocationRule, EDetachmentRule RotationRule, EDetachmentRule ScaleRule);// sub_487C190()

	// Function Engine.Actor.K2_DestroyComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_DestroyComponent(class UActorComponent* Component);// sub_3F64D50()

	// Function Engine.Actor.K2_DestroyActor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_DestroyActor();// sub_15E5C50()

	// Function Engine.Actor.K2_AttachToComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_AttachToComponent(class USceneComponent* Parent, const struct FName& SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule, unsigned char bWeldSimulatedBodies);// sub_61E5110()

	// Function Engine.Actor.K2_AttachToActor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_AttachToActor(class AActor* ParentActor, const struct FName& SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule, unsigned char bWeldSimulatedBodies);// sub_230CE30()

	// Function Engine.Actor.K2_AttachRootComponentToActor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_AttachRootComponentToActor(class AActor* InParentActor, const struct FName& InSocketName, TEnumAsByte<EAttachLocation> AttachLocationType, unsigned char bWeldSimulatedBodies);// sub_18D56E0()

	// Function Engine.Actor.K2_AttachRootComponentTo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_AttachRootComponentTo(class USceneComponent* InParent, const struct FName& InSocketName, TEnumAsByte<EAttachLocation> AttachLocationType, unsigned char bWeldSimulatedBodies);// sub_4BFB930()

	// Function Engine.Actor.K2_AddActorWorldTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_AddActorWorldTransform(const struct FTransform& DeltaTransform, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_24E6A90()

	// Function Engine.Actor.K2_AddActorWorldRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_AddActorWorldRotation(const struct FRotator& DeltaRotation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_108FD30()

	// Function Engine.Actor.K2_AddActorWorldOffset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_AddActorWorldOffset(const struct FVector& DeltaLocation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_1FC4A0()

	// Function Engine.Actor.K2_AddActorLocalTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_AddActorLocalTransform(const struct FTransform& NewTransform, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_4B4E20()

	// Function Engine.Actor.K2_AddActorLocalRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_AddActorLocalRotation(const struct FRotator& DeltaRotation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_1D39780()

	// Function Engine.Actor.K2_AddActorLocalOffset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_AddActorLocalOffset(const struct FVector& DeltaLocation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* SweepHitResult);// sub_1BFD150()

	// Function Engine.Actor.IsOverlappingActor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsOverlappingActor(class AActor* Other);// sub_1966060()

	// Function Engine.Actor.IsChildActor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsChildActor();// sub_1D8DDC0()

	// Function Engine.Actor.IsActorTickEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsActorTickEnabled();// sub_77FFF0()

	// Function Engine.Actor.IsActorBeingDestroyed
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsActorBeingDestroyed();// sub_5C97530()

	// Function Engine.Actor.HasAuthority
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_HasAuthority();// sub_13FFDD0()

	// Function Engine.Actor.GetVerticalDistanceTo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetVerticalDistanceTo(class AActor* OtherActor);// sub_4BBFFE0()

	// Function Engine.Actor.GetVelocity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetVelocity();// sub_510DDA0()

	// Function Engine.Actor.GetTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FTransform STATIC_GetTransform();// sub_4D73090()

	// Function Engine.Actor.GetTickableWhenPaused
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetTickableWhenPaused();// sub_14D6F50()

	// Function Engine.Actor.GetSquaredDistanceTo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetSquaredDistanceTo(class AActor* OtherActor);// sub_1441120()

	// Function Engine.Actor.GetRemoteRole
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TEnumAsByte<ENetRole> STATIC_GetRemoteRole();// sub_13FFDB0()

	// Function Engine.Actor.GetParentComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UChildActorComponent* STATIC_GetParentComponent();// sub_22F4B50()

	// Function Engine.Actor.GetParentActor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AActor* STATIC_GetParentActor();// sub_13CAF50()

	// Function Engine.Actor.GetOwner
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AActor* STATIC_GetOwner();// sub_5FB1590()

	// Function Engine.Actor.GetOverlappingComponents
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetOverlappingComponents(TArray<class UPrimitiveComponent*>* OverlappingComponents);// sub_3B7ED00()

	// Function Engine.Actor.GetOverlappingActors
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetOverlappingActors(class AActor* ClassFilter, TArray<class AActor*>* OverlappingActors);// sub_5A70CD0()

	// Function Engine.Actor.GetLifeSpan
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetLifeSpan();// sub_4D73050()

	// Function Engine.Actor.GetInstigatorController
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AController* STATIC_GetInstigatorController();// sub_148BF20()

	// Function Engine.Actor.GetInstigator
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class APawn* STATIC_GetInstigator();// sub_44A67E0()

	// Function Engine.Actor.GetInputVectorAxisValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetInputVectorAxisValue(const struct FKey& InputAxisKey);// sub_4F27600()

	// Function Engine.Actor.GetInputAxisValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetInputAxisValue(const struct FName& InputAxisName);// sub_571FF10()

	// Function Engine.Actor.GetInputAxisKeyValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetInputAxisKeyValue(const struct FKey& InputAxisKey);// sub_D021C0()

	// Function Engine.Actor.GetHorizontalDotProductTo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetHorizontalDotProductTo(class AActor* OtherActor);// sub_1CA3FA0()

	// Function Engine.Actor.GetHorizontalDistanceTo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetHorizontalDistanceTo(class AActor* OtherActor);// sub_546EB0()

	// Function Engine.Actor.GetGameTimeSinceCreation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetGameTimeSinceCreation();// sub_2778C0()

	// Function Engine.Actor.GetDotProductTo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetDotProductTo(class AActor* OtherActor);// sub_F337E0()

	// Function Engine.Actor.GetDistanceTo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetDistanceTo(class AActor* OtherActor);// sub_46FE460()

	// Function Engine.Actor.GetComponentsByTag
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TArray<class UActorComponent*> STATIC_GetComponentsByTag(class UActorComponent* ComponentClass, const struct FName& Tag);// sub_45FF3F0()

	// Function Engine.Actor.GetComponentsByClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TArray<class UActorComponent*> STATIC_GetComponentsByClass(class UActorComponent* ComponentClass);// sub_43E0AD0()

	// Function Engine.Actor.GetComponentByClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UActorComponent* STATIC_GetComponentByClass(class UActorComponent* ComponentClass);// sub_53EDF00()

	// Function Engine.Actor.GetAttachParentSocketName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FName STATIC_GetAttachParentSocketName();// sub_52E42A0()

	// Function Engine.Actor.GetAttachParentActor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AActor* STATIC_GetAttachParentActor();// sub_11EF580()

	// Function Engine.Actor.GetAttachedActors
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetAttachedActors(TArray<class AActor*>* OutActors);// sub_3DD490()

	// Function Engine.Actor.GetAllChildActors
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetAllChildActors(unsigned char bIncludeDescendants, TArray<class AActor*>* ChildActors);// sub_4331B70()

	// Function Engine.Actor.GetActorUpVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetActorUpVector();// sub_197DDC0()

	// Function Engine.Actor.GetActorTimeDilation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetActorTimeDilation();// sub_1174380()

	// Function Engine.Actor.GetActorTickInterval
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetActorTickInterval();// sub_3DCBE20()

	// Function Engine.Actor.GetActorScale3D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetActorScale3D();// sub_5781C00()

	// Function Engine.Actor.GetActorRightVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetActorRightVector();// sub_E9B130()

	// Function Engine.Actor.GetActorRelativeScale3D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetActorRelativeScale3D();// sub_3CA5980()

	// Function Engine.Actor.GetActorForwardVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetActorForwardVector();// sub_FFAEC0()

	// Function Engine.Actor.GetActorEyesViewPoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetActorEyesViewPoint(struct FVector* OutLocation, struct FRotator* OutRotation);// sub_52C67A0()

	// Function Engine.Actor.GetActorEnableCollision
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetActorEnableCollision();// sub_46445D0()

	// Function Engine.Actor.GetActorBounds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetActorBounds(unsigned char bOnlyCollidingComponents, unsigned char bIncludeFromChildActors, struct FVector* Origin, struct FVector* BoxExtent);// sub_5F15500()

	// Function Engine.Actor.ForceNetUpdate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ForceNetUpdate();// sub_EE1460()

	// Function Engine.Actor.FlushNetDormancy
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_FlushNetDormancy();// sub_546E90()

	// Function Engine.Actor.EnableInput
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_EnableInput(class APlayerController* PlayerController);// sub_616E350()

	// Function Engine.Actor.DisableInput
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DisableInput(class APlayerController* PlayerController);// sub_1144800()

	// Function Engine.Actor.DetachRootComponentFromParent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DetachRootComponentFromParent(unsigned char bMaintainWorldPosition);// sub_2017B70()

	// Function Engine.Actor.AddTickPrerequisiteComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddTickPrerequisiteComponent(class UActorComponent* PrerequisiteComponent);// sub_4F68EC0()

	// Function Engine.Actor.AddTickPrerequisiteActor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddTickPrerequisiteActor(class AActor* PrerequisiteActor);// sub_24E69C0()

	// Function Engine.Actor.AddComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UActorComponent* STATIC_AddComponent(const struct FName& TemplateName, unsigned char bManualAttachment, const struct FTransform& RelativeTransform, class UObject* ComponentTemplateContext);// sub_15CCED0()

	// Function Engine.Actor.ActorHasTag
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_ActorHasTag(const struct FName& Tag);// sub_7CEBD0()


}


//Class Engine.MaterialInterface
//0x0048 (0x0088 - 0x0040)
class UMaterialInterface : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	class USubsurfaceProfile*                          SubsurfaceProfile;                                        // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
	struct FLightmassMaterialInterfaceSettings         LightmassSettings;                                        // 0x0058(0x0014) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	TArray<struct FMaterialTextureInfo>                TextureStreamingData;                                     // 0x0070(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0080(0x0008) MISSED OFFSET

	// Function Engine.MaterialInterface.GetPhysicalMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UPhysicalMaterial* STATIC_GetPhysicalMaterial();// sub_23FCAD0()

	// Function Engine.MaterialInterface.GetBaseMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UMaterial* STATIC_GetBaseMaterial();// sub_3FF6320()


}


//Class Engine.MaterialInstance
//0x0170 (0x01F8 - 0x0088)
class UMaterialInstance : public UMaterialInterface
{
public:
	class UPhysicalMaterial*                           PhysMaterial;                                             // 0x0088(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          Parent;                                                   // 0x0090(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bHasStaticPermutationResource : 1;                        // 0x0098(0x0001)
	unsigned char                                      bPermutationResourceInBaseMaterial : 1;                   // 0x0098(0x0001)
	unsigned char                                      bOverrideSubsurfaceProfile : 1;                           // 0x0098(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET
	TArray<struct FFontParameterValue>                 FontParameterValues;                                      // 0x00A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FScalarParameterValue>               ScalarParameterValues;                                    // 0x00B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FTextureParameterValue>              TextureParameterValues;                                   // 0x00C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FVectorParameterValue>               VectorParameterValues;                                    // 0x00D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      bOverrideBaseProperties : 1;                              // 0x00E0(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00E1(0x0003) MISSED OFFSET
	struct FMaterialInstanceBasePropertyOverrides      BasePropertyOverrides;                                    // 0x00E4(0x0024) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData02[0xF0];                                      // 0x0108(0x00F0) MISSED OFFSET

}


//Class Engine.MaterialInstanceConstant
//0x0000 (0x01F8 - 0x01F8)
class UMaterialInstanceConstant : public UMaterialInstance
{
public:

}


//Class Engine.MaterialExpression
//0x0038 (0x0078 - 0x0040)
class UMaterialExpression : public UObject
{
public:
	class UMaterial*                                   Material;                                                 // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMaterialFunction*                           Function;                                                 // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FString                                     Desc;                                                     // 0x0050(0x0010) (Edit, ZeroConstructor)
	struct FColor                                      BorderColor;                                              // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRealtimePreview : 1;                                     // 0x0064(0x0001)
	unsigned char                                      bNeedToUpdatePreview : 1;                                 // 0x0064(0x0001) (Transient)
	unsigned char                                      bIsParameterExpression : 1;                               // 0x0064(0x0001)
	unsigned char                                      bCommentBubbleVisible : 1;                                // 0x0064(0x0001)
	unsigned char                                      bShowOutputNameOnPin : 1;                                 // 0x0064(0x0001)
	unsigned char                                      bShowMaskColorsOnPin : 1;                                 // 0x0064(0x0001)
	unsigned char                                      bHidePreviewWindow : 1;                                   // 0x0064(0x0001)
	unsigned char                                      bCollapsed : 1;                                           // 0x0064(0x0001)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0065(0x0001)
	unsigned char                                      bShaderInputData : 1;                                     // 0x0065(0x0001)
	unsigned char                                      bShowInputs : 1;                                          // 0x0065(0x0001)
	unsigned char                                      bShowOutputs : 1;                                         // 0x0065(0x0001)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0066(0x0002) MISSED OFFSET
	TArray<struct FExpressionOutput>                   Outputs;                                                  // 0x0068(0x0010) (ZeroConstructor)

}


//Class Engine.MaterialExpressionTerrainBlendBase
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionTerrainBlendBase : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionCustomOutput
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionCustomOutput : public UMaterialExpression
{
public:

}


//Class Engine.EngineTypes
//0x0000 (0x0040 - 0x0040)
class UEngineTypes : public UObject
{
public:

}


//Class Engine.EngineBaseTypes
//0x0000 (0x0040 - 0x0040)
class UEngineBaseTypes : public UObject
{
public:

}


//Class Engine.EdGraphNode
//0x0078 (0x00B8 - 0x0040)
class UEdGraphNode : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0040(0x0010) MISSED OFFSET
	TArray<class UEdGraphPin_Deprecated*>              DeprecatedPins;                                           // 0x0050(0x0010) (ZeroConstructor)
	int                                                NodePosX;                                                 // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NodePosY;                                                 // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NodeWidth;                                                // 0x0068(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                NodeHeight;                                               // 0x006C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bHasCompilerMessage : 1;                                  // 0x0070(0x0001)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
	struct FString                                     NodeComment;                                              // 0x0078(0x0010) (ZeroConstructor)
	unsigned char                                      bCommentBubblePinned : 1;                                 // 0x0088(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x0089(0x0001)
	unsigned char                                      bCommentBubbleVisible : 1;                                // 0x0089(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03 : 8;                                        // 0x008A(0x0001)
	unsigned char                                      bCommentBubbleMakeVisible : 1;                            // 0x008A(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1];                                       // 0x008B(0x0001) MISSED OFFSET
	int                                                ErrorType;                                                // 0x008C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     ErrorMsg;                                                 // 0x0090(0x0010) (ZeroConstructor)
	struct FGuid                                       NodeGuid;                                                 // 0x00A0(0x0010) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ENodeAdvancedPins>                     AdvancedPinDisplay;                                       // 0x00B0(0x0001) (ZeroConstructor, IsPlainOldData)
	ENodeEnabledState                                  EnabledState;                                             // 0x00B1(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUserSetEnabledState : 1;                                 // 0x00B2(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05 : 8;                                        // 0x00B3(0x0001)
	unsigned char                                      bIsNodeEnabled : 1;                                       // 0x00B3(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET

}


//Class Engine.EdGraphPin_Deprecated
//0x0118 (0x0158 - 0x0040)
class UEdGraphPin_Deprecated : public UObject
{
public:
	struct FString                                     PinName;                                                  // 0x0040(0x0010) (ZeroConstructor)
	struct FString                                     PinToolTip;                                               // 0x0050(0x0010) (ZeroConstructor)
	TEnumAsByte<EEdGraphPinDirection>                  Direction;                                                // 0x0060(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	struct FEdGraphPinType                             PinType;                                                  // 0x0068(0x0080)
	struct FString                                     DefaultValue;                                             // 0x00E8(0x0010) (ZeroConstructor)
	struct FString                                     AutogeneratedDefaultValue;                                // 0x00F8(0x0010) (ZeroConstructor)
	class UObject*                                     DefaultObject;                                            // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FText                                       DefaultTextValue;                                         // 0x0110(0x0018)
	TArray<class UEdGraphPin_Deprecated*>              LinkedTo;                                                 // 0x0128(0x0010) (ZeroConstructor)
	TArray<class UEdGraphPin_Deprecated*>              SubPins;                                                  // 0x0138(0x0010) (ZeroConstructor)
	class UEdGraphPin_Deprecated*                      ParentPin;                                                // 0x0148(0x0008) (ZeroConstructor, IsPlainOldData)
	class UEdGraphPin_Deprecated*                      ReferencePassThroughConnection;                           // 0x0150(0x0008) (ZeroConstructor, IsPlainOldData)

}


//Class Engine.Interface_AssetUserData
//0x0000 (0x0040 - 0x0040)
class UInterface_AssetUserData : public UInterface
{
public:

}


//Class Engine.ChildActorComponent
//0x0030 (0x04D0 - 0x04A0)
class UChildActorComponent : public USceneComponent
{
public:
	class AActor*                                      ChildActorClass;                                          // 0x04A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AActor*                                      ChildActor;                                               // 0x04A8(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class AActor*                                      ChildActorTemplate;                                       // 0x04B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, EditConst, DuplicateTransient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x04B8(0x0018) MISSED OFFSET

	// Function Engine.ChildActorComponent.SetChildActorClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetChildActorClass(class AActor* InClass);// sub_4290B40()


}


//Class Engine.Level
//0x0310 (0x0350 - 0x0040)
class ULevel : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	class ANavigationObjectBase*                       NavListEnd;                                               // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UNavigationDataChunk*>                NavDataChunks;                                            // 0x0050(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x78];                                      // 0x0060(0x0078) MISSED OFFSET
	float                                              ShadowmapTotalSize;                                       // 0x00D8(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET
	class ALevelScriptActor*                           LevelScriptActor;                                         // 0x00E0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FGuid                                       LevelBuildDataId;                                         // 0x00E8(0x0010) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x00F8(0x0008) MISSED OFFSET
	TArray<class UModelComponent*>                     ModelComponents;                                          // 0x0100(0x0010) (ExportObject, ZeroConstructor)
	TArray<struct FGuid>                               StreamingTextureGuids;                                    // 0x0110(0x0010) (ZeroConstructor)
	class ANavigationObjectBase*                       NavListStart;                                             // 0x0120(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0128(0x0008) MISSED OFFSET
	struct FIntVector                                  LightBuildLevelOffset;                                    // 0x0130(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x013C(0x0004) MISSED OFFSET
	class UWorld*                                      OwningWorld;                                              // 0x0140(0x0008) (Transient)
	int                                                NumTextureStreamingDirtyResources;                        // 0x0148(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x014C(0x0004) MISSED OFFSET
	class ULevelActorContainer*                        ActorCluster;                                             // 0x0150(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData)
	TArray<struct FVector>                             StaticNavigableGeometry;                                  // 0x0158(0x0010) (ZeroConstructor)
	float                                              LightmapTotalSize;                                        // 0x0168(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData07[0x8C];                                      // 0x016C(0x008C) MISSED OFFSET
	int                                                NumTextureStreamingUnbuiltComponents;                     // 0x01F8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x01FC(0x0004) MISSED OFFSET
	class UModel*                                      Model;                                                    // 0x0200(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x40];                                      // 0x0208(0x0040) MISSED OFFSET
	unsigned char                                      bIsLightingScenario : 1;                                  // 0x0248(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10 : 8;                                        // 0x0249(0x0001)
	unsigned char                                      bTextureStreamingRotationChanged : 1;                     // 0x0249(0x0001)
	unsigned char                                      bIsVisible : 1;                                           // 0x0249(0x0001) (Transient)
	unsigned char                                      bLocked : 1;                                              // 0x0249(0x0001)
	unsigned char                                      bIgnoreGridShadowDirtyTest : 1;                           // 0x0249(0x0001)
	unsigned char                                      UnknownData11[0x46];                                      // 0x024A(0x0046) MISSED OFFSET
	class UMapBuildDataRegistry*                       MapBuildData;                                             // 0x0290(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x88];                                      // 0x0298(0x0088) MISSED OFFSET
	class AWorldSettings*                              WorldSettings;                                            // 0x0320(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x8];                                       // 0x0328(0x0008) MISSED OFFSET
	TArray<class UAssetUserData*>                      AssetUserData;                                            // 0x0330(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData14[0x10];                                      // 0x0340(0x0010) MISSED OFFSET

}


//Class Engine.AmbientSound
//0x0008 (0x0410 - 0x0408)
class AAmbientSound : public AActor
{
public:
	class UAudioComponent*                             AudioComponent;                                           // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	// Function Engine.AmbientSound.Stop
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Stop();// sub_1A29CB0()

	// Function Engine.AmbientSound.Play
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Play(float StartTime);// sub_8BF9A0()

	// Function Engine.AmbientSound.FadeOut
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_FadeOut(float FadeOutDuration, float FadeVolumeLevel);// sub_12248A0()

	// Function Engine.AmbientSound.FadeIn
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_FadeIn(float FadeInDuration, float FadeVolumeLevel);// sub_5CC8980()

	// Function Engine.AmbientSound.AdjustVolume
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AdjustVolume(float AdjustVolumeDuration, float AdjustVolumeLevel);// sub_118E100()


}


//Class Engine.Brush
//0x0038 (0x0440 - 0x0408)
class ABrush : public AActor
{
public:
	TEnumAsByte<EBrushType>                            BrushType;                                                // 0x0408(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0409(0x0003) MISSED OFFSET
	struct FColor                                      BrushColor;                                               // 0x040C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                PolyFlags;                                                // 0x0410(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bColored : 1;                                             // 0x0414(0x0001)
	unsigned char                                      bSolidWhenSelected : 1;                                   // 0x0414(0x0001)
	unsigned char                                      bPlaceableFromClassBrowser : 1;                           // 0x0414(0x0001)
	unsigned char                                      bNotForClientOrServer : 1;                                // 0x0414(0x0001)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0415(0x0003) MISSED OFFSET
	class UModel*                                      Brush;                                                    // 0x0418(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBrushComponent*                             BrushComponent;                                           // 0x0420(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      bInManipulation : 1;                                      // 0x0428(0x0001)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0429(0x0007) MISSED OFFSET
	TArray<struct FGeomSelection>                      SavedSelections;                                          // 0x0430(0x0010) (ZeroConstructor)

}


//Class Engine.BrushShape
//0x0000 (0x0440 - 0x0440)
class ABrushShape : public ABrush
{
public:

}


//Class Engine.Volume
//0x0000 (0x0440 - 0x0440)
class AVolume : public ABrush
{
public:

}


//Class Engine.AudioVolume
//0x0048 (0x0488 - 0x0440)
class AAudioVolume : public AVolume
{
public:
	float                                              Priority;                                                 // 0x0440(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnabled : 1;                                             // 0x0444(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0445(0x0003) MISSED OFFSET
	struct FReverbSettings                             Settings;                                                 // 0x0448(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FInteriorSettings                           AmbientZoneSettings;                                      // 0x0460(0x0024) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0484(0x0004) MISSED OFFSET

	// Function Engine.AudioVolume.SetReverbSettings
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetReverbSettings(const struct FReverbSettings& NewReverbSettings);// sub_19C4BE0()

	// Function Engine.AudioVolume.SetPriority
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPriority(float NewPriority);// sub_3C69400()

	// Function Engine.AudioVolume.SetInteriorSettings
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetInteriorSettings(const struct FInteriorSettings& NewInteriorSettings);// sub_40DBB70()

	// Function Engine.AudioVolume.SetEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetEnabled(unsigned char bNewEnabled);// sub_1FFDCB0()

	// Function Engine.AudioVolume.OnRep_bEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_bEnabled();// sub_4D83610()


}


//Class Engine.BlockingVolume
//0x0000 (0x0440 - 0x0440)
class ABlockingVolume : public AVolume
{
public:

}


//Class Engine.CameraBlockingVolume
//0x0000 (0x0440 - 0x0440)
class ACameraBlockingVolume : public AVolume
{
public:

}


//Class Engine.CullDistanceVolume
//0x0028 (0x0468 - 0x0440)
class ACullDistanceVolume : public AVolume
{
public:
	TArray<struct FCullDistanceSizePair>               CullDistances;                                            // 0x0440(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      bEnabled : 1;                                             // 0x0450(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0451(0x0003) MISSED OFFSET
	float                                              CullDistanceForLODActor;                                  // 0x0454(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CullDistanceForLODActorTooFar;                            // 0x0458(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseActorBound : 1;                                       // 0x045C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x045D(0x0003) MISSED OFFSET
	float                                              IgnoreActorBoundSize;                                     // 0x0460(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0464(0x0004) MISSED OFFSET

}


//Class Engine.LevelStreamingVolume
//0x0018 (0x0458 - 0x0440)
class ALevelStreamingVolume : public AVolume
{
public:
	TArray<struct FName>                               StreamingLevelNames;                                      // 0x0440(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	unsigned char                                      bEditorPreVisOnly : 1;                                    // 0x0450(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bDisabled : 1;                                            // 0x0450(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0451(0x0003) MISSED OFFSET
	TEnumAsByte<EStreamingVolumeUsage>                 StreamingUsage;                                           // 0x0454(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0455(0x0003) MISSED OFFSET

}


//Class Engine.LightmassCharacterIndirectDetailVolume
//0x0000 (0x0440 - 0x0440)
class ALightmassCharacterIndirectDetailVolume : public AVolume
{
public:

}


//Class Engine.LightmassImportanceVolume
//0x0000 (0x0440 - 0x0440)
class ALightmassImportanceVolume : public AVolume
{
public:

}


//Class Engine.MeshMergeCullingVolume
//0x0000 (0x0440 - 0x0440)
class AMeshMergeCullingVolume : public AVolume
{
public:

}


//Class Engine.NavigationQueryFilter
//0x0020 (0x0060 - 0x0040)
class UNavigationQueryFilter : public UObject
{
public:
	TArray<struct FNavigationFilterArea>               Areas;                                                    // 0x0040(0x0010) (Edit, ZeroConstructor)
	struct FNavigationFilterFlags                      IncludeFlags;                                             // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FNavigationFilterFlags                      ExcludeFlags;                                             // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0058(0x0008) MISSED OFFSET

}


//Class Engine.NavigationTypes
//0x0000 (0x0040 - 0x0040)
class UNavigationTypes : public UObject
{
public:

}


//Class Engine.NavMeshBoundsVolume
//0x0008 (0x0448 - 0x0440)
class ANavMeshBoundsVolume : public AVolume
{
public:
	struct FNavAgentSelector                           SupportedAgents;                                          // 0x0440(0x0004) (Edit)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0444(0x0004) MISSED OFFSET

}


//Class Engine.NavRelevantInterface
//0x0000 (0x0040 - 0x0040)
class UNavRelevantInterface : public UInterface
{
public:

}


//Class Engine.NavArea
//0x0018 (0x0058 - 0x0040)
class UNavArea : public UObject
{
public:
	float                                              DefaultCost;                                              // 0x0040(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              FixedAreaEnteringCost;                                    // 0x0044(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	struct FColor                                      DrawColor;                                                // 0x0048(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	struct FNavAgentSelector                           SupportedAgents;                                          // 0x004C(0x0004) (Edit, Config)
	unsigned char                                      bSupportsAgent0 : 1;                                      // 0x0050(0x0001) (Config)
	unsigned char                                      bSupportsAgent1 : 1;                                      // 0x0050(0x0001) (Config)
	unsigned char                                      bSupportsAgent2 : 1;                                      // 0x0050(0x0001) (Config)
	unsigned char                                      bSupportsAgent3 : 1;                                      // 0x0050(0x0001) (Config)
	unsigned char                                      bSupportsAgent4 : 1;                                      // 0x0050(0x0001) (Config)
	unsigned char                                      bSupportsAgent5 : 1;                                      // 0x0050(0x0001) (Config)
	unsigned char                                      bSupportsAgent6 : 1;                                      // 0x0050(0x0001) (Config)
	unsigned char                                      bSupportsAgent7 : 1;                                      // 0x0050(0x0001) (Config)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0051(0x0001)
	unsigned char                                      bSupportsAgent8 : 1;                                      // 0x0051(0x0001) (Config)
	unsigned char                                      bSupportsAgent9 : 1;                                      // 0x0051(0x0001) (Config)
	unsigned char                                      bSupportsAgent10 : 1;                                     // 0x0051(0x0001) (Config)
	unsigned char                                      bSupportsAgent11 : 1;                                     // 0x0051(0x0001) (Config)
	unsigned char                                      bSupportsAgent12 : 1;                                     // 0x0051(0x0001) (Config)
	unsigned char                                      bSupportsAgent13 : 1;                                     // 0x0051(0x0001) (Config)
	unsigned char                                      bSupportsAgent14 : 1;                                     // 0x0051(0x0001) (Config)
	unsigned char                                      bSupportsAgent15 : 1;                                     // 0x0051(0x0001) (Config)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0052(0x0006) MISSED OFFSET

}


//Class Engine.NavModifierVolume
//0x0010 (0x0450 - 0x0440)
class ANavModifierVolume : public AVolume
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0440(0x0008) MISSED OFFSET
	class UNavArea*                                    AreaClass;                                                // 0x0448(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	// Function Engine.NavModifierVolume.SetAreaClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAreaClass(class UNavArea* NewAreaClass);// sub_56CA8C0()


}


//Class Engine.PhysicsVolume
//0x0018 (0x0458 - 0x0440)
class APhysicsVolume : public AVolume
{
public:
	float                                              TerminalVelocity;                                         // 0x0440(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Priority;                                                 // 0x0444(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FluidFriction;                                            // 0x0448(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bWaterVolume : 1;                                         // 0x044C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bPhysicsOnContact : 1;                                    // 0x044C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x044D(0x0003) MISSED OFFSET
	unsigned char                                      bIsIncorrectVolumeSize : 1;                               // 0x0450(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0451(0x0007) MISSED OFFSET

}


//Class Engine.DefaultPhysicsVolume
//0x0000 (0x0458 - 0x0458)
class ADefaultPhysicsVolume : public APhysicsVolume
{
public:

}


//Class Engine.KillZVolume
//0x0000 (0x0458 - 0x0458)
class AKillZVolume : public APhysicsVolume
{
public:

}


//Class Engine.DamageType
//0x0018 (0x0058 - 0x0040)
class UDamageType : public UObject
{
public:
	unsigned char                                      bCausedByWorld : 1;                                       // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bScaleMomentumByMass : 1;                                 // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bRadialDamageVelChange : 1;                               // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              DamageImpulse;                                            // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DestructibleImpulse;                                      // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DestructibleDamageSpreadScale;                            // 0x004C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DamageFalloff;                                            // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

}


//Class Engine.PainCausingVolume
//0x0028 (0x0480 - 0x0458)
class APainCausingVolume : public APhysicsVolume
{
public:
	unsigned char                                      bPainCausing : 1;                                         // 0x0458(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0459(0x0003) MISSED OFFSET
	float                                              DamagePerSec;                                             // 0x045C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 DamageType;                                               // 0x0460(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PainInterval;                                             // 0x0468(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEntryPain : 1;                                           // 0x046C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      BACKUP_bPainCausing : 1;                                  // 0x046C(0x0001)
	unsigned char                                      UnknownData01[0x3];                                       // 0x046D(0x0003) MISSED OFFSET
	class AController*                                 DamageInstigator;                                         // 0x0470(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0478(0x0008) MISSED OFFSET

}


//Class Engine.BlendableInterface
//0x0000 (0x0040 - 0x0040)
class UBlendableInterface : public UInterface
{
public:

}


//Class Engine.Scene
//0x0000 (0x0040 - 0x0040)
class UScene : public UObject
{
public:

}


//Class Engine.Interface_PostProcessVolume
//0x0000 (0x0040 - 0x0040)
class UInterface_PostProcessVolume : public UInterface
{
public:

}


//Class Engine.PostProcessVolume
//0x0590 (0x09D0 - 0x0440)
class APostProcessVolume : public AVolume
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0440(0x0010) MISSED OFFSET
	struct FPostProcessSettings                        Settings;                                                 // 0x0450(0x0570) (Edit, BlueprintVisible)
	float                                              Priority;                                                 // 0x09C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlendRadius;                                              // 0x09C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BlendWeight;                                              // 0x09C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnabled : 1;                                             // 0x09CC(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUnbound : 1;                                             // 0x09CC(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x3];                                       // 0x09CD(0x0003) MISSED OFFSET

	// Function Engine.PostProcessVolume.UpdateBlendableByIndex
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_UpdateBlendableByIndex(int Index, float InWeight);// sub_523CA90()

	// Function Engine.PostProcessVolume.AddOrUpdateBlendable
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddOrUpdateBlendable(const TScriptInterface<class UBlendableInterface>& InBlendableObject, float InWeight);// sub_1CE5BD0()


}


//Class Engine.PrecomputedVisibilityOverrideVolume
//0x0030 (0x0470 - 0x0440)
class APrecomputedVisibilityOverrideVolume : public AVolume
{
public:
	TArray<class AActor*>                              OverrideVisibleActors;                                    // 0x0440(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class AActor*>                              OverrideInvisibleActors;                                  // 0x0450(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FName>                               OverrideInvisibleLevels;                                  // 0x0460(0x0010) (Edit, BlueprintVisible, ZeroConstructor)

}


//Class Engine.PrecomputedVisibilityVolume
//0x0000 (0x0440 - 0x0440)
class APrecomputedVisibilityVolume : public AVolume
{
public:

}


//Class Engine.TriggerVolume
//0x0000 (0x0440 - 0x0440)
class ATriggerVolume : public AVolume
{
public:

}


//Class Engine.CameraActor
//0x05A8 (0x09B0 - 0x0408)
class ACameraActor : public AActor
{
public:
	TEnumAsByte<EAutoReceiveInput>                     AutoActivateForPlayer;                                    // 0x0408(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0409(0x0007) MISSED OFFSET
	class UCameraComponent*                            CameraComponent;                                          // 0x0410(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             SceneComponent;                                           // 0x0418(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0420(0x0008) MISSED OFFSET
	unsigned char                                      bConstrainAspectRatio : 1;                                // 0x0428(0x0001) (Deprecated)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0429(0x0003) MISSED OFFSET
	float                                              AspectRatio;                                              // 0x042C(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              FOVAngle;                                                 // 0x0430(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              PostProcessBlendWeight;                                   // 0x0434(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0438(0x0008) MISSED OFFSET
	struct FPostProcessSettings                        PostProcessSettings;                                      // 0x0440(0x0570) (Deprecated)

	// Function Engine.CameraActor.GetAutoActivatePlayerIndex
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetAutoActivatePlayerIndex();// sub_245FC80()


}


//Class Engine.NavAgentInterface
//0x0000 (0x0040 - 0x0040)
class UNavAgentInterface : public UInterface
{
public:

}


//Class Engine.Controller
//0x0080 (0x0488 - 0x0408)
class AController : public AActor
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0408(0x0018) MISSED OFFSET
	class APawn*                                       Pawn;                                                     // 0x0420(0x0008) (Net)
	class USceneComponent*                             TransformComponent;                                       // 0x0428(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1C];                                      // 0x0430(0x001C) MISSED OFFSET
	struct FRotator                                    ControlRotation;                                          // 0x044C(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAttachToPawn : 1;                                        // 0x0458(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bIsPlayerController : 1;                                  // 0x0458(0x0001)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0459(0x0007) MISSED OFFSET
	class APlayerState*                                PlayerState;                                              // 0x0460(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class ACharacter*                                  Character;                                                // 0x0468(0x0008)
	struct FName                                       StateName;                                                // 0x0470(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnInstigatedAnyDamage;                                    // 0x0478(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	// Function Engine.Controller.UnPossess
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_UnPossess();// sub_3AD4A10()

	// Function Engine.Controller.StopMovement
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StopMovement();// sub_4BFBA80()

	// Function Engine.Controller.SetIgnoreMoveInput
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetIgnoreMoveInput(unsigned char bNewMoveInput);// sub_5F15680()

	// Function Engine.Controller.SetIgnoreLookInput
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetIgnoreLookInput(unsigned char bNewLookInput);// sub_1E1680()

	// Function Engine.Controller.SetControlRotationBP
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetControlRotationBP(const struct FRotator& NewRotation);// sub_60828C0()

	// Function Engine.Controller.ResetIgnoreMoveInput
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ResetIgnoreMoveInput();// sub_C6E450()

	// Function Engine.Controller.ResetIgnoreLookInput
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ResetIgnoreLookInput();// sub_3022C0()

	// Function Engine.Controller.ResetIgnoreInputFlags
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ResetIgnoreInputFlags();// sub_1A5EDC0()

	// Function Engine.Controller.ReceiveInstigatedAnyDamage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveInstigatedAnyDamage(float Damage, class UDamageType* DamageType, class AActor* DamagedActor, class AActor* DamageCauser);// sub_5C67A0()

	// Function Engine.Controller.Possess
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Possess(class APawn* InPawn);// sub_5526890()

	// Function Engine.Controller.OnRep_PlayerState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_PlayerState();// sub_1B66360()

	// Function Engine.Controller.OnRep_Pawn
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_Pawn();// sub_4668260()

	// Function Engine.Controller.LineOfSightTo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_LineOfSightTo(class AActor* Other, const struct FVector& ViewPoint, unsigned char bAlternateChecks);// sub_3FDFCA0()

	// Function Engine.Controller.K2_GetPawn
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class APawn* STATIC_K2_GetPawn();// sub_4CFCE20()

	// Function Engine.Controller.IsPlayerController
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsPlayerController();// sub_17C5300()

	// Function Engine.Controller.IsMoveInputIgnored
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsMoveInputIgnored();// sub_5FB1610()

	// Function Engine.Controller.IsLookInputIgnored
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsLookInputIgnored();// sub_40F5B30()

	// Function Engine.Controller.IsLocalPlayerController
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsLocalPlayerController();// sub_44BE390()

	// Function Engine.Controller.IsLocalController
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsLocalController();// sub_168DB0()

	// Function Engine.Controller.GetViewTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AActor* STATIC_GetViewTarget();// sub_54F1310()

	// Function Engine.Controller.GetDesiredRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_GetDesiredRotation();// sub_59C7D60()

	// Function Engine.Controller.GetControlRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_GetControlRotation();// sub_14A6130()

	// Function Engine.Controller.ClientSetRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientSetRotation(const struct FRotator& NewRotation, unsigned char bResetCamera);// sub_18D5570()

	// Function Engine.Controller.ClientSetLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientSetLocation(const struct FVector& NewLocation, const struct FRotator& NewRotation);// sub_1EA4090()

	// Function Engine.Controller.CastToPlayerController
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class APlayerController* STATIC_CastToPlayerController();// sub_7CEC60()


}


//Class Engine.CameraShake
//0x0140 (0x0180 - 0x0040)
class UCameraShake : public UObject
{
public:
	unsigned char                                      bSingleInstance : 1;                                      // 0x0040(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              OscillationDuration;                                      // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OscillationBlendInTime;                                   // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OscillationBlendOutTime;                                  // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FROscillator                                RotOscillation;                                           // 0x0050(0x0024) (Edit)
	struct FVOscillator                                LocOscillation;                                           // 0x0074(0x0024) (Edit)
	struct FFOscillator                                FOVOscillation;                                           // 0x0098(0x000C) (Edit)
	float                                              AnimPlayRate;                                             // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AnimScale;                                                // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AnimBlendInTime;                                          // 0x00AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AnimBlendOutTime;                                         // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RandomAnimSegmentDuration;                                // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UCameraAnim*                                 Anim;                                                     // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRandomAnimSegment : 1;                                   // 0x00C0(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x17];                                      // 0x00C1(0x0017) MISSED OFFSET
	class APlayerCameraManager*                        CameraOwner;                                              // 0x00D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x88];                                      // 0x00E0(0x0088) MISSED OFFSET
	float                                              ShakeScale;                                               // 0x0168(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              OscillatorTimeRemaining;                                  // 0x016C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UCameraAnimInst*                             AnimInst;                                                 // 0x0170(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0178(0x0008) MISSED OFFSET

	// Function Engine.CameraShake.ReceiveStopShake
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveStopShake(unsigned char bImmediately);// sub_5C67A0()

	// Function Engine.CameraShake.ReceivePlayShake
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceivePlayShake(float Scale);// sub_5C67A0()

	// Function Engine.CameraShake.ReceiveIsFinished
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_ReceiveIsFinished();// sub_1E0AEE0()

	// Function Engine.CameraShake.BlueprintUpdateCameraShake
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BlueprintUpdateCameraShake(float DeltaTime, float ALPHA, const struct FMinimalViewInfo& POV, struct FMinimalViewInfo* ModifiedPOV);// sub_5C67A0()


}


//Class Engine.PlayerCameraManager
//0x18F8 (0x1D00 - 0x0408)
class APlayerCameraManager : public AActor
{
public:
	class APlayerController*                           PCOwner;                                                  // 0x0408(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class USceneComponent*                             TransformComponent;                                       // 0x0410(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0418(0x0008) MISSED OFFSET
	struct FTViewTarget                                ViewTarget;                                               // 0x0420(0x05E0) (Transient)
	struct FTViewTarget                                PendingViewTarget;                                        // 0x0A00(0x05E0) (Transient)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0FE0(0x000C) MISSED OFFSET
	float                                              DefaultOrthoWidth;                                        // 0x0FEC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0FF0(0x0004) MISSED OFFSET
	struct FVector                                     ViewTargetOffset;                                         // 0x0FF4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x1000(0x0010) MISSED OFFSET
	struct FCameraCacheEntry                           CameraCache;                                              // 0x1010(0x05D0) (Transient)
	float                                              ViewPitchMax;                                             // 0x15E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DefaultFOV;                                               // 0x15E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0xC];                                       // 0x15E8(0x000C) MISSED OFFSET
	float                                              ViewRollMax;                                              // 0x15F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FreeCamDistance;                                          // 0x15F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x15FC(0x0004) MISSED OFFSET
	struct FCameraCacheEntry                           LastFrameCameraCache;                                     // 0x1600(0x05D0) (Transient)
	unsigned char                                      UnknownData06[0x4];                                       // 0x1BD0(0x0004) MISSED OFFSET
	float                                              ViewYawMax;                                               // 0x1BD4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x20];                                      // 0x1BD8(0x0020) MISSED OFFSET
	TArray<class UCameraModifier*>                     ModifierList;                                             // 0x1BF8(0x0010) (ZeroConstructor, Transient)
	TArray<class UCameraModifier*>                     DefaultModifiers;                                         // 0x1C08(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData08[0x1C];                                      // 0x1C18(0x001C) MISSED OFFSET
	float                                              ViewPitchMin;                                             // 0x1C34(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class AEmitterCameraLensEffectBase*>        CameraLensEffects;                                        // 0x1C38(0x0010) (ZeroConstructor, Transient)
	class UCameraModifier_CameraShake*                 CachedCameraShakeMod;                                     // 0x1C48(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCameraAnimInst*                             AnimInstPool[0x8];                                        // 0x1C50(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FPostProcessSettings>                PostProcessBlendCache;                                    // 0x1C90(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData09[0x10];                                      // 0x1CA0(0x0010) MISSED OFFSET
	TArray<class UCameraAnimInst*>                     ActiveAnims;                                              // 0x1CB0(0x0010) (ZeroConstructor, Transient)
	TArray<class UCameraAnimInst*>                     FreeAnims;                                                // 0x1CC0(0x0010) (ZeroConstructor, Transient)
	class ACameraActor*                                AnimCameraActor;                                          // 0x1CD0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bIsOrthographic : 1;                                      // 0x1CD8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bDefaultConstrainAspectRatio : 1;                         // 0x1CD8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUseClientSideCameraUpdates : 1;                          // 0x1CD8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData10[0x3];                                       // 0x1CD9(0x0003) MISSED OFFSET
	float                                              ViewRollMin;                                              // 0x1CDC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x8];                                       // 0x1CE0(0x0008) MISSED OFFSET
	float                                              DefaultAspectRatio;                                       // 0x1CE8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ViewYawMin;                                               // 0x1CEC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     FreeCamOffset;                                            // 0x1CF0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x4];                                       // 0x1CFC(0x0004) MISSED OFFSET

	// Function Engine.PlayerCameraManager.StopCameraShake
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StopCameraShake(class UCameraShake* ShakeInstance, unsigned char bImmediately);// sub_3C87680()

	// Function Engine.PlayerCameraManager.StopCameraFade
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StopCameraFade();// sub_4C55CA0()

	// Function Engine.PlayerCameraManager.StopCameraAnimInst
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StopCameraAnimInst(class UCameraAnimInst* AnimInst, unsigned char bImmediate);// sub_1505A70()

	// Function Engine.PlayerCameraManager.StopAllInstancesOfCameraShake
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StopAllInstancesOfCameraShake(class UCameraShake* Shake, unsigned char bImmediately);// sub_1F6F7C0()

	// Function Engine.PlayerCameraManager.StopAllInstancesOfCameraAnim
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StopAllInstancesOfCameraAnim(class UCameraAnim* Anim, unsigned char bImmediate);// sub_4E5E1F0()

	// Function Engine.PlayerCameraManager.StopAllCameraShakes
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StopAllCameraShakes(unsigned char bImmediately);// sub_15E5C70()

	// Function Engine.PlayerCameraManager.StopAllCameraAnims
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StopAllCameraAnims(unsigned char bImmediate);// sub_3D988A0()

	// Function Engine.PlayerCameraManager.StartCameraFade
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StartCameraFade(float FromAlpha, float ToAlpha, float Duration, const struct FLinearColor& Color, unsigned char bShouldFadeAudio, unsigned char bHoldWhenFinished);// sub_3D986D0()

	// Function Engine.PlayerCameraManager.SetManualCameraFade
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetManualCameraFade(float InFadeAmount, const struct FLinearColor& Color, unsigned char bInFadeAudio);// sub_5A55510()

	// Function Engine.PlayerCameraManager.RemoveCameraModifier
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_RemoveCameraModifier(class UCameraModifier* ModifierToRemove);// sub_1705220()

	// Function Engine.PlayerCameraManager.RemoveCameraLensEffect
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RemoveCameraLensEffect(class AEmitterCameraLensEffectBase* Emitter);// sub_5B38710()

	// Function Engine.PlayerCameraManager.PlayCameraShake
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UCameraShake* STATIC_PlayCameraShake(class UCameraShake* ShakeClass, float Scale, TEnumAsByte<ECameraAnimPlaySpace> PlaySpace, const struct FRotator& UserPlaySpaceRot);// sub_302150()

	// Function Engine.PlayerCameraManager.PlayCameraAnim
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UCameraAnimInst* STATIC_PlayCameraAnim(class UCameraAnim* Anim, float Rate, float Scale, float BlendInTime, float BlendOutTime, unsigned char bLoop, unsigned char bRandomStartTime, float Duration, TEnumAsByte<ECameraAnimPlaySpace> PlaySpace, const struct FRotator& UserPlaySpaceRot);// sub_4573010()

	// Function Engine.PlayerCameraManager.PhotographyCameraModify
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PhotographyCameraModify(const struct FVector& NewCameraLocation, const struct FVector& PreviousCameraLocation, const struct FVector& OriginalCameraLocation, struct FVector* ResultCameraLocation);// sub_2ADD10()

	// Function Engine.PlayerCameraManager.OnPhotographySessionStart
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnPhotographySessionStart();// sub_EC66C0()

	// Function Engine.PlayerCameraManager.OnPhotographySessionEnd
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnPhotographySessionEnd();// sub_F33880()

	// Function Engine.PlayerCameraManager.OnPhotographyMultiPartCaptureStart
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnPhotographyMultiPartCaptureStart();// sub_1537560()

	// Function Engine.PlayerCameraManager.OnPhotographyMultiPartCaptureEnd
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnPhotographyMultiPartCaptureEnd();// sub_DA88C0()

	// Function Engine.PlayerCameraManager.GetOwningPlayerController
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class APlayerController* STATIC_GetOwningPlayerController();// sub_1BF5090()

	// Function Engine.PlayerCameraManager.GetFOVAngle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetFOVAngle();// sub_64F190()

	// Function Engine.PlayerCameraManager.GetCameraRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_GetCameraRotation();// sub_1966020()

	// Function Engine.PlayerCameraManager.GetCameraLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetCameraLocation();// sub_15B52C0()

	// Function Engine.PlayerCameraManager.FindCameraModifierByClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UCameraModifier* STATIC_FindCameraModifierByClass(class UCameraModifier* ModifierClass);// sub_EE000()

	// Function Engine.PlayerCameraManager.ClearCameraLensEffects
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearCameraLensEffects();// sub_D4CE50()

	// Function Engine.PlayerCameraManager.BlueprintUpdateCamera
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BlueprintUpdateCamera(class AActor* CameraTarget, struct FVector* NewCameraLocation, struct FRotator* NewCameraRotation, float* NewCameraFOV);// sub_5C67A0()

	// Function Engine.PlayerCameraManager.AddNewCameraModifier
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UCameraModifier* STATIC_AddNewCameraModifier(class UCameraModifier* ModifierClass);// sub_277820()

	// Function Engine.PlayerCameraManager.AddCameraLensEffect
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AEmitterCameraLensEffectBase* STATIC_AddCameraLensEffect(class AEmitterCameraLensEffectBase* LensEffectEmitterClass);// sub_4F68E20()


}


//Class Engine.InputComponent
//0x0080 (0x0290 - 0x0210)
class UInputComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x80];                                      // 0x0210(0x0080) MISSED OFFSET

	// Function Engine.InputComponent.WasControllerKeyJustReleased
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_WasControllerKeyJustReleased(const struct FKey& Key);// sub_1E75F60()

	// Function Engine.InputComponent.WasControllerKeyJustPressed
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_WasControllerKeyJustPressed(const struct FKey& Key);// sub_5697920()

	// Function Engine.InputComponent.IsControllerKeyDown
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsControllerKeyDown(const struct FKey& Key);// sub_59E0760()

	// Function Engine.InputComponent.GetTouchState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetTouchState(int FingerIndex, float* LocationX, float* LocationY, unsigned char* bIsCurrentlyPressed);// sub_49F0B40()

	// Function Engine.InputComponent.GetControllerVectorKeyState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetControllerVectorKeyState(const struct FKey& Key);// sub_5E9E90()

	// Function Engine.InputComponent.GetControllerMouseDelta
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetControllerMouseDelta(float* DeltaX, float* DeltaY);// sub_50AF140()

	// Function Engine.InputComponent.GetControllerKeyTimeDown
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetControllerKeyTimeDown(const struct FKey& Key);// sub_1537460()

	// Function Engine.InputComponent.GetControllerAnalogStickState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetControllerAnalogStickState(TEnumAsByte<EControllerAnalogStick> WhichStick, float* StickX, float* StickY);// sub_3FDFB80()

	// Function Engine.InputComponent.GetControllerAnalogKeyState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetControllerAnalogKeyState(const struct FKey& Key);// sub_44D6430()


}


//Class Engine.CurveBase
//0x0008 (0x0048 - 0x0040)
class UCurveBase : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET

	// Function Engine.CurveBase.GetValueRange
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetValueRange(float* MinValue, float* MaxValue);// sub_3F0CE40()

	// Function Engine.CurveBase.GetTimeRange
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetTimeRange(float* MinTime, float* MaxTime);// sub_F9B040()


}


//Class Engine.CurveFloat
//0x0078 (0x00C0 - 0x0048)
class UCurveFloat : public UCurveBase
{
public:
	struct FRichCurve                                  FloatCurve;                                               // 0x0048(0x0070)
	unsigned char                                      bIsEventCurve : 1;                                        // 0x00B8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B9(0x0007) MISSED OFFSET

	// Function Engine.CurveFloat.GetFloatValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetFloatValue(float InTime);// sub_23735C0()

	// Function Engine.CurveFloat.GetDerivative
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetDerivative(float InTime);// sub_571FE80()


}


//Class Engine.ForceFeedbackEffect
//0x0018 (0x0058 - 0x0040)
class UForceFeedbackEffect : public UObject
{
public:
	TArray<struct FForceFeedbackChannelDetails>        ChannelDetails;                                           // 0x0040(0x0010) (Edit, ZeroConstructor)
	float                                              Duration;                                                 // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

}


//Class Engine.PlayerController
//0x02E0 (0x0768 - 0x0488)
class APlayerController : public AController
{
public:
	class UPlayer*                                     Player;                                                   // 0x0488(0x0008)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0490(0x0008) MISSED OFFSET
	class APawn*                                       AcknowledgedPawn;                                         // 0x0498(0x0008)
	class UInterpTrackInstDirector*                    ControllingDirTrackInst;                                  // 0x04A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x04A8(0x0008) MISSED OFFSET
	class AHUD*                                        MyHUD;                                                    // 0x04B0(0x0008) (ZeroConstructor, IsPlainOldData)
	class APlayerCameraManager*                        PlayerCameraManager;                                      // 0x04B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class APlayerCameraManager*                        PlayerCameraManagerClass;                                 // 0x04C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAutoManageActiveCameraTarget : 1;                        // 0x04C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x04C9(0x0003) MISSED OFFSET
	struct FRotator                                    TargetViewRotation;                                       // 0x04CC(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xC];                                       // 0x04D8(0x000C) MISSED OFFSET
	float                                              SmoothTargetViewRotationSpeed;                            // 0x04E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class AActor*>                              HiddenActors;                                             // 0x04E8(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData04[0x4];                                       // 0x04F8(0x0004) MISSED OFFSET
	float                                              LastSpectatorStateSynchTime;                              // 0x04FC(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     LastSpectatorSyncLocation;                                // 0x0500(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	struct FRotator                                    LastSpectatorSyncRotation;                                // 0x050C(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                ClientCap;                                                // 0x0518(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x051C(0x0004) MISSED OFFSET
	class UCheatManager*                               CheatManager;                                             // 0x0520(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UCheatManager*                               CheatClass;                                               // 0x0528(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UPlayerInput*                                PlayerInput;                                              // 0x0530(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FActiveForceFeedbackEffect>          ActiveForceFeedbackEffects;                               // 0x0538(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData06[0x90];                                      // 0x0548(0x0090) MISSED OFFSET
	unsigned char                                      bPlayerIsWaiting : 1;                                     // 0x05D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst)
	unsigned char                                      UnknownData07[0x3];                                       // 0x05D9(0x0003) MISSED OFFSET
	unsigned char                                      NetPlayerIndex;                                           // 0x05DC(0x0001) (ZeroConstructor, DuplicateTransient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3B];                                      // 0x05DD(0x003B) MISSED OFFSET
	class UNetConnection*                              PendingSwapConnection;                                    // 0x0618(0x0008) (ZeroConstructor, DuplicateTransient, IsPlainOldData)
	class UNetConnection*                              NetConnection;                                            // 0x0620(0x0008) (ZeroConstructor, DuplicateTransient, IsPlainOldData)
	unsigned char                                      UnknownData09[0xC];                                       // 0x0628(0x000C) MISSED OFFSET
	float                                              InputYawScale;                                            // 0x0634(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              InputPitchScale;                                          // 0x0638(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	float                                              InputRollScale;                                           // 0x063C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bShowMouseCursor : 1;                                     // 0x0640(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bEnableClickEvents : 1;                                   // 0x0640(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bEnableTouchEvents : 1;                                   // 0x0640(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bEnableMouseOverEvents : 1;                               // 0x0640(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bEnableTouchOverEvents : 1;                               // 0x0640(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bForceFeedbackEnabled : 1;                                // 0x0640(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData10[0x7];                                       // 0x0641(0x0007) MISSED OFFSET
	TArray<struct FKey>                                ClickEventKeys;                                           // 0x0648(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TEnumAsByte<EMouseCursor>                          DefaultMouseCursor;                                       // 0x0658(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMouseCursor>                          CurrentMouseCursor;                                       // 0x0659(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionChannel>                     DefaultClickTraceChannel;                                 // 0x065A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionChannel>                     CurrentClickTraceChannel;                                 // 0x065B(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              HitResultTraceDistance;                                   // 0x065C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x80];                                      // 0x0660(0x0080) MISSED OFFSET
	class UInputComponent*                             InactiveStateInputComponent;                              // 0x06E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      bShouldPerformFullTickWhenPaused : 1;                     // 0x06E8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData12[0x17];                                      // 0x06E9(0x0017) MISSED OFFSET
	class UTouchInterface*                             CurrentTouchInterface;                                    // 0x0700(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x40];                                      // 0x0708(0x0040) MISSED OFFSET
	class ASpectatorPawn*                              SpectatorPawn;                                            // 0x0748(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     SpawnLocation;                                            // 0x0750(0x000C) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x075C(0x0004) MISSED OFFSET
	unsigned char                                      bIsLocalPlayerController : 1;                             // 0x0760(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x1];                                       // 0x0761(0x0001) MISSED OFFSET
	uint16_t                                           SeamlessTravelCount;                                      // 0x0762(0x0002) (ZeroConstructor, IsPlainOldData)
	uint16_t                                           LastCompletedSeamlessTravelCount;                         // 0x0764(0x0002) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x2];                                       // 0x0766(0x0002) MISSED OFFSET

	// Function Engine.PlayerController.WasInputKeyJustReleased
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_WasInputKeyJustReleased(const struct FKey& Key);// sub_5047130()

	// Function Engine.PlayerController.WasInputKeyJustPressed
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_WasInputKeyJustPressed(const struct FKey& Key);// sub_1256B20()

	// Function Engine.PlayerController.ToggleSpeaking
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ToggleSpeaking(unsigned char bInSpeaking);// sub_60D6680()

	// Function Engine.PlayerController.SwitchLevel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SwitchLevel(const struct FString& URL);// sub_1EA4420()

	// Function Engine.PlayerController.StopHapticEffect
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StopHapticEffect(EControllerHand Hand);// sub_4BA2680()

	// Function Engine.PlayerController.StartFire
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StartFire(unsigned char FireModeNum);// sub_1BE6F30()

	// Function Engine.PlayerController.SetVirtualJoystickVisibility
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVirtualJoystickVisibility(unsigned char bVisible);// sub_23D6D00()

	// Function Engine.PlayerController.SetViewTargetWithBlend
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetViewTargetWithBlend(class AActor* NewViewTarget, float BlendTime, TEnumAsByte<EViewTargetBlendFunction> BlendFunc, float BlendExp, unsigned char bLockOutgoing);// sub_487C290()

	// Function Engine.PlayerController.SetName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetName(const struct FString& S);// sub_3E96270()

	// Function Engine.PlayerController.SetMouseLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetMouseLocation(int X, int Y);// sub_3EF3960()

	// Function Engine.PlayerController.SetHapticsByValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetHapticsByValue(float Frequency, float Amplitude, EControllerHand Hand);// sub_1F40C40()

	// Function Engine.PlayerController.SetControllerLightColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetControllerLightColor(const struct FColor& Color);// sub_5AF1EA0()

	// Function Engine.PlayerController.SetCinematicMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCinematicMode(unsigned char bInCinematicMode, unsigned char bHidePlayer, unsigned char bAffectsHUD, unsigned char bAffectsMovement, unsigned char bAffectsTurning);// sub_15CD090()

	// Function Engine.PlayerController.SetAudioListenerOverride
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAudioListenerOverride(class USceneComponent* AttachToComponent, const struct FVector& Location, const struct FRotator& Rotation);// sub_D022C0()

	// Function Engine.PlayerController.ServerViewSelf
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerViewSelf(const struct FViewTargetTransitionParams& TransitionParams);// sub_4F448F0()

	// Function Engine.PlayerController.ServerViewPrevPlayer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerViewPrevPlayer();// sub_5032B70()

	// Function Engine.PlayerController.ServerViewNextPlayer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerViewNextPlayer();// sub_D1E890()

	// Function Engine.PlayerController.ServerVerifyViewTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerVerifyViewTarget();// sub_242F70()

	// Function Engine.PlayerController.ServerUpdateMultipleLevelsVisibility
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerUpdateMultipleLevelsVisibility(TArray<struct FUpdateLevelVisibilityLevelInfo> LevelVisibilities);// sub_4B8B630()

	// Function Engine.PlayerController.ServerUpdateLevelVisibility
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerUpdateLevelVisibility(const struct FName& PackageName, unsigned char bIsVisible);// sub_1C8DBD0()

	// Function Engine.PlayerController.ServerUpdateCamera
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerUpdateCamera(const struct FVector_NetQuantize& CamLoc, int CamPitchAndYaw);// sub_E9B1E0()

	// Function Engine.PlayerController.ServerUnmutePlayer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerUnmutePlayer(const struct FUniqueNetIdRepl& PlayerId);// sub_EC66E0()

	// Function Engine.PlayerController.ServerToggleAILogging
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerToggleAILogging();// sub_1888DB0()

	// Function Engine.PlayerController.ServerShortTimeout
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerShortTimeout();// sub_95AB20()

	// Function Engine.PlayerController.ServerSetSpectatorWaiting
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerSetSpectatorWaiting(unsigned char bWaiting);// sub_501F1E0()

	// Function Engine.PlayerController.ServerSetSpectatorLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerSetSpectatorLocation(const struct FVector& NewLoc, const struct FRotator& NewRot);// sub_5EC8E10()

	// Function Engine.PlayerController.ServerRestartPlayer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerRestartPlayer();// sub_245FD40()

	// Function Engine.PlayerController.ServerPause
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerPause();// sub_1997A90()

	// Function Engine.PlayerController.ServerNotifyLoadedWorld
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerNotifyLoadedWorld(const struct FName& WorldPackageName);// sub_525ADB0()

	// Function Engine.PlayerController.ServerMutePlayer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerMutePlayer(const struct FUniqueNetIdRepl& PlayerId);// sub_202DDE0()

	// Function Engine.PlayerController.ServerCheckClientPossessionReliable
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerCheckClientPossessionReliable();// sub_1112390()

	// Function Engine.PlayerController.ServerCheckClientPossession
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerCheckClientPossession();// sub_3022E0()

	// Function Engine.PlayerController.ServerChangeName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerChangeName(const struct FString& S);// sub_47F5AB0()

	// Function Engine.PlayerController.ServerCamera
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerCamera(const struct FName& NewMode);// sub_5639640()

	// Function Engine.PlayerController.ServerAcknowledgePossession
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerAcknowledgePossession(class APawn* P);// sub_5F44F30()

	// Function Engine.PlayerController.SendToConsole
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SendToConsole(const struct FString& Command);// sub_156A3F0()

	// Function Engine.PlayerController.RestartLevel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RestartLevel();// sub_605AD0()

	// Function Engine.PlayerController.ProjectWorldLocationToScreen
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_ProjectWorldLocationToScreen(const struct FVector& WorldLocation, unsigned char bPlayerViewportRelative, struct FVector2D* ScreenLocation);// sub_2278A0()

	// Function Engine.PlayerController.PlayHapticEffect
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PlayHapticEffect(class UHapticFeedbackEffect_Base* HapticEffect, EControllerHand Hand, float Scale, unsigned char bLoop);// sub_3DCBE50()

	// Function Engine.PlayerController.PlayDynamicForceFeedback
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PlayDynamicForceFeedback(float Intensity, float Duration, unsigned char bAffectsLeftLarge, unsigned char bAffectsLeftSmall, unsigned char bAffectsRightLarge, unsigned char bAffectsRightSmall, TEnumAsByte<EDynamicForceFeedbackAction> Action, const struct FLatentActionInfo& LatentInfo);// sub_946950()

	// Function Engine.PlayerController.Pause
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Pause();// sub_4459980()

	// Function Engine.PlayerController.OnServerStartedVisualLogger
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnServerStartedVisualLogger(unsigned char bIsLogging);// sub_3D80AB0()

	// Function Engine.PlayerController.OnRep_TargetViewRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_TargetViewRotation();// sub_5096BB0()

	// Function Engine.PlayerController.LocalTravel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_LocalTravel(const struct FString& URL);// sub_19AD800()

	// Function Engine.PlayerController.IsInputKeyDown
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsInputKeyDown(const struct FKey& Key);// sub_56DD470()

	// Function Engine.PlayerController.IncDISPSharpness
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_IncDISPSharpness();// sub_416E5D0()

	// Function Engine.PlayerController.GetViewportSize
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetViewportSize(int* SizeX, int* SizeY);// sub_53B0D80()

	// Function Engine.PlayerController.GetSpectatorPawn
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class ASpectatorPawn* STATIC_GetSpectatorPawn();// sub_5449660()

	// Function Engine.PlayerController.GetMousePosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetMousePosition(float* LocationX, float* LocationY);// sub_70DD10()

	// Function Engine.PlayerController.GetInputVectorKeyState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetInputVectorKeyState(const struct FKey& Key);// sub_F9AF30()

	// Function Engine.PlayerController.GetInputTouchState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetInputTouchState(TEnumAsByte<ETouchIndex> FingerIndex, float* LocationX, float* LocationY, unsigned char* bIsCurrentlyPressed);// sub_47A400()

	// Function Engine.PlayerController.GetInputMouseDelta
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetInputMouseDelta(float* DeltaX, float* DeltaY);// sub_4111DB0()

	// Function Engine.PlayerController.GetInputMotionState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetInputMotionState(struct FVector* Tilt, struct FVector* RotationRate, struct FVector* Gravity, struct FVector* Acceleration);// sub_1FA3E90()

	// Function Engine.PlayerController.GetInputKeyTimeDown
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetInputKeyTimeDown(const struct FKey& Key);// sub_5526790()

	// Function Engine.PlayerController.GetInputAnalogStickStateRaw
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetInputAnalogStickStateRaw(TEnumAsByte<EControllerAnalogStick> WhichStick, float* StickX, float* StickY);// sub_505F2F0()

	// Function Engine.PlayerController.GetInputAnalogStickState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetInputAnalogStickState(TEnumAsByte<EControllerAnalogStick> WhichStick, float* StickX, float* StickY);// sub_225C410()

	// Function Engine.PlayerController.GetInputAnalogKeyState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetInputAnalogKeyState(const struct FKey& Key);// sub_413B180()

	// Function Engine.PlayerController.GetHUD
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AHUD* STATIC_GetHUD();// sub_54856D0()

	// Function Engine.PlayerController.GetHitResultUnderFingerForObjects
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetHitResultUnderFingerForObjects(TEnumAsByte<ETouchIndex> FingerIndex, TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, unsigned char bTraceComplex, struct FHitResult* HitResult);// sub_1B997B0()

	// Function Engine.PlayerController.GetHitResultUnderFingerByChannel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetHitResultUnderFingerByChannel(TEnumAsByte<ETouchIndex> FingerIndex, TEnumAsByte<ETraceTypeQuery> TraceChannel, unsigned char bTraceComplex, struct FHitResult* HitResult);// sub_6237EA0()

	// Function Engine.PlayerController.GetHitResultUnderFinger
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetHitResultUnderFinger(TEnumAsByte<ETouchIndex> FingerIndex, TEnumAsByte<ECollisionChannel> TraceChannel, unsigned char bTraceComplex, struct FHitResult* HitResult);// sub_44597E0()

	// Function Engine.PlayerController.GetHitResultUnderCursorForObjects
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetHitResultUnderCursorForObjects(TArray<TEnumAsByte<EObjectTypeQuery>> ObjectTypes, unsigned char bTraceComplex, struct FHitResult* HitResult);// sub_227680()

	// Function Engine.PlayerController.GetHitResultUnderCursorByChannel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetHitResultUnderCursorByChannel(TEnumAsByte<ETraceTypeQuery> TraceChannel, unsigned char bTraceComplex, struct FHitResult* HitResult);// sub_3BB0CA0()

	// Function Engine.PlayerController.GetHitResultUnderCursor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetHitResultUnderCursor(TEnumAsByte<ECollisionChannel> TraceChannel, unsigned char bTraceComplex, struct FHitResult* HitResult);// sub_21B5F70()

	// Function Engine.PlayerController.GetFocalLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetFocalLocation();// sub_17051B0()

	// Function Engine.PlayerController.FOV
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_FOV(float NewFOV);// sub_52C6720()

	// Function Engine.PlayerController.EnableTAA
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_EnableTAA();// sub_1B66340()

	// Function Engine.PlayerController.EnableDLSS
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_EnableDLSS();// sub_247B030()

	// Function Engine.PlayerController.EnableCheats
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_EnableCheats();// sub_6A2720()

	// Function Engine.PlayerController.DeprojectScreenPositionToWorld
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_DeprojectScreenPositionToWorld(float ScreenX, float ScreenY, struct FVector* WorldLocation, struct FVector* WorldDirection);// sub_2447790()

	// Function Engine.PlayerController.DeprojectMousePositionToWorld
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_DeprojectMousePositionToWorld(struct FVector* WorldLocation, struct FVector* WorldDirection);// sub_730500()

	// Function Engine.PlayerController.DecDISPSharpness
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DecDISPSharpness();// sub_45582B0()

	// Function Engine.PlayerController.ConsoleKey
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ConsoleKey(const struct FKey& Key);// sub_44F0120()

	// Function Engine.PlayerController.ClientWasKicked
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientWasKicked(const struct FText& KickReason);// sub_238C950()

	// Function Engine.PlayerController.ClientVoiceHandshakeComplete
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientVoiceHandshakeComplete();// sub_505F2D0()

	// Function Engine.PlayerController.ClientUpdateMultipleLevelsStreamingStatus
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientUpdateMultipleLevelsStreamingStatus(TArray<struct FUpdateLevelStreamingLevelStatus> LevelStatuses);// sub_4594BC0()

	// Function Engine.PlayerController.ClientUpdateLevelStreamingStatus
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientUpdateLevelStreamingStatus(const struct FName& PackageName, unsigned char bNewShouldBeLoaded, unsigned char bNewShouldBeVisible, unsigned char bNewShouldBlockOnLoad, int LODIndex);// sub_5C95B0()

	// Function Engine.PlayerController.ClientUnmutePlayer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientUnmutePlayer(const struct FUniqueNetIdRepl& PlayerId);// sub_1441020()

	// Function Engine.PlayerController.ClientTravelInternal
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientTravelInternal(const struct FString& URL, TEnumAsByte<ETravelType> TravelType, unsigned char bSeamless, const struct FGuid& MapPackageGuid);// sub_1904D50()

	// Function Engine.PlayerController.ClientTravel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientTravel(const struct FString& URL, TEnumAsByte<ETravelType> TravelType, unsigned char bSeamless, const struct FGuid& MapPackageGuid);// sub_C6E2D0()

	// Function Engine.PlayerController.ClientTeamMessage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientTeamMessage(class APlayerState* SenderPlayerState, const struct FString& S, const struct FName& Type, float MsgLifeTime);// sub_4FE4730()

	// Function Engine.PlayerController.ClientStopForceFeedback
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientStopForceFeedback(class UForceFeedbackEffect* ForceFeedbackEffect, const struct FName& Tag);// sub_1D396B0()

	// Function Engine.PlayerController.ClientStopCameraShake
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientStopCameraShake(class UCameraShake* Shake, unsigned char bImmediately);// sub_4692110()

	// Function Engine.PlayerController.ClientStopCameraAnim
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientStopCameraAnim(class UCameraAnim* AnimToStop);// sub_878A00()

	// Function Engine.PlayerController.ClientStartOnlineSession
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientStartOnlineSession();// sub_13CAF30()

	// Function Engine.PlayerController.ClientSpawnCameraLensEffect
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientSpawnCameraLensEffect(class AEmitterCameraLensEffectBase* LensEffectEmitterClass);// sub_171C0B0()

	// Function Engine.PlayerController.ClientSetViewTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientSetViewTarget(class AActor* A, const struct FViewTargetTransitionParams& TransitionParams);// sub_186E0B0()

	// Function Engine.PlayerController.ClientSetSpectatorWaiting
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientSetSpectatorWaiting(unsigned char bWaiting);// sub_156A330()

	// Function Engine.PlayerController.ClientSetHUD
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientSetHUD(const struct FString& InHUDClass);// sub_19AD680()

	// Function Engine.PlayerController.ClientSetForceMipLevelsToBeResident
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientSetForceMipLevelsToBeResident(class UMaterialInterface* Material, float ForceDuration, int CinematicTextureGroups);// sub_3F99680()

	// Function Engine.PlayerController.ClientSetCinematicMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientSetCinematicMode(unsigned char bInCinematicMode, unsigned char bAffectsMovement, unsigned char bAffectsTurning, unsigned char bAffectsHUD);// sub_3BB0B30()

	// Function Engine.PlayerController.ClientSetCameraMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientSetCameraMode(const struct FName& NewCamMode);// sub_4BA2520()

	// Function Engine.PlayerController.ClientSetCameraFade
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientSetCameraFade(unsigned char bEnableFading, const struct FColor& FadeColor, const struct FVector2D& FadeAlpha, float FadeTime, unsigned char bFadeAudio);// sub_5753F20()

	// Function Engine.PlayerController.ClientSetBlockOnAsyncLoading
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientSetBlockOnAsyncLoading();// sub_424F580()

	// Function Engine.PlayerController.ClientReturnToMainMenu
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientReturnToMainMenu(const struct FString& ReturnReason);// sub_3E3FE80()

	// Function Engine.PlayerController.ClientRetryClientRestart
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientRetryClientRestart(class APawn* NewPawn);// sub_2E2BB0()

	// Function Engine.PlayerController.ClientRestart
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientRestart(class APawn* NewPawn);// sub_54B20C0()

	// Function Engine.PlayerController.ClientReset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientReset();// sub_FFAEA0()

	// Function Engine.PlayerController.ClientRepObjRef
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientRepObjRef(class UObject* Object);// sub_573B270()

	// Function Engine.PlayerController.ClientReceiveLocalizedMessage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientReceiveLocalizedMessage(class ULocalMessage* Message, int Switch, class APlayerState* RelatedPlayerState, class APlayerState* RelatedPlayerState02, class UObject* OptionalObject);// sub_8F7CB0()

	// Function Engine.PlayerController.ClientPrestreamTextures
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientPrestreamTextures(class AActor* ForcedActor, float ForceDuration, unsigned char bEnableStreaming, int CinematicTextureGroups);// sub_1CBB550()

	// Function Engine.PlayerController.ClientPrepareMapChange
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientPrepareMapChange(const struct FName& LevelName, unsigned char bFirst, unsigned char bLast);// sub_5558AF0()

	// Function Engine.PlayerController.ClientPlaySoundAtLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientPlaySoundAtLocation(class USoundBase* Sound, const struct FVector& Location, float VolumeMultiplier, float PitchMultiplier);// sub_1015200()

	// Function Engine.PlayerController.ClientPlaySound
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientPlaySound(class USoundBase* Sound, float VolumeMultiplier, float PitchMultiplier);// sub_1B996B0()

	// Function Engine.PlayerController.ClientPlayForceFeedback
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientPlayForceFeedback(class UForceFeedbackEffect* ForceFeedbackEffect, unsigned char bLooping, const struct FName& Tag);// sub_1605430()

	// Function Engine.PlayerController.ClientPlayCameraShake
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientPlayCameraShake(class UCameraShake* Shake, float Scale, TEnumAsByte<ECameraAnimPlaySpace> PlaySpace, const struct FRotator& UserPlaySpaceRot);// sub_1287280()

	// Function Engine.PlayerController.ClientPlayCameraAnim
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientPlayCameraAnim(class UCameraAnim* AnimToPlay, float Scale, float Rate, float BlendInTime, float BlendOutTime, unsigned char bLoop, unsigned char bRandomStartTime, TEnumAsByte<ECameraAnimPlaySpace> Space, const struct FRotator& CustomPlaySpace);// sub_48E1BD0()

	// Function Engine.PlayerController.ClientMutePlayer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientMutePlayer(const struct FUniqueNetIdRepl& PlayerId);// sub_4217900()

	// Function Engine.PlayerController.ClientMessage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientMessage(const struct FString& S, const struct FName& Type, float MsgLifeTime);// sub_54855A0()

	// Function Engine.PlayerController.ClientIgnoreMoveInput
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientIgnoreMoveInput(unsigned char bIgnore);// sub_1373230()

	// Function Engine.PlayerController.ClientIgnoreLookInput
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientIgnoreLookInput(unsigned char bIgnore);// sub_5AC6C50()

	// Function Engine.PlayerController.ClientGotoState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientGotoState(const struct FName& NewState);// sub_6188EC0()

	// Function Engine.PlayerController.ClientGameEnded
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientGameEnded(class AActor* EndGameFocus, unsigned char bIsWinner);// sub_212A350()

	// Function Engine.PlayerController.ClientForceGarbageCollection
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientForceGarbageCollection();// sub_6F3180()

	// Function Engine.PlayerController.ClientFlushLevelStreaming
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientFlushLevelStreaming();// sub_7B2B80()

	// Function Engine.PlayerController.ClientEndOnlineSession
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientEndOnlineSession();// sub_227660()

	// Function Engine.PlayerController.ClientEnableNetworkVoice
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientEnableNetworkVoice(unsigned char bEnable);// sub_493D70()

	// Function Engine.PlayerController.ClientCommitMapChange
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientCommitMapChange();// sub_3A8C90()

	// Function Engine.PlayerController.ClientClearCameraLensEffects
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientClearCameraLensEffects();// sub_46FE440()

	// Function Engine.PlayerController.ClientCapBandwidth
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientCapBandwidth(int Cap);// sub_45D490()

	// Function Engine.PlayerController.ClientCancelPendingMapChange
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientCancelPendingMapChange();// sub_1767C30()

	// Function Engine.PlayerController.ClientAddTextureStreamingLoc
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientAddTextureStreamingLoc(const struct FVector& InLoc, float Duration, unsigned char bOverrideLocation);// sub_4F9C6F0()

	// Function Engine.PlayerController.ClearAudioListenerOverride
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearAudioListenerOverride();// sub_1441000()

	// Function Engine.PlayerController.Camera
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Camera(const struct FName& NewMode);// sub_EE13D0()

	// Function Engine.PlayerController.AddYawInput
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddYawInput(float Val);// sub_4862480()

	// Function Engine.PlayerController.AddRollInput
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddRollInput(float Val);// sub_4187C90()

	// Function Engine.PlayerController.AddPitchInput
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddPitchInput(float Val);// sub_16AD940()

	// Function Engine.PlayerController.ActivateTouchInterface
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ActivateTouchInterface(class UTouchInterface* NewTouchInterface);// sub_4EF2C40()


}


//Class Engine.PlayerInput
//0x03A0 (0x03E0 - 0x0040)
class UPlayerInput : public UObject
{
public:
	unsigned char                                      UnknownData00[0xF8];                                      // 0x0040(0x00F8) MISSED OFFSET
	TArray<struct FKeyBind>                            DebugExecBindings;                                        // 0x0138(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData01[0x30];                                      // 0x0148(0x0030) MISSED OFFSET
	TArray<struct FName>                               InvertedAxis;                                             // 0x0178(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData02[0x258];                                     // 0x0188(0x0258) MISSED OFFSET

	// Function Engine.PlayerInput.SetMouseSensitivity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetMouseSensitivity(float Sensitivity);// sub_61CC050()

	// Function Engine.PlayerInput.SetGamePadSensitivityOf
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetGamePadSensitivityOf(const struct FKey& AxisKey, float Sensitivity);// sub_50C8540()

	// Function Engine.PlayerInput.SetGamePadSensitivity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetGamePadSensitivity(float Sensitivity);// sub_3E7AA40()

	// Function Engine.PlayerInput.SetGamePadDeadZoneOf
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetGamePadDeadZoneOf(const struct FKey& AxisKey, float DEADZONE);// sub_45CDB20()

	// Function Engine.PlayerInput.SetGamePadDeadZone
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetGamePadDeadZone(float DEADZONE);// sub_50AF260()

	// Function Engine.PlayerInput.SetBind
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBind(const struct FName& BindName, const struct FString& Command);// sub_1FDCFE0()

	// Function Engine.PlayerInput.InvertAxisKey
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_InvertAxisKey(const struct FKey& AxisKey);// sub_450A1A0()

	// Function Engine.PlayerInput.InvertAxis
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_InvertAxis(const struct FName& AxisName);// sub_3EAE310()

	// Function Engine.PlayerInput.ClearSmoothing
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearSmoothing();// sub_17ADDA0()


}


//Class Engine.DebugCameraController
//0x0048 (0x07B0 - 0x0768)
class ADebugCameraController : public APlayerController
{
public:
	unsigned char                                      bShowSelectedInfo : 1;                                    // 0x0768(0x0001) (Config, GlobalConfig)
	unsigned char                                      bIsFrozenRendering : 1;                                   // 0x0768(0x0001)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0769(0x0007) MISSED OFFSET
	class UDrawFrustumComponent*                       DrawFrustum;                                              // 0x0770(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0778(0x0020) MISSED OFFSET
	float                                              SpeedScale;                                               // 0x0798(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InitialMaxSpeed;                                          // 0x079C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InitialAccel;                                             // 0x07A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InitialDecel;                                             // 0x07A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x07A8(0x0008) MISSED OFFSET

	// Function Engine.DebugCameraController.ToggleDisplay
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ToggleDisplay();// sub_4F27740()

	// Function Engine.DebugCameraController.ShowDebugSelectedInfo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ShowDebugSelectedInfo();// sub_1FB9EA0()

	// Function Engine.DebugCameraController.SetPawnMovementSpeedScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPawnMovementSpeedScale(float NewSpeedScale);// sub_D1EA00()

	// Function Engine.DebugCameraController.ReceiveOnDeactivate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveOnDeactivate(class APlayerController* RestoredPC);// sub_5C67A0()

	// Function Engine.DebugCameraController.ReceiveOnActorSelected
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveOnActorSelected(class AActor* NewSelectedActor, const struct FVector& SelectHitLocation, const struct FVector& SelectHitNormal, const struct FHitResult& Hit);// sub_5C67A0()

	// Function Engine.DebugCameraController.ReceiveOnActivate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveOnActivate(class APlayerController* OriginalPC);// sub_5C67A0()

	// Function Engine.DebugCameraController.GetSelectedActor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AActor* STATIC_GetSelectedActor();// sub_21B60D0()


}


//Class Engine.DecalActor
//0x0008 (0x0410 - 0x0408)
class ADecalActor : public AActor
{
public:
	class UDecalComponent*                             Decal;                                                    // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	// Function Engine.DecalActor.SetDecalMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDecalMaterial(class UMaterialInterface* NewDecalMaterial);// sub_151CD40()

	// Function Engine.DecalActor.GetDecalMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UMaterialInterface* STATIC_GetDecalMaterial();// sub_393650()

	// Function Engine.DecalActor.CreateDynamicMaterialInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UMaterialInstanceDynamic* STATIC_CreateDynamicMaterialInstance();// sub_6E4BD0()


}


//Class Engine.DestructibleActor
//0x0020 (0x0428 - 0x0408)
class ADestructibleActor : public AActor
{
public:
	class UDestructibleComponent*                      DestructibleComponent;                                    // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      bAffectNavigation : 1;                                    // 0x0410(0x0001) (Edit, BlueprintVisible, Config)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0411(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnActorFracture;                                          // 0x0418(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

}


//Class Engine.DistanceFieldCapture
//0x0008 (0x0410 - 0x0408)
class ADistanceFieldCapture : public AActor
{
public:
	class UDistanceFieldCaptureComponent*              CaptureComponent;                                         // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

}


//Class Engine.DocumentationActor
//0x0008 (0x0410 - 0x0408)
class ADocumentationActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0408(0x0008) MISSED OFFSET

}


//Class Engine.Emitter
//0x0050 (0x0458 - 0x0408)
class AEmitter : public AActor
{
public:
	class UParticleSystemComponent*                    ParticleSystemComponent;                                  // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      bDestroyOnSystemFinish : 1;                               // 0x0410(0x0001)
	unsigned char                                      bPostUpdateTickGroup : 1;                                 // 0x0410(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCurrentlyActive : 1;                                     // 0x0410(0x0001) (Net)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0411(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnParticleSpawn;                                          // 0x0418(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnParticleBurst;                                          // 0x0428(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnParticleDeath;                                          // 0x0438(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnParticleCollide;                                        // 0x0448(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	// Function Engine.Emitter.ToggleActive
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ToggleActive();// sub_3C3E4D0()

	// Function Engine.Emitter.SetVectorParameter
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVectorParameter(const struct FName& ParameterName, const struct FVector& Param);// sub_5D91F50()

	// Function Engine.Emitter.SetTemplate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTemplate(class UParticleSystem* NewTemplate);// sub_E9B3A0()

	// Function Engine.Emitter.SetMaterialParameter
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetMaterialParameter(const struct FName& ParameterName, class UMaterialInterface* Param);// sub_148BF50()

	// Function Engine.Emitter.SetFloatParameter
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetFloatParameter(const struct FName& ParameterName, float Param);// sub_EB4400()

	// Function Engine.Emitter.SetColorParameter
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetColorParameter(const struct FName& ParameterName, const struct FLinearColor& Param);// sub_302330()

	// Function Engine.Emitter.SetActorParameter
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetActorParameter(const struct FName& ParameterName, class AActor* Param);// sub_3BCE840()

	// Function Engine.Emitter.OnRep_bCurrentlyActive
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_bCurrentlyActive();// sub_1537560()

	// Function Engine.Emitter.OnParticleSystemFinished
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnParticleSystemFinished(class UParticleSystemComponent* FinishedComponent);// sub_227810()

	// Function Engine.Emitter.IsActive
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsActive();// sub_473F540()

	// Function Engine.Emitter.Deactivate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Deactivate();// sub_3D80A90()

	// Function Engine.Emitter.Activate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Activate();// sub_5572020()


}


//Class Engine.EmitterCameraLensEffectBase
//0x0068 (0x04C0 - 0x0458)
class AEmitterCameraLensEffectBase : public AEmitter
{
public:
	class UParticleSystem*                             PS_CameraEffect;                                          // 0x0458(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             PS_CameraEffectNonExtremeContent;                         // 0x0460(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	class APlayerCameraManager*                        BaseCamera;                                               // 0x0468(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FTransform                                  RelativeTransform;                                        // 0x0470(0x0030) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              BaseFOV;                                                  // 0x04A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bAllowMultipleInstances : 1;                              // 0x04A4(0x0001) (Edit)
	unsigned char                                      bResetWhenRetriggered : 1;                                // 0x04A4(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x04A5(0x0003) MISSED OFFSET
	TArray<class AEmitterCameraLensEffectBase*>        EmittersToTreatAsSame;                                    // 0x04A8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              DistFromCamera;                                           // 0x04B8(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x04BC(0x0004) MISSED OFFSET

}


//Class Engine.FoliageBlockingVolumeActor
//0x0008 (0x0410 - 0x0408)
class AFoliageBlockingVolumeActor : public AActor
{
public:
	class UFoliageBlockingVolumeComponent*             FoliageBlockingVolumeComponent;                           // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

}


//Class Engine.HUD
//0x00E8 (0x04F0 - 0x0408)
class AHUD : public AActor
{
public:
	class APlayerController*                           PlayerOwner;                                              // 0x0408(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bLostFocusPaused : 1;                                     // 0x0410(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bShowHUD : 1;                                             // 0x0410(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bShowDebugInfo : 1;                                       // 0x0410(0x0001) (BlueprintVisible)
	unsigned char                                      bShowHitBoxDebugInfo : 1;                                 // 0x0410(0x0001) (BlueprintVisible)
	unsigned char                                      bShowOverlays : 1;                                        // 0x0410(0x0001) (BlueprintVisible)
	unsigned char                                      bEnableDebugTextShadow : 1;                               // 0x0410(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0411(0x0007) MISSED OFFSET
	TArray<class AActor*>                              PostRenderedActors;                                       // 0x0418(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0428(0x0008) MISSED OFFSET
	TArray<struct FName>                               DebugDisplay;                                             // 0x0430(0x0010) (ZeroConstructor, Config, GlobalConfig)
	TArray<struct FName>                               ToggledDebugCategories;                                   // 0x0440(0x0010) (ZeroConstructor, Config, GlobalConfig)
	class UCanvas*                                     Canvas;                                                   // 0x0450(0x0008) (ZeroConstructor, IsPlainOldData)
	class UCanvas*                                     DebugCanvas;                                              // 0x0458(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FDebugTextInfo>                      DebugTextList;                                            // 0x0460(0x0010) (ZeroConstructor)
	class AActor*                                      ShowDebugTargetDesiredClass;                              // 0x0470(0x0008) (ZeroConstructor, IsPlainOldData)
	class AActor*                                      ShowDebugTargetActor;                                     // 0x0478(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x70];                                      // 0x0480(0x0070) MISSED OFFSET

	// Function Engine.HUD.ShowHUD
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ShowHUD();// sub_DA88C0()

	// Function Engine.HUD.ShowDebugToggleSubCategory
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ShowDebugToggleSubCategory(const struct FName& Category);// sub_1FDD0C0()

	// Function Engine.HUD.ShowDebugForReticleTargetToggle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ShowDebugForReticleTargetToggle(class AActor* DesiredClass);// sub_3C52A80()

	// Function Engine.HUD.ShowDebug
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ShowDebug(const struct FName& DebugType);// sub_3A8CB0()

	// Function Engine.HUD.RemoveDebugText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RemoveDebugText(class AActor* SrcActor, unsigned char bLeaveDurationText);// sub_24980F0()

	// Function Engine.HUD.RemoveAllDebugStrings
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RemoveAllDebugStrings();// sub_56CA8A0()

	// Function Engine.HUD.ReceiveHitBoxRelease
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveHitBoxRelease(const struct FName& BoxName);// sub_5C67A0()

	// Function Engine.HUD.ReceiveHitBoxEndCursorOver
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveHitBoxEndCursorOver(const struct FName& BoxName);// sub_5C67A0()

	// Function Engine.HUD.ReceiveHitBoxClick
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveHitBoxClick(const struct FName& BoxName);// sub_5C67A0()

	// Function Engine.HUD.ReceiveHitBoxBeginCursorOver
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveHitBoxBeginCursorOver(const struct FName& BoxName);// sub_5C67A0()

	// Function Engine.HUD.ReceiveDrawHUD
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveDrawHUD(int SizeX, int SizeY);// sub_5C67A0()

	// Function Engine.HUD.Project
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_Project(const struct FVector& Location);// sub_4D5AE90()

	// Function Engine.HUD.GetTextSize
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetTextSize(const struct FString& Text, class UFont* Font, float Scale, float* OutWidth, float* OutHeight);// sub_4D1B550()

	// Function Engine.HUD.GetOwningPlayerController
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class APlayerController* STATIC_GetOwningPlayerController();// sub_1B2FAF0()

	// Function Engine.HUD.GetOwningPawn
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class APawn* STATIC_GetOwningPawn();// sub_1B41E20()

	// Function Engine.HUD.GetActorsInSelectionRectangle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetActorsInSelectionRectangle(class AActor* ClassFilter, const struct FVector2D& FirstPoint, const struct FVector2D& SecondPoint, unsigned char bIncludeNonCollidingComponents, unsigned char bActorMustBeFullyEnclosed, TArray<class AActor*>* OutActors);// sub_D69A80()

	// Function Engine.HUD.DrawTextureSimple
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawTextureSimple(class UTexture* Texture, float ScreenX, float ScreenY, float Scale, unsigned char bScalePosition);// sub_D34B40()

	// Function Engine.HUD.DrawTexture
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawTexture(class UTexture* Texture, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float TextureU, float TextureV, float TextureUWidth, float TextureVHeight, const struct FLinearColor& TintColor, TEnumAsByte<EBlendMode> BlendMode, float Scale, unsigned char bScalePosition, float Rotation, const struct FVector2D& RotPivot);// sub_230CA10()

	// Function Engine.HUD.DrawText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawText(const struct FString& Text, const struct FLinearColor& TextColor, float ScreenX, float ScreenY, class UFont* Font, float Scale, unsigned char bScalePosition);// sub_46E8A30()

	// Function Engine.HUD.DrawRect
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawRect(const struct FLinearColor& RectColor, float ScreenX, float ScreenY, float ScreenW, float ScreenH);// sub_5C9760()

	// Function Engine.HUD.DrawMaterialTriangle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawMaterialTriangle(class UMaterialInterface* Material, const struct FVector2D& V0_Pos, const struct FVector2D& V1_Pos, const struct FVector2D& V2_Pos, const struct FVector2D& V0_UV, const struct FVector2D& V1_UV, const struct FVector2D& V2_UV, const struct FLinearColor& V0_Color, const struct FLinearColor& V1_Color, const struct FLinearColor& V2_Color);// sub_151C8D0()

	// Function Engine.HUD.DrawMaterialSimple
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawMaterialSimple(class UMaterialInterface* Material, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float Scale, unsigned char bScalePosition);// sub_1EA4170()

	// Function Engine.HUD.DrawMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawMaterial(class UMaterialInterface* Material, float ScreenX, float ScreenY, float ScreenW, float ScreenH, float MaterialU, float MaterialV, float MaterialUWidth, float MaterialVHeight, float Scale, unsigned char bScalePosition, float Rotation, const struct FVector2D& RotPivot);// sub_5B6CFD0()

	// Function Engine.HUD.DrawLine
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawLine(float StartScreenX, float StartScreenY, float EndScreenX, float EndScreenY, const struct FLinearColor& LineColor, float LineThickness);// sub_3B60BB0()

	// Function Engine.HUD.Deproject
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Deproject(float ScreenX, float ScreenY, struct FVector* WorldPosition, struct FVector* WorldDirection);// sub_553B740()

	// Function Engine.HUD.AddHitBox
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddHitBox(const struct FVector2D& Position, const struct FVector2D& Size, const struct FName& InName, unsigned char bConsumesInput, int Priority);// sub_550D950()

	// Function Engine.HUD.AddDebugText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddDebugText(const struct FString& DebugText, class AActor* SrcActor, float Duration, const struct FVector& Offset, const struct FVector& DesiredOffset, const struct FColor& TextColor, unsigned char bSkipOverwriteCheck, unsigned char bAbsoluteLocation, unsigned char bKeepAttachedToActor, class UFont* InFont, float FontScale, unsigned char bDrawShadow);// sub_3E7A6A0()


}


//Class Engine.DebugCameraHUD
//0x0000 (0x04F0 - 0x04F0)
class ADebugCameraHUD : public AHUD
{
public:

}


//Class Engine.Info
//0x0000 (0x0408 - 0x0408)
class AInfo : public AActor
{
public:

}


//Class Engine.AtmosphericFog
//0x0008 (0x0410 - 0x0408)
class AAtmosphericFog : public AInfo
{
public:
	class UAtmosphericFogComponent*                    AtmosphericFogComponent;                                  // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

}


//Class Engine.ExponentialHeightFog
//0x0010 (0x0418 - 0x0408)
class AExponentialHeightFog : public AInfo
{
public:
	class UExponentialHeightFogComponent*              Component;                                                // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      bEnabled : 1;                                             // 0x0410(0x0001) (Net)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0411(0x0007) MISSED OFFSET

	// Function Engine.ExponentialHeightFog.OnRep_bEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_bEnabled();// sub_DA88C0()


}


//Class Engine.Pawn
//0x0068 (0x0470 - 0x0408)
class APawn : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0408(0x0008) MISSED OFFSET
	unsigned char                                      bUseControllerRotationPitch : 1;                          // 0x0410(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUseControllerRotationYaw : 1;                            // 0x0410(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUseControllerRotationRoll : 1;                           // 0x0410(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCanAffectNavigationGeneration : 1;                       // 0x0410(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0411(0x0003) MISSED OFFSET
	float                                              BaseEyeHeight;                                            // 0x0414(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAutoReceiveInput>                     AutoPossessPlayer;                                        // 0x0418(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EAutoPossessAI                                     AutoPossessAI;                                            // 0x0419(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x041A(0x0006) MISSED OFFSET
	class AController*                                 AIControllerClass;                                        // 0x0420(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0428(0x0008) MISSED OFFSET
	class AController*                                 LastHitBy;                                                // 0x0430(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AController*                                 Controller;                                               // 0x0438(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	uint16_t                                           RemoteViewPitch;                                          // 0x0440(0x0002) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x0442(0x0006) MISSED OFFSET
	class APlayerState*                                PlayerState;                                              // 0x0448(0x0008) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0450(0x0004) MISSED OFFSET
	struct FVector                                     ControlInputVector;                                       // 0x0454(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     LastControlInputVector;                                   // 0x0460(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x046C(0x0004) MISSED OFFSET

	// Function Engine.Pawn.SpawnDefaultController
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SpawnDefaultController();// sub_48C6F20()

	// Function Engine.Pawn.SetCanAffectNavigationGeneration
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCanAffectNavigationGeneration(unsigned char bNewValue, unsigned char bForceUpdate);// sub_609A7A0()

	// Function Engine.Pawn.ReceiveUnpossessed
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveUnpossessed(class AController* OldController);// sub_5C67A0()

	// Function Engine.Pawn.ReceivePossessed
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceivePossessed(class AController* NewController);// sub_5C67A0()

	// Function Engine.Pawn.PawnMakeNoise
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PawnMakeNoise(float Loudness, const struct FVector& NoiseLocation, unsigned char bUseNoiseMakerLocation, class AActor* NoiseMaker);// sub_4EB11C0()

	// Function Engine.Pawn.OnRep_PlayerState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_PlayerState();// sub_1B66360()

	// Function Engine.Pawn.OnRep_Controller
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_Controller();// sub_4668260()

	// Function Engine.Pawn.LaunchPawn
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_LaunchPawn(const struct FVector& LaunchVelocity, unsigned char bXYOverride, unsigned char bZOverride);// sub_42FAFA0()

	// Function Engine.Pawn.K2_GetMovementInputVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_K2_GetMovementInputVector();// sub_4155610()

	// Function Engine.Pawn.IsPlayerControlled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsPlayerControlled();// sub_2292D00()

	// Function Engine.Pawn.IsMoveInputIgnored
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsMoveInputIgnored();// sub_2292CD0()

	// Function Engine.Pawn.IsLocallyControlled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsLocallyControlled();// sub_4331C70()

	// Function Engine.Pawn.IsControlled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsControlled();// sub_1FC470()

	// Function Engine.Pawn.GetPendingMovementInputVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetPendingMovementInputVector();// sub_5E9FA0()

	// Function Engine.Pawn.GetNavAgentLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetNavAgentLocation();// sub_D69CA0()

	// Function Engine.Pawn.GetMovementComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UPawnMovementComponent* STATIC_GetMovementComponent();// sub_6E4BD0()

	// Function Engine.Pawn.GetMovementBaseActor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AActor* STATIC_GetMovementBaseActor(class APawn* Pawn);// sub_517C260()

	// Function Engine.Pawn.GetLastMovementInputVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetLastMovementInputVector();// sub_C55D50()

	// Function Engine.Pawn.GetControlRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_GetControlRotation();// sub_19C4B60()

	// Function Engine.Pawn.GetController
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AController* STATIC_GetController();// sub_517C240()

	// Function Engine.Pawn.GetBaseAimRotation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_GetBaseAimRotation();// sub_112BA60()

	// Function Engine.Pawn.DetachFromControllerPendingDestroy
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DetachFromControllerPendingDestroy();// sub_45BBB40()

	// Function Engine.Pawn.ConsumeMovementInputVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_ConsumeMovementInputVector();// sub_1256AE0()

	// Function Engine.Pawn.AddMovementInput
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddMovementInput(const struct FVector& WorldDirection, float ScaleValue, unsigned char bForce);// sub_4A71490()

	// Function Engine.Pawn.AddControllerYawInput
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddControllerYawInput(float Val);// sub_4490690()

	// Function Engine.Pawn.AddControllerRollInput
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddControllerRollInput(float Val);// sub_4217880()

	// Function Engine.Pawn.AddControllerPitchInput
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddControllerPitchInput(float Val);// sub_19C4AE0()


}


//Class Engine.GameModeBase
//0x00A0 (0x04A8 - 0x0408)
class AGameModeBase : public AInfo
{
public:
	struct FString                                     OptionsString;                                            // 0x0408(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class AGameSession*                                GameSessionClass;                                         // 0x0418(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class AGameStateBase*                              GameStateClass;                                           // 0x0420(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData)
	class APlayerController*                           PlayerControllerClass;                                    // 0x0428(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData)
	class APlayerState*                                PlayerStateClass;                                         // 0x0430(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData)
	struct FStringClassReference                       HUDClass;                                                 // 0x0438(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class APawn*                                       DefaultPawnClass;                                         // 0x0448(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FStringClassReference                       SpectatorClass;                                           // 0x0450(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear)
	class APlayerController*                           ReplaySpectatorPlayerControllerClass;                     // 0x0460(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData)
	class AGameSession*                                GameSession;                                              // 0x0468(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AGameStateBase*                              GameState;                                                // 0x0470(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FText                                       DefaultPlayerName;                                        // 0x0478(0x0018) (Edit)
	unsigned char                                      bUseSeamlessTravel : 1;                                   // 0x0490(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bStartPlayersAsSpectators : 1;                            // 0x0490(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bPauseable : 1;                                           // 0x0490(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x17];                                      // 0x0491(0x0017) MISSED OFFSET

	// Function Engine.GameModeBase.StartPlay
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StartPlay();// sub_2017CF0()

	// Function Engine.GameModeBase.SpawnDefaultPawnFor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class APawn* STATIC_SpawnDefaultPawnFor(class AController* NewPlayer, class AActor* StartSpot);// sub_16C61F0()

	// Function Engine.GameModeBase.SpawnDefaultPawnAtTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class APawn* STATIC_SpawnDefaultPawnAtTransform(class AController* NewPlayer, const struct FTransform& SpawnTransform);// sub_5E26180()

	// Function Engine.GameModeBase.ShouldReset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_ShouldReset(class AActor* ActorToReset);// sub_1705220()

	// Function Engine.GameModeBase.ReturnToMainMenuHost
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReturnToMainMenuHost();// sub_88F2F0()

	// Function Engine.GameModeBase.RestartPlayerAtTransform
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RestartPlayerAtTransform(class AController* NewPlayer, const struct FTransform& SpawnTransform);// sub_CE9E90()

	// Function Engine.GameModeBase.RestartPlayerAtPlayerStart
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RestartPlayerAtPlayerStart(class AController* NewPlayer, class AActor* StartSpot);// sub_49D8A50()

	// Function Engine.GameModeBase.RestartPlayer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RestartPlayer(class AController* NewPlayer);// sub_1D71F80()

	// Function Engine.GameModeBase.ResetLevel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ResetLevel();// sub_3ED2270()

	// Function Engine.GameModeBase.PlayerCanRestart
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_PlayerCanRestart(class APlayerController* Player);// sub_4C64200()

	// Function Engine.GameModeBase.MustSpectate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_MustSpectate(class APlayerController* NewPlayerController);// sub_510DDE0()

	// Function Engine.GameModeBase.K2_PostLogin
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_PostLogin(class APlayerController* NewPlayer);// sub_5C67A0()

	// Function Engine.GameModeBase.K2_OnSwapPlayerControllers
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_OnSwapPlayerControllers(class APlayerController* OldPC, class APlayerController* NewPC);// sub_5C67A0()

	// Function Engine.GameModeBase.K2_OnRestartPlayer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_OnRestartPlayer(class AController* NewPlayer);// sub_5C67A0()

	// Function Engine.GameModeBase.K2_OnLogout
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_OnLogout(class AController* ExitingController);// sub_5C67A0()

	// Function Engine.GameModeBase.K2_OnChangeName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_OnChangeName(class AController* Other, const struct FString& NewName, unsigned char bNameChange);// sub_5C67A0()

	// Function Engine.GameModeBase.K2_FindPlayerStart
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AActor* STATIC_K2_FindPlayerStart(class AController* Player, const struct FString& IncomingName);// sub_5E82080()

	// Function Engine.GameModeBase.InitStartSpot
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_InitStartSpot(class AActor* StartSpot, class AController* NewPlayer);// sub_C5FD90()

	// Function Engine.GameModeBase.InitializeHUDForPlayer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_InitializeHUDForPlayer(class APlayerController* NewPlayer);// sub_E80110()

	// Function Engine.GameModeBase.HasMatchStarted
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_HasMatchStarted();// sub_2292D00()

	// Function Engine.GameModeBase.HandleStartingNewPlayer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_HandleStartingNewPlayer(class APlayerController* NewPlayer);// sub_1C784F0()

	// Function Engine.GameModeBase.GetNumSpectators
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetNumSpectators();// sub_1BD3560()

	// Function Engine.GameModeBase.GetNumPlayers
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetNumPlayers();// sub_54B2150()

	// Function Engine.GameModeBase.GetDefaultPawnClassForController
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UObject* STATIC_GetDefaultPawnClassForController(class AController* InController);// sub_242ED0()

	// Function Engine.GameModeBase.FindPlayerStart
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AActor* STATIC_FindPlayerStart(class AController* Player, const struct FString& IncomingName);// sub_6C7C0()

	// Function Engine.GameModeBase.ChoosePlayerStart
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AActor* STATIC_ChoosePlayerStart(class AController* Player);// sub_88F250()

	// Function Engine.GameModeBase.ChangeName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ChangeName(class AController* Controller, const struct FString& NewName, unsigned char bNameChange);// sub_43F6C20()

	// Function Engine.GameModeBase.CanSpectate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_CanSpectate(class APlayerController* Viewer, class APlayerState* ViewTarget);// sub_22C5A20()


}


//Class Engine.GameMode
//0x0040 (0x04E8 - 0x04A8)
class AGameMode : public AGameModeBase
{
public:
	struct FName                                       MatchState;                                               // 0x04A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bDelayedStart : 1;                                        // 0x04B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x04B1(0x0003) MISSED OFFSET
	int                                                NumSpectators;                                            // 0x04B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumPlayers;                                               // 0x04B8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumBots;                                                  // 0x04BC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinRespawnDelay;                                          // 0x04C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumTravellingPlayers;                                     // 0x04C4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ULocalMessage*                               EngineMessageClass;                                       // 0x04C8(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class APlayerState*>                        InactivePlayerArray;                                      // 0x04D0(0x0010) (ZeroConstructor)
	float                                              InactivePlayerStateLifeSpan;                              // 0x04E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bHandleDedicatedServerReplays : 1;                        // 0x04E4(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x04E5(0x0003) MISSED OFFSET

	// Function Engine.GameMode.StartMatch
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StartMatch();// sub_D69DC0()

	// Function Engine.GameMode.SetBandwidthLimit
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBandwidthLimit(float AsyncIOBandwidthLimit);// sub_1C2D360()

	// Function Engine.GameMode.Say
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Say(const struct FString& Msg);// sub_3DF6370()

	// Function Engine.GameMode.RestartGame
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RestartGame();// sub_4973540()

	// Function Engine.GameMode.ReadyToStartMatch
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_ReadyToStartMatch();// sub_4B5160()

	// Function Engine.GameMode.ReadyToEndMatch
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_ReadyToEndMatch();// sub_1035A0()

	// Function Engine.GameMode.K2_OnSetMatchState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_OnSetMatchState(const struct FName& NewState);// sub_5C67A0()

	// Function Engine.GameMode.IsMatchInProgress
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsMatchInProgress();// sub_9BA9E0()

	// Function Engine.GameMode.HasMatchEnded
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_HasMatchEnded();// sub_747C50()

	// Function Engine.GameMode.GetMatchState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FName STATIC_GetMatchState();// sub_1E1660()

	// Function Engine.GameMode.EndMatch
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_EndMatch();// sub_131A010()

	// Function Engine.GameMode.AbortMatch
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AbortMatch();// sub_1E376D0()


}


//Class Engine.GameNetworkManager
//0x0088 (0x0490 - 0x0408)
class AGameNetworkManager : public AInfo
{
public:
	int                                                AdjustedNetSpeed;                                         // 0x0408(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LastNetSpeedUpdateTime;                                   // 0x040C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                TotalNetBandwidth;                                        // 0x0410(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	int                                                MinDynamicBandwidth;                                      // 0x0414(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	int                                                MaxDynamicBandwidth;                                      // 0x0418(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      bIsStandbyCheckingEnabled : 1;                            // 0x041C(0x0001) (Config)
	unsigned char                                      bHasStandbyCheatTriggered : 1;                            // 0x041C(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x041D(0x0003) MISSED OFFSET
	float                                              StandbyRxCheatTime;                                       // 0x0420(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              StandbyTxCheatTime;                                       // 0x0424(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                BadPingThreshold;                                         // 0x0428(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              PercentMissingForRxStandby;                               // 0x042C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              PercentMissingForTxStandby;                               // 0x0430(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              PercentForBadPing;                                        // 0x0434(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              JoinInProgressStandbyWaitTime;                            // 0x0438(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MoveRepSize;                                              // 0x043C(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	float                                              MAXPOSITIONERRORSQUARED;                                  // 0x0440(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	float                                              MAXNEARZEROVELOCITYSQUARED;                               // 0x0444(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	float                                              CLIENTADJUSTUPDATECOST;                                   // 0x0448(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	float                                              MAXCLIENTUPDATEINTERVAL;                                  // 0x044C(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	float                                              MaxMoveDeltaTime;                                         // 0x0450(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	float                                              ClientNetSendMoveDeltaTime;                               // 0x0454(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	float                                              ClientNetSendMoveDeltaTimeThrottled;                      // 0x0458(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	int                                                ClientNetSendMoveThrottleAtNetSpeed;                      // 0x045C(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	int                                                ClientNetSendMoveThrottleOverPlayerCount;                 // 0x0460(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      ClientAuthorativePosition : 1;                            // 0x0464(0x0001) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0465(0x0003) MISSED OFFSET
	float                                              ClientErrorUpdateRateLimit;                               // 0x0468(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      bMovementTimeDiscrepancyDetection : 1;                    // 0x046C(0x0001) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x046D(0x0001)
	unsigned char                                      bMovementTimeDiscrepancyResolution : 1;                   // 0x046D(0x0001) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x046E(0x0002) MISSED OFFSET
	float                                              MovementTimeDiscrepancyResolutionMinFPS;                  // 0x0470(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	float                                              MovementTimeDiscrepancyMaxTimeMargin;                     // 0x0474(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	float                                              MovementTimeDiscrepancyMinTimeMargin;                     // 0x0478(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	float                                              MovementTimeDiscrepancyResolutionRate;                    // 0x047C(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	float                                              MovementTimeDiscrepancyDriftAllowance;                    // 0x0480(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      bMovementTimeDiscrepancyForceCorrectionsDuringResolution : 1;// 0x0484(0x0001) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData04 : 8;                                        // 0x0485(0x0001)
	unsigned char                                      bUseDistanceBasedRelevancy : 1;                           // 0x0485(0x0001) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData05[0xA];                                       // 0x0486(0x000A) MISSED OFFSET

}


//Class Engine.GameSession
//0x0018 (0x0420 - 0x0408)
class AGameSession : public AInfo
{
public:
	int                                                MaxSpectators;                                            // 0x0408(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	int                                                MaxPlayers;                                               // 0x040C(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	int                                                MaxPartySize;                                             // 0x0410(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      MaxSplitscreensPerConnection;                             // 0x0414(0x0001) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      bRequiresPushToTalk : 1;                                  // 0x0415(0x0001) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0416(0x0002) MISSED OFFSET
	struct FName                                       SessionName;                                              // 0x0418(0x0008) (ZeroConstructor, IsPlainOldData)

}


//Class Engine.GameStateBase
//0x0040 (0x0448 - 0x0408)
class AGameStateBase : public AInfo
{
public:
	class AGameModeBase*                               GameModeClass;                                            // 0x0408(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	class AGameModeBase*                               AuthorityGameMode;                                        // 0x0410(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class ASpectatorPawn*                              SpectatorClass;                                           // 0x0418(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class APlayerState*>                        PlayerArray;                                              // 0x0420(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      bReplicatedHasBegunPlay : 1;                              // 0x0430(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0431(0x0003) MISSED OFFSET
	float                                              ReplicatedWorldTimeSeconds;                               // 0x0434(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              ServerWorldTimeSecondsDelta;                              // 0x0438(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ServerWorldTimeSecondsUpdateFrequency;                    // 0x043C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0440(0x0008) MISSED OFFSET

	// Function Engine.GameStateBase.OnRep_SpectatorClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_SpectatorClass();// sub_11FDCE0()

	// Function Engine.GameStateBase.OnRep_ReplicatedWorldTimeSeconds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_ReplicatedWorldTimeSeconds();// sub_2017CF0()

	// Function Engine.GameStateBase.OnRep_ReplicatedHasBegunPlay
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_ReplicatedHasBegunPlay();// sub_378D30()

	// Function Engine.GameStateBase.OnRep_GameModeClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_GameModeClass();// sub_EE0A0()

	// Function Engine.GameStateBase.HasMatchStarted
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_HasMatchStarted();// sub_4E78930()

	// Function Engine.GameStateBase.HasBegunPlay
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_HasBegunPlay();// sub_13E5C40()

	// Function Engine.GameStateBase.GetServerWorldTimeSecondsDelta
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetServerWorldTimeSecondsDelta();// sub_1783990()

	// Function Engine.GameStateBase.GetServerWorldTimeSeconds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetServerWorldTimeSeconds();// sub_BE660()

	// Function Engine.GameStateBase.GetReplicatedRealTimeSeconds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetReplicatedRealTimeSeconds();// sub_F7E5F0()

	// Function Engine.GameStateBase.GetPlayerStartTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetPlayerStartTime(class AController* Controller);// sub_BE5C0()

	// Function Engine.GameStateBase.GetPlayerRespawnDelay
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetPlayerRespawnDelay(class AController* Controller);// sub_5C61B50()


}


//Class Engine.GameState
//0x0020 (0x0468 - 0x0448)
class AGameState : public AGameStateBase
{
public:
	struct FName                                       MatchState;                                               // 0x0448(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	struct FName                                       PreviousMatchState;                                       // 0x0450(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	int                                                ElapsedTime;                                              // 0x0458(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x045C(0x000C) MISSED OFFSET

	// Function Engine.GameState.OnRep_MatchState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_MatchState();// sub_88F2F0()

	// Function Engine.GameState.OnRep_ElapsedTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_ElapsedTime();// sub_45BBB40()


}


//Class Engine.PlayerState
//0x00A0 (0x04A8 - 0x0408)
class APlayerState : public AInfo
{
public:
	float                                              Score;                                                    // 0x0408(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x040C(0x000C) MISSED OFFSET
	unsigned char                                      Ping;                                                     // 0x0418(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0419(0x0003) MISSED OFFSET
	int                                                StartTime;                                                // 0x041C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                PlayerId;                                                 // 0x0420(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0424(0x0004) MISSED OFFSET
	struct FUniqueNetIdRepl                            UniqueId;                                                 // 0x0428(0x0018) (Net)
	class ULocalMessage*                               EngineMessageClass;                                       // 0x0440(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0448(0x0008) MISSED OFFSET
	struct FString                                     SavedNetworkAddress;                                      // 0x0450(0x0010) (ZeroConstructor)
	unsigned char                                      bIsSpectator : 1;                                         // 0x0460(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      bOnlySpectator : 1;                                       // 0x0460(0x0001) (Net)
	unsigned char                                      bIsABot : 1;                                              // 0x0460(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      bIsInactive : 1;                                          // 0x0460(0x0001) (Net)
	unsigned char                                      bFromPreviousLevel : 1;                                   // 0x0460(0x0001) (Net)
	unsigned char                                      UnknownData04[0x17];                                      // 0x0461(0x0017) MISSED OFFSET
	struct FString                                     PlayerName;                                               // 0x0478(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	unsigned char                                      UnknownData05[0x18];                                      // 0x0488(0x0018) MISSED OFFSET
	unsigned char                                      bShouldUpdateReplicatedPing : 1;                          // 0x04A0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x04A1(0x0007) MISSED OFFSET

	// Function Engine.PlayerState.ReceiveOverrideWith
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveOverrideWith(class APlayerState* OldPlayerState);// sub_5C67A0()

	// Function Engine.PlayerState.ReceiveCopyProperties
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveCopyProperties(class APlayerState* NewPlayerState);// sub_5C67A0()

	// Function Engine.PlayerState.OnRep_UniqueId
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_UniqueId();// sub_EC66C0()

	// Function Engine.PlayerState.OnRep_Score
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_Score();// sub_DA88C0()

	// Function Engine.PlayerState.OnRep_PlayerName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_PlayerName();// sub_1537560()

	// Function Engine.PlayerState.OnRep_bIsInactive
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_bIsInactive();// sub_F33880()


}


//Class Engine.SkyLight
//0x0010 (0x0418 - 0x0408)
class ASkyLight : public AInfo
{
public:
	class USkyLightComponent*                          LightComponent;                                           // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      bEnabled : 1;                                             // 0x0410(0x0001) (Net)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0411(0x0007) MISSED OFFSET

	// Function Engine.SkyLight.OnRep_bEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_bEnabled();// sub_DA88C0()


}


//Class Engine.WindDirectionalSource
//0x0008 (0x0410 - 0x0408)
class AWindDirectionalSource : public AInfo
{
public:
	class UWindDirectionalSourceComponent*             Component;                                                // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

}


//Class Engine.WorldSettings
//0x01F0 (0x05F8 - 0x0408)
class AWorldSettings : public AInfo
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0408(0x0008) MISSED OFFSET
	unsigned char                                      bEnableWorldBoundsChecks : 1;                             // 0x0410(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bEnableNavigationSystem : 1;                              // 0x0410(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Config)
	unsigned char                                      bEnableAISystem : 1;                                      // 0x0410(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Config)
	unsigned char                                      bEnableWorldComposition : 1;                              // 0x0410(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUseClientSideLevelStreamingVolumes : 1;                  // 0x0410(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bEnableWorldOriginRebasing : 1;                           // 0x0410(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bWorldGravitySet : 1;                                     // 0x0410(0x0001) (Transient)
	unsigned char                                      bGlobalGravitySet : 1;                                    // 0x0410(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0411(0x0003) MISSED OFFSET
	float                                              KillZ;                                                    // 0x0414(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AInfo*                                       LevelAttribute;                                           // 0x0418(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDamageType*                                 KillZDamageType;                                          // 0x0420(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WorldGravityZ;                                            // 0x0428(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              GlobalGravityZ;                                           // 0x042C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ADefaultPhysicsVolume*                       DefaultPhysicsVolumeClass;                                // 0x0430(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData)
	class UPhysicsCollisionHandler*                    PhysicsCollisionHandlerClass;                             // 0x0438(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AGameModeBase*                               DefaultGameMode;                                          // 0x0440(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AGameNetworkManager*                         GameNetworkManagerClass;                                  // 0x0448(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                PackedLightAndShadowMapTextureSize;                       // 0x0450(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bMinimizeBSPSections : 1;                                 // 0x0454(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0455(0x0003) MISSED OFFSET
	struct FVector                                     DefaultColorScale;                                        // 0x0458(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DefaultMaxDistanceFieldOcclusionDistance;                 // 0x0464(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GlobalDistanceFieldViewDistance;                          // 0x0468(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DynamicIndirectShadowsSelfShadowingIntensity;             // 0x046C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bPrecomputeVisibility : 1;                                // 0x0470(0x0001) (Edit)
	unsigned char                                      bPlaceCellsOnlyAlongCameraTracks : 1;                     // 0x0470(0x0001) (Edit)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0471(0x0003) MISSED OFFSET
	int                                                VisibilityCellSize;                                       // 0x0474(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EVisibilityAggressiveness>             VisibilityAggressiveness;                                 // 0x0478(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0479(0x0003) MISSED OFFSET
	unsigned char                                      bForceNoPrecomputedLighting : 1;                          // 0x047C(0x0001) (Edit)
	unsigned char                                      UnknownData05[0x3];                                       // 0x047D(0x0003) MISSED OFFSET
	struct FLightmassWorldInfoSettings                 LightmassSettings;                                        // 0x0480(0x0044) (Edit)
	unsigned char                                      UnknownData06[0x4];                                       // 0x04C4(0x0004) MISSED OFFSET
	struct FReverbSettings                             DefaultReverbSettings;                                    // 0x04C8(0x0018) (Edit, Config)
	struct FInteriorSettings                           DefaultAmbientZoneSettings;                               // 0x04E0(0x0024) (Edit, Config)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0504(0x0004) MISSED OFFSET
	class USoundMix*                                   DefaultBaseSoundMix;                                      // 0x0508(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WorldToMeters;                                            // 0x0510(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MonoCullingDistance;                                      // 0x0514(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UBookMark*                                   BookMarks[0xA];                                           // 0x0518(0x0008) (ZeroConstructor, IsPlainOldData)
	class UExtendedReflectionSettings*                 ReflectionSettings;                                       // 0x0568(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TimeDilation;                                             // 0x0570(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              MatineeTimeDilation;                                      // 0x0574(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              DemoPlayTimeDilation;                                     // 0x0578(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              MinGlobalTimeDilation;                                    // 0x057C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxGlobalTimeDilation;                                    // 0x0580(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData08[0x8];                                       // 0x0584(0x0008) MISSED OFFSET
	struct FBox                                        MBPBounds;                                                // 0x058C(0x001C) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bOverrideDefaultBroadphaseSettings : 1;                   // 0x05A8(0x0001) (Edit, Config)
	unsigned char                                      UnknownData09[0x3];                                       // 0x05A9(0x0003) MISSED OFFSET
	unsigned char                                      bHighPriorityLoading : 1;                                 // 0x05AC(0x0001) (Net)
	unsigned char                                      bHighPriorityLoadingLocal : 1;                            // 0x05AC(0x0001)
	unsigned char                                      UnknownData10[0x3];                                       // 0x05AD(0x0003) MISSED OFFSET
	TArray<struct FNetViewer>                          ReplicationViewers;                                       // 0x05B0(0x0010) (ZeroConstructor)
	struct FScriptMulticastDelegate                    OnPause;                                                  // 0x05C0(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnResume;                                                 // 0x05D0(0x0010) (ZeroConstructor, InstancedReference)
	TArray<class UAssetUserData*>                      AssetUserData;                                            // 0x05E0(0x0010) (ExportObject, ZeroConstructor)
	class APlayerState*                                Pauser;                                                   // 0x05F0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)

	// Function Engine.WorldSettings.TakeMBPBounds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_TakeMBPBounds();// sub_DA88C0()

	// Function Engine.WorldSettings.OnRep_WorldGravityZ
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_WorldGravityZ();// sub_1537560()


}


//Class Engine.InstancedDeferredDecalActor
//0x0038 (0x0440 - 0x0408)
class AInstancedDeferredDecalActor : public AActor
{
public:
	unsigned char                                      bUseInstancePool : 1;                                     // 0x0408(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0409(0x0001)
	unsigned char                                      bUseDynamicInstance : 1;                                  // 0x0409(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x040A(0x0006) MISSED OFFSET
	class UMaterialInterface*                          SharedMaterial;                                           // 0x0410(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UInstancedDeferredDecalComponent*            RootDecalComponent;                                       // 0x0418(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class UInstancedDeferredDecalComponent*>    decals;                                                   // 0x0420(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0430(0x0010) MISSED OFFSET

	// Function Engine.InstancedDeferredDecalActor.SetUseInstancePool
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetUseInstancePool(unsigned char bUse);// sub_5C7E350()

	// Function Engine.InstancedDeferredDecalActor.SetUseDynamicInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetUseDynamicInstance(unsigned char bUse);// sub_5078080()

	// Function Engine.InstancedDeferredDecalActor.SetDecalMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDecalMaterial(class UMaterialInterface* NewDecalMaterial);// sub_4D14A0()

	// Function Engine.InstancedDeferredDecalActor.GetUseInstancePool
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetUseInstancePool();// sub_45D520()

	// Function Engine.InstancedDeferredDecalActor.GetUseDynamicInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetUseDynamicInstance();// sub_55C5B20()

	// Function Engine.InstancedDeferredDecalActor.GetDecalMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UMaterialInterface* STATIC_GetDecalMaterial();// sub_1F5C300()

	// Function Engine.InstancedDeferredDecalActor.CreateDynamicMaterialInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UMaterialInstanceDynamic* STATIC_CreateDynamicMaterialInstance();// sub_6E4BD0()

	// Function Engine.InstancedDeferredDecalActor.AddInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddInstance(const struct FVector4& InstanceTransform, const struct FVector& DecalSize);// sub_6BB0A0()


}


//Class Engine.InstancedSplineDecalActor
//0x0008 (0x0410 - 0x0408)
class AInstancedSplineDecalActor : public AActor
{
public:
	class UInstancedSplineDecalComponent*              InstancedSplineDecalComponent;                            // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

}


//Class Engine.LevelBlockLandscapeGizmoActor
//0x0008 (0x0410 - 0x0408)
class ALevelBlockLandscapeGizmoActor : public AActor
{
public:
	class ULevelBlockLandscapeGizmoComponent*          LandscapeGizmoComponent;                                  // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

}


//Class Engine.LevelBlocksDataActor
//0x0008 (0x0410 - 0x0408)
class ALevelBlocksDataActor : public AActor
{
public:
	class ULevelBlocksDataComponent*                   LevelBlocksDataComponent;                                 // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

}


//Class Engine.LevelBlockSpawnedActor
//0x0000 (0x0408 - 0x0408)
class ALevelBlockSpawnedActor : public AActor
{
public:

}


//Class Engine.LevelBlockSpawnPointActor
//0x0008 (0x0410 - 0x0408)
class ALevelBlockSpawnPointActor : public AActor
{
public:
	class ULevelBlockSpawnPointComponent*              SpawnPointComponent;                                      // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

}


//Class Engine.LevelBounds
//0x0008 (0x0410 - 0x0408)
class ALevelBounds : public AActor
{
public:
	unsigned char                                      bAutoUpdateBounds : 1;                                    // 0x0408(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0409(0x0007) MISSED OFFSET

}


//Class Engine.LevelScriptActor
//0x0008 (0x0410 - 0x0408)
class ALevelScriptActor : public AActor
{
public:
	unsigned char                                      bInputEnabled : 1;                                        // 0x0408(0x0001)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0409(0x0007) MISSED OFFSET

	// Function Engine.LevelScriptActor.WorldOriginLocationChanged
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_WorldOriginLocationChanged(const struct FIntVector& OldOriginLocation, const struct FIntVector& NewOriginLocation);// sub_5C67A0()

	// Function Engine.LevelScriptActor.SetCinematicMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCinematicMode(unsigned char bCinematicMode, unsigned char bHidePlayer, unsigned char bAffectsHUD, unsigned char bAffectsMovement, unsigned char bAffectsTurning);// sub_D023E0()

	// Function Engine.LevelScriptActor.RemoteEvent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_RemoteEvent(const struct FName& EventName);// sub_54F1360()

	// Function Engine.LevelScriptActor.LevelReset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_LevelReset();// sub_5C67A0()


}


//Class Engine.Light
//0x0010 (0x0418 - 0x0408)
class ALight : public AActor
{
public:
	class ULightComponent*                             LightComponent;                                           // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      bEnabled : 1;                                             // 0x0410(0x0001) (Net)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0411(0x0007) MISSED OFFSET

	// Function Engine.Light.ToggleEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ToggleEnabled();// sub_24E6D50()

	// Function Engine.Light.SetLightFunctionScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLightFunctionScale(const struct FVector& NewLightFunctionScale);// sub_18256F0()

	// Function Engine.Light.SetLightFunctionMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLightFunctionMaterial(class UMaterialInterface* NewLightFunctionMaterial);// sub_1326F90()

	// Function Engine.Light.SetLightFunctionFadeDistance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLightFunctionFadeDistance(float NewLightFunctionFadeDistance);// sub_532FAD0()

	// Function Engine.Light.SetLightColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLightColor(const struct FLinearColor& NewLightColor);// sub_378D50()

	// Function Engine.Light.SetEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetEnabled(unsigned char bSetEnabled);// sub_118E200()

	// Function Engine.Light.SetCastShadows
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetCastShadows(unsigned char bNewValue);// sub_5668550()

	// Function Engine.Light.SetBrightness
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBrightness(float NewBrightness);// sub_22ACB70()

	// Function Engine.Light.SetAffectTranslucentLighting
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAffectTranslucentLighting(unsigned char bNewValue);// sub_135A40()

	// Function Engine.Light.OnRep_bEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_bEnabled();// sub_DA88C0()

	// Function Engine.Light.IsEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsEnabled();// sub_609A770()

	// Function Engine.Light.GetLightColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FLinearColor STATIC_GetLightColor();// sub_1A14490()

	// Function Engine.Light.GetBrightness
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetBrightness();// sub_4DCA2B0()


}


//Class Engine.DirectionalLight
//0x0000 (0x0418 - 0x0418)
class ADirectionalLight : public ALight
{
public:

}


//Class Engine.PointLight
//0x0008 (0x0420 - 0x0418)
class APointLight : public ALight
{
public:
	class UPointLightComponent*                        PointLightComponent;                                      // 0x0418(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	// Function Engine.PointLight.SetRadius
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetRadius(float NewRadius);// sub_3AD4990()

	// Function Engine.PointLight.SetLightFalloffExponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLightFalloffExponent(float NewLightFalloffExponent);// sub_5526920()


}


//Class Engine.spotlight
//0x0008 (0x0420 - 0x0418)
class Aspotlight : public ALight
{
public:
	class USpotLightComponent*                         SpotLightComponent;                                       // 0x0418(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	// Function Engine.spotlight.SetOuterConeAngle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetOuterConeAngle(float NewOuterConeAngle);// sub_23D6C80()

	// Function Engine.spotlight.SetInnerConeAngle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetInnerConeAngle(float NewInnerConeAngle);// sub_1551250()


}


//Class Engine.GeneratedMeshAreaLight
//0x0000 (0x0420 - 0x0420)
class AGeneratedMeshAreaLight : public Aspotlight
{
public:

}


//Class Engine.LightmassPortal
//0x0008 (0x0410 - 0x0408)
class ALightmassPortal : public AActor
{
public:
	class ULightmassPortalComponent*                   PortalComponent;                                          // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

}


//Class Engine.LODActor
//0x0038 (0x0440 - 0x0408)
class ALODActor : public AActor
{
public:
	class UStaticMeshComponent*                        StaticMeshComponent;                                      // 0x0408(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	TArray<class AActor*>                              SubActors;                                                // 0x0410(0x0010) (Edit, ZeroConstructor, EditConst)
	float                                              LODDrawDistance;                                          // 0x0420(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                LODLevel;                                                 // 0x0424(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	TArray<class UObject*>                             SubObjects;                                               // 0x0428(0x0010) (Edit, ZeroConstructor, EditConst)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0438(0x0008) MISSED OFFSET

}


//Class Engine.MaterialInstanceActor
//0x0010 (0x0418 - 0x0408)
class AMaterialInstanceActor : public AActor
{
public:
	TArray<class AActor*>                              TargetActors;                                             // 0x0408(0x0010) (Edit, BlueprintVisible, ZeroConstructor)

}


//Class Engine.MatineeActor
//0x00A8 (0x04B0 - 0x0408)
class AMatineeActor : public AActor
{
public:
	class UInterpData*                                 MatineeData;                                              // 0x0408(0x0008) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	struct FName                                       MatineeControllerName;                                    // 0x0410(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              PlayRate;                                                 // 0x0418(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bPlayOnLevelLoad : 1;                                     // 0x041C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bForceStartPos : 1;                                       // 0x041C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x041D(0x0003) MISSED OFFSET
	float                                              ForceStartPosition;                                       // 0x0420(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bLooping : 1;                                             // 0x0424(0x0001) (Edit, BlueprintVisible, Net)
	unsigned char                                      bRewindOnPlay : 1;                                        // 0x0424(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bNoResetOnRewind : 1;                                     // 0x0424(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bRewindIfAlreadyPlaying : 1;                              // 0x0424(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bDisableRadioFilter : 1;                                  // 0x0424(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bClientSideOnly : 1;                                      // 0x0424(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bSkipUpdateIfNotVisible : 1;                              // 0x0424(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bIsSkippable : 1;                                         // 0x0424(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0425(0x0003) MISSED OFFSET
	int                                                PreferredSplitScreenNum;                                  // 0x0428(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bDisableMovementInput : 1;                                // 0x042C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bDisableLookAtInput : 1;                                  // 0x042C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bHidePlayer : 1;                                          // 0x042C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bHideHud : 1;                                             // 0x042C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData02[0x3];                                       // 0x042D(0x0003) MISSED OFFSET
	TArray<struct FInterpGroupActorInfo>               GroupActorInfos;                                          // 0x0430(0x0010) (Net, ZeroConstructor)
	unsigned char                                      bShouldShowGore : 1;                                      // 0x0440(0x0001) (Transient)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0441(0x0007) MISSED OFFSET
	TArray<class UInterpGroupInst*>                    GroupInst;                                                // 0x0448(0x0010) (ZeroConstructor, Transient)
	TArray<struct FCameraCutInfo>                      CameraCuts;                                               // 0x0458(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      bIsPlaying : 1;                                           // 0x0468(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, Transient, EditConst)
	unsigned char                                      bReversePlayback : 1;                                     // 0x0468(0x0001) (Net)
	unsigned char                                      bPaused : 1;                                              // 0x0468(0x0001) (Net, Transient)
	unsigned char                                      bPendingStop : 1;                                         // 0x0468(0x0001) (Net, Transient)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0469(0x0003) MISSED OFFSET
	float                                              InterpPosition;                                           // 0x046C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0470(0x0004) MISSED OFFSET
	unsigned char                                      ReplicationForceIsPlaying;                                // 0x0474(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0475(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlay;                                                   // 0x0478(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStop;                                                   // 0x0488(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPause;                                                  // 0x0498(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData07[0x8];                                       // 0x04A8(0x0008) MISSED OFFSET

	// Function Engine.MatineeActor.Stop
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Stop();// sub_F33880()

	// Function Engine.MatineeActor.SetPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPosition(float NewPosition, unsigned char bJump);// sub_495B470()

	// Function Engine.MatineeActor.SetLoopingState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetLoopingState(unsigned char bNewLooping);// sub_49F0E50()

	// Function Engine.MatineeActor.Reverse
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Reverse();// sub_EC66C0()

	// Function Engine.MatineeActor.Play
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Play();// sub_1537560()

	// Function Engine.MatineeActor.Pause
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Pause();// sub_370DEB0()

	// Function Engine.MatineeActor.EnableGroupByName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_EnableGroupByName(const struct FString& GroupName, unsigned char bEnable);// sub_4F80E90()

	// Function Engine.MatineeActor.ChangePlaybackDirection
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ChangePlaybackDirection();// sub_4D83610()


}


//Class Engine.MatineeActorCameraAnim
//0x0008 (0x04B8 - 0x04B0)
class AMatineeActorCameraAnim : public AMatineeActor
{
public:
	class UCameraAnim*                                 CameraAnim;                                               // 0x04B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

}


//Class Engine.MinimapLabelActor
//0x0008 (0x0410 - 0x0408)
class AMinimapLabelActor : public AActor
{
public:
	class UMinimapLabelComponent*                      MinimapLabelComponent;                                    // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

}


//Class Engine.MinimapObjectActor
//0x0008 (0x0410 - 0x0408)
class AMinimapObjectActor : public AActor
{
public:
	class UMinimapObjectComponent*                     MinimapObjectComponent;                                   // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

}


//Class Engine.NavigationData
//0x01A8 (0x05B0 - 0x0408)
class ANavigationData : public AActor
{
public:
	class UPrimitiveComponent*                         RenderingComp;                                            // 0x0408(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData)
	struct FNavDataConfig                              NavDataConfig;                                            // 0x0410(0x0050)
	unsigned char                                      bEnableDrawing : 1;                                       // 0x0460(0x0001) (Edit, Transient)
	unsigned char                                      bForceRebuildOnLoad : 1;                                  // 0x0460(0x0001) (Edit, Config)
	unsigned char                                      bCanBeMainNavData : 1;                                    // 0x0460(0x0001) (Edit, Config, EditConst)
	unsigned char                                      bCanSpawnOnRebuild : 1;                                   // 0x0460(0x0001) (Edit, Config, EditConst)
	unsigned char                                      bRebuildAtRuntime : 1;                                    // 0x0460(0x0001) (Config, Deprecated)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0461(0x0003) MISSED OFFSET
	ERuntimeGenerationType                             RuntimeGeneration;                                        // 0x0464(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0465(0x0003) MISSED OFFSET
	float                                              ObservedPathsTickInterval;                                // 0x0468(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bSubNavData : 1;                                          // 0x046C(0x0001)
	unsigned char                                      UnknownData02[0x3];                                       // 0x046D(0x0003) MISSED OFFSET
	uint32_t                                           DataVersion;                                              // 0x0470(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xD4];                                      // 0x0474(0x00D4) MISSED OFFSET
	TArray<struct FSupportedAreaData>                  SupportedAreas;                                           // 0x0548(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData04[0x58];                                      // 0x0558(0x0058) MISSED OFFSET

}


//Class Engine.AbstractNavData
//0x0000 (0x05B0 - 0x05B0)
class AAbstractNavData : public ANavigationData
{
public:

}


//Class Engine.NavigationGraph
//0x0000 (0x05B0 - 0x05B0)
class ANavigationGraph : public ANavigationData
{
public:

}


//Class Engine.RecastNavMesh
//0x0110 (0x06C0 - 0x05B0)
class ARecastNavMesh : public ANavigationData
{
public:
	unsigned char                                      bDrawTriangleEdges : 1;                                   // 0x05B0(0x0001) (Edit)
	unsigned char                                      bDrawPolyEdges : 1;                                       // 0x05B0(0x0001) (Edit, Config)
	unsigned char                                      bDrawFilledPolys : 1;                                     // 0x05B0(0x0001) (Edit)
	unsigned char                                      bDrawNavMeshEdges : 1;                                    // 0x05B0(0x0001) (Edit)
	unsigned char                                      bDrawTileBounds : 1;                                      // 0x05B0(0x0001) (Edit)
	unsigned char                                      bDrawPathCollidingGeometry : 1;                           // 0x05B0(0x0001) (Edit)
	unsigned char                                      bDrawTileLabels : 1;                                      // 0x05B0(0x0001) (Edit)
	unsigned char                                      bDrawPolygonLabels : 1;                                   // 0x05B0(0x0001) (Edit)
	unsigned char                                      UnknownData00 : 8;                                        // 0x05B1(0x0001)
	unsigned char                                      bDrawDefaultPolygonCost : 1;                              // 0x05B1(0x0001) (Edit)
	unsigned char                                      bDrawLabelsOnPathNodes : 1;                               // 0x05B1(0x0001) (Edit)
	unsigned char                                      bDrawNavLinks : 1;                                        // 0x05B1(0x0001) (Edit)
	unsigned char                                      bDrawFailedNavLinks : 1;                                  // 0x05B1(0x0001) (Edit)
	unsigned char                                      bDrawClusters : 1;                                        // 0x05B1(0x0001) (Edit)
	unsigned char                                      bDrawOctree : 1;                                          // 0x05B1(0x0001) (Edit)
	unsigned char                                      bDistinctlyDrawTilesBeingBuilt : 1;                       // 0x05B1(0x0001) (Config)
	unsigned char                                      bDrawNavMesh : 1;                                         // 0x05B1(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x2];                                       // 0x05B2(0x0002) MISSED OFFSET
	float                                              DrawOffset;                                               // 0x05B4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bFixedTilePoolSize : 1;                                   // 0x05B8(0x0001) (Edit, Config)
	unsigned char                                      UnknownData02[0x3];                                       // 0x05B9(0x0003) MISSED OFFSET
	int                                                TilePoolSize;                                             // 0x05BC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              TileSizeUU;                                               // 0x05C0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              CellSize;                                                 // 0x05C4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              CellHeight;                                               // 0x05C8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              AgentRadius;                                              // 0x05CC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              AgentHeight;                                              // 0x05D0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              AgentMaxHeight;                                           // 0x05D4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              AgentMaxSlope;                                            // 0x05D8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              AgentMaxStepHeight;                                       // 0x05DC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MinRegionArea;                                            // 0x05E0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MergeRegionSize;                                          // 0x05E4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxSimplificationError;                                   // 0x05E8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                MaxSimultaneousTileGenerationJobsCount;                   // 0x05EC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                TileNumberHardLimit;                                      // 0x05F0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                PolyRefTileBits;                                          // 0x05F4(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                PolyRefNavPolyBits;                                       // 0x05F8(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                PolyRefSaltBits;                                          // 0x05FC(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              DefaultDrawDistance;                                      // 0x0600(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              DefaultMaxSearchNodes;                                    // 0x0604(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              DefaultMaxHierarchicalSearchNodes;                        // 0x0608(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	TEnumAsByte<ERecastPartitioning>                   RegionPartitioning;                                       // 0x060C(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	TEnumAsByte<ERecastPartitioning>                   LayerPartitioning;                                        // 0x060D(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x060E(0x0002) MISSED OFFSET
	int                                                RegionChunkSplits;                                        // 0x0610(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                LayerChunkSplits;                                         // 0x0614(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bSortNavigationAreasByCost : 1;                           // 0x0618(0x0001) (Edit, Config)
	unsigned char                                      bPerformVoxelFiltering : 1;                               // 0x0618(0x0001) (Edit, Config)
	unsigned char                                      bMarkLowHeightAreas : 1;                                  // 0x0618(0x0001) (Edit, Config)
	unsigned char                                      bDoFullyAsyncNavDataGathering : 1;                        // 0x0618(0x0001) (Edit, Config)
	unsigned char                                      bUseBetterOffsetsFromCorners : 1;                         // 0x0618(0x0001) (Config)
	unsigned char                                      bStoreEmptyTileLayers : 1;                                // 0x0618(0x0001) (Config)
	unsigned char                                      bUseVirtualFilters : 1;                                   // 0x0618(0x0001) (Config)
	unsigned char                                      bAllowNavLinkAsPathEnd : 1;                               // 0x0618(0x0001) (Config)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0619(0x0003) MISSED OFFSET
	unsigned char                                      bOnlySavedOnDS : 1;                                       // 0x061C(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x061D(0x0003) MISSED OFFSET
	unsigned char                                      bUseVoxelCache : 1;                                       // 0x0620(0x0001) (Config)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0621(0x0003) MISSED OFFSET
	float                                              TileSetUpdateInterval;                                    // 0x0624(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              HeuristicScale;                                           // 0x0628(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              VerticalDeviationFromGroundCompensation;                  // 0x062C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData07[0x90];                                      // 0x0630(0x0090) MISSED OFFSET

}


//Class Engine.NavigationGraphNode
//0x0000 (0x0408 - 0x0408)
class ANavigationGraphNode : public AActor
{
public:

}


//Class Engine.NavigationObjectBase
//0x0028 (0x0430 - 0x0408)
class ANavigationObjectBase : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0408(0x0008) MISSED OFFSET
	class UCapsuleComponent*                           CapsuleComponent;                                         // 0x0410(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBillboardComponent*                         GoodSprite;                                               // 0x0418(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UBillboardComponent*                         BadSprite;                                                // 0x0420(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      bIsPIEPlayerStart : 1;                                    // 0x0428(0x0001)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0429(0x0007) MISSED OFFSET

}


//Class Engine.PlayerStart
//0x0008 (0x0438 - 0x0430)
class APlayerStart : public ANavigationObjectBase
{
public:
	struct FName                                       PlayerStartTag;                                           // 0x0430(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

}


//Class Engine.PlayerStartPIE
//0x0000 (0x0438 - 0x0438)
class APlayerStartPIE : public APlayerStart
{
public:

}


//Class Engine.NavPathObserverInterface
//0x0000 (0x0040 - 0x0040)
class UNavPathObserverInterface : public UInterface
{
public:

}


//Class Engine.NavigationTestingActor
//0x0108 (0x0510 - 0x0408)
class ANavigationTestingActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0408(0x0010) MISSED OFFSET
	class UCapsuleComponent*                           CapsuleComponent;                                         // 0x0418(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UNavigationInvokerComponent*                 InvokerComponent;                                         // 0x0420(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      bActAsNavigationInvoker : 1;                              // 0x0428(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0429(0x0007) MISSED OFFSET
	struct FNavAgentProperties                         NavAgentProps;                                            // 0x0430(0x0020) (Edit)
	struct FVector                                     QueryingExtent;                                           // 0x0450(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x045C(0x0004) MISSED OFFSET
	class ANavigationData*                             MyNavData;                                                // 0x0460(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     ProjectedLocation;                                        // 0x0468(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      bProjectedLocationValid : 1;                              // 0x0474(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst)
	unsigned char                                      bSearchStart : 1;                                         // 0x0474(0x0001) (Edit)
	unsigned char                                      bUseHierarchicalPathfinding : 1;                          // 0x0474(0x0001) (Edit)
	unsigned char                                      bGatherDetailedInfo : 1;                                  // 0x0474(0x0001) (Edit)
	unsigned char                                      bDrawDistanceToWall : 1;                                  // 0x0474(0x0001) (Edit)
	unsigned char                                      bShowNodePool : 1;                                        // 0x0474(0x0001) (Edit)
	unsigned char                                      bShowBestPath : 1;                                        // 0x0474(0x0001) (Edit)
	unsigned char                                      bShowDiffWithPreviousStep : 1;                            // 0x0474(0x0001) (Edit)
	unsigned char                                      UnknownData03 : 8;                                        // 0x0475(0x0001)
	unsigned char                                      bShouldBeVisibleInGame : 1;                               // 0x0475(0x0001) (Edit)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0476(0x0002) MISSED OFFSET
	TEnumAsByte<ENavCostDisplay>                       CostDisplayMode;                                          // 0x0478(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0479(0x0003) MISSED OFFSET
	struct FVector2D                                   TextCanvasOffset;                                         // 0x047C(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bPathExist : 1;                                           // 0x0484(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bPathIsPartial : 1;                                       // 0x0484(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      bPathSearchOutOfNodes : 1;                                // 0x0484(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Transient, EditConst)
	unsigned char                                      UnknownData06[0x3];                                       // 0x0485(0x0003) MISSED OFFSET
	float                                              PathfindingTime;                                          // 0x0488(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	float                                              PathCost;                                                 // 0x048C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	int                                                PathfindingSteps;                                         // 0x0490(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x0494(0x0004) MISSED OFFSET
	class ANavigationTestingActor*                     OtherActor;                                               // 0x0498(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UNavigationQueryFilter*                      FilterClass;                                              // 0x04A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ShowStepIndex;                                            // 0x04A8(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData)
	float                                              OffsetFromCornersDistance;                                // 0x04AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x60];                                      // 0x04B0(0x0060) MISSED OFFSET

}


//Class Engine.NavLinkDefinition
//0x0028 (0x0068 - 0x0040)
class UNavLinkDefinition : public UObject
{
public:
	TArray<struct FNavigationLink>                     Links;                                                    // 0x0040(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNavigationSegmentLink>              SegmentLinks;                                             // 0x0050(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0060(0x0008) MISSED OFFSET

}


//Class Engine.NavLinkHostInterface
//0x0000 (0x0040 - 0x0040)
class UNavLinkHostInterface : public UInterface
{
public:

}


//Class Engine.NavLinkProxy
//0x0050 (0x0458 - 0x0408)
class ANavLinkProxy : public AActor
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0408(0x0010) MISSED OFFSET
	TArray<struct FNavigationLink>                     PointLinks;                                               // 0x0418(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNavigationSegmentLink>              SegmentLinks;                                             // 0x0428(0x0010) (ZeroConstructor)
	class UNavLinkCustomComponent*                     SmartLinkComp;                                            // 0x0438(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      bSmartLinkIsRelevant : 1;                                 // 0x0440(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0441(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSmartLinkReached;                                       // 0x0448(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	// Function Engine.NavLinkProxy.SetSmartLinkEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSmartLinkEnabled(unsigned char bEnabled);// sub_4262B70()

	// Function Engine.NavLinkProxy.ResumePathFollowing
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ResumePathFollowing(class AActor* Agent);// sub_4290AC0()

	// Function Engine.NavLinkProxy.ReceiveSmartLinkReached
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveSmartLinkReached(class AActor* Agent, const struct FVector& Destination);// sub_5C67A0()

	// Function Engine.NavLinkProxy.IsSmartLinkEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsSmartLinkEnabled();// sub_1F40C10()

	// Function Engine.NavLinkProxy.HasMovingAgents
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_HasMovingAgents();// sub_4C4AF10()


}


//Class Engine.Note
//0x0000 (0x0408 - 0x0408)
class ANote : public AActor
{
public:

}


//Class Engine.ParticleSystem
//0x0110 (0x0150 - 0x0040)
class UParticleSystem : public UObject
{
public:
	TEnumAsByte<EParticleSystemUpdateMode>             SystemUpdateMode;                                         // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              UpdateTime_FPS;                                           // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UpdateTime_Delta;                                         // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              WarmupTime;                                               // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WarmupTickRate;                                           // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	TArray<class UParticleEmitter*>                    Emitters;                                                 // 0x0058(0x0010) (ExportObject, ZeroConstructor)
	class UParticleSystemComponent*                    PreviewComponent;                                         // 0x0068(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UInterpCurveEdSetup*                         CurveEdSetup;                                             // 0x0070(0x0008) (ExportObject, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bOrientZAxisTowardCamera : 1;                             // 0x0078(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	float                                              LODDistanceCheckTime;                                     // 0x007C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EParticleSystemLODMethod>              LODMethod;                                                // 0x0080(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
	TArray<float>                                      LODDistances;                                             // 0x0088(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	unsigned char                                      bApplyLODDistanceFactorForLowFOV : 1;                     // 0x0098(0x0001) (Edit)
	unsigned char                                      bRegenerateLODDuplicate : 1;                              // 0x0098(0x0001)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0099(0x0007) MISSED OFFSET
	TArray<struct FParticleSystemLOD>                  LODSettings;                                              // 0x00A0(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      bUseFixedRelativeBoundingBox : 1;                         // 0x00B0(0x0001) (Edit)
	unsigned char                                      UnknownData05[0x3];                                       // 0x00B1(0x0003) MISSED OFFSET
	struct FBox                                        FixedRelativeBoundingBox;                                 // 0x00B4(0x001C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SecondsBeforeInactive;                                    // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bShouldResetPeakCounts : 1;                               // 0x00D4(0x0001)
	unsigned char                                      bHasPhysics : 1;                                          // 0x00D4(0x0001) (Transient)
	unsigned char                                      bUseRealtimeThumbnail : 1;                                // 0x00D4(0x0001) (Edit)
	unsigned char                                      ThumbnailImageOutOfDate : 1;                              // 0x00D4(0x0001)
	unsigned char                                      UnknownData06[0x3];                                       // 0x00D5(0x0003) MISSED OFFSET
	float                                              Delay;                                                    // 0x00D8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DelayLow;                                                 // 0x00DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseDelayRange : 1;                                       // 0x00E0(0x0001) (Edit)
	unsigned char                                      UnknownData07[0x3];                                       // 0x00E1(0x0003) MISSED OFFSET
	unsigned char                                      bAutoDeactivate : 1;                                      // 0x00E4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x00E5(0x0003) MISSED OFFSET
	uint32_t                                           MinTimeBetweenTicks;                                      // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EParticleSystemInsignificanceReaction              InsignificantReaction;                                    // 0x00EC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x00ED(0x0003) MISSED OFFSET
	float                                              InsignificanceDelay;                                      // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EParticleSignificanceLevel                         MaxSignificanceLevel;                                     // 0x00F4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x00F5(0x0003) MISSED OFFSET
	struct FVector                                     MacroUVPosition;                                          // 0x00F8(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MacroUVRadius;                                            // 0x0104(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EParticleSystemOcclusionBoundsMethod>  OcclusionBoundsMethod;                                    // 0x0108(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x3];                                       // 0x0109(0x0003) MISSED OFFSET
	struct FBox                                        CustomOcclusionBounds;                                    // 0x010C(0x001C) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FLODSoloTrack>                       SoloTracking;                                             // 0x0128(0x0010) (ZeroConstructor, Transient)
	TArray<struct FNamedEmitterMaterial>               NamedMaterialSlots;                                       // 0x0138(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData12[0x8];                                       // 0x0148(0x0008) MISSED OFFSET

	// Function Engine.ParticleSystem.ContainsEmitterType
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_ContainsEmitterType(class UObject* TypeData);// sub_3E294B0()


}


//Class Engine.ParticleSystemComponent
//0x0260 (0x0C40 - 0x09E0)
class UParticleSystemComponent : public UPrimitiveComponent
{
public:
	class UParticleSystem*                             Template;                                                 // 0x09E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UMaterialInterface*>                  EmitterMaterials;                                         // 0x09E8(0x0010) (ZeroConstructor, Transient, DuplicateTransient)
	TArray<class USkeletalMeshComponent*>              SkelMeshComponents;                                       // 0x09F8(0x0010) (ExportObject, ZeroConstructor, Transient, DuplicateTransient)
	unsigned char                                      bResetOnDetach : 1;                                       // 0x0A08(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0A09(0x0001)
	unsigned char                                      bUpdateOnDedicatedServer : 1;                             // 0x0A09(0x0001)
	unsigned char                                      bAllowRecycling : 1;                                      // 0x0A09(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bAutoManageAttachment : 1;                                // 0x0A09(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bWarmingUp : 1;                                           // 0x0A09(0x0001)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0A0A(0x0001)
	unsigned char                                      bOverrideLODMethod : 1;                                   // 0x0A0A(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bSkipUpdateDynamicDataDuringTick : 1;                     // 0x0A0A(0x0001)
	unsigned char                                      bForceEmitterUseLocalSpace : 1;                           // 0x0A0A(0x0001)
	unsigned char                                      UnknownData02[0x5];                                       // 0x0A0B(0x0005) MISSED OFFSET
	TArray<struct FParticleSysParam>                   InstanceParameters;                                       // 0x0A10(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FScriptMulticastDelegate                    OnParticleSpawn;                                          // 0x0A20(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnParticleBurst;                                          // 0x0A30(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnParticleDeath;                                          // 0x0A40(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnParticleCollide;                                        // 0x0A50(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FVector                                     OldPosition;                                              // 0x0A60(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     PartSysVelocity;                                          // 0x0A6C(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              WarmupTime;                                               // 0x0A78(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              WarmupTickRate;                                           // 0x0A7C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0A80(0x0004) MISSED OFFSET
	float                                              SecondsBeforeInactive;                                    // 0x0A84(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0A88(0x0004) MISSED OFFSET
	float                                              MaxTimeBeforeForceUpdateTransform;                        // 0x0A8C(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0A90(0x0008) MISSED OFFSET
	TEnumAsByte<EParticleSystemLODMethod>              LODMethod;                                                // 0x0A98(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EParticleSignificanceLevel                         RequiredSignificance;                                     // 0x0A99(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x16];                                      // 0x0A9A(0x0016) MISSED OFFSET
	TArray<class UParticleSystemReplay*>               ReplayClips;                                              // 0x0AB0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData07[0x60];                                      // 0x0AC0(0x0060) MISSED OFFSET
	float                                              CustomTimeDilation;                                       // 0x0B20(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0B24(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSystemFinished;                                         // 0x0B28(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TWeakObjectPtr<class USceneComponent>              AutoAttachParent;                                         // 0x0B38(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData)
	struct FName                                       AutoAttachSocketName;                                     // 0x0B40(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAttachLocation>                       AutoAttachLocationType;                                   // 0x0B48(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	EAttachmentRule                                    AutoAttachLocationRule;                                   // 0x0B49(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EAttachmentRule                                    AutoAttachRotationRule;                                   // 0x0B4A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EAttachmentRule                                    AutoAttachScaleRule;                                      // 0x0B4B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0xF4];                                      // 0x0B4C(0x00F4) MISSED OFFSET

	// Function Engine.ParticleSystemComponent.SetVectorParameter
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVectorParameter(const struct FName& ParameterName, const struct FVector& Param);// sub_1599710()

	// Function Engine.ParticleSystemComponent.SetTrailSourceData
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTrailSourceData(const struct FName& InFirstSocketName, const struct FName& InSecondSocketName, TEnumAsByte<ETrailWidthMode> InWidthMode, float InWidth);// sub_4D351A0()

	// Function Engine.ParticleSystemComponent.SetTemplate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTemplate(class UParticleSystem* NewTemplate);// sub_6DCC50()

	// Function Engine.ParticleSystemComponent.SetMaterialParameter
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetMaterialParameter(const struct FName& ParameterName, class UMaterialInterface* Param);// sub_245FD90()

	// Function Engine.ParticleSystemComponent.SetFloatParameter
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetFloatParameter(const struct FName& ParameterName, float Param);// sub_40BE5D0()

	// Function Engine.ParticleSystemComponent.SetEmitterEnable
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetEmitterEnable(const struct FName& EmitterName, unsigned char bNewEnableState);// sub_46E8C70()

	// Function Engine.ParticleSystemComponent.SetColorParameter
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetColorParameter(const struct FName& ParameterName, const struct FLinearColor& Param);// sub_4F8320()

	// Function Engine.ParticleSystemComponent.SetBeamTargetTangent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBeamTargetTangent(int EmitterIndex, const struct FVector& NewTangentPoint, int TargetIndex);// sub_3B4D240()

	// Function Engine.ParticleSystemComponent.SetBeamTargetStrength
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBeamTargetStrength(int EmitterIndex, float NewTargetStrength, int TargetIndex);// sub_3D65CE0()

	// Function Engine.ParticleSystemComponent.SetBeamTargetPoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBeamTargetPoint(int EmitterIndex, const struct FVector& NewTargetPoint, int TargetIndex);// sub_4F8210()

	// Function Engine.ParticleSystemComponent.SetBeamSourceTangent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBeamSourceTangent(int EmitterIndex, const struct FVector& NewTangentPoint, int SourceIndex);// sub_1CA4040()

	// Function Engine.ParticleSystemComponent.SetBeamSourceStrength
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBeamSourceStrength(int EmitterIndex, float NewSourceStrength, int SourceIndex);// sub_2CBEB0()

	// Function Engine.ParticleSystemComponent.SetBeamSourcePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBeamSourcePoint(int EmitterIndex, const struct FVector& NewSourcePoint, int SourceIndex);// sub_43A9760()

	// Function Engine.ParticleSystemComponent.SetBeamEndPoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBeamEndPoint(int EmitterIndex, const struct FVector& NewEndPoint);// sub_D69CF0()

	// Function Engine.ParticleSystemComponent.SetAutoAttachParams
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAutoAttachParams(class USceneComponent* Parent, const struct FName& SocketName, TEnumAsByte<EAttachLocation> LocationType);// sub_126F7F0()

	// Function Engine.ParticleSystemComponent.SetAutoAttachmentParameters
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAutoAttachmentParameters(class USceneComponent* Parent, const struct FName& SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule);// sub_C9E030()

	// Function Engine.ParticleSystemComponent.SetActorParameter
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetActorParameter(const struct FName& ParameterName, class AActor* Param);// sub_E03A70()

	// Function Engine.ParticleSystemComponent.GetNumActiveParticles
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetNumActiveParticles();// sub_602AB30()

	// Function Engine.ParticleSystemComponent.GetNamedMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UMaterialInterface* STATIC_GetNamedMaterial(const struct FName& InName);// sub_45E9040()

	// Function Engine.ParticleSystemComponent.GetBeamTargetTangent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetBeamTargetTangent(int EmitterIndex, int TargetIndex, struct FVector* OutTangentPoint);// sub_5B6D360()

	// Function Engine.ParticleSystemComponent.GetBeamTargetStrength
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetBeamTargetStrength(int EmitterIndex, int TargetIndex, float* OutTargetStrength);// sub_2326D50()

	// Function Engine.ParticleSystemComponent.GetBeamTargetPoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetBeamTargetPoint(int EmitterIndex, int TargetIndex, struct FVector* OutTargetPoint);// sub_44BE280()

	// Function Engine.ParticleSystemComponent.GetBeamSourceTangent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetBeamSourceTangent(int EmitterIndex, int SourceIndex, struct FVector* OutTangentPoint);// sub_233FF90()

	// Function Engine.ParticleSystemComponent.GetBeamSourceStrength
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetBeamSourceStrength(int EmitterIndex, int SourceIndex, float* OutSourceStrength);// sub_E038B0()

	// Function Engine.ParticleSystemComponent.GetBeamSourcePoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetBeamSourcePoint(int EmitterIndex, int SourceIndex, struct FVector* OutSourcePoint);// sub_112BAA0()

	// Function Engine.ParticleSystemComponent.GetBeamEndPoint
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetBeamEndPoint(int EmitterIndex, struct FVector* OutEndPoint);// sub_6156EC0()

	// Function Engine.ParticleSystemComponent.GenerateParticleEvent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GenerateParticleEvent(const struct FName& InEventName, float InEmitterTime, const struct FVector& InLocation, const struct FVector& InDirection, const struct FVector& InVelocity);// sub_55E1E80()

	// Function Engine.ParticleSystemComponent.EndTrails
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_EndTrails();// sub_2203FC0()

	// Function Engine.ParticleSystemComponent.CreateNamedDynamicMaterialInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UMaterialInstanceDynamic* STATIC_CreateNamedDynamicMaterialInstance(const struct FName& InName, class UMaterialInterface* SourceMaterial);// sub_1A44BE0()

	// Function Engine.ParticleSystemComponent.BeginTrails
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BeginTrails(const struct FName& InFirstSocketName, const struct FName& InSecondSocketName, TEnumAsByte<ETrailWidthMode> InWidthMode, float InWidth);// sub_619B490()


}


//Class Engine.ParticleEventManager
//0x0000 (0x0408 - 0x0408)
class AParticleEventManager : public AActor
{
public:

}


//Class Engine.Interface_CollisionDataProvider
//0x0000 (0x0040 - 0x0040)
class UInterface_CollisionDataProvider : public UInterface
{
public:

}


//Class Engine.SkeletalMesh
//0x02C8 (0x0308 - 0x0040)
class USkeletalMesh : public UObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0040(0x0020) MISSED OFFSET
	class USkeleton*                                   Skeleton;                                                 // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	struct FBoxSphereBounds                            ImportedBounds;                                           // 0x0068(0x001C) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData)
	struct FBoxSphereBounds                            ExtendedBounds;                                           // 0x0084(0x001C) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData)
	struct FVector                                     PositiveBoundsExtension;                                  // 0x00A0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NegativeBoundsExtension;                                  // 0x00AC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FSkeletalMaterial>                   Materials;                                                // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, DuplicateTransient)
	float                                              UVDensityRate;                                            // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET
	TArray<struct FBoneMirrorInfo>                     SkelMirrorTable;                                          // 0x00D0(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TEnumAsByte<EAxis>                                 SkelMirrorAxis;                                           // 0x00E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EAxis>                                 SkelMirrorFlipAxis;                                       // 0x00E1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x00E2(0x0006) MISSED OFFSET
	TArray<struct FSkeletalMeshLODInfo>                LODInfo;                                                  // 0x00E8(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	unsigned char                                      bUseFullPrecisionUVs : 1;                                 // 0x00F8(0x0001) (Edit)
	unsigned char                                      bHasBeenSimplified : 1;                                   // 0x00F8(0x0001)
	unsigned char                                      bHasVertexColors : 1;                                     // 0x00F8(0x0001)
	unsigned char                                      bEnablePerPolyCollision : 1;                              // 0x00F8(0x0001) (Edit)
	unsigned char                                      UnknownData03[0x7];                                       // 0x00F9(0x0007) MISSED OFFSET
	class UBodySetup*                                  BodySetup;                                                // 0x0100(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UPhysicsAsset*                               PhysicsAsset;                                             // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UPhysicsAsset*                               ShadowPhysicsAsset;                                       // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UNodeMappingContainer*>               NodeMappingData;                                          // 0x0118(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor)
	TArray<class UMorphTarget*>                        MorphTargets;                                             // 0x0128(0x0010) (BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData04[0x168];                                     // 0x0138(0x0168) MISSED OFFSET
	TArray<struct FClothingAssetData_Legacy>           ClothingAssets;                                           // 0x02A0(0x0010) (ZeroConstructor, Deprecated)
	class UAnimInstance*                               PostProcessAnimBlueprint;                                 // 0x02B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UClothingAssetBase*>                  MeshClothingAssets;                                       // 0x02B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor)
	TArray<class UAssetUserData*>                      AssetUserData;                                            // 0x02C8(0x0010) (Edit, ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData05[0x8];                                       // 0x02D8(0x0008) MISSED OFFSET
	TArray<class USkeletalMeshSocket*>                 Sockets;                                                  // 0x02E0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData06[0x18];                                      // 0x02F0(0x0018) MISSED OFFSET

	// Function Engine.SkeletalMesh.NumSockets
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_NumSockets();// sub_450A290()

	// Function Engine.SkeletalMesh.IsSectionUsingCloth
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsSectionUsingCloth(int InSectionIndex, unsigned char bCheckCorrespondingSections);// sub_42FAEE0()

	// Function Engine.SkeletalMesh.GetSocketByIndex
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class USkeletalMeshSocket* STATIC_GetSocketByIndex(int Index);// sub_1C3210()

	// Function Engine.SkeletalMesh.GetNodeMappingContainer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UNodeMappingContainer* STATIC_GetNodeMappingContainer(class UBlueprint* SourceAsset);// sub_3C529F0()

	// Function Engine.SkeletalMesh.GetImportedBounds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FBoxSphereBounds STATIC_GetImportedBounds();// sub_21EE630()

	// Function Engine.SkeletalMesh.GetBounds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FBoxSphereBounds STATIC_GetBounds();// sub_4F68F50()

	// Function Engine.SkeletalMesh.FindSocketAndIndex
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class USkeletalMeshSocket* STATIC_FindSocketAndIndex(const struct FName& InSocketName, int* OutIndex);// sub_1767C50()

	// Function Engine.SkeletalMesh.FindSocket
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class USkeletalMeshSocket* STATIC_FindSocket(const struct FName& InSocketName);// sub_3D31A70()


}


//Class Engine.Character
//0x0400 (0x0870 - 0x0470)
class ACharacter : public APawn
{
public:
	unsigned char                                      bInBaseReplication : 1;                                   // 0x0470(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0471(0x0003) MISSED OFFSET
	unsigned char                                      bPressedJump : 1;                                         // 0x0474(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bClientUpdating : 1;                                      // 0x0474(0x0001) (Transient)
	unsigned char                                      bClientWasFalling : 1;                                    // 0x0474(0x0001) (Transient)
	unsigned char                                      bClientResimulateRootMotion : 1;                          // 0x0474(0x0001) (Transient)
	unsigned char                                      bClientResimulateRootMotionSources : 1;                   // 0x0474(0x0001) (Transient)
	unsigned char                                      bSimGravityDisabled : 1;                                  // 0x0474(0x0001)
	unsigned char                                      bClientCheckEncroachmentOnNetUpdate : 1;                  // 0x0474(0x0001) (Transient)
	unsigned char                                      bServerMoveIgnoreRootMotion : 1;                          // 0x0474(0x0001) (Transient)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0475(0x0001)
	unsigned char                                      bWasJumping : 1;                                          // 0x0475(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, Transient, EditConst)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0476(0x0002) MISSED OFFSET
	class USkeletalMeshComponent*                      Mesh;                                                     // 0x0478(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              JumpMaxHoldTime;                                          // 0x0480(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              ReplicatedServerLastTransformUpdateTimeStamp;             // 0x0484(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	struct FBasedMovementInfo                          ReplicatedBasedMovement;                                  // 0x0488(0x0048) (Net)
	int                                                JumpCurrentCount;                                         // 0x04D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	unsigned char                                      ReplicatedMovementMode;                                   // 0x04D4(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x04D5(0x0003) MISSED OFFSET
	class UCapsuleComponent*                           ProneCapsuleComponent;                                    // 0x04D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditConst, InstancedReference)
	float                                              AnimRootMotionTranslationScale;                           // 0x04E0(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	int                                                JumpMaxCount;                                             // 0x04E4(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BaseTranslationOffset;                                    // 0x04E8(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              CrouchedEyeHeight;                                        // 0x04F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsCrouched : 1;                                          // 0x04F8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData04[0x3];                                       // 0x04F9(0x0003) MISSED OFFSET
	float                                              JumpKeyHoldTime;                                          // 0x04FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, IsPlainOldData)
	struct FQuat                                       BaseRotationOffset;                                       // 0x0500(0x0010) (IsPlainOldData)
	struct FBasedMovementInfo                          BasedMovement;                                            // 0x0510(0x0048)
	class UCapsuleComponent*                           CapsuleComponent;                                         // 0x0558(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditConst, InstancedReference)
	class UCharacterMovementComponent*                 CharacterMovement;                                        // 0x0560(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditConst, InstancedReference)
	struct FScriptMulticastDelegate                    OnReachedJumpApex;                                        // 0x0568(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData05[0x10];                                      // 0x0578(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    MovementModeChangedDelegate;                              // 0x0588(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCharacterMovementUpdated;                               // 0x0598(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FRootMotionSourceGroup                      SavedRootMotion;                                          // 0x05A8(0x0100) (Transient)
	unsigned char                                      UnknownData06[0x8];                                       // 0x06A8(0x0008) MISSED OFFSET
	struct FRootMotionMovementParams                   ClientRootMotionParams;                                   // 0x06B0(0x0040) (Transient)
	TArray<struct FSimulatedRootMotionReplicatedMove>  RootMotionRepMoves;                                       // 0x06F0(0x0010) (ZeroConstructor, Transient)
	struct FRepRootMotionMontage                       RepRootMotion;                                            // 0x0700(0x0160) (Net)
	unsigned char                                      UnknownData07[0x10];                                      // 0x0860(0x0010) MISSED OFFSET

	// Function Engine.Character.UnCrouch
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_UnCrouch(unsigned char bClientSimulation);// sub_FCB240()

	// Function Engine.Character.StopJumping
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StopJumping();// sub_24BB5E0()

	// Function Engine.Character.StopAnimMontage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StopAnimMontage(class UAnimMontage* AnimMontage);// sub_561870()

	// Function Engine.Character.SetReplicateMovement
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetReplicateMovement(unsigned char bInReplicateMovement);// sub_23BCEC0()

	// Function Engine.Character.ServerMoveOld
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerMoveOld(float OldTimeStamp, const struct FVector_NetQuantize10& OldAccel, unsigned char OldMoveFlags);// sub_3D4E370()

	// Function Engine.Character.ServerMoveNoBase
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerMoveNoBase(float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char CompressedMoveFlags, unsigned char ClientRoll, uint32_t View, unsigned char ClientMovementMode, unsigned char ClientStanceMode);// sub_16AD9C0()

	// Function Engine.Character.ServerMoveDualNoBase
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerMoveDualNoBase(float TimeStamp0, const struct FVector_NetQuantize10& InAccel0, unsigned char PendingFlags, uint32_t View0, float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char NewFlags, unsigned char ClientRoll, uint32_t View, unsigned char ClientMovementMode, unsigned char ClientStanceMode);// sub_5C61BF0()

	// Function Engine.Character.ServerMoveDualHybridRootMotion
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerMoveDualHybridRootMotion(float TimeStamp0, const struct FVector_NetQuantize10& InAccel0, unsigned char PendingFlags, uint32_t View0, float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char NewFlags, unsigned char ClientRoll, uint32_t View, class UPrimitiveComponent* ClientMovementBase, const struct FName& ClientBaseBoneName, unsigned char ClientMovementMode, unsigned char ClientStanceMode);// sub_837270()

	// Function Engine.Character.ServerMoveDual
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerMoveDual(float TimeStamp0, const struct FVector_NetQuantize10& InAccel0, unsigned char PendingFlags, uint32_t View0, float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char NewFlags, unsigned char ClientRoll, uint32_t View, class UPrimitiveComponent* ClientMovementBase, const struct FName& ClientBaseBoneName, unsigned char ClientMovementMode, unsigned char ClientStanceMode);// sub_5E25CE0()

	// Function Engine.Character.ServerMove
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerMove(float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, unsigned char CompressedMoveFlags, unsigned char ClientRoll, uint32_t View, class UPrimitiveComponent* ClientMovementBase, const struct FName& ClientBaseBoneName, unsigned char ClientMovementMode, unsigned char ClientStanceMode);// sub_48C6AB0()

	// Function Engine.Character.PlayAnimMontage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_PlayAnimMontage(class UAnimMontage* AnimMontage, float InPlayRate, const struct FName& StartSectionName);// sub_43A9650()

	// Function Engine.Character.OnWalkingOffLedge
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnWalkingOffLedge(const struct FVector& PreviousFloorImpactNormal, const struct FVector& PreviousFloorContactNormal, const struct FVector& PreviousLocation, float TimeDelta);// sub_112BBB0()

	// Function Engine.Character.OnRep_RootMotion
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_RootMotion();// sub_5A84290()

	// Function Engine.Character.OnRep_ReplicatedBasedMovement
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_ReplicatedBasedMovement();// sub_17A7450()

	// Function Engine.Character.OnRep_IsCrouched
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_IsCrouched();// sub_FA7050()

	// Function Engine.Character.OnLaunched
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnLaunched(const struct FVector& LaunchVelocity, unsigned char bXYOverride, unsigned char bZOverride);// sub_5C67A0()

	// Function Engine.Character.OnLanded
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnLanded(const struct FHitResult& Hit);// sub_5C67A0()

	// Function Engine.Character.OnJumped
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnJumped();// sub_3F85D0()

	// Function Engine.Character.LaunchCharacter
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_LaunchCharacter(const struct FVector& LaunchVelocity, unsigned char bXYOverride, unsigned char bZOverride);// sub_4187D10()

	// Function Engine.Character.K2_UpdateCustomMovement
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_UpdateCustomMovement(float DeltaTime);// sub_5C67A0()

	// Function Engine.Character.K2_OnStartCrouch
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_OnStartCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);// sub_5C67A0()

	// Function Engine.Character.K2_OnMovementModeChanged
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_OnMovementModeChanged(TEnumAsByte<EMovementMode> PrevMovementMode, TEnumAsByte<EMovementMode> NewMovementMode, unsigned char PrevCustomMode, unsigned char NewCustomMode);// sub_5C67A0()

	// Function Engine.Character.K2_OnEndCrouch
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_OnEndCrouch(float HalfHeightAdjust, float ScaledHalfHeightAdjust);// sub_5C67A0()

	// Function Engine.Character.Jump
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Jump();// sub_3CBEB40()

	// Function Engine.Character.IsPlayingRootMotion
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsPlayingRootMotion();// sub_6BB290()

	// Function Engine.Character.IsPlayingNetworkedRootMotionMontage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsPlayingNetworkedRootMotionMontage();// sub_5702B10()

	// Function Engine.Character.IsJumpProvidingForce
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsJumpProvidingForce();// sub_56AECF0()

	// Function Engine.Character.GetCurrentMontage
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UAnimMontage* STATIC_GetCurrentMontage();// sub_5781C40()

	// Function Engine.Character.GetBaseTranslationOffset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetBaseTranslationOffset();// sub_442B8D0()

	// Function Engine.Character.GetBaseRotationOffsetRotator
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FRotator STATIC_GetBaseRotationOffsetRotator();// sub_60D6600()

	// Function Engine.Character.GetAnimRootMotionTranslationScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetAnimRootMotionTranslationScale();// sub_179AA70()

	// Function Engine.Character.Crouch
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Crouch(unsigned char bClientSimulation);// sub_3B1CE50()

	// Function Engine.Character.ClientVeryShortAdjustPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientVeryShortAdjustPosition(float Timestamp, const struct FVector& NewLoc, float NewRotationPitch, class UPrimitiveComponent* NewBase, const struct FName& NewBaseBoneName, unsigned char bHasBase, unsigned char bBaseRelativePosition, unsigned char ServerMovementMode);// sub_2ADAB0()

	// Function Engine.Character.ClientCheatWalk
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientCheatWalk();// sub_56537E0()

	// Function Engine.Character.ClientCheatGhost
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientCheatGhost();// sub_4716EC0()

	// Function Engine.Character.ClientCheatFly
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientCheatFly();// sub_3D65CC0()

	// Function Engine.Character.ClientAdjustRootMotionSourcePosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientAdjustRootMotionSourcePosition(float Timestamp, const struct FRootMotionSourceGroup& ServerRootMotion, unsigned char bHasAnimRootMotion, float ServerMontageTrackPosition, const struct FVector& ServerLoc, const struct FVector_NetQuantizeNormal& ServerRotation, float ServerVelZ, class UPrimitiveComponent* ServerBase, const struct FName& ServerBoneName, unsigned char bHasBase, unsigned char bBaseRelativePosition, unsigned char ServerMovementMode);// sub_20B6850()

	// Function Engine.Character.ClientAdjustRootMotionPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientAdjustRootMotionPosition(float Timestamp, float ServerMontageTrackPosition, const struct FVector& ServerLoc, const struct FVector_NetQuantizeNormal& ServerRotation, float ServerVelZ, class UPrimitiveComponent* ServerBase, const struct FName& ServerBoneName, unsigned char bHasBase, unsigned char bBaseRelativePosition, unsigned char ServerMovementMode);// sub_3CBE7A0()

	// Function Engine.Character.ClientAdjustPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientAdjustPosition(float Timestamp, const struct FVector& NewLoc, float NewRotationPitch, const struct FVector& NewVel, class UPrimitiveComponent* NewBase, const struct FName& NewBaseBoneName, unsigned char bHasBase, unsigned char bBaseRelativePosition, unsigned char ServerMovementMode);// sub_490E530()

	// Function Engine.Character.ClientAckGoodMove
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClientAckGoodMove(float Timestamp);// sub_11EF500()

	// Function Engine.Character.CanJumpInternal
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_CanJumpInternal();// sub_4A27370()

	// Function Engine.Character.CanJump
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_CanJump();// sub_2234DA0()

	// Function Engine.Character.CacheInitialMeshOffset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_CacheInitialMeshOffset(const struct FVector& MeshRelativeLocation, const struct FRotator& MeshRelativeRotation);// sub_5702A30()


}


//Class Engine.DefaultPawn
//0x0028 (0x0498 - 0x0470)
class ADefaultPawn : public APawn
{
public:
	float                                              BaseTurnRate;                                             // 0x0470(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              BaseLookUpRate;                                           // 0x0474(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	class UPawnMovementComponent*                      MovementComponent;                                        // 0x0478(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USphereComponent*                            CollisionComponent;                                       // 0x0480(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        MeshComponent;                                            // 0x0488(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      bAddDefaultMovementBindings : 1;                          // 0x0490(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0491(0x0007) MISSED OFFSET

	// Function Engine.DefaultPawn.TurnAtRate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_TurnAtRate(float Rate);// sub_56978A0()

	// Function Engine.DefaultPawn.MoveUp_World
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_MoveUp_World(float Val);// sub_1676310()

	// Function Engine.DefaultPawn.MoveRight
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_MoveRight(float Val);// sub_366020()

	// Function Engine.DefaultPawn.MoveForward
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_MoveForward(float Val);// sub_5702B40()

	// Function Engine.DefaultPawn.LookUpAtRate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_LookUpAtRate(float Rate);// sub_70DE00()


}


//Class Engine.SpectatorPawn
//0x0000 (0x0498 - 0x0498)
class ASpectatorPawn : public ADefaultPawn
{
public:

}


//Class Engine.ReflectionCapture
//0x0008 (0x0410 - 0x0408)
class AReflectionCapture : public AActor
{
public:
	class UReflectionCaptureComponent*                 CaptureComponent;                                         // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

}


//Class Engine.BoxReflectionCapture
//0x0000 (0x0410 - 0x0410)
class ABoxReflectionCapture : public AReflectionCapture
{
public:

}


//Class Engine.PlaneReflectionCapture
//0x0000 (0x0410 - 0x0410)
class APlaneReflectionCapture : public AReflectionCapture
{
public:

}


//Class Engine.SphereReflectionCapture
//0x0008 (0x0418 - 0x0410)
class ASphereReflectionCapture : public AReflectionCapture
{
public:
	class UDrawSphereComponent*                        DrawCaptureRadius;                                        // 0x0410(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

}


//Class Engine.RigidBodyBase
//0x0000 (0x0408 - 0x0408)
class ARigidBodyBase : public AActor
{
public:

}


//Class Engine.PhysicsConstraintActor
//0x0020 (0x0428 - 0x0408)
class APhysicsConstraintActor : public ARigidBodyBase
{
public:
	class UPhysicsConstraintComponent*                 ConstraintComp;                                           // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class AActor*                                      ConstraintActor1;                                         // 0x0410(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	class AActor*                                      ConstraintActor2;                                         // 0x0418(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      bDisableCollision : 1;                                    // 0x0420(0x0001) (Deprecated)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0421(0x0007) MISSED OFFSET

}


//Class Engine.PhysicsThruster
//0x0008 (0x0410 - 0x0408)
class APhysicsThruster : public ARigidBodyBase
{
public:
	class UPhysicsThrusterComponent*                   ThrusterComponent;                                        // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

}


//Class Engine.RadialForceActor
//0x0008 (0x0410 - 0x0408)
class ARadialForceActor : public ARigidBodyBase
{
public:
	class URadialForceComponent*                       ForceComponent;                                           // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	// Function Engine.RadialForceActor.ToggleForce
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ToggleForce();// sub_EC66C0()

	// Function Engine.RadialForceActor.FireImpulse
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_FireImpulse();// sub_DA88C0()

	// Function Engine.RadialForceActor.EnableForce
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_EnableForce();// sub_1537560()

	// Function Engine.RadialForceActor.DisableForce
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DisableForce();// sub_F33880()


}


//Class Engine.SceneCapture
//0x0008 (0x0410 - 0x0408)
class ASceneCapture : public AActor
{
public:
	class UStaticMeshComponent*                        MeshComp;                                                 // 0x0408(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

}


//Class Engine.PlanarReflection
//0x0010 (0x0420 - 0x0410)
class APlanarReflection : public ASceneCapture
{
public:
	class UPlanarReflectionComponent*                  PlanarReflectionComponent;                                // 0x0410(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      bShowPreviewPlane : 1;                                    // 0x0418(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0419(0x0007) MISSED OFFSET

	// Function Engine.PlanarReflection.OnInterpToggle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnInterpToggle(unsigned char bEnable);// sub_1948840()


}


//Class Engine.SceneCapture2D
//0x0010 (0x0420 - 0x0410)
class ASceneCapture2D : public ASceneCapture
{
public:
	class USceneCaptureComponent2D*                    CaptureComponent2D;                                       // 0x0410(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDrawFrustumComponent*                       DrawFrustum;                                              // 0x0418(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	// Function Engine.SceneCapture2D.OnInterpToggle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnInterpToggle(unsigned char bEnable);// sub_52B0B10()


}


//Class Engine.SceneCaptureCube
//0x0010 (0x0420 - 0x0410)
class ASceneCaptureCube : public ASceneCapture
{
public:
	class USceneCaptureComponentCube*                  CaptureComponentCube;                                     // 0x0410(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDrawFrustumComponent*                       DrawFrustum;                                              // 0x0418(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	// Function Engine.SceneCaptureCube.OnInterpToggle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnInterpToggle(unsigned char bEnable);// sub_245FCB0()


}


//Class Engine.MatineeAnimInterface
//0x0000 (0x0040 - 0x0040)
class UMatineeAnimInterface : public UInterface
{
public:

}


//Class Engine.SkeletalMeshActor
//0x0088 (0x0490 - 0x0408)
class ASkeletalMeshActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0408(0x0008) MISSED OFFSET
	unsigned char                                      bShouldDoAnimNotifies : 1;                                // 0x0410(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bWakeOnLevelStart : 1;                                    // 0x0410(0x0001) (Deprecated)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0411(0x0007) MISSED OFFSET
	class USkeletalMeshComponent*                      SkeletalMeshComponent;                                    // 0x0418(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USkeletalMesh*                               ReplicatedMesh;                                           // 0x0420(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class UPhysicsAsset*                               ReplicatedPhysAsset;                                      // 0x0428(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInterface*                          ReplicatedMaterial0;                                      // 0x0430(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          ReplicatedMaterial1;                                      // 0x0438(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x50];                                      // 0x0440(0x0050) MISSED OFFSET

	// Function Engine.SkeletalMeshActor.OnRep_ReplicatedPhysAsset
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_ReplicatedPhysAsset();// sub_1537560()

	// Function Engine.SkeletalMeshActor.OnRep_ReplicatedMesh
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_ReplicatedMesh();// sub_DA88C0()

	// Function Engine.SkeletalMeshActor.OnRep_ReplicatedMaterial1
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_ReplicatedMaterial1();// sub_EC66C0()

	// Function Engine.SkeletalMeshActor.OnRep_ReplicatedMaterial0
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_ReplicatedMaterial0();// sub_F33880()


}


//Class Engine.SplineMeshActor
//0x0008 (0x0410 - 0x0408)
class ASplineMeshActor : public AActor
{
public:
	class USplineMeshComponent*                        SplineMeshComponent;                                      // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

}


//Class Engine.StaticMeshActor
//0x0010 (0x0418 - 0x0408)
class AStaticMeshActor : public AActor
{
public:
	class UStaticMeshComponent*                        StaticMeshComponent;                                      // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      bStaticMeshReplicateMovement : 1;                         // 0x0410(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	ENavDataGatheringMode                              NavigationGeometryGatheringMode;                          // 0x0411(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0412(0x0006) MISSED OFFSET

}


//Class Engine.BillboardComponent
//0x0030 (0x0A10 - 0x09E0)
class UBillboardComponent : public UPrimitiveComponent
{
public:
	class UTexture2D*                                  Sprite;                                                   // 0x09E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsScreenSizeScaled : 1;                                  // 0x09E8(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x3];                                       // 0x09E9(0x0003) MISSED OFFSET
	float                                              ScreenSize;                                               // 0x09EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              U;                                                        // 0x09F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              UL;                                                       // 0x09F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              V;                                                        // 0x09F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VL;                                                       // 0x09FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FColor                                      Color;                                                    // 0x0A00(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0A04(0x000C) MISSED OFFSET

	// Function Engine.BillboardComponent.SetUV
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetUV(int NewU, int NewUL, int NewV, int NewVL);// sub_40DBC10()

	// Function Engine.BillboardComponent.SetSpriteAndUV
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSpriteAndUV(class UTexture2D* NewSprite, int NewU, int NewUL, int NewV, int NewVL);// sub_626BB10()

	// Function Engine.BillboardComponent.SetSprite
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSprite(class UTexture2D* NewSprite);// sub_837710()

	// Function Engine.BillboardComponent.SetColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetColor(const struct FColor& ApplyColor, unsigned char bDirty);// sub_4D13E0()


}


//Class Engine.StaticMesh
//0x0148 (0x0188 - 0x0040)
class UStaticMesh : public UObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0040(0x0018) MISSED OFFSET
	int                                                MinLOD;                                                   // 0x0058(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	TArray<class UMaterialInterface*>                  Materials;                                                // 0x0060(0x0010) (ZeroConstructor, Deprecated)
	TArray<struct FStaticMaterial>                     StaticMaterials;                                          // 0x0070(0x0010) (Edit, ZeroConstructor)
	float                                              LightmapUVDensity;                                        // 0x0080(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                LightMapResolution;                                       // 0x0084(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                LightMapCoordinateIndex;                                  // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DistanceFieldSelfShadowBias;                              // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UBodySetup*                                  BodySetup;                                                // 0x0090(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData)
	int                                                LODForCollision;                                          // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bGenerateMeshDistanceField : 1;                           // 0x009C(0x0001) (Edit)
	unsigned char                                      bAllowTesselation : 1;                                    // 0x009C(0x0001) (Edit)
	unsigned char                                      bStripComplexCollisionForConsole : 1;                     // 0x009C(0x0001) (Deprecated)
	unsigned char                                      bHasNavigationData : 1;                                   // 0x009C(0x0001) (Edit)
	unsigned char                                      bRequiresAreaWeightedSampling : 1;                        // 0x009C(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x009D(0x0003) MISSED OFFSET
	float                                              LpvBiasMultiplier;                                        // 0x00A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAllowCPUAccess : 1;                                      // 0x00A4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x33];                                      // 0x00A5(0x0033) MISSED OFFSET
	TArray<class UStaticMeshSocket*>                   Sockets;                                                  // 0x00D8(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData04[0x10];                                      // 0x00E8(0x0010) MISSED OFFSET
	struct FVector                                     PositiveBoundsExtension;                                  // 0x00F8(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     NegativeBoundsExtension;                                  // 0x0104(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FBoxSphereBounds                            ExtendedBounds;                                           // 0x0110(0x001C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIgnoreDistanceFieldData : 1;                             // 0x012C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x012D(0x0003) MISSED OFFSET
	int                                                ElementToIgnoreForTexFactor;                              // 0x0130(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0134(0x0004) MISSED OFFSET
	TArray<class UAssetUserData*>                      AssetUserData;                                            // 0x0138(0x0010) (Edit, ExportObject, ZeroConstructor)
	class UNavCollision*                               NavCollision;                                             // 0x0148(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, DuplicateTransient, IsPlainOldData)
	struct FMeshImposterLODSettings                    ImposterLODSettings;                                      // 0x0150(0x0028)
	TArray<class UMaterialInstanceConstant*>           ImposterLODOverrideMaterials;                             // 0x0178(0x0010) (ZeroConstructor)

	// Function Engine.StaticMesh.GetNumSections
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetNumSections(int InLOD);// sub_4E788A0()

	// Function Engine.StaticMesh.GetNumLODs
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetNumLODs();// sub_3CD9F90()

	// Function Engine.StaticMesh.GetBounds
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FBoxSphereBounds STATIC_GetBounds();// sub_5164750()

	// Function Engine.StaticMesh.GetBoundingBox
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FBox STATIC_GetBoundingBox();// sub_4FCA8C0()


}


//Class Engine.StaticMeshIndoorVolumeComponent
//0x0120 (0x05C0 - 0x04A0)
class UStaticMeshIndoorVolumeComponent : public USceneComponent
{
public:
	class UStaticMesh*                                 StaticMesh;                                               // 0x04A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x118];                                     // 0x04A8(0x0118) MISSED OFFSET

}


//Class Engine.StaticMeshIndoorVolumeContainerComponent
//0x0050 (0x04F0 - 0x04A0)
class UStaticMeshIndoorVolumeContainerComponent : public USceneComponent
{
public:
	TArray<struct FInstanceRun>                        InstanceRuns;                                             // 0x04A0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x40];                                      // 0x04B0(0x0040) MISSED OFFSET

}


//Class Engine.StaticMeshIndoorVolume
//0x0008 (0x0410 - 0x0408)
class AStaticMeshIndoorVolume : public AActor
{
public:
	class UStaticMeshIndoorVolumeComponent*            VolumeComponent;                                          // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

}


//Class Engine.TargetPoint
//0x0000 (0x0408 - 0x0408)
class ATargetPoint : public AActor
{
public:

}


//Class Engine.TextRenderActor
//0x0008 (0x0410 - 0x0408)
class ATextRenderActor : public AActor
{
public:
	class UTextRenderComponent*                        TextRender;                                               // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

}


//Class Engine.TriggerBase
//0x0008 (0x0410 - 0x0408)
class ATriggerBase : public AActor
{
public:
	class UShapeComponent*                             CollisionComponent;                                       // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

}


//Class Engine.TriggerBox
//0x0000 (0x0410 - 0x0410)
class ATriggerBox : public ATriggerBase
{
public:

}


//Class Engine.TriggerCapsule
//0x0000 (0x0410 - 0x0410)
class ATriggerCapsule : public ATriggerBase
{
public:

}


//Class Engine.TriggerSphere
//0x0000 (0x0410 - 0x0410)
class ATriggerSphere : public ATriggerBase
{
public:

}


//Class Engine.VectorFieldVolume
//0x0008 (0x0410 - 0x0408)
class AVectorFieldVolume : public AActor
{
public:
	class UVectorFieldComponent*                       VectorFieldComponent;                                     // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

}


//Class Engine.ApplicationLifecycleComponent
//0x0050 (0x0260 - 0x0210)
class UApplicationLifecycleComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    ApplicationWillDeactivateDelegate;                        // 0x0210(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ApplicationHasReactivatedDelegate;                        // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ApplicationWillEnterBackgroundDelegate;                   // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ApplicationHasEnteredForegroundDelegate;                  // 0x0240(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ApplicationWillTerminateDelegate;                         // 0x0250(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	// DelegateFunction Engine.ApplicationLifecycleComponent.ApplicationLifetimeDelegate__DelegateSignature
	// (NetReliable, Exec, Event, NetMulticast, MulticastDelegate, Private, Protected, HasOutParms, BlueprintEvent)
	void ApplicationLifetimeDelegate__DelegateSignature();// sub_5C67A0()


}


//Class Engine.LevelBlockResourceContainer
//0x0000 (0x0040 - 0x0040)
class ULevelBlockResourceContainer : public UObject
{
public:

}


//Class Engine.LevelBlocksData
//0x0010 (0x0050 - 0x0040)
class ULevelBlocksData : public UObject
{
public:
	TArray<class ULevelBlockResourceContainer*>        ResourceContainers;                                       // 0x0040(0x0010) (ZeroConstructor)

}


//Class Engine.LevelBlocksDataComponent
//0x00C0 (0x02D0 - 0x0210)
class ULevelBlocksDataComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0210(0x0008) MISSED OFFSET
	class ULevelBlocksData*                            LevelBlocksData;                                          // 0x0218(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0220(0x0018) MISSED OFFSET
	int                                                RandomSeed;                                               // 0x0238(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x023C(0x0004) MISSED OFFSET
	TArray<class AActor*>                              SpawnedActors;                                            // 0x0240(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x80];                                      // 0x0250(0x0080) MISSED OFFSET

	// Function Engine.LevelBlocksDataComponent.OnRep_RandomSeed
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnRep_RandomSeed();// sub_C89690()

	// Function Engine.LevelBlocksDataComponent.OnKillcamLoadingFinished
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnKillcamLoadingFinished();// sub_5361F10()


}


//Class Engine.MovementComponent
//0x0050 (0x0260 - 0x0210)
class UMovementComponent : public UActorComponent
{
public:
	class USceneComponent*                             UpdatedComponent;                                         // 0x0210(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData)
	class UPrimitiveComponent*                         UpdatedPrimitive;                                         // 0x0218(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0220(0x0004) MISSED OFFSET
	struct FVector                                     Velocity;                                                 // 0x0224(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bConstrainToPlane : 1;                                    // 0x0230(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bSnapToPlaneAtStart : 1;                                  // 0x0230(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0231(0x0003) MISSED OFFSET
	EPlaneConstraintAxisSetting                        PlaneConstraintAxisSetting;                               // 0x0234(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0235(0x0003) MISSED OFFSET
	struct FVector                                     PlaneConstraintNormal;                                    // 0x0238(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PlaneConstraintOrigin;                                    // 0x0244(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUpdateOnlyIfRendered : 1;                                // 0x0250(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bAutoUpdateTickRegistration : 1;                          // 0x0250(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bTickBeforeOwner : 1;                                     // 0x0250(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bAutoRegisterUpdatedComponent : 1;                        // 0x0250(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData03[0xF];                                       // 0x0251(0x000F) MISSED OFFSET

	// Function Engine.MovementComponent.StopMovementImmediately
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StopMovementImmediately();// sub_4C7DB50()

	// Function Engine.MovementComponent.SnapUpdatedComponentToPlane
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SnapUpdatedComponentToPlane();// sub_2017CD0()

	// Function Engine.MovementComponent.SetUpdatedComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetUpdatedComponent(class USceneComponent* NewUpdatedComponent);// sub_5F92330()

	// Function Engine.MovementComponent.SetPlaneConstraintOrigin
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPlaneConstraintOrigin(const struct FVector& PlaneOrigin);// sub_54B2180()

	// Function Engine.MovementComponent.SetPlaneConstraintNormal
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPlaneConstraintNormal(const struct FVector& PlaneNormal);// sub_6C8C0()

	// Function Engine.MovementComponent.SetPlaneConstraintFromVectors
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPlaneConstraintFromVectors(const struct FVector& Forward, const struct FVector& Up);// sub_1144910()

	// Function Engine.MovementComponent.SetPlaneConstraintEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPlaneConstraintEnabled(unsigned char bEnabled);// sub_20B6C50()

	// Function Engine.MovementComponent.SetPlaneConstraintAxisSetting
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPlaneConstraintAxisSetting(EPlaneConstraintAxisSetting NewAxisSetting);// sub_105FD60()

	// Function Engine.MovementComponent.PhysicsVolumeChanged
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PhysicsVolumeChanged(class APhysicsVolume* NewVolume);// sub_4F44860()

	// Function Engine.MovementComponent.K2_MoveUpdatedComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_MoveUpdatedComponent(const struct FVector& Delta, const struct FRotator& NewRotation, unsigned char bSweep, unsigned char bTeleport, struct FHitResult* OutHit);// sub_5470440()

	// Function Engine.MovementComponent.K2_GetModifiedMaxSpeed
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_K2_GetModifiedMaxSpeed();// sub_4DB47C0()

	// Function Engine.MovementComponent.K2_GetMaxSpeedModifier
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_K2_GetMaxSpeedModifier();// sub_4862500()

	// Function Engine.MovementComponent.IsExceedingMaxSpeed
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsExceedingMaxSpeed(float MaxSpeed);// sub_4EB1130()

	// Function Engine.MovementComponent.GetPlaneConstraintOrigin
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetPlaneConstraintOrigin();// sub_41273A0()

	// Function Engine.MovementComponent.GetPlaneConstraintNormal
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetPlaneConstraintNormal();// sub_3BB0E00()

	// Function Engine.MovementComponent.GetPlaneConstraintAxisSetting
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static EPlaneConstraintAxisSetting STATIC_GetPlaneConstraintAxisSetting();// sub_50F82C0()

	// Function Engine.MovementComponent.GetPhysicsVolume
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class APhysicsVolume* STATIC_GetPhysicsVolume();// sub_5ADAFA0()

	// Function Engine.MovementComponent.GetMaxSpeed
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetMaxSpeed();// sub_24E6A50()

	// Function Engine.MovementComponent.GetGravityZ
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetGravityZ();// sub_3F64D10()

	// Function Engine.MovementComponent.ConstrainNormalToPlane
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_ConstrainNormalToPlane(const struct FVector& Normal);// sub_25CD50()

	// Function Engine.MovementComponent.ConstrainLocationToPlane
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_ConstrainLocationToPlane(const struct FVector& Location);// sub_3CBEA90()

	// Function Engine.MovementComponent.ConstrainDirectionToPlane
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_ConstrainDirectionToPlane(const struct FVector& Direction);// sub_45FF340()


}


//Class Engine.InterpToMovementComponent
//0x00A0 (0x0300 - 0x0260)
class UInterpToMovementComponent : public UMovementComponent
{
public:
	EInterpToBehaviourType                             BehaviourType;                                            // 0x0260(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0261(0x0003) MISSED OFFSET
	unsigned char                                      bForceSubStepping : 1;                                    // 0x0264(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0265(0x0003) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnInterpToReverse;                                        // 0x0268(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnInterpToStop;                                           // 0x0278(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnWaitBeginDelegate;                                      // 0x0288(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnWaitEndDelegate;                                        // 0x0298(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnResetDelegate;                                          // 0x02A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              MaxSimulationTimeStep;                                    // 0x02B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxSimulationIterations;                                  // 0x02BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FInterpControlPoint>                 ControlPoints;                                            // 0x02C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData02[0x30];                                      // 0x02D0(0x0030) MISSED OFFSET

	// Function Engine.InterpToMovementComponent.StopSimulating
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StopSimulating(const struct FHitResult& HitResult);// sub_151CDC0()

	// Function Engine.InterpToMovementComponent.RestartMovement
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RestartMovement(float InitialDirection);// sub_8F7E30()

	// DelegateFunction Engine.InterpToMovementComponent.OnInterpToWaitEndDelegate__DelegateSignature
	// (NetReliable, Exec, Event, NetMulticast, MulticastDelegate, Private, Protected, HasOutParms, BlueprintEvent)
	void OnInterpToWaitEndDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);// sub_5C67A0()

	// DelegateFunction Engine.InterpToMovementComponent.OnInterpToWaitBeginDelegate__DelegateSignature
	// (NetReliable, Exec, Event, NetMulticast, MulticastDelegate, Private, Protected, HasOutParms, BlueprintEvent)
	void OnInterpToWaitBeginDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);// sub_5C67A0()

	// DelegateFunction Engine.InterpToMovementComponent.OnInterpToStopDelegate__DelegateSignature
	// (NetReliable, Exec, Event, NetMulticast, MulticastDelegate, Private, Protected, HasOutParms, BlueprintEvent)
	void OnInterpToStopDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);// sub_5C67A0()

	// DelegateFunction Engine.InterpToMovementComponent.OnInterpToReverseDelegate__DelegateSignature
	// (NetReliable, Exec, Event, NetMulticast, MulticastDelegate, Private, Protected, HasOutParms, BlueprintEvent)
	void OnInterpToReverseDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);// sub_5C67A0()

	// DelegateFunction Engine.InterpToMovementComponent.OnInterpToResetDelegate__DelegateSignature
	// (NetReliable, Exec, Event, NetMulticast, MulticastDelegate, Private, Protected, HasOutParms, BlueprintEvent)
	void OnInterpToResetDelegate__DelegateSignature(const struct FHitResult& ImpactResult, float Time);// sub_5C67A0()

	// Function Engine.InterpToMovementComponent.FinaliseControlPoints
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_FinaliseControlPoints();// sub_6A2740()


}


//Class Engine.NavMovementComponent
//0x0030 (0x0290 - 0x0260)
class UNavMovementComponent : public UMovementComponent
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0260(0x0018) MISSED OFFSET
	float                                              FixedPathBrakingDistance;                                 // 0x0278(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUpdateNavAgentWithOwnersCollision : 1;                   // 0x027C(0x0001) (Edit)
	unsigned char                                      bUseAccelerationForPaths : 1;                             // 0x027C(0x0001) (Edit, Config, GlobalConfig)
	unsigned char                                      bUseFixedBrakingDistanceForPaths : 1;                     // 0x027C(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x027D(0x0003) MISSED OFFSET
	struct FMovementProperties                         MovementState;                                            // 0x0280(0x0004)
	unsigned char                                      UnknownData02[0xC];                                       // 0x0284(0x000C) MISSED OFFSET

	// Function Engine.NavMovementComponent.StopMovementKeepPathing
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StopMovementKeepPathing();// sub_3AFC7C0()

	// Function Engine.NavMovementComponent.StopActiveMovement
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StopActiveMovement();// sub_23FCB00()

	// Function Engine.NavMovementComponent.IsSwimming
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsSwimming();// sub_4F27710()

	// Function Engine.NavMovementComponent.IsMovingOnGround
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsMovingOnGround();// sub_CB1E00()

	// Function Engine.NavMovementComponent.IsFlying
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsFlying();// sub_44D6530()

	// Function Engine.NavMovementComponent.IsFalling
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsFalling();// sub_13E5C70()

	// Function Engine.NavMovementComponent.IsCrouching
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsCrouching();// sub_5F92300()


}


//Class Engine.PawnMovementComponent
//0x0010 (0x02A0 - 0x0290)
class UPawnMovementComponent : public UNavMovementComponent
{
public:
	class APawn*                                       PawnOwner;                                                // 0x0290(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0298(0x0008) MISSED OFFSET

	// Function Engine.PawnMovementComponent.K2_GetInputVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_K2_GetInputVector();// sub_3DB1EF0()

	// Function Engine.PawnMovementComponent.IsMoveInputIgnored
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsMoveInputIgnored();// sub_156A3C0()

	// Function Engine.PawnMovementComponent.GetPendingInputVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetPendingInputVector();// sub_3DB1EF0()

	// Function Engine.PawnMovementComponent.GetPawnOwner
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class APawn* STATIC_GetPawnOwner();// sub_17051F0()

	// Function Engine.PawnMovementComponent.GetLastInputVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetLastInputVector();// sub_14D6F10()

	// Function Engine.PawnMovementComponent.ConsumeInputVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_ConsumeInputVector();// sub_510DD60()

	// Function Engine.PawnMovementComponent.AddInputVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddInputVector(const struct FVector& WorldVector, unsigned char bForce);// sub_186DFD0()


}


//Class Engine.AssetUserData
//0x0000 (0x0040 - 0x0040)
class UAssetUserData : public UObject
{
public:

}


//Class Engine.AnimMontage
//0x0108 (0x01C0 - 0x00B8)
class UAnimMontage : public UAnimCompositeBase
{
public:
	struct FAlphaBlend                                 BlendIn;                                                  // 0x00B8(0x0038) (Edit)
	float                                              BlendInTime;                                              // 0x00F0(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	struct FAlphaBlend                                 BlendOut;                                                 // 0x00F8(0x0038) (Edit)
	float                                              BlendOutTime;                                             // 0x0130(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              BlendOutTriggerTime;                                      // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       SyncGroup;                                                // 0x0138(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SyncSlotIndex;                                            // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0144(0x0004) MISSED OFFSET
	struct FMarkerSyncData                             MarkerData;                                               // 0x0148(0x0020)
	TArray<struct FCompositeSection>                   CompositeSections;                                        // 0x0168(0x0010) (ZeroConstructor)
	TArray<struct FSlotAnimationTrack>                 SlotAnimTracks;                                           // 0x0178(0x0010) (ZeroConstructor)
	TArray<struct FBranchingPoint>                     BranchingPoints;                                          // 0x0188(0x0010) (ZeroConstructor, Deprecated)
	unsigned char                                      bEnableRootMotionTranslation : 1;                         // 0x0198(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x0199(0x0001)
	unsigned char                                      bEnableRootMotionRotation : 1;                            // 0x0199(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERootMotionRootLock>                   RootMotionRootLock;                                       // 0x019A(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x019B(0x0005) MISSED OFFSET
	TArray<struct FBranchingPointMarker>               BranchingPointMarkers;                                    // 0x01A0(0x0010) (ZeroConstructor)
	TArray<int>                                        BranchingPointStateNotifyIndices;                         // 0x01B0(0x0010) (ZeroConstructor)

}


//Class Engine.RVOAvoidanceInterface
//0x0000 (0x0040 - 0x0040)
class URVOAvoidanceInterface : public UInterface
{
public:

}


//Class Engine.NetworkPredictionInterface
//0x0000 (0x0040 - 0x0040)
class UNetworkPredictionInterface : public UInterface
{
public:

}


//Class Engine.CharacterMovementComponent
//0x06A0 (0x0940 - 0x02A0)
class UCharacterMovementComponent : public UPawnMovementComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x02A0(0x0008) MISSED OFFSET
	class ACharacter*                                  CharacterOwner;                                           // 0x02A8(0x0008) (Transient, DuplicateTransient)
	unsigned char                                      bApplyGravityWhileJumping : 1;                            // 0x02B0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x3];                                       // 0x02B1(0x0003) MISSED OFFSET
	float                                              GravityScale;                                             // 0x02B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxStepHeight;                                            // 0x02B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              JumpZVelocity;                                            // 0x02BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              JumpOffJumpZFactor;                                       // 0x02C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              WalkableFloorAngle;                                       // 0x02C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WalkableFloorZ;                                           // 0x02C8(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x02CC(0x0004) MISSED OFFSET
	float                                              ProneWalkableFloorAngle;                                  // 0x02D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ProneWalkableFloorZ;                                      // 0x02D4(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x02D8(0x0008) MISSED OFFSET
	TEnumAsByte<EMovementMode>                         MovementMode;                                             // 0x02E0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CustomMovementMode;                                       // 0x02E1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x1E];                                      // 0x02E2(0x001E) MISSED OFFSET
	float                                              GroundFriction;                                           // 0x0300(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxWalkSpeed;                                             // 0x0304(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxWalkSpeedCrouched;                                     // 0x0308(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxSwimSpeed;                                             // 0x030C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxFlySpeed;                                              // 0x0310(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxCustomMovementSpeed;                                   // 0x0314(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxAcceleration;                                          // 0x0318(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BrakingFrictionFactor;                                    // 0x031C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BrakingFriction;                                          // 0x0320(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseSeparateBrakingFriction : 1;                          // 0x0324(0x0001) (Edit, BlueprintVisible, DisableEditOnInstance)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0325(0x0003) MISSED OFFSET
	float                                              BrakingDecelerationWalking;                               // 0x0328(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BrakingDecelerationFalling;                               // 0x032C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BrakingDecelerationSwimming;                              // 0x0330(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BrakingDecelerationFlying;                                // 0x0334(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirControl;                                               // 0x0338(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirControlBoostMultiplier;                                // 0x033C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AirControlBoostVelocityThreshold;                         // 0x0340(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FallingLateralFriction;                                   // 0x0344(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CrouchedHalfHeight;                                       // 0x0348(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PronedHalfHeight;                                         // 0x034C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PronedRadius;                                             // 0x0350(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Buoyancy;                                                 // 0x0354(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PerchRadiusThreshold;                                     // 0x0358(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PerchAdditionalHeight;                                    // 0x035C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RotationRate;                                             // 0x0360(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseControllerDesiredRotation : 1;                        // 0x036C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bOrientRotationToMovement : 1;                            // 0x036C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bSweepWhileNavWalking : 1;                                // 0x036C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bMovementInProgress : 1;                                  // 0x036C(0x0001)
	unsigned char                                      bEnableScopedMovementUpdates : 1;                         // 0x036C(0x0001) (Edit)
	unsigned char                                      bForceMaxAccel : 1;                                       // 0x036C(0x0001)
	unsigned char                                      UnknownData06 : 8;                                        // 0x036D(0x0001)
	unsigned char                                      bRunPhysicsWithNoController : 1;                          // 0x036D(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bForceNextFloorCheck : 1;                                 // 0x036D(0x0001) (Edit, BlueprintVisible, DisableEditOnTemplate, EditConst)
	unsigned char                                      bShrinkProxyCapsule : 1;                                  // 0x036D(0x0001)
	unsigned char                                      bCanWalkOffLedges : 1;                                    // 0x036D(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCanWalkOffLedgesWhenCrouching : 1;                       // 0x036D(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bNetworkSkipProxyPredictionOnNetUpdate : 1;               // 0x036D(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData07 : 8;                                        // 0x036E(0x0001)
	unsigned char                                      bDeferUpdateMoveComponent : 1;                            // 0x036E(0x0001)
	unsigned char                                      UnknownData08[0x1];                                       // 0x036F(0x0001) MISSED OFFSET
	class USceneComponent*                             DeferredUpdatedMoveComponent;                             // 0x0370(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              MaxOutOfWaterStepHeight;                                  // 0x0378(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OutofWaterZ;                                              // 0x037C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Mass;                                                     // 0x0380(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnablePhysicsInteraction : 1;                            // 0x0384(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09 : 8;                                        // 0x0385(0x0001)
	unsigned char                                      bTouchForceScaledToMass : 1;                              // 0x0385(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10 : 8;                                        // 0x0386(0x0001)
	unsigned char                                      bPushForceScaledToMass : 1;                               // 0x0386(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11 : 8;                                        // 0x0387(0x0001)
	unsigned char                                      bPushForceUsingZOffset : 1;                               // 0x0387(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12 : 8;                                        // 0x0388(0x0001)
	unsigned char                                      bScalePushForceToVelocity : 1;                            // 0x0388(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0389(0x0003) MISSED OFFSET
	float                                              StandingDownwardForceScale;                               // 0x038C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InitialPushForceFactor;                                   // 0x0390(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PushForceFactor;                                          // 0x0394(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PushForcePointZOffsetFactor;                              // 0x0398(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TouchForceFactor;                                         // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinTouchForce;                                            // 0x03A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxTouchForce;                                            // 0x03A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RepulsionForce;                                           // 0x03A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bForceBraking : 1;                                        // 0x03AC(0x0001) (Deprecated)
	unsigned char                                      UnknownData14[0x3];                                       // 0x03AD(0x0003) MISSED OFFSET
	float                                              CrouchedSpeedMultiplier;                                  // 0x03B0(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              UpperImpactNormalScale;                                   // 0x03B4(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	struct FVector                                     Acceleration;                                             // 0x03B8(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     LastUpdateLocation;                                       // 0x03C4(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FQuat                                       LastUpdateRotation;                                       // 0x03D0(0x0010) (IsPlainOldData)
	struct FVector                                     LastUpdateVelocity;                                       // 0x03E0(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              ServerLastTransformUpdateTimeStamp;                       // 0x03EC(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ServerLastClientGoodMoveAckTime;                          // 0x03F0(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ServerLastClientAdjustmentTime;                           // 0x03F4(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     PendingImpulseToApply;                                    // 0x03F8(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     PendingForceToApply;                                      // 0x0404(0x000C) (ZeroConstructor, IsPlainOldData)
	float                                              AnalogInputModifier;                                      // 0x0410(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x8];                                       // 0x0414(0x0008) MISSED OFFSET
	float                                              MaxSimulationTimeStep;                                    // 0x041C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxSimulationIterations;                                  // 0x0420(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxDepenetrationWithGeometry;                             // 0x0424(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxDepenetrationWithGeometryAsProxy;                      // 0x0428(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxDepenetrationWithPawn;                                 // 0x042C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxDepenetrationWithPawnAsProxy;                          // 0x0430(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NetworkSimulatedSmoothLocationTime;                       // 0x0434(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NetworkSimulatedSmoothRotationTime;                       // 0x0438(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ListenServerNetworkSimulatedSmoothLocationTime;           // 0x043C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ListenServerNetworkSimulatedSmoothRotationTime;           // 0x0440(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NetProxyShrinkRadius;                                     // 0x0444(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NetProxyShrinkHalfHeight;                                 // 0x0448(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NetworkMaxSmoothUpdateDistance;                           // 0x044C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NetworkNoSmoothUpdateDistance;                            // 0x0450(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ENetworkSmoothingMode                              NetworkSmoothingMode;                                     // 0x0454(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x3];                                       // 0x0455(0x0003) MISSED OFFSET
	float                                              NetworkMinTimeBetweenClientAckGoodMoves;                  // 0x0458(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NetworkMinTimeBetweenClientAdjustments;                   // 0x045C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NetworkMinTimeBetweenClientAdjustmentsLargeCorrection;    // 0x0460(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NetworkLargeClientCorrectionDistance;                     // 0x0464(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LedgeCheckThreshold;                                      // 0x0468(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              JumpOutOfWaterPitch;                                      // 0x046C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FFindFloorResult                            CurrentFloor;                                             // 0x0470(0x0098) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst)
	TEnumAsByte<EMovementMode>                         DefaultLandMovementMode;                                  // 0x0508(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMovementMode>                         DefaultWaterMovementMode;                                 // 0x0509(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMovementMode>                         GroundMovementMode;                                       // 0x050A(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData17[0x1];                                       // 0x050B(0x0001) MISSED OFFSET
	unsigned char                                      bMaintainHorizontalGroundVelocity : 1;                    // 0x050C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bImpartBaseVelocityX : 1;                                 // 0x050C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bImpartBaseVelocityY : 1;                                 // 0x050C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bImpartBaseVelocityZ : 1;                                 // 0x050C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bImpartBaseAngularVelocity : 1;                           // 0x050C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bJustTeleported : 1;                                      // 0x050C(0x0001) (Edit, BlueprintVisible, DisableEditOnTemplate, Transient, EditConst)
	unsigned char                                      bNetworkUpdateReceived : 1;                               // 0x050C(0x0001) (Transient)
	unsigned char                                      bNetworkMovementModeChanged : 1;                          // 0x050C(0x0001) (Transient)
	unsigned char                                      UnknownData18 : 8;                                        // 0x050D(0x0001)
	unsigned char                                      bIgnoreClientMovementErrorChecksAndCorrection : 1;        // 0x050D(0x0001) (Edit, BlueprintVisible, Transient)
	unsigned char                                      bNotifyApex : 1;                                          // 0x050D(0x0001) (Edit, BlueprintVisible, EditConst)
	unsigned char                                      bCheatFlying : 1;                                         // 0x050D(0x0001)
	unsigned char                                      bWantsToCrouch : 1;                                       // 0x050D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst)
	unsigned char                                      bCrouchMaintainsBaseLocation : 1;                         // 0x050D(0x0001) (Edit, BlueprintVisible, DisableEditOnTemplate, EditConst)
	unsigned char                                      UnknownData19[0x2];                                       // 0x050E(0x0002) MISSED OFFSET
	TEnumAsByte<EStanceMode>                           StanceMode;                                               // 0x0510(0x0001) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EStanceMode>                           WantsToStanceMode;                                        // 0x0511(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData20[0x2];                                       // 0x0512(0x0002) MISSED OFFSET
	unsigned char                                      bIgnoreBaseRotation : 1;                                  // 0x0514(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bFastAttachedMove : 1;                                    // 0x0514(0x0001)
	unsigned char                                      bAlwaysCheckFloor : 1;                                    // 0x0514(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUseFlatBaseForFloorChecks : 1;                           // 0x0514(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bPerformingJumpOff : 1;                                   // 0x0514(0x0001)
	unsigned char                                      bWantsToLeaveNavWalking : 1;                              // 0x0514(0x0001)
	unsigned char                                      bUseRVOAvoidance : 1;                                     // 0x0514(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bRequestedMoveUseAcceleration : 1;                        // 0x0514(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData21[0xF];                                       // 0x0515(0x000F) MISSED OFFSET
	unsigned char                                      bHasRequestedVelocity : 1;                                // 0x0524(0x0001) (Transient)
	unsigned char                                      bRequestedMoveWithMaxSpeed : 1;                           // 0x0524(0x0001) (Transient)
	unsigned char                                      bWasAvoidanceUpdated : 1;                                 // 0x0524(0x0001) (Transient)
	unsigned char                                      bProjectNavMeshWalking : 1;                               // 0x0524(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bProjectNavMeshOnBothWorldChannels : 1;                   // 0x0524(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData22[0x13];                                      // 0x0525(0x0013) MISSED OFFSET
	float                                              AvoidanceConsiderationRadius;                             // 0x0538(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RequestedVelocity;                                        // 0x053C(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	int                                                AvoidanceUID;                                             // 0x0548(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	struct FNavAvoidanceMask                           AvoidanceGroup;                                           // 0x054C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FNavAvoidanceMask                           GroupsToAvoid;                                            // 0x0550(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FNavAvoidanceMask                           GroupsToIgnore;                                           // 0x0554(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AvoidanceWeight;                                          // 0x0558(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     PendingLaunchVelocity;                                    // 0x055C(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData23[0xA8];                                      // 0x0568(0x00A8) MISSED OFFSET
	float                                              NavMeshProjectionInterval;                                // 0x0610(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NavMeshProjectionTimer;                                   // 0x0614(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              NavMeshProjectionInterpSpeed;                             // 0x0618(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NavMeshProjectionHeightScaleUp;                           // 0x061C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NavMeshProjectionHeightScaleDown;                         // 0x0620(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              NavWalkingFloorDistTolerance;                             // 0x0624(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData24[0xB0];                                      // 0x0628(0x00B0) MISSED OFFSET
	struct FCharacterMovementComponentPostPhysicsTickFunction PostPhysicsTickFunction;                                  // 0x06D8(0x0058)
	unsigned char                                      UnknownData25[0x10];                                      // 0x0730(0x0010) MISSED OFFSET
	float                                              MinTimeBetweenTimeStampResets;                            // 0x0740(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData26[0x4];                                       // 0x0744(0x0004) MISSED OFFSET
	struct FRootMotionSourceGroup                      CurrentRootMotion;                                        // 0x0748(0x0100) (Transient)
	unsigned char                                      UnknownData27[0x98];                                      // 0x0848(0x0098) MISSED OFFSET
	struct FRootMotionMovementParams                   RootMotionParams;                                         // 0x08E0(0x0040) (Transient)
	struct FVector                                     AnimRootMotionVelocity;                                   // 0x0920(0x000C) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bWasSimulatingRootMotion : 1;                             // 0x092C(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData28[0x3];                                       // 0x092D(0x0003) MISSED OFFSET
	unsigned char                                      bAllowPhysicsRotationDuringAnimRootMotion : 1;            // 0x0930(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData29[0xF];                                       // 0x0931(0x000F) MISSED OFFSET

	// Function Engine.CharacterMovementComponent.SeverAddRotationVelocity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SeverAddRotationVelocity(const struct FVector& RotationVelocity);// sub_5EC8F40()

	// Function Engine.CharacterMovementComponent.SetWalkableFloorZ
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetWalkableFloorZ(float InWalkableFloorZ);// sub_4AEA7E0()

	// Function Engine.CharacterMovementComponent.SetWalkableFloorAngle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetWalkableFloorAngle(float InWalkableFloorAngle);// sub_23BCF50()

	// Function Engine.CharacterMovementComponent.SetProneWalkableFloorAngle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetProneWalkableFloorAngle(float InWalkableFloorAngle);// sub_18A1730()

	// Function Engine.CharacterMovementComponent.SetMovementMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetMovementMode(TEnumAsByte<EMovementMode> NewMovementMode, unsigned char NewCustomMode);// sub_1AC7D50()

	// Function Engine.CharacterMovementComponent.SetGroupsToIgnoreMask
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetGroupsToIgnoreMask(const struct FNavAvoidanceMask& GroupMask);// sub_D3B10()

	// Function Engine.CharacterMovementComponent.SetGroupsToIgnore
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetGroupsToIgnore(int GroupFlags);// sub_1C78580()

	// Function Engine.CharacterMovementComponent.SetGroupsToAvoidMask
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetGroupsToAvoidMask(const struct FNavAvoidanceMask& GroupMask);// sub_61386E0()

	// Function Engine.CharacterMovementComponent.SetGroupsToAvoid
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetGroupsToAvoid(int GroupFlags);// sub_1144890()

	// Function Engine.CharacterMovementComponent.SetAvoidanceGroupMask
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAvoidanceGroupMask(const struct FNavAvoidanceMask& GroupMask);// sub_53461E0()

	// Function Engine.CharacterMovementComponent.SetAvoidanceGroup
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAvoidanceGroup(int GroupFlags);// sub_1A90780()

	// Function Engine.CharacterMovementComponent.SetAvoidanceEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAvoidanceEnabled(unsigned char bEnable);// sub_47F5B80()

	// Function Engine.CharacterMovementComponent.K2_GetWalkableFloorZ
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_K2_GetWalkableFloorZ();// sub_5F7B940()

	// Function Engine.CharacterMovementComponent.K2_GetWalkableFloorAngle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_K2_GetWalkableFloorAngle();// sub_20FDC90()

	// Function Engine.CharacterMovementComponent.K2_GetModifiedMaxAcceleration
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_K2_GetModifiedMaxAcceleration();// sub_21EE680()

	// Function Engine.CharacterMovementComponent.K2_FindFloor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_FindFloor(const struct FVector& CapsuleLocation, struct FFindFloorResult* FloorResult);// sub_3427B0()

	// Function Engine.CharacterMovementComponent.K2_ComputeFloorDist
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_ComputeFloorDist(const struct FVector& CapsuleLocation, float LineDistance, float SweepDistance, float SweepRadius, struct FFindFloorResult* FloorResult);// sub_4B8B440()

	// Function Engine.CharacterMovementComponent.IsWalking
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsWalking();// sub_CB1E00()

	// Function Engine.CharacterMovementComponent.IsWalkable
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsWalkable(const struct FHitResult& Hit);// sub_17839C0()

	// Function Engine.CharacterMovementComponent.GetValidPerchRadius
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetValidPerchRadius();// sub_47AC370()

	// Function Engine.CharacterMovementComponent.GetPerchRadiusThreshold
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetPerchRadiusThreshold();// sub_3F48F90()

	// Function Engine.CharacterMovementComponent.GetMovementBase
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UPrimitiveComponent* STATIC_GetMovementBase();// sub_4BA25B0()

	// Function Engine.CharacterMovementComponent.GetMaxJumpHeightWithJumpTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetMaxJumpHeightWithJumpTime();// sub_12873E0()

	// Function Engine.CharacterMovementComponent.GetMaxJumpHeight
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetMaxJumpHeight();// sub_19C4BA0()

	// Function Engine.CharacterMovementComponent.GetMaxBrakingDeceleration
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetMaxBrakingDeceleration();// sub_118E1C0()

	// Function Engine.CharacterMovementComponent.GetMaxAcceleration
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetMaxAcceleration();// sub_4C172E0()

	// Function Engine.CharacterMovementComponent.GetImpartedMovementBaseVelocity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetImpartedMovementBaseVelocity();// sub_4755DB0()

	// Function Engine.CharacterMovementComponent.GetCurrentAcceleration
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetCurrentAcceleration();// sub_56CA860()

	// Function Engine.CharacterMovementComponent.GetCharacterOwner
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class ACharacter* STATIC_GetCharacterOwner();// sub_1C10D40()

	// Function Engine.CharacterMovementComponent.GetAnalogInputModifier
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetAnalogInputModifier();// sub_46A86B0()

	// Function Engine.CharacterMovementComponent.DisableMovement
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DisableMovement();// sub_4F81F0()

	// Function Engine.CharacterMovementComponent.ClearAccumulatedForces
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearAccumulatedForces();// sub_88F2F0()

	// Function Engine.CharacterMovementComponent.CapsuleTouched
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_CapsuleTouched(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, unsigned char bFromSweep, const struct FHitResult& SweepResult);// sub_473F350()

	// Function Engine.CharacterMovementComponent.CalcVelocity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_CalcVelocity(float DeltaTime, float Friction, unsigned char bFluid, float BrakingDeceleration);// sub_3934F0()

	// Function Engine.CharacterMovementComponent.AddImpulse
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddImpulse(const struct FVector& Impulse, unsigned char bVelocityChange);// sub_22ACA90()

	// Function Engine.CharacterMovementComponent.AddForce
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_AddForce(const struct FVector& force);// sub_4BA2490()


}


//Class Engine.FloatingPawnMovement
//0x0010 (0x02B0 - 0x02A0)
class UFloatingPawnMovement : public UPawnMovementComponent
{
public:
	float                                              Deceleration;                                             // 0x02A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TurningBoost;                                             // 0x02A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bPositionCorrected : 1;                                   // 0x02A8(0x0001) (Transient)
	unsigned char                                      UnknownData00[0x7];                                       // 0x02A9(0x0007) MISSED OFFSET

}


//Class Engine.SpectatorPawnMovement
//0x0010 (0x02C0 - 0x02B0)
class USpectatorPawnMovement : public UFloatingPawnMovement
{
public:
	unsigned char                                      bIgnoreTimeDilation : 1;                                  // 0x02B0(0x0001)
	unsigned char                                      UnknownData00[0xF];                                       // 0x02B1(0x000F) MISSED OFFSET

}


//Class Engine.ProjectileMovementComponent
//0x00C0 (0x0320 - 0x0260)
class UProjectileMovementComponent : public UMovementComponent
{
public:
	unsigned char                                      bRotationFollowsVelocity : 1;                             // 0x0260(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bShouldBounce : 1;                                        // 0x0260(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bInitialVelocityInLocalSpace : 1;                         // 0x0260(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bForceSubStepping : 1;                                    // 0x0260(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bSimulationEnabled : 1;                                   // 0x0260(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bSweepCollision : 1;                                      // 0x0260(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bIsHomingProjectile : 1;                                  // 0x0260(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bBounceAngleAffectsFriction : 1;                          // 0x0260(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0261(0x0001)
	unsigned char                                      bIsSliding : 1;                                           // 0x0261(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnTemplate, EditConst)
	unsigned char                                      bInterpMovement : 1;                                      // 0x0261(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bInterpRotation : 1;                                      // 0x0261(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0262(0x0002) MISSED OFFSET
	float                                              PreviousHitTime;                                          // 0x0264(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	struct FVector                                     PreviousHitNormal;                                        // 0x0268(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	float                                              ProjectileGravityScale;                                   // 0x0274(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Buoyancy;                                                 // 0x0278(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Bounciness;                                               // 0x027C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Friction;                                                 // 0x0280(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BounceVelocityStopSimulatingThreshold;                    // 0x0284(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinFrictionFraction;                                      // 0x0288(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x028C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnProjectileBounce;                                       // 0x0290(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnProjectileStop;                                         // 0x02A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              HomingAccelerationMagnitude;                              // 0x02B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class USceneComponent>              HomingTargetComponent;                                    // 0x02B4(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnTemplate, EditConst, InstancedReference, IsPlainOldData)
	float                                              MaxSimulationTimeStep;                                    // 0x02BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                MaxSimulationIterations;                                  // 0x02C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                BounceAdditionalIterations;                               // 0x02C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InterpLocationTime;                                       // 0x02C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InterpRotationTime;                                       // 0x02CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InterpLocationMaxLagDistance;                             // 0x02D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              InterpLocationSnapToTargetDistance;                       // 0x02D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x48];                                      // 0x02D8(0x0048) MISSED OFFSET

	// Function Engine.ProjectileMovementComponent.StopSimulating
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StopSimulating(const struct FHitResult& HitResult);// sub_4558360()

	// Function Engine.ProjectileMovementComponent.SetVelocityInLocalSpace
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVelocityInLocalSpace(const struct FVector& NewVelocity);// sub_1E597F0()

	// Function Engine.ProjectileMovementComponent.SetInterpolatedComponent
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetInterpolatedComponent(class USceneComponent* Component);// sub_D1E970()

	// Function Engine.ProjectileMovementComponent.ResetInterpolation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ResetInterpolation();// sub_45D540()

	// DelegateFunction Engine.ProjectileMovementComponent.OnProjectileStopDelegate__DelegateSignature
	// (NetReliable, Exec, Event, NetMulticast, MulticastDelegate, Private, Protected, HasOutParms, BlueprintEvent)
	void OnProjectileStopDelegate__DelegateSignature(const struct FHitResult& ImpactResult);// sub_5C67A0()

	// DelegateFunction Engine.ProjectileMovementComponent.OnProjectileBounceDelegate__DelegateSignature
	// (NetReliable, Exec, Event, NetMulticast, MulticastDelegate, Private, Protected, HasOutParms, BlueprintEvent)
	void OnProjectileBounceDelegate__DelegateSignature(const struct FHitResult& ImpactResult, const struct FVector& ImpactVelocity);// sub_5C67A0()

	// Function Engine.ProjectileMovementComponent.MoveInterpolationTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_MoveInterpolationTarget(const struct FVector& NewLocation, const struct FRotator& NewRotation);// sub_434E050()

	// Function Engine.ProjectileMovementComponent.LimitVelocity
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_LimitVelocity(const struct FVector& NewVelocity);// sub_40A4E60()

	// Function Engine.ProjectileMovementComponent.IsVelocityUnderSimulationThreshold
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsVelocityUnderSimulationThreshold();// sub_4BDE220()

	// Function Engine.ProjectileMovementComponent.IsInterpolationComplete
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsInterpolationComplete();// sub_6138500()


}


//Class Engine.RotatingMovementComponent
//0x0020 (0x0280 - 0x0260)
class URotatingMovementComponent : public UMovementComponent
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x0260(0x0004) MISSED OFFSET
	struct FVector                                     PivotTranslation;                                         // 0x0264(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRotationInLocalSpace : 1;                                // 0x0270(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0xF];                                       // 0x0271(0x000F) MISSED OFFSET

}


//Class Engine.NavigationInvokerComponent
//0x0010 (0x0220 - 0x0210)
class UNavigationInvokerComponent : public UActorComponent
{
public:
	float                                              TileGenerationRadius;                                     // 0x0210(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TileRemovalRadius;                                        // 0x0214(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0218(0x0008) MISSED OFFSET

}


//Class Engine.NavLinkCustomInterface
//0x0000 (0x0040 - 0x0040)
class UNavLinkCustomInterface : public UInterface
{
public:

}


//Class Engine.NavLinkCustomComponent
//0x0110 (0x0350 - 0x0240)
class UNavLinkCustomComponent : public UNavRelevantComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0240(0x0008) MISSED OFFSET
	uint32_t                                           NavLinkUserId;                                            // 0x0248(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x024C(0x0004) MISSED OFFSET
	class UNavArea*                                    EnabledAreaClass;                                         // 0x0250(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UNavArea*                                    DisabledAreaClass;                                        // 0x0258(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LinkRelativeStart;                                        // 0x0260(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     LinkRelativeEnd;                                          // 0x026C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ENavLinkDirection>                     LinkDirection;                                            // 0x0278(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0279(0x0003) MISSED OFFSET
	unsigned char                                      bLinkEnabled : 1;                                         // 0x027C(0x0001) (Edit)
	unsigned char                                      bNotifyWhenEnabled : 1;                                   // 0x027C(0x0001) (Edit)
	unsigned char                                      bNotifyWhenDisabled : 1;                                  // 0x027C(0x0001) (Edit)
	unsigned char                                      bCreateBoxObstacle : 1;                                   // 0x027C(0x0001) (Edit)
	unsigned char                                      UnknownData03[0x3];                                       // 0x027D(0x0003) MISSED OFFSET
	struct FVector                                     ObstacleOffset;                                           // 0x0280(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ObstacleExtent;                                           // 0x028C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	class UNavArea*                                    ObstacleAreaClass;                                        // 0x0298(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BroadcastRadius;                                          // 0x02A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BroadcastInterval;                                        // 0x02A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionChannel>                     BroadcastChannel;                                         // 0x02A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0xA7];                                      // 0x02A9(0x00A7) MISSED OFFSET

}


//Class Engine.Model
//0x0548 (0x0588 - 0x0040)
class UModel : public UObject
{
public:
	unsigned char                                      UnknownData00[0x548];                                     // 0x0040(0x0548) MISSED OFFSET

}


//Class Engine.KismetNodeHelperLibrary
//0x0000 (0x0040 - 0x0040)
class UKismetNodeHelperLibrary : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.KismetNodeHelperLibrary.MarkBit
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_MarkBit(int Index, int* Data);// sub_4253470()

	// Function Engine.KismetNodeHelperLibrary.HasUnmarkedBit
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_HasUnmarkedBit(int Data, int NumBits);// sub_1B14F0()

	// Function Engine.KismetNodeHelperLibrary.HasMarkedBit
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_HasMarkedBit(int Data, int NumBits);// sub_4BA4D0()

	// Function Engine.KismetNodeHelperLibrary.GetValidValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetValidValue(class UEnum* Enum, unsigned char EnumeratorValue);// sub_50E38B0()

	// Function Engine.KismetNodeHelperLibrary.GetUnmarkedBit
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetUnmarkedBit(int Data, int StartIdx, int NumBits, unsigned char bRandom);// sub_4384B70()

	// Function Engine.KismetNodeHelperLibrary.GetRandomUnmarkedBit
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetRandomUnmarkedBit(int Data, int StartIdx, int NumBits);// sub_5C10DC0()

	// Function Engine.KismetNodeHelperLibrary.GetFirstUnmarkedBit
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetFirstUnmarkedBit(int Data, int StartIdx, int NumBits);// sub_1EA98C0()

	// Function Engine.KismetNodeHelperLibrary.GetEnumeratorValueFromIndex
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_GetEnumeratorValueFromIndex(class UEnum* Enum, unsigned char EnumeratorIndex);// sub_61401B0()

	// Function Engine.KismetNodeHelperLibrary.GetEnumeratorUserFriendlyName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetEnumeratorUserFriendlyName(class UEnum* Enum, unsigned char EnumeratorValue);// sub_17B25F0()

	// Function Engine.KismetNodeHelperLibrary.GetEnumeratorName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FName STATIC_GetEnumeratorName(class UEnum* Enum, unsigned char EnumeratorValue);// sub_3DFBBB0()

	// Function Engine.KismetNodeHelperLibrary.ClearBit
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearBit(int Index, int* Data);// sub_94AFF0()

	// Function Engine.KismetNodeHelperLibrary.ClearAllBits
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearAllBits(int* Data);// sub_527E1B0()

	// Function Engine.KismetNodeHelperLibrary.BitIsMarked
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_BitIsMarked(int Data, int Index);// sub_1E7D60()


}


//Class Engine.KismetRenderingLibrary
//0x0000 (0x0040 - 0x0040)
class UKismetRenderingLibrary : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.KismetRenderingLibrary.MakeSkinWeightInfo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FSkelMeshSkinWeightInfo STATIC_MakeSkinWeightInfo(int Bone0, unsigned char Weight0, int Bone1, unsigned char Weight1, int Bone2, unsigned char Weight2, int Bone3, unsigned char Weight3);// sub_4AC2BA0()

	// Function Engine.KismetRenderingLibrary.ExportTexture2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ExportTexture2D(class UObject* WorldContextObject, class UTexture2D* Texture, const struct FString& FilePath, const struct FString& FileName);// sub_20BBE80()

	// Function Engine.KismetRenderingLibrary.ExportRenderTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ExportRenderTarget(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, const struct FString& FilePath, const struct FString& FileName);// sub_296100()

	// Function Engine.KismetRenderingLibrary.EndDrawCanvasToRenderTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_EndDrawCanvasToRenderTarget(class UObject* WorldContextObject, const struct FDrawToRenderTargetContext& Context);// sub_418DAB0()

	// Function Engine.KismetRenderingLibrary.DrawMaterialToRenderTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DrawMaterialToRenderTarget(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, class UMaterialInterface* Material);// sub_41C4620()

	// Function Engine.KismetRenderingLibrary.CreateRenderTarget2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UTextureRenderTarget2D* STATIC_CreateRenderTarget2D(class UObject* WorldContextObject, int Width, int Height);// sub_3C41700()

	// Function Engine.KismetRenderingLibrary.ConvertRenderTargetToTexture2DEditorOnly
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ConvertRenderTargetToTexture2DEditorOnly(class UObject* WorldContextObject, class UTextureRenderTarget2D* RenderTarget, class UTexture2D* Texture);// sub_4B1BAB0()

	// Function Engine.KismetRenderingLibrary.ClearRenderTarget2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ClearRenderTarget2D(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, const struct FLinearColor& ClearColor);// sub_196B280()

	// Function Engine.KismetRenderingLibrary.BreakSkinWeightInfo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BreakSkinWeightInfo(const struct FSkelMeshSkinWeightInfo& InWeight, int* Bone0, unsigned char* Weight0, int* Bone1, unsigned char* Weight1, int* Bone2, unsigned char* Weight2, int* Bone3, unsigned char* Weight3);// sub_4E64690()

	// Function Engine.KismetRenderingLibrary.BeginDrawCanvasToRenderTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BeginDrawCanvasToRenderTarget(class UObject* WorldContextObject, class UTextureRenderTarget2D* TextureRenderTarget, class UCanvas** Canvas, struct FVector2D* Size, struct FDrawToRenderTargetContext* Context);// sub_3FE3F80()


}


//Class Engine.KismetStringLibrary
//0x0000 (0x0040 - 0x0040)
class UKismetStringLibrary : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.KismetStringLibrary.TrimTrailing
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_TrimTrailing(const struct FString& SourceString);// sub_407A670()

	// Function Engine.KismetStringLibrary.Trim
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Trim(const struct FString& SourceString);// sub_F1E580()

	// Function Engine.KismetStringLibrary.ToUpper
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_ToUpper(const struct FString& SourceString);// sub_11C2DD0()

	// Function Engine.KismetStringLibrary.ToLower
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_ToLower(const struct FString& SourceString);// sub_3B82D10()

	// Function Engine.KismetStringLibrary.TimeSecondsToString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_TimeSecondsToString(float InSeconds);// sub_4C01150()

	// Function Engine.KismetStringLibrary.StartsWith
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_StartsWith(const struct FString& SourceString, const struct FString& InPrefix, TEnumAsByte<ESearchCase> SearchCase);// sub_5F80080()

	// Function Engine.KismetStringLibrary.Split
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Split(const struct FString& SourceString, const struct FString& InStr, TEnumAsByte<ESearchCase> SearchCase, TEnumAsByte<ESearchDir> SearchDir, struct FString* LeftS, struct FString* RightS);// sub_786920()

	// Function Engine.KismetStringLibrary.RightPad
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_RightPad(const struct FString& SourceString, int ChCount);// sub_611E540()

	// Function Engine.KismetStringLibrary.RightChop
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_RightChop(const struct FString& SourceString, int Count);// sub_40936A0()

	// Function Engine.KismetStringLibrary.Right
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Right(const struct FString& SourceString, int Count);// sub_5320DA0()

	// Function Engine.KismetStringLibrary.Reverse
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Reverse(const struct FString& SourceString);// sub_5F32CA0()

	// Function Engine.KismetStringLibrary.ReplaceInline
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_ReplaceInline(const struct FString& SearchText, const struct FString& ReplacementText, TEnumAsByte<ESearchCase> SearchCase, struct FString* SourceString);// sub_1394520()

	// Function Engine.KismetStringLibrary.Replace
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Replace(const struct FString& SourceString, const struct FString& From, const struct FString& To, TEnumAsByte<ESearchCase> SearchCase);// sub_609FC70()

	// Function Engine.KismetStringLibrary.ParseIntoArray
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TArray<struct FString> STATIC_ParseIntoArray(const struct FString& SourceString, const struct FString& Delimiter, unsigned char CullEmptyStrings);// sub_14AB9A0()

	// Function Engine.KismetStringLibrary.NotEqual_StrStr
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_NotEqual_StrStr(const struct FString& A, const struct FString& B);// sub_41DC600()

	// Function Engine.KismetStringLibrary.NotEqual_StriStri
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_NotEqual_StriStri(const struct FString& A, const struct FString& B);// sub_407A570()

	// Function Engine.KismetStringLibrary.Mid
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Mid(const struct FString& SourceString, int Start, int Count);// sub_D0AB20()

	// Function Engine.KismetStringLibrary.MatchesWildcard
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_MatchesWildcard(const struct FString& SourceString, const struct FString& Wildcard, TEnumAsByte<ESearchCase> SearchCase);// sub_2480840()

	// Function Engine.KismetStringLibrary.Len
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Len(const struct FString& S);// sub_4705DC0()

	// Function Engine.KismetStringLibrary.LeftPad
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_LeftPad(const struct FString& SourceString, int ChCount);// sub_4D421C0()

	// Function Engine.KismetStringLibrary.LeftChop
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_LeftChop(const struct FString& SourceString, int Count);// sub_4A93010()

	// Function Engine.KismetStringLibrary.Left
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Left(const struct FString& SourceString, int Count);// sub_EA2C30()

	// Function Engine.KismetStringLibrary.JoinStringArray
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_JoinStringArray(TArray<struct FString> SourceArray, const struct FString& Separator);// sub_541B2B0()

	// Function Engine.KismetStringLibrary.IsNumeric
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsNumeric(const struct FString& SourceString);// sub_522B830()

	// Function Engine.KismetStringLibrary.GetSubstring
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetSubstring(const struct FString& SourceString, int StartIndex, int Length);// sub_526AAD0()

	// Function Engine.KismetStringLibrary.GetCharacterAsNumber
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetCharacterAsNumber(const struct FString& SourceString, int Index);// sub_CB92F0()

	// Function Engine.KismetStringLibrary.GetCharacterArrayFromString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TArray<struct FString> STATIC_GetCharacterArrayFromString(const struct FString& SourceString);// sub_2654B0()

	// Function Engine.KismetStringLibrary.FindSubstring
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_FindSubstring(const struct FString& SearchIn, const struct FString& Substring, unsigned char bUseCase, unsigned char bSearchFromEnd, int StartPosition);// sub_50257B0()

	// Function Engine.KismetStringLibrary.EqualEqual_StrStr
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EqualEqual_StrStr(const struct FString& A, const struct FString& B);// sub_5B9C0A0()

	// Function Engine.KismetStringLibrary.EqualEqual_StriStri
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EqualEqual_StriStri(const struct FString& A, const struct FString& B);// sub_22C2E0()

	// Function Engine.KismetStringLibrary.EndsWith
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EndsWith(const struct FString& SourceString, const struct FString& InSuffix, TEnumAsByte<ESearchCase> SearchCase);// sub_DA3ED0()

	// Function Engine.KismetStringLibrary.CullArray
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_CullArray(const struct FString& SourceString, TArray<struct FString>* inArray);// sub_1E7BBA0()

	// Function Engine.KismetStringLibrary.Conv_VectorToString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Conv_VectorToString(const struct FVector& InVec);// sub_1871510()

	// Function Engine.KismetStringLibrary.Conv_Vector2dToString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Conv_Vector2dToString(const struct FVector2D& InVec);// sub_12A9130()

	// Function Engine.KismetStringLibrary.Conv_TransformToString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Conv_TransformToString(const struct FTransform& InTrans);// sub_C5C2E0()

	// Function Engine.KismetStringLibrary.Conv_StringToVector2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Conv_StringToVector2D(const struct FString& inString, struct FVector2D* OutConvertedVector2D, unsigned char* OutIsValid);// sub_5025670()

	// Function Engine.KismetStringLibrary.Conv_StringToVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Conv_StringToVector(const struct FString& inString, struct FVector* OutConvertedVector, unsigned char* OutIsValid);// sub_2102690()

	// Function Engine.KismetStringLibrary.Conv_StringToRotator
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Conv_StringToRotator(const struct FString& inString, struct FRotator* OutConvertedRotator, unsigned char* OutIsValid);// sub_19C96E0()

	// Function Engine.KismetStringLibrary.Conv_StringToName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FName STATIC_Conv_StringToName(const struct FString& inString);// sub_1F78BA0()

	// Function Engine.KismetStringLibrary.Conv_StringToInt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_Conv_StringToInt(const struct FString& inString);// sub_5F32C00()

	// Function Engine.KismetStringLibrary.Conv_StringToFloat
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_Conv_StringToFloat(const struct FString& inString);// sub_8E1030()

	// Function Engine.KismetStringLibrary.Conv_StringToColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Conv_StringToColor(const struct FString& inString, struct FLinearColor* OutConvertedColor, unsigned char* OutIsValid);// sub_47B5330()

	// Function Engine.KismetStringLibrary.Conv_RotatorToString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Conv_RotatorToString(const struct FRotator& InRot);// sub_497ACA0()

	// Function Engine.KismetStringLibrary.Conv_ObjectToString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Conv_ObjectToString(class UObject* InObj);// sub_23C1710()

	// Function Engine.KismetStringLibrary.Conv_NameToString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Conv_NameToString(const struct FName& InName);// sub_3C41630()

	// Function Engine.KismetStringLibrary.Conv_IntVectorToString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Conv_IntVectorToString(const struct FIntVector& InIntVec);// sub_3DFBAD0()

	// Function Engine.KismetStringLibrary.Conv_IntToString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Conv_IntToString(int inInt);// sub_1228DA0()

	// Function Engine.KismetStringLibrary.Conv_FloatToString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Conv_FloatToString(float InFloat);// sub_3BEE620()

	// Function Engine.KismetStringLibrary.Conv_ColorToString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Conv_ColorToString(const struct FLinearColor& InColor);// sub_60E0650()

	// Function Engine.KismetStringLibrary.Conv_ByteToString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Conv_ByteToString(unsigned char InByte);// sub_4B722F0()

	// Function Engine.KismetStringLibrary.Conv_BoolToString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Conv_BoolToString(unsigned char InBool);// sub_1A953A0()

	// Function Engine.KismetStringLibrary.Contains
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_Contains(const struct FString& SearchIn, const struct FString& Substring, unsigned char bUseCase, unsigned char bSearchFromEnd);// sub_17FBD70()

	// Function Engine.KismetStringLibrary.Concat_StrStr
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Concat_StrStr(const struct FString& A, const struct FString& B);// sub_5320C60()

	// Function Engine.KismetStringLibrary.BuildString_Vector2d
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_BuildString_Vector2d(const struct FString& AppendTo, const struct FString& Prefix, const struct FVector2D& InVector2D, const struct FString& Suffix);// sub_522B660()

	// Function Engine.KismetStringLibrary.BuildString_Vector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_BuildString_Vector(const struct FString& AppendTo, const struct FString& Prefix, const struct FVector& InVector, const struct FString& Suffix);// sub_582210()

	// Function Engine.KismetStringLibrary.BuildString_Rotator
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_BuildString_Rotator(const struct FString& AppendTo, const struct FString& Prefix, const struct FRotator& InRot, const struct FString& Suffix);// sub_582030()

	// Function Engine.KismetStringLibrary.BuildString_Object
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_BuildString_Object(const struct FString& AppendTo, const struct FString& Prefix, class UObject* InObj, const struct FString& Suffix);// sub_3FE4140()

	// Function Engine.KismetStringLibrary.BuildString_Name
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_BuildString_Name(const struct FString& AppendTo, const struct FString& Prefix, const struct FName& InName, const struct FString& Suffix);// sub_191E630()

	// Function Engine.KismetStringLibrary.BuildString_IntVector
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_BuildString_IntVector(const struct FString& AppendTo, const struct FString& Prefix, const struct FIntVector& InIntVector, const struct FString& Suffix);// sub_18435A0()

	// Function Engine.KismetStringLibrary.BuildString_Int
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_BuildString_Int(const struct FString& AppendTo, const struct FString& Prefix, int inInt, const struct FString& Suffix);// sub_1360A10()

	// Function Engine.KismetStringLibrary.BuildString_Float
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_BuildString_Float(const struct FString& AppendTo, const struct FString& Prefix, float InFloat, const struct FString& Suffix);// sub_418440()

	// Function Engine.KismetStringLibrary.BuildString_Color
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_BuildString_Color(const struct FString& AppendTo, const struct FString& Prefix, const struct FLinearColor& InColor, const struct FString& Suffix);// sub_1B011C0()

	// Function Engine.KismetStringLibrary.BuildString_Bool
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_BuildString_Bool(const struct FString& AppendTo, const struct FString& Prefix, unsigned char InBool, const struct FString& Suffix);// sub_CA3390()


}


//Class Engine.KismetStringTableLibrary
//0x0000 (0x0040 - 0x0040)
class UKismetStringTableLibrary : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.KismetStringTableLibrary.IsRegisteredTableId
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsRegisteredTableId(const struct FName& TableId);// sub_55AA800()

	// Function Engine.KismetStringTableLibrary.IsRegisteredTableEntry
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsRegisteredTableEntry(const struct FName& TableId, const struct FString& Key);// sub_CEE2B0()

	// Function Engine.KismetStringTableLibrary.GetTableNamespace
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetTableNamespace(const struct FName& TableId);// sub_4EE0120()

	// Function Engine.KismetStringTableLibrary.GetTableEntrySourceString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetTableEntrySourceString(const struct FName& TableId, const struct FString& Key);// sub_D703A0()

	// Function Engine.KismetStringTableLibrary.GetTableEntryMetaData
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetTableEntryMetaData(const struct FName& TableId, const struct FString& Key, const struct FName& MetaDataId);// sub_EE87B0()

	// Function Engine.KismetStringTableLibrary.GetRegisteredStringTables
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TArray<struct FName> STATIC_GetRegisteredStringTables();// sub_13EA2E0()

	// Function Engine.KismetStringTableLibrary.GetMetaDataIdsFromStringTableEntry
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TArray<struct FName> STATIC_GetMetaDataIdsFromStringTableEntry(const struct FName& TableId, const struct FString& Key);// sub_4760AC0()

	// Function Engine.KismetStringTableLibrary.GetKeysFromStringTable
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TArray<struct FString> STATIC_GetKeysFromStringTable(const struct FName& TableId);// sub_5308E80()


}


//Class Engine.KismetTextLibrary
//0x0000 (0x0040 - 0x0040)
class UKismetTextLibrary : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.KismetTextLibrary.TextTrimTrailing
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_TextTrimTrailing(const struct FText& InText);// sub_59E53B0()

	// Function Engine.KismetTextLibrary.TextTrimPrecedingAndTrailing
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_TextTrimPrecedingAndTrailing(const struct FText& InText);// sub_5B16E70()

	// Function Engine.KismetTextLibrary.TextTrimPreceding
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_TextTrimPreceding(const struct FText& InText);// sub_204C9A0()

	// Function Engine.KismetTextLibrary.TextToUpper
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_TextToUpper(const struct FText& InText);// sub_1D059C0()

	// Function Engine.KismetTextLibrary.TextToLower
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_TextToLower(const struct FText& InText);// sub_16B3740()

	// Function Engine.KismetTextLibrary.TextIsTransient
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_TextIsTransient(const struct FText& InText);// sub_431B7C0()

	// Function Engine.KismetTextLibrary.TextIsFromStringTable
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_TextIsFromStringTable(const struct FText& Text);// sub_1C01C80()

	// Function Engine.KismetTextLibrary.TextIsEmpty
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_TextIsEmpty(const struct FText& InText);// sub_8EB30()

	// Function Engine.KismetTextLibrary.TextIsCultureInvariant
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_TextIsCultureInvariant(const struct FText& InText);// sub_4E9FB70()

	// Function Engine.KismetTextLibrary.TextFromStringTable
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_TextFromStringTable(const struct FName& TableId, const struct FString& Key);// sub_7D5B60()

	// Function Engine.KismetTextLibrary.StringTableIdAndKeyFromText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_StringTableIdAndKeyFromText(const struct FText& Text, struct FName* OutTableId, struct FString* OutKey);// sub_3E136B0()

	// Function Engine.KismetTextLibrary.NotEqual_TextText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_NotEqual_TextText(const struct FText& A, const struct FText& B);// sub_CEE390()

	// Function Engine.KismetTextLibrary.NotEqual_IgnoreCase_TextText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_NotEqual_IgnoreCase_TextText(const struct FText& A, const struct FText& B);// sub_CD53F0()

	// Function Engine.KismetTextLibrary.GetEmptyText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_GetEmptyText();// sub_21027D0()

	// Function Engine.KismetTextLibrary.Format
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_Format(const struct FText& InPattern, TArray<struct FFormatArgumentData> InArgs);// sub_1609E20()

	// Function Engine.KismetTextLibrary.FindTextInLocalizationTable
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_FindTextInLocalizationTable(const struct FString& NameSpace, const struct FString& Key, struct FText* OutText);// sub_1A2EEE0()

	// Function Engine.KismetTextLibrary.EqualEqual_TextText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EqualEqual_TextText(const struct FText& A, const struct FText& B);// sub_54F6990()

	// Function Engine.KismetTextLibrary.EqualEqual_IgnoreCase_TextText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_EqualEqual_IgnoreCase_TextText(const struct FText& A, const struct FText& B);// sub_232D2C0()

	// Function Engine.KismetTextLibrary.Conv_VectorToText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_Conv_VectorToText(const struct FVector& InVec);// sub_412C1B0()

	// Function Engine.KismetTextLibrary.Conv_Vector2dToText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_Conv_Vector2dToText(const struct FVector2D& InVec);// sub_40C8840()

	// Function Engine.KismetTextLibrary.Conv_TransformToText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_Conv_TransformToText(const struct FTransform& InTrans);// sub_CEE180()

	// Function Engine.KismetTextLibrary.Conv_TextToString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_Conv_TextToString(const struct FText& InText);// sub_E87420()

	// Function Engine.KismetTextLibrary.Conv_StringToText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_Conv_StringToText(const struct FString& inString);// sub_212F6F0()

	// Function Engine.KismetTextLibrary.Conv_RotatorToText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_Conv_RotatorToText(const struct FRotator& InRot);// sub_421BC30()

	// Function Engine.KismetTextLibrary.Conv_ObjectToText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_Conv_ObjectToText(class UObject* InObj);// sub_16B3660()

	// Function Engine.KismetTextLibrary.Conv_NameToText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_Conv_NameToText(const struct FName& InName);// sub_4F2D650()

	// Function Engine.KismetTextLibrary.Conv_IntToText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_Conv_IntToText(int Value, unsigned char bUseGrouping, int MinimumIntegralDigits, int MaximumIntegralDigits);// sub_5C2F450()

	// Function Engine.KismetTextLibrary.Conv_FloatToText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_Conv_FloatToText(float Value, TEnumAsByte<ERoundingMode> RoundingMode, unsigned char bUseGrouping, int MinimumIntegralDigits, int MaximumIntegralDigits, int MinimumFractionalDigits, int MaximumFractionalDigits);// sub_5112810()

	// Function Engine.KismetTextLibrary.Conv_ColorToText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_Conv_ColorToText(const struct FLinearColor& InColor);// sub_4C01070()

	// Function Engine.KismetTextLibrary.Conv_ByteToText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_Conv_ByteToText(unsigned char Value);// sub_6208120()

	// Function Engine.KismetTextLibrary.Conv_BoolToText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_Conv_BoolToText(unsigned char InBool);// sub_4D21540()

	// Function Engine.KismetTextLibrary.AsTimeZoneTime_DateTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_AsTimeZoneTime_DateTime(const struct FDateTime& InDateTime, const struct FString& InTimeZone);// sub_3DB7050()

	// Function Engine.KismetTextLibrary.AsTimeZoneDateTime_DateTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_AsTimeZoneDateTime_DateTime(const struct FDateTime& InDateTime, const struct FString& InTimeZone);// sub_735FF0()

	// Function Engine.KismetTextLibrary.AsTimeZoneDate_DateTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_AsTimeZoneDate_DateTime(const struct FDateTime& InDateTime, const struct FString& InTimeZone);// sub_61BB350()

	// Function Engine.KismetTextLibrary.AsTimespan_Timespan
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_AsTimespan_Timespan(const struct FTimespan& InTimespan);// sub_5B7320()

	// Function Engine.KismetTextLibrary.AsTime_DateTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_AsTime_DateTime(const struct FDateTime& In);// sub_3D21DD0()

	// Function Engine.KismetTextLibrary.AsPercent_Float
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_AsPercent_Float(float Value, TEnumAsByte<ERoundingMode> RoundingMode, unsigned char bUseGrouping, int MinimumIntegralDigits, int MaximumIntegralDigits, int MinimumFractionalDigits, int MaximumFractionalDigits);// sub_3FA2380()

	// Function Engine.KismetTextLibrary.AsDateTime_DateTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_AsDateTime_DateTime(const struct FDateTime& In);// sub_56842F0()

	// Function Engine.KismetTextLibrary.AsDate_DateTime
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_AsDate_DateTime(const struct FDateTime& InDateTime);// sub_5514F70()

	// Function Engine.KismetTextLibrary.AsCurrencyBase
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_AsCurrencyBase(int BaseValue, const struct FString& CurrencyCode);// sub_54366E0()

	// Function Engine.KismetTextLibrary.AsCurrency_Integer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_AsCurrency_Integer(int Value, TEnumAsByte<ERoundingMode> RoundingMode, unsigned char bUseGrouping, int MinimumIntegralDigits, int MaximumIntegralDigits, int MinimumFractionalDigits, int MaximumFractionalDigits, const struct FString& CurrencyCode);// sub_4A61520()

	// Function Engine.KismetTextLibrary.AsCurrency_Float
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FText STATIC_AsCurrency_Float(float Value, TEnumAsByte<ERoundingMode> RoundingMode, unsigned char bUseGrouping, int MinimumIntegralDigits, int MaximumIntegralDigits, int MinimumFractionalDigits, int MaximumFractionalDigits, const struct FString& CurrencyCode);// sub_44AC3E0()


}


//Class Engine.MeshVertexPainterKismetLibrary
//0x0000 (0x0040 - 0x0040)
class UMeshVertexPainterKismetLibrary : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.MeshVertexPainterKismetLibrary.RemovePaintedVertices
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RemovePaintedVertices(class UStaticMeshComponent* StaticMeshComponent);// sub_4048A10()

	// Function Engine.MeshVertexPainterKismetLibrary.PaintVerticesSingleColor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PaintVerticesSingleColor(class UStaticMeshComponent* StaticMeshComponent, const struct FLinearColor& FillColor, unsigned char bConvertToSRGB);// sub_5C4AA50()

	// Function Engine.MeshVertexPainterKismetLibrary.PaintVerticesLerpAlongAxis
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PaintVerticesLerpAlongAxis(class UStaticMeshComponent* StaticMeshComponent, const struct FLinearColor& StartColor, const struct FLinearColor& EndColor, EVertexPaintAxis Axis, unsigned char bConvertToSRGB);// sub_497AD80()


}


//Class Engine.World
//0x0C10 (0x0C50 - 0x0040)
class UWorld : public UObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0040(0x0020) MISSED OFFSET
	class UDemoNetDriver*                              DemoNetDriver;                                            // 0x0060(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0068(0x0010) MISSED OFFSET
	class AParticleEventManager*                       MyParticleEventManager;                                   // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0080(0x0010) MISSED OFFSET
	class AGameModeBase*                               AuthorityGameMode;                                        // 0x0090(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0098(0x0010) MISSED OFFSET
	class ULevel*                                      CurrentLevelPendingVisibility;                            // 0x00A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x00B0(0x0008) MISSED OFFSET
	TArray<struct FLevelCollection>                    LevelCollections;                                         // 0x00B8(0x0010) (ZeroConstructor, Transient)
	class UNetDriver*                                  NetDriver;                                                // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x00D0(0x0008) MISSED OFFSET
	class UPhysicsCollisionHandler*                    PhysicsCollisionHandler;                                  // 0x00D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData06[0x118];                                     // 0x00E0(0x0118) MISSED OFFSET
	class ULevel*                                      CurrentLevelPendingInvisibility;                          // 0x01F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x8];                                       // 0x0200(0x0008) MISSED OFFSET
	class UAvoidanceManager*                           AvoidanceManager;                                         // 0x0208(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData08[0x170];                                     // 0x0210(0x0170) MISSED OFFSET
	class ULineBatchComponent*                         ForegroundLineBatcher;                                    // 0x0380(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData09[0x60];                                      // 0x0388(0x0060) MISSED OFFSET
	struct FString                                     StreamingLevelsPrefix;                                    // 0x03E8(0x0010) (ZeroConstructor)
	TArray<class UObject*>                             ExtraReferencedObjects;                                   // 0x03F8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData10[0x340];                                     // 0x0408(0x0340) MISSED OFFSET
	TArray<class UObject*>                             PerModuleDataObjects;                                     // 0x0748(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData11[0xF0];                                      // 0x0758(0x00F0) MISSED OFFSET
	class APhysicsVolume*                              DefaultPhysicsVolume;                                     // 0x0848(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class ULevelStreaming*>                     SortedStreamingLevels;                                    // 0x0850(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData12[0x8];                                       // 0x0860(0x0008) MISSED OFFSET
	class UDirectionalLightComponent*                  HeightBufferFakeLight;                                    // 0x0868(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData13[0x8];                                       // 0x0870(0x0008) MISSED OFFSET
	class UCanvas*                                     CanvasForDrawMaterialToRenderTarget;                      // 0x0878(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData14[0x8];                                       // 0x0880(0x0008) MISSED OFFSET
	class UCanvas*                                     CanvasForRenderingToTarget;                               // 0x0888(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UMaterialParameterCollectionInstance*> ParameterCollectionInstances;                             // 0x0890(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData15[0xA8];                                      // 0x08A0(0x00A8) MISSED OFFSET
	TArray<class ULevelStreaming*>                     StreamingLevels;                                          // 0x0948(0x0010) (ZeroConstructor, Transient)
	class AGameNetworkManager*                         NetworkManager;                                           // 0x0958(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UWorldComposition*                           WorldComposition;                                         // 0x0960(0x0008) (ZeroConstructor, IsPlainOldData)
	class UAISystemBase*                               AISystem;                                                 // 0x0968(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData16[0x18];                                      // 0x0970(0x0018) MISSED OFFSET
	TArray<class ULevel*>                              Levels;                                                   // 0x0988(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData17[0x8];                                       // 0x0998(0x0008) MISSED OFFSET
	class ULevel*                                      CurrentLevel;                                             // 0x09A0(0x0008) (Transient)
	unsigned char                                      UnknownData18[0x8];                                       // 0x09A8(0x0008) MISSED OFFSET
	class ULineBatchComponent*                         PersistentLineBatcher;                                    // 0x09B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData19[0x8];                                       // 0x09B8(0x0008) MISSED OFFSET
	class ULineBatchComponent*                         LineBatcher;                                              // 0x09C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData20[0x8];                                       // 0x09C8(0x0008) MISSED OFFSET
	class UNavigationSystem*                           NavigationSystem;                                         // 0x09D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData21[0x4A];                                      // 0x09D8(0x004A) MISSED OFFSET
	unsigned char                                      bAreConstraintsDirty : 1;                                 // 0x0A22(0x0001) (Transient)
	unsigned char                                      UnknownData22[0x6D];                                      // 0x0A23(0x006D) MISSED OFFSET
	TMap<struct FLandscapeOverrideKey, struct FLandscapeOverrideData> LandscapeOverrideDatas;                                   // 0x0A90(0x0050) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData23[0x170];                                     // 0x0AE0(0x0170) MISSED OFFSET

}


//Class Engine.NavigationSystem
//0x04B0 (0x04F0 - 0x0040)
class UNavigationSystem : public UBlueprintFunctionLibrary
{
public:
	class ANavigationData*                             MainNavData;                                              // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	class ANavigationData*                             AbstractNavData;                                          // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bAutoCreateNavigationData : 1;                            // 0x0050(0x0001) (Edit, Config)
	unsigned char                                      bAllowClientSideNavigation : 1;                           // 0x0050(0x0001) (Edit, Config)
	unsigned char                                      bSupportRebuilding : 1;                                   // 0x0050(0x0001)
	unsigned char                                      bInitialBuildingLocked : 1;                               // 0x0050(0x0001) (Edit, Config)
	unsigned char                                      bSkipAgentHeightCheckWhenPickingNavData : 1;              // 0x0050(0x0001) (Edit, Config)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	ENavDataGatheringModeConfig                        DataGatheringMode;                                        // 0x0054(0x0001) (Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	unsigned char                                      bGenerateNavigationOnlyAroundNavigationInvokers : 1;      // 0x0058(0x0001) (Edit, Config, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	float                                              ActiveTilesUpdateInterval;                                // 0x005C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	TArray<struct FNavDataConfig>                      SupportedAgents;                                          // 0x0060(0x0010) (Edit, ZeroConstructor, Config)
	float                                              DirtyAreasUpdateFreq;                                     // 0x0070(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	TArray<class ANavigationData*>                     NavDataSet;                                               // 0x0078(0x0010) (ZeroConstructor)
	TArray<struct FBox>                                SubNavMeshBoundsArr;                                      // 0x0088(0x0010) (ZeroConstructor, Transient)
	TMap<int, class ANavigationData*>                  SubNavDataMap;                                            // 0x0098(0x0050) (ZeroConstructor, Transient)
	TArray<class ANavigationData*>                     NavDataRegistrationQueue;                                 // 0x00E8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData04[0x60];                                      // 0x00F8(0x0060) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnNavDataRegisteredEvent;                                 // 0x0158(0x0010) (ZeroConstructor, Transient, InstancedReference)
	struct FScriptMulticastDelegate                    OnNavigationGenerationFinishedDelegate;                   // 0x0168(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData05[0x12C];                                     // 0x0178(0x012C) MISSED OFFSET
	EFNavigationSystemRunMode                          OperationMode;                                            // 0x02A4(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x243];                                     // 0x02A5(0x0243) MISSED OFFSET
	uint32_t                                           DynamicNavThreadNum;                                      // 0x04E8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x04EC(0x0004) MISSED OFFSET

	// Function Engine.NavigationSystem.UpdateDynamicGenerateTargetNav
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_UpdateDynamicGenerateTargetNav(unsigned char IsAdd, const struct FDynamicGenerateTargetNavigation& GenerateTargetNav);// sub_5ECB0B0()

	// Function Engine.NavigationSystem.UnregisterNavigationInvoker
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_UnregisterNavigationInvoker(class AActor* Invoker);// sub_555E1E0()

	// Function Engine.NavigationSystem.SimpleMoveToLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SimpleMoveToLocation(class AController* Controller, const struct FVector& Goal);// sub_60E0720()

	// Function Engine.NavigationSystem.SimpleMoveToActor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SimpleMoveToActor(class AController* Controller, class AActor* Goal);// sub_3F4CBF0()

	// Function Engine.NavigationSystem.SetMaxSimultaneousTileGenerationJobsCount
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetMaxSimultaneousTileGenerationJobsCount(int MaxNumberOfJobs);// sub_44A320()

	// Function Engine.NavigationSystem.SetGeometryGatheringMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetGeometryGatheringMode(ENavDataGatheringModeConfig NewMode);// sub_1228E70()

	// Function Engine.NavigationSystem.ResetMaxSimultaneousTileGenerationJobsCount
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ResetMaxSimultaneousTileGenerationJobsCount();// sub_714EB0()

	// Function Engine.NavigationSystem.RegisterNavigationInvoker
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RegisterNavigationInvoker(class AActor* Invoker, float TileGenerationRadius, float TileRemovalRadius);// sub_6175820()

	// Function Engine.NavigationSystem.ProjectPointToNavigation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_ProjectPointToNavigation(class UObject* WorldContext, const struct FVector& Point, class ANavigationData* NavData, class UNavigationQueryFilter* FilterClass, const struct FVector& QueryExtent);// sub_85BA90()

	// Function Engine.NavigationSystem.OnNavigationBoundsUpdated
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnNavigationBoundsUpdated(class ANavMeshBoundsVolume* NavVolume);// sub_44C2A80()

	// Function Engine.NavigationSystem.NavigationRaycast
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_NavigationRaycast(class UObject* WorldContext, const struct FVector& RayStart, const struct FVector& RayEnd, class UNavigationQueryFilter* FilterClass, class AController* Querier, struct FVector* HitLocation);// sub_6087000()

	// Function Engine.NavigationSystem.K2_ProjectPointToNavigation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_ProjectPointToNavigation(class UObject* WorldContext, const struct FVector& Point, class ANavigationData* NavData, class UNavigationQueryFilter* FilterClass, const struct FVector& QueryExtent, struct FVector* ProjectedLocation);// sub_13D0B90()

	// Function Engine.NavigationSystem.K2_GetRandomReachablePointInRadius
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_GetRandomReachablePointInRadius(class UObject* WorldContext, const struct FVector& Origin, float Radius, class ANavigationData* NavData, class UNavigationQueryFilter* FilterClass, struct FVector* RandomLocation);// sub_4186F0()

	// Function Engine.NavigationSystem.K2_GetRandomPointInNavigableRadius
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_K2_GetRandomPointInNavigableRadius(class UObject* WorldContext, const struct FVector& Origin, float Radius, class ANavigationData* NavData, class UNavigationQueryFilter* FilterClass, struct FVector* RandomLocation);// sub_4EB6DD0()

	// Function Engine.NavigationSystem.IsNavigationBeingBuiltOrLocked
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsNavigationBeingBuiltOrLocked(class UObject* WorldContext);// sub_55E6210()

	// Function Engine.NavigationSystem.IsNavigationBeingBuilt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsNavigationBeingBuilt(class UObject* WorldContext);// sub_421BD30()

	// Function Engine.NavigationSystem.GetRandomReachablePointInRadius
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetRandomReachablePointInRadius(class UObject* WorldContext, const struct FVector& Origin, float Radius, class ANavigationData* NavData, class UNavigationQueryFilter* FilterClass);// sub_18128F0()

	// Function Engine.NavigationSystem.GetRandomPointInNavigableRadius
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetRandomPointInNavigableRadius(class UObject* WorldContext, const struct FVector& Origin, float Radius, class ANavigationData* NavData, class UNavigationQueryFilter* FilterClass);// sub_229BBE0()

	// Function Engine.NavigationSystem.GetPathLength
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TEnumAsByte<ENavigationQueryResult> STATIC_GetPathLength(class UObject* WorldContext, const struct FVector& PathStart, const struct FVector& PathEnd, class ANavigationData* NavData, class UNavigationQueryFilter* FilterClass, float* PathLength);// sub_1CEC2D0()

	// Function Engine.NavigationSystem.GetPathCost
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TEnumAsByte<ENavigationQueryResult> STATIC_GetPathCost(class UObject* WorldContext, const struct FVector& PathStart, const struct FVector& PathEnd, class ANavigationData* NavData, class UNavigationQueryFilter* FilterClass, float* PathCost);// sub_4175CC0()

	// Function Engine.NavigationSystem.GetNavigationSystem
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UNavigationSystem* STATIC_GetNavigationSystem(class UObject* WorldContext);// sub_1A95470()

	// Function Engine.NavigationSystem.FindPathToLocationSynchronously
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UNavigationPath* STATIC_FindPathToLocationSynchronously(class UObject* WorldContext, const struct FVector& PathStart, const struct FVector& PathEnd, class AActor* PathfindingContext, class UNavigationQueryFilter* FilterClass);// sub_1CD4A10()

	// Function Engine.NavigationSystem.FindPathToActorSynchronously
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UNavigationPath* STATIC_FindPathToActorSynchronously(class UObject* WorldContext, const struct FVector& PathStart, class AActor* GoalActor, float TetherDistance, class AActor* PathfindingContext, class UNavigationQueryFilter* FilterClass);// sub_59E51C0()


}


//Class Engine.StereoLayerFunctionLibrary
//0x0000 (0x0040 - 0x0040)
class UStereoLayerFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.StereoLayerFunctionLibrary.ShowSplashScreen
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ShowSplashScreen();// sub_4E7D60()

	// Function Engine.StereoLayerFunctionLibrary.SetSplashScreen
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetSplashScreen(class UTexture* Texture, const struct FVector2D& Scale, const struct FVector2D& Offset, unsigned char bShowLoadingMovie, unsigned char bShowOnSet);// sub_13EA370()

	// Function Engine.StereoLayerFunctionLibrary.HideSplashScreen
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_HideSplashScreen();// sub_421BD10()

	// Function Engine.StereoLayerFunctionLibrary.EnableAutoLoadingSplashScreen
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_EnableAutoLoadingSplashScreen(unsigned char InAutoShowEnabled);// sub_11C2D50()


}


//Class Engine.EngineSubsystem
//0x0000 (0x0048 - 0x0048)
class UEngineSubsystem : public UDynamicSubsystem
{
public:

}


//Class Engine.Player
//0x0020 (0x0060 - 0x0040)
class UPlayer : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0040(0x0010) MISSED OFFSET
	int                                                CurrentNetSpeed;                                          // 0x0050(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                ConfiguredInternetSpeed;                                  // 0x0054(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	int                                                ConfiguredLanSpeed;                                       // 0x0058(0x0004) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

}


//Class Engine.LocalPlayer
//0x0248 (0x02A8 - 0x0060)
class ULocalPlayer : public UPlayer
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0060(0x0020) MISSED OFFSET
	class APlayerController*                           PendingLevelPlayerControllerClass;                        // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x38];                                      // 0x0088(0x0038) MISSED OFFSET
	unsigned char                                      bSentSplitJoin : 1;                                       // 0x00C0(0x0001) (Edit, Transient, EditConst)
	unsigned char                                      UnknownData02[0x1E7];                                     // 0x00C1(0x01E7) MISSED OFFSET

}


//Class Engine.LocalPlayerSubsystem
//0x0000 (0x0048 - 0x0048)
class ULocalPlayerSubsystem : public USubsystem
{
public:

}


//Class Engine.SubsystemBlueprintLibrary
//0x0000 (0x0040 - 0x0040)
class USubsystemBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.SubsystemBlueprintLibrary.GetWorldSubsystem
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UWorldSubsystem* STATIC_GetWorldSubsystem(class UObject* ContextObject, class UWorldSubsystem* Class);// sub_3B21900()

	// Function Engine.SubsystemBlueprintLibrary.GetLocalPlayerSubSystemFromPlayerController
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class ULocalPlayerSubsystem* STATIC_GetLocalPlayerSubSystemFromPlayerController(class APlayerController* PlayerController, class ULocalPlayerSubsystem* Class);// sub_3E7F0C0()

	// Function Engine.SubsystemBlueprintLibrary.GetLocalPlayerSubsystem
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class ULocalPlayerSubsystem* STATIC_GetLocalPlayerSubsystem(class UObject* ContextObject, class ULocalPlayerSubsystem* Class);// sub_1770220()

	// Function Engine.SubsystemBlueprintLibrary.GetGameInstanceSubsystem
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UGameInstanceSubsystem* STATIC_GetGameInstanceSubsystem(class UObject* ContextObject, class UGameInstanceSubsystem* Class);// sub_1E11410()

	// Function Engine.SubsystemBlueprintLibrary.GetEngineSubsystem
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UEngineSubsystem* STATIC_GetEngineSubsystem(class UEngineSubsystem* Class);// sub_218E70()


}


//Class Engine.VisualLoggerKismetLibrary
//0x0000 (0x0040 - 0x0040)
class UVisualLoggerKismetLibrary : public UBlueprintFunctionLibrary
{
public:

	// Function Engine.VisualLoggerKismetLibrary.LogText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_LogText(class UObject* WorldContextObject, const struct FString& Text, const struct FName& LogCategory);// sub_51F5810()

	// Function Engine.VisualLoggerKismetLibrary.LogLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_LogLocation(class UObject* WorldContextObject, const struct FVector& Location, const struct FString& Text, const struct FLinearColor& ObjectColor, float Radius, const struct FName& LogCategory);// sub_6014E40()

	// Function Engine.VisualLoggerKismetLibrary.LogBox
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_LogBox(class UObject* WorldContextObject, const struct FBox& BoxShape, const struct FString& Text, const struct FLinearColor& ObjectColor, const struct FName& LogCategory);// sub_5C2F600()


}


//Class Engine.BlueprintGeneratedClass
//0x0108 (0x0400 - 0x02F8)
class UBlueprintGeneratedClass : public UClass
{
public:
	int                                                NumReplicatedProperties;                                  // 0x02F8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02FC(0x0004) MISSED OFFSET
	TArray<class UDynamicBlueprintBinding*>            DynamicBindingObjects;                                    // 0x0300(0x0010) (ZeroConstructor)
	TArray<class UActorComponent*>                     ComponentTemplates;                                       // 0x0310(0x0010) (ExportObject, ZeroConstructor)
	TArray<class UTimelineTemplate*>                   Timelines;                                                // 0x0320(0x0010) (ZeroConstructor)
	class USimpleConstructionScript*                   SimpleConstructionScript;                                 // 0x0330(0x0008) (ZeroConstructor, IsPlainOldData)
	class UInheritableComponentHandler*                InheritableComponentHandler;                              // 0x0338(0x0008) (ZeroConstructor, IsPlainOldData)
	class UStructProperty*                             UberGraphFramePointerProperty;                            // 0x0340(0x0008) (ZeroConstructor, IsPlainOldData)
	class UFunction*                                   UberGraphFunction;                                        // 0x0348(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FEventGraphFastCallPair>             FastCallPairs;                                            // 0x0350(0x0010) (ZeroConstructor, Deprecated)
	unsigned char                                      bHasInstrumentation : 1;                                  // 0x0360(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0361(0x0007) MISSED OFFSET
	TMap<struct FName, struct FBlueprintCookedComponentInstancingData> CookedComponentInstancingData;                            // 0x0368(0x0050) (ZeroConstructor)
	unsigned char                                      bHasNativizedParent : 1;                                  // 0x03B8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x47];                                      // 0x03B9(0x0047) MISSED OFFSET

}


//Class Engine.PoseWatch
//0x0010 (0x0050 - 0x0040)
class UPoseWatch : public UObject
{
public:
	class UEdGraphNode*                                Node;                                                     // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FColor                                      PoseWatchColour;                                          // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

}


//Class Engine.AnimBlueprintGeneratedClass
//0x0070 (0x0470 - 0x0400)
class UAnimBlueprintGeneratedClass : public UBlueprintGeneratedClass
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0400(0x0008) MISSED OFFSET
	TArray<struct FBakedAnimationStateMachine>         BakedStateMachines;                                       // 0x0408(0x0010) (ZeroConstructor)
	class USkeleton*                                   TargetSkeleton;                                           // 0x0418(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FAnimNotifyEvent>                    AnimNotifies;                                             // 0x0420(0x0010) (ZeroConstructor)
	int                                                RootAnimNodeIndex;                                        // 0x0430(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0434(0x0004) MISSED OFFSET
	TArray<int>                                        OrderedSavedPoseIndices;                                  // 0x0438(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0448(0x0018) MISSED OFFSET
	TArray<struct FName>                               SyncGroupNames;                                           // 0x0460(0x0010) (ZeroConstructor)

}


//Class Engine.BodySetup
//0x0380 (0x03C0 - 0x0040)
class UBodySetup : public UObject
{
public:
	struct FKAggregateGeom                             AggGeom;                                                  // 0x0040(0x0048) (Edit)
	struct FName                                       BoneName;                                                 // 0x0088(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	TEnumAsByte<EPhysicsType>                          PhysicsType;                                              // 0x0090(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0091(0x0003) MISSED OFFSET
	unsigned char                                      bAlwaysFullAnimWeight : 1;                                // 0x0094(0x0001) (Deprecated)
	unsigned char                                      bConsiderForBounds : 1;                                   // 0x0094(0x0001) (Edit)
	unsigned char                                      bMeshCollideAll : 1;                                      // 0x0094(0x0001) (Transient)
	unsigned char                                      bDoubleSidedGeometry : 1;                                 // 0x0094(0x0001) (Edit)
	unsigned char                                      bGenerateNonMirroredCollision : 1;                        // 0x0094(0x0001)
	unsigned char                                      bSharedCookedData : 1;                                    // 0x0094(0x0001)
	unsigned char                                      bGenerateMirroredCollision : 1;                           // 0x0094(0x0001)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0095(0x0003) MISSED OFFSET
	class UPhysicalMaterial*                           PhysMaterial;                                             // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBodyCollisionResponse>                CollisionReponse;                                         // 0x00A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ECollisionTraceFlag>                   CollisionTraceFlag;                                       // 0x00A1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xE];                                       // 0x00A2(0x000E) MISSED OFFSET
	struct FBodyInstance                               DefaultInstance;                                          // 0x00B0(0x0230) (Edit)
	struct FWalkableSlopeOverride                      WalkableSlopeOverride;                                    // 0x02E0(0x0010) (Edit, IsPlainOldData)
	float                                              MinContactOffset;                                         // 0x02F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BuildScale;                                               // 0x02F4(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	struct FVector                                     BuildScale3D;                                             // 0x02F8(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xBC];                                      // 0x0304(0x00BC) MISSED OFFSET

}


//Class Engine.BodySetup2D
//0x0030 (0x03F0 - 0x03C0)
class UBodySetup2D : public UBodySetup
{
public:
	struct FAggregateGeometry2D                        AggGeom2D;                                                // 0x03C0(0x0030)

}


//Class Engine.PhysicsAsset
//0x00E0 (0x0120 - 0x0040)
class UPhysicsAsset : public UObject
{
public:
	TArray<int>                                        BoundsBodies;                                             // 0x0040(0x0010) (ZeroConstructor)
	TArray<class USkeletalBodySetup*>                  SkeletalBodySetups;                                       // 0x0050(0x0010) (ExportObject, ZeroConstructor)
	TArray<class UPhysicsConstraintTemplate*>          ConstraintSetup;                                          // 0x0060(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData00[0xA0];                                      // 0x0070(0x00A0) MISSED OFFSET
	TArray<class UBodySetup*>                          BodySetup;                                                // 0x0110(0x0010) (ExportObject, ZeroConstructor, Deprecated)

}


//Class Engine.SkeletalBodySetup
//0x0010 (0x03D0 - 0x03C0)
class USkeletalBodySetup : public UBodySetup
{
public:
	TArray<struct FPhysicalAnimationProfile>           PhysicalAnimationData;                                    // 0x03C0(0x0010) (ZeroConstructor)

}


//Class Engine.BoneMaskFilter
//0x0010 (0x0050 - 0x0040)
class UBoneMaskFilter : public UObject
{
public:
	TArray<struct FInputBlendPose>                     BlendPoses;                                               // 0x0040(0x0010) (Edit, ZeroConstructor)

}


//Class Engine.BookMark
//0x0028 (0x0068 - 0x0040)
class UBookMark : public UObject
{
public:
	struct FVector                                     Location;                                                 // 0x0040(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x004C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             HiddenLevels;                                             // 0x0058(0x0010) (Edit, ZeroConstructor)

}


//Class Engine.BookMark2D
//0x0010 (0x0050 - 0x0040)
class UBookMark2D : public UObject
{
public:
	float                                              Zoom2D;                                                   // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FIntPoint                                   Location;                                                 // 0x0044(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

}


//Class Engine.Breakpoint
//0x0018 (0x0058 - 0x0040)
class UBreakpoint : public UObject
{
public:
	unsigned char                                      bEnabled : 1;                                             // 0x0040(0x0001) (Transient)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	class UEdGraphNode*                                Node;                                                     // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bStepOnce : 1;                                            // 0x0050(0x0001)
	unsigned char                                      bStepOnce_WasPreviouslyDisabled : 1;                      // 0x0050(0x0001)
	unsigned char                                      bStepOnce_RemoveAfterHit : 1;                             // 0x0050(0x0001)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0051(0x0007) MISSED OFFSET

}


//Class Engine.BrushBuilder
//0x0058 (0x0098 - 0x0040)
class UBrushBuilder : public UObject
{
public:
	struct FString                                     BitmapFilename;                                           // 0x0040(0x0010) (ZeroConstructor)
	struct FString                                     Tooltip;                                                  // 0x0050(0x0010) (ZeroConstructor)
	unsigned char                                      NotifyBadParams : 1;                                      // 0x0060(0x0001) (Transient)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	TArray<struct FVector>                             Vertices;                                                 // 0x0068(0x0010) (ZeroConstructor)
	TArray<struct FBuilderPoly>                        Polys;                                                    // 0x0078(0x0010) (ZeroConstructor)
	struct FName                                       Layer;                                                    // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      MergeCoplanars : 1;                                       // 0x0090(0x0001)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0091(0x0007) MISSED OFFSET

}


//Class Engine.ButtonStyleAsset
//0x02A8 (0x02E8 - 0x0040)
class UButtonStyleAsset : public UObject
{
public:
	struct FButtonStyle                                ButtonStyle;                                              // 0x0040(0x02A8) (Edit)

}


//Class Engine.CameraAnim
//0x05B0 (0x05F0 - 0x0040)
class UCameraAnim : public UObject
{
public:
	class UInterpGroup*                                CameraInterpGroup;                                        // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              AnimLength;                                               // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FBox                                        BoundingBox;                                              // 0x004C(0x001C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRelativeToInitialTransform : 1;                          // 0x0068(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bRelativeToInitialFOV : 1;                                // 0x0068(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	float                                              BaseFOV;                                                  // 0x006C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FPostProcessSettings                        BasePostProcessSettings;                                  // 0x0070(0x0570)
	float                                              BasePostProcessBlendWeight;                               // 0x05E0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x05E4(0x000C) MISSED OFFSET

}


//Class Engine.CameraAnimInst
//0x00F0 (0x0130 - 0x0040)
class UCameraAnimInst : public UObject
{
public:
	class UCameraAnim*                                 CamAnim;                                                  // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	class UInterpGroupInst*                            InterpGroupInst;                                          // 0x0048(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0050(0x0018) MISSED OFFSET
	float                                              PlayRate;                                                 // 0x0068(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x006C(0x0014) MISSED OFFSET
	class UInterpTrackMove*                            MoveTrack;                                                // 0x0080(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UInterpTrackInstMove*                        MoveInst;                                                 // 0x0088(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<ECameraAnimPlaySpace>                  PlaySpace;                                                // 0x0090(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x9F];                                      // 0x0091(0x009F) MISSED OFFSET

	// Function Engine.CameraAnimInst.Stop
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Stop(unsigned char bImmediate);// sub_4DEE240()

	// Function Engine.CameraAnimInst.SetScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetScale(float NewDuration);// sub_12748A0()

	// Function Engine.CameraAnimInst.SetDuration
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDuration(float NewDuration);// sub_85BC60()


}


//Class Engine.CameraModifier
//0x0020 (0x0060 - 0x0040)
class UCameraModifier : public UObject
{
public:
	unsigned char                                      bDebug : 1;                                               // 0x0040(0x0001) (Edit)
	unsigned char                                      bExclusive : 1;                                           // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	unsigned char                                      Priority;                                                 // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	class APlayerCameraManager*                        CameraOwner;                                              // 0x0048(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              AlphaInTime;                                              // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AlphaOutTime;                                             // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ALPHA;                                                    // 0x0058(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

	// Function Engine.CameraModifier.IsDisabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsDisabled();// sub_1A2F070()

	// Function Engine.CameraModifier.GetViewTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class AActor* STATIC_GetViewTarget();// sub_45855A0()

	// Function Engine.CameraModifier.EnableModifier
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_EnableModifier();// sub_11EACF0()

	// Function Engine.CameraModifier.DisableModifier
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DisableModifier(unsigned char bImmediate);// sub_1E5ECB0()

	// Function Engine.CameraModifier.BlueprintModifyPostProcess
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BlueprintModifyPostProcess(float DeltaTime, float* PostProcessBlendWeight, struct FPostProcessSettings* PostProcessSettings);// sub_5C67A0()

	// Function Engine.CameraModifier.BlueprintModifyCamera
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BlueprintModifyCamera(float DeltaTime, const struct FVector& ViewLocation, const struct FRotator& ViewRotation, float FOV, struct FVector* NewViewLocation, struct FRotator* NewViewRotation, float* NewFOV);// sub_5C67A0()


}


//Class Engine.CameraModifier_CameraShake
//0x0018 (0x0078 - 0x0060)
class UCameraModifier_CameraShake : public UCameraModifier
{
public:
	TArray<class UCameraShake*>                        ActiveShakes;                                             // 0x0060(0x0010) (ZeroConstructor)
	float                                              SplitScreenShakeScale;                                    // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

}


//Class Engine.Canvas
//0x02A0 (0x02E0 - 0x0040)
class UCanvas : public UObject
{
public:
	float                                              OrgX;                                                     // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              OrgY;                                                     // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ClipX;                                                    // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ClipY;                                                    // 0x004C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FColor                                      DrawColor;                                                // 0x0050(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bCenterX : 1;                                             // 0x0054(0x0001)
	unsigned char                                      bCenterY : 1;                                             // 0x0054(0x0001)
	unsigned char                                      bNoSmooth : 1;                                            // 0x0054(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	int                                                SizeX;                                                    // 0x0058(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                SizeY;                                                    // 0x005C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FPlane                                      ColorModulate;                                            // 0x0060(0x0010) (ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  DefaultTexture;                                           // 0x0070(0x0008) (ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  GradientTexture0;                                         // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData)
	class UReporterGraph*                              ReporterGraph;                                            // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x258];                                     // 0x0088(0x0258) MISSED OFFSET

	// Function Engine.Canvas.K2_TextSize
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_K2_TextSize(class UFont* RenderFont, const struct FString& RenderText, const struct FVector2D& Scale);// sub_489B740()

	// Function Engine.Canvas.K2_StrLen
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector2D STATIC_K2_StrLen(class UFont* RenderFont, const struct FString& RenderText);// sub_463050()

	// Function Engine.Canvas.K2_Project
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_K2_Project(const struct FVector& WorldLocation);// sub_1D05910()

	// Function Engine.Canvas.K2_DrawTriangle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_DrawTriangle(class UTexture* RenderTexture, TArray<struct FCanvasUVTri> Triangles);// sub_4E649E0()

	// Function Engine.Canvas.K2_DrawTexture
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_DrawTexture(class UTexture* RenderTexture, const struct FVector2D& ScreenPosition, const struct FVector2D& ScreenSize, const struct FVector2D& CoordinatePosition, const struct FVector2D& CoordinateSize, const struct FLinearColor& RenderColor, TEnumAsByte<EBlendMode> BlendMode, float Rotation, const struct FVector2D& PivotPoint);// sub_3E21E0()

	// Function Engine.Canvas.K2_DrawText
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_DrawText(class UFont* RenderFont, const struct FString& RenderText, const struct FVector2D& ScreenPosition, const struct FLinearColor& RenderColor, float Kerning, const struct FLinearColor& ShadowColor, const struct FVector2D& ShadowOffset, unsigned char bCentreX, unsigned char bCentreY, unsigned char bOutlined, const struct FLinearColor& OutlineColor);// sub_1EC5B70()

	// Function Engine.Canvas.K2_DrawPolygon
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_DrawPolygon(class UTexture* RenderTexture, const struct FVector2D& ScreenPosition, const struct FVector2D& Radius, int NumberOfSides, const struct FLinearColor& RenderColor);// sub_16E8D20()

	// Function Engine.Canvas.K2_DrawMaterialTriangle
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_DrawMaterialTriangle(class UMaterialInterface* RenderMaterial, TArray<struct FCanvasUVTri> Triangles);// sub_3D6ACD0()

	// Function Engine.Canvas.K2_DrawMaterial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_DrawMaterial(class UMaterialInterface* RenderMaterial, const struct FVector2D& ScreenPosition, const struct FVector2D& ScreenSize, const struct FVector2D& CoordinatePosition, const struct FVector2D& CoordinateSize, float Rotation, const struct FVector2D& PivotPoint);// sub_5EFB30()

	// Function Engine.Canvas.K2_DrawLine
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_DrawLine(const struct FVector2D& ScreenPositionA, const struct FVector2D& ScreenPositionB, float Thickness, const struct FLinearColor& RenderColor);// sub_615C220()

	// Function Engine.Canvas.K2_DrawBox
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_DrawBox(const struct FVector2D& ScreenPosition, const struct FVector2D& ScreenSize, float Thickness);// sub_4175EE0()

	// Function Engine.Canvas.K2_DrawBorder
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_DrawBorder(class UTexture* BorderTexture, class UTexture* BackgroundTexture, class UTexture* LeftBorderTexture, class UTexture* RightBorderTexture, class UTexture* TopBorderTexture, class UTexture* BottomBorderTexture, const struct FVector2D& ScreenPosition, const struct FVector2D& ScreenSize, const struct FVector2D& CoordinatePosition, const struct FVector2D& CoordinateSize, const struct FLinearColor& RenderColor, const struct FVector2D& BorderScale, const struct FVector2D& BackgroundScale, float Rotation, const struct FVector2D& PivotPoint, const struct FVector2D& CornerSize);// sub_3D21EB0()

	// Function Engine.Canvas.K2_Deproject
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_Deproject(const struct FVector2D& ScreenPosition, struct FVector* WorldOrigin, struct FVector* WorldDirection);// sub_5242660()


}


//Class Engine.Channel
//0x0040 (0x0080 - 0x0040)
class UChannel : public UObject
{
public:
	class UNetConnection*                              Connection;                                               // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x38];                                      // 0x0048(0x0038) MISSED OFFSET

}


//Class Engine.ActorChannel
//0x02B0 (0x0330 - 0x0080)
class UActorChannel : public UChannel
{
public:
	class AActor*                                      Actor;                                                    // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2A8];                                     // 0x0088(0x02A8) MISSED OFFSET

}


//Class Engine.DemoActorChannel
//0x0020 (0x0350 - 0x0330)
class UDemoActorChannel : public UActorChannel
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0330(0x0020) MISSED OFFSET

}


//Class Engine.ControlChannel
//0x0018 (0x0098 - 0x0080)
class UControlChannel : public UChannel
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0080(0x0018) MISSED OFFSET

}


//Class Engine.VoiceChannel
//0x0010 (0x0090 - 0x0080)
class UVoiceChannel : public UChannel
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0080(0x0010) MISSED OFFSET

}


//Class Engine.CheatManager
//0x0050 (0x0090 - 0x0040)
class UCheatManager : public UObject
{
public:
	class ADebugCameraController*                      DebugCameraControllerRef;                                 // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	class ADebugCameraController*                      DebugCameraControllerClass;                               // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x40];                                      // 0x0050(0x0040) MISSED OFFSET

	// Function Engine.CheatManager.Walk
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Walk();// sub_11EACF0()

	// Function Engine.CheatManager.ViewSelf
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ViewSelf();// sub_19FC5A0()

	// Function Engine.CheatManager.ViewPlayer
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ViewPlayer(const struct FString& S);// sub_5F32D90()

	// Function Engine.CheatManager.ViewClass
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ViewClass(class AActor* DesiredClass);// sub_1C66750()

	// Function Engine.CheatManager.ViewActor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ViewActor(const struct FName& ActorName);// sub_4D21620()

	// Function Engine.CheatManager.ToggleDebugCamera
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ToggleDebugCamera();// sub_15E5C50()

	// Function Engine.CheatManager.ToggleAILogging
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ToggleAILogging();// sub_3F38CE0()

	// Function Engine.CheatManager.TestCollisionDistance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_TestCollisionDistance();// sub_555E1C0()

	// Function Engine.CheatManager.Teleport
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Teleport();// sub_1A84DF0()

	// Function Engine.CheatManager.Summon
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Summon(const struct FString& ClassName);// sub_4188F0()

	// Function Engine.CheatManager.StreamLevelOut
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StreamLevelOut(const struct FName& PackageName);// sub_8EAA0()

	// Function Engine.CheatManager.StreamLevelIn
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_StreamLevelIn(const struct FName& PackageName);// sub_1EF94A0()

	// Function Engine.CheatManager.Slomo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Slomo(float NewTimeDilation);// sub_48B1800()

	// Function Engine.CheatManager.SetWorldOrigin
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetWorldOrigin();// sub_56E48A0()

	// Function Engine.CheatManager.SetNavDrawDistance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetNavDrawDistance(float DrawDistance);// sub_22DE7F0()

	// Function Engine.CheatManager.SetMouseSensitivityToDefault
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetMouseSensitivityToDefault();// sub_4E7D40()

	// Function Engine.CheatManager.ServerToggleAILogging
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ServerToggleAILogging();// sub_7D5B10()

	// Function Engine.CheatManager.ReceiveInitCheatManager
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveInitCheatManager();// sub_5C67A0()

	// Function Engine.CheatManager.ReceiveEndPlay
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveEndPlay();// sub_5C67A0()

	// Function Engine.CheatManager.RebuildNavigation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RebuildNavigation();// sub_4B5ACB0()

	// Function Engine.CheatManager.PlayersOnly
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_PlayersOnly();// sub_55BFE50()

	// Function Engine.CheatManager.OnlyLoadLevel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_OnlyLoadLevel(const struct FName& PackageName);// sub_5D66350()

	// Function Engine.CheatManager.LogLoc
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_LogLoc();// sub_520EA60()

	// Function Engine.CheatManager.InvertMouse
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_InvertMouse();// sub_4EF8610()

	// Function Engine.CheatManager.God
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_God();// sub_5DF5DA0()

	// Function Engine.CheatManager.Ghost
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Ghost();// sub_4169EE0()

	// Function Engine.CheatManager.FreezeFrame
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_FreezeFrame(float Delay);// sub_4760A40()

	// Function Engine.CheatManager.Fly
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Fly();// sub_85F520()

	// Function Engine.CheatManager.FlushLog
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_FlushLog();// sub_4DB9040()

	// Function Engine.CheatManager.EnableDebugCamera
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_EnableDebugCamera();// sub_4F87C60()

	// Function Engine.CheatManager.DumpVoiceMutingState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DumpVoiceMutingState();// sub_2401EA0()

	// Function Engine.CheatManager.DumpPartyState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DumpPartyState();// sub_5B7400()

	// Function Engine.CheatManager.DumpOnlineSessionState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DumpOnlineSessionState();// sub_1117960()

	// Function Engine.CheatManager.DumpChatState
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DumpChatState();// sub_526AAB0()

	// Function Engine.CheatManager.DisableDebugCamera
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DisableDebugCamera();// sub_894BC0()

	// Function Engine.CheatManager.DestroyTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DestroyTarget();// sub_4DB9020()

	// Function Engine.CheatManager.DestroyPawns
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DestroyPawns(class APawn* aClass);// sub_1D81E10()

	// Function Engine.CheatManager.DestroyAllPawnsExceptTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DestroyAllPawnsExceptTarget();// sub_5B16E20()

	// Function Engine.CheatManager.DestroyAll
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DestroyAll(class AActor* aClass);// sub_3D84850()

	// Function Engine.CheatManager.DebugCapsuleSweepSize
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DebugCapsuleSweepSize(float HalfHeight, float Radius);// sub_3CC3B40()

	// Function Engine.CheatManager.DebugCapsuleSweepPawn
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DebugCapsuleSweepPawn();// sub_C8F390()

	// Function Engine.CheatManager.DebugCapsuleSweepComplex
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DebugCapsuleSweepComplex(unsigned char bTraceComplex);// sub_AB4B0()

	// Function Engine.CheatManager.DebugCapsuleSweepClear
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DebugCapsuleSweepClear();// sub_55AA7E0()

	// Function Engine.CheatManager.DebugCapsuleSweepChannel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DebugCapsuleSweepChannel(TEnumAsByte<ECollisionChannel> Channel);// sub_1FFDA0()

	// Function Engine.CheatManager.DebugCapsuleSweepCapture
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DebugCapsuleSweepCapture();// sub_477C9E0()

	// Function Engine.CheatManager.DebugCapsuleSweep
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DebugCapsuleSweep();// sub_1132CA0()

	// Function Engine.CheatManager.DamageTarget
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_DamageTarget(float DamageAmount);// sub_45EC9E0()

	// Function Engine.CheatManager.CheatScript
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_CheatScript(const struct FString& ScriptName);// sub_199BDC0()

	// Function Engine.CheatManager.ChangeSize
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ChangeSize(float F);// sub_4295C80()

	// Function Engine.CheatManager.BugItStringCreator
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BugItStringCreator(const struct FVector& ViewLocation, const struct FRotator& ViewRotation, struct FString* GoString, struct FString* LocString);// sub_45EC820()

	// Function Engine.CheatManager.BugItGo
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BugItGo(float X, float Y, float Z, float Pitch, float Yaw, float Roll);// sub_5F4A970()

	// Function Engine.CheatManager.BugIt
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_BugIt(const struct FString& ScreenShotDescription);// sub_55BFDA0()


}


//Class Engine.CheckBoxStyleAsset
//0x05E0 (0x0620 - 0x0040)
class UCheckBoxStyleAsset : public UObject
{
public:
	struct FCheckBoxStyle                              CheckBoxStyle;                                            // 0x0040(0x05E0) (Edit)

}


//Class Engine.Commandlet
//0x0058 (0x0098 - 0x0040)
class UCommandlet : public UObject
{
public:
	struct FString                                     HelpDescription;                                          // 0x0040(0x0010) (ZeroConstructor)
	struct FString                                     HelpUsage;                                                // 0x0050(0x0010) (ZeroConstructor)
	struct FString                                     HelpWebLink;                                              // 0x0060(0x0010) (ZeroConstructor)
	TArray<struct FString>                             HelpParamNames;                                           // 0x0070(0x0010) (ZeroConstructor)
	TArray<struct FString>                             HelpParamDescriptions;                                    // 0x0080(0x0010) (ZeroConstructor)
	unsigned char                                      IsServer : 1;                                             // 0x0090(0x0001)
	unsigned char                                      IsClient : 1;                                             // 0x0090(0x0001)
	unsigned char                                      IsEditor : 1;                                             // 0x0090(0x0001)
	unsigned char                                      LogToConsole : 1;                                         // 0x0090(0x0001)
	unsigned char                                      ShowErrorCount : 1;                                       // 0x0090(0x0001)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0091(0x0007) MISSED OFFSET

}


//Class Engine.PluginCommandlet
//0x0020 (0x00B8 - 0x0098)
class UPluginCommandlet : public UCommandlet
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0098(0x0020) MISSED OFFSET

}


//Class Engine.SmokeTestCommandlet
//0x0000 (0x0098 - 0x0098)
class USmokeTestCommandlet : public UCommandlet
{
public:

}


//Class Engine.Console
//0x0108 (0x0148 - 0x0040)
class UConsole : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0040(0x0010) MISSED OFFSET
	class ULocalPlayer*                                ConsoleTargetPlayer;                                      // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  DefaultTexture_Black;                                     // 0x0058(0x0008) (ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  DefaultTexture_White;                                     // 0x0060(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0068(0x0018) MISSED OFFSET
	TArray<struct FString>                             HistoryBuffer;                                            // 0x0080(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData02[0xB8];                                      // 0x0090(0x00B8) MISSED OFFSET

}


//Class Engine.ControlRigInterface
//0x0000 (0x0040 - 0x0040)
class UControlRigInterface : public UInterface
{
public:

}


//Class Engine.CurveLinearColor
//0x01C0 (0x0208 - 0x0048)
class UCurveLinearColor : public UCurveBase
{
public:
	struct FRichCurve                                  FloatCurves[0x4];                                         // 0x0048(0x0070)

	// Function Engine.CurveLinearColor.GetLinearColorValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FLinearColor STATIC_GetLinearColorValue(float InTime);// sub_1909270()


}


//Class Engine.CurveVector
//0x0150 (0x0198 - 0x0048)
class UCurveVector : public UCurveBase
{
public:
	struct FRichCurve                                  FloatCurves[0x3];                                         // 0x0048(0x0070)

	// Function Engine.CurveVector.GetVectorValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetVectorValue(float InTime);// sub_212F7E0()


}


//Class Engine.CurveEdPresetCurve
//0x0000 (0x0040 - 0x0040)
class UCurveEdPresetCurve : public UObject
{
public:

}


//Class Engine.CurveSourceInterface
//0x0000 (0x0040 - 0x0040)
class UCurveSourceInterface : public UInterface
{
public:

	// Function Engine.CurveSourceInterface.GetCurveValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetCurveValue(const struct FName& CurveName);// sub_DF3B90()

	// Function Engine.CurveSourceInterface.GetCurves
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetCurves(TArray<struct FNamedCurveValue>* OutValues);// sub_500A090()

	// Function Engine.CurveSourceInterface.GetBindingName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FName STATIC_GetBindingName();// sub_44AC690()


}


//Class Engine.CurveTable
//0x0058 (0x0098 - 0x0040)
class UCurveTable : public UObject
{
public:
	unsigned char                                      UnknownData00[0x58];                                      // 0x0040(0x0058) MISSED OFFSET

}


//Class Engine.PreviewMeshCollection
//0x0018 (0x0060 - 0x0048)
class UPreviewMeshCollection : public UDataAsset
{
public:
	class USkeleton*                                   Skeleton;                                                 // 0x0048(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	TArray<struct FPreviewMeshCollectionEntry>         SkeletalMeshes;                                           // 0x0050(0x0010) (Edit, ZeroConstructor)

}


//Class Engine.PrimaryAssetLabel
//0x0038 (0x0080 - 0x0048)
class UPrimaryAssetLabel : public UPrimaryDataAsset
{
public:
	struct FPrimaryAssetRules                          Rules;                                                    // 0x0048(0x0010) (Edit)
	unsigned char                                      bLabelAssetsInMyDirectory : 1;                            // 0x0058(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
	TArray<TAssetPtr<classUObject>>                    ExplicitAssets;                                           // 0x0060(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0070(0x0010) UNKNOWN PROPERTY: ArrayProperty Engine.PrimaryAssetLabel.ExplicitBlueprints

}


//Class Engine.TireType
//0x0008 (0x0050 - 0x0048)
class UTireType : public UDataAsset
{
public:
	float                                              FrictionScale;                                            // 0x0048(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x004C(0x0004) MISSED OFFSET

}


//Class Engine.DestructibleFractureSettings
//0x0090 (0x00D0 - 0x0040)
class UDestructibleFractureSettings : public UObject
{
public:
	int                                                CellSiteCount;                                            // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FFractureMaterial                           FractureMaterialDesc;                                     // 0x0044(0x0024) (Edit, Transient)
	int                                                RandomSeed;                                               // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	TArray<struct FVector>                             VoronoiSites;                                             // 0x0070(0x0010) (ZeroConstructor)
	int                                                OriginalSubmeshCount;                                     // 0x0080(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
	TArray<class UMaterialInterface*>                  Materials;                                                // 0x0088(0x0010) (ZeroConstructor)
	TArray<struct FDestructibleChunkParameters>        ChunkParameters;                                          // 0x0098(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x28];                                      // 0x00A8(0x0028) MISSED OFFSET

}


//Class Engine.AnimationSettings
//0x0038 (0x0088 - 0x0050)
class UAnimationSettings : public UDeveloperSettings
{
public:
	int                                                CompressCommandletVersion;                                // 0x0050(0x0004) (Edit, ZeroConstructor, Config, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	TArray<struct FString>                             KeyEndEffectorsMatchNameArray;                            // 0x0058(0x0010) (Edit, ZeroConstructor, Config)
	class UAnimCompress*                               DefaultCompressionAlgorithm;                              // 0x0068(0x0008) (Edit, ZeroConstructor, Config, NoClear, IsPlainOldData)
	TEnumAsByte<EAnimationCompressionFormat>           RotationCompressionFormat;                                // 0x0070(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	TEnumAsByte<EAnimationCompressionFormat>           TranslationCompressionFormat;                             // 0x0071(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0072(0x0002) MISSED OFFSET
	float                                              MaxCurveError;                                            // 0x0074(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              AlternativeCompressionThreshold;                          // 0x0078(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      ForceRecompression : 1;                                   // 0x007C(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x007D(0x0001)
	unsigned char                                      bOnlyCheckForMissingSkeletalMeshes : 1;                   // 0x007D(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03 : 8;                                        // 0x007E(0x0001)
	unsigned char                                      bForceBelowThreshold : 1;                                 // 0x007E(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData04 : 8;                                        // 0x007F(0x0001)
	unsigned char                                      bFirstRecompressUsingCurrentOrDefault : 1;                // 0x007F(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData05 : 8;                                        // 0x0080(0x0001)
	unsigned char                                      bRaiseMaxErrorToExisting : 1;                             // 0x0080(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData06 : 8;                                        // 0x0081(0x0001)
	unsigned char                                      bTryFixedBitwiseCompression : 1;                          // 0x0081(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData07 : 8;                                        // 0x0082(0x0001)
	unsigned char                                      bTryPerTrackBitwiseCompression : 1;                       // 0x0082(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData08 : 8;                                        // 0x0083(0x0001)
	unsigned char                                      bTryLinearKeyRemovalCompression : 1;                      // 0x0083(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData09 : 8;                                        // 0x0084(0x0001)
	unsigned char                                      bTryIntervalKeyRemoval : 1;                               // 0x0084(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData10 : 8;                                        // 0x0085(0x0001)
	unsigned char                                      bEnablePerformanceLog : 1;                                // 0x0085(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData11 : 8;                                        // 0x0086(0x0001)
	unsigned char                                      bStripAnimationDataOnDedicatedServer : 1;                 // 0x0086(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData12[0x1];                                       // 0x0087(0x0001) MISSED OFFSET

}


//Class Engine.AssetManagerSettings
//0x0068 (0x00B8 - 0x0050)
class UAssetManagerSettings : public UDeveloperSettings
{
public:
	TArray<struct FPrimaryAssetTypeInfo>               PrimaryAssetTypesToScan;                                  // 0x0050(0x0010) (Edit, ZeroConstructor, Config)
	TArray<struct FDirectoryPath>                      DirectoriesToExclude;                                     // 0x0060(0x0010) (Edit, ZeroConstructor, Config)
	TArray<struct FPrimaryAssetRulesOverride>          PrimaryAssetRules;                                        // 0x0070(0x0010) (Edit, ZeroConstructor, Config)
	unsigned char                                      bOnlyCookProductionAssets : 1;                            // 0x0080(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
	TArray<struct FAssetManagerRedirect>               PrimaryAssetIdRedirects;                                  // 0x0088(0x0010) (Edit, ZeroConstructor, Config)
	TArray<struct FAssetManagerRedirect>               PrimaryAssetTypeRedirects;                                // 0x0098(0x0010) (Edit, ZeroConstructor, Config)
	TArray<struct FAssetManagerRedirect>               AssetPathRedirects;                                       // 0x00A8(0x0010) (Edit, ZeroConstructor, Config)

}


//Class Engine.AudioSettings
//0x0078 (0x00C8 - 0x0050)
class UAudioSettings : public UDeveloperSettings
{
public:
	struct FStringAssetReference                       DefaultSoundClassName;                                    // 0x0050(0x0010) (Edit, ZeroConstructor, Config)
	struct FStringAssetReference                       DefaultSoundConcurrencyName;                              // 0x0060(0x0010) (Edit, ZeroConstructor, Config)
	struct FStringAssetReference                       DefaultBaseSoundMix;                                      // 0x0070(0x0010) (Edit, ZeroConstructor, Config)
	struct FStringAssetReference                       VoiPSoundClass;                                           // 0x0080(0x0010) (Edit, ZeroConstructor, Config)
	float                                              LowPassFilterResonance;                                   // 0x0090(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                MaximumConcurrentStreams;                                 // 0x0094(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	TArray<struct FAudioQualitySettings>               QualityLevels;                                            // 0x0098(0x0010) (Edit, ZeroConstructor, Config)
	unsigned char                                      bAllowVirtualizedSounds : 1;                              // 0x00A8(0x0001) (Edit, Config)
	unsigned char                                      bDisableMasterEQ : 1;                                     // 0x00A8(0x0001) (Edit, Config)
	unsigned char                                      bDisableMasterReverb : 1;                                 // 0x00A8(0x0001) (Edit, Config)
	unsigned char                                      bAllowCenterChannel3DPanning : 1;                         // 0x00A8(0x0001) (Edit, Config)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00A9(0x0007) MISSED OFFSET
	struct FString                                     DialogueFilenameFormat;                                   // 0x00B0(0x0010) (Edit, ZeroConstructor, Config)
	unsigned char                                      UnknownData01[0x8];                                       // 0x00C0(0x0008) MISSED OFFSET

}


//Class Engine.ExcludedPackageSettings
//0x0020 (0x0070 - 0x0050)
class UExcludedPackageSettings : public UDeveloperSettings
{
public:
	TArray<struct FString>                             CommonExcludedPackages;                                   // 0x0050(0x0010) (Edit, ZeroConstructor, Config)
	TArray<struct FString>                             MinSpecExcludedPackages;                                  // 0x0060(0x0010) (Edit, ZeroConstructor, Config)

}


//Class Engine.StreamingSettings
//0x0038 (0x0088 - 0x0050)
class UStreamingSettings : public UDeveloperSettings
{
public:
	unsigned char                                      AsyncLoadingThreadEnabled : 1;                            // 0x0050(0x0001) (Edit, Config)
	unsigned char                                      WarnIfTimeLimitExceeded : 1;                              // 0x0050(0x0001) (Edit, Config)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	float                                              TimeLimitExceededMultiplier;                              // 0x0054(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              TimeLimitExceededMinTime;                                 // 0x0058(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                MinBulkDataSizeForAsyncLoading;                           // 0x005C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              AsyncIOBandwidthLimit;                                    // 0x0060(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UseBackgroundLevelStreaming : 1;                          // 0x0064(0x0001) (Edit, Config)
	unsigned char                                      AsyncLoadingUseFullTimeLimit : 1;                         // 0x0064(0x0001) (Edit, Config)
	unsigned char                                      LoadAllStreamingLevels : 1;                               // 0x0064(0x0001) (Edit, Config)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	float                                              AsyncLoadingTimeLimit;                                    // 0x0068(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              PriorityAsyncLoadingExtraTime;                            // 0x006C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              LevelStreamingActorsUpdateTimeLimit;                      // 0x0070(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                LevelStreamingComponentsRegistrationGranularity;          // 0x0074(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              LevelStreamingUnregisterComponentsTimeLimit;              // 0x0078(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                LevelStreamingComponentsUnregistrationGranularity;        // 0x007C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      EventDrivenLoaderEnabled : 1;                             // 0x0080(0x0001) (Edit, Config)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0081(0x0007) MISSED OFFSET

}


//Class Engine.GarbageCollectionSettings
//0x0020 (0x0070 - 0x0050)
class UGarbageCollectionSettings : public UDeveloperSettings
{
public:
	float                                              TimeBetweenPurgingPendingKillObjects;                     // 0x0050(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      FlushStreamingOnGC : 1;                                   // 0x0054(0x0001) (Edit, Config)
	unsigned char                                      AllowParallelGC : 1;                                      // 0x0054(0x0001) (Edit, Config)
	unsigned char                                      CreateGCClusters : 1;                                     // 0x0054(0x0001) (Edit, Config)
	unsigned char                                      MergeGCClusters : 1;                                      // 0x0054(0x0001) (Edit, Config)
	unsigned char                                      ActorClusteringEnabled : 1;                               // 0x0054(0x0001) (Edit, Config)
	unsigned char                                      BlueprintClusteringEnabled : 1;                           // 0x0054(0x0001) (Edit, Config)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	int                                                NumRetriesBeforeForcingGC;                                // 0x0058(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                MaxObjectsNotConsideredByGC;                              // 0x005C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                SizeOfPermanentObjectPool;                                // 0x0060(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                MaxObjectsInGame;                                         // 0x0064(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                MaxObjectsInEditor;                                       // 0x0068(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

}


//Class Engine.MeshSimplificationSettings
//0x0008 (0x0058 - 0x0050)
class UMeshSimplificationSettings : public UDeveloperSettings
{
public:
	struct FName                                       MeshReductionModuleName;                                  // 0x0050(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData)

}


//Class Engine.NetworkSettings
//0x0010 (0x0060 - 0x0050)
class UNetworkSettings : public UDeveloperSettings
{
public:
	unsigned char                                      bVerifyPeer : 1;                                          // 0x0050(0x0001) (Edit, Config)
	unsigned char                                      bEnableMultiplayerWorldOriginRebasing : 1;                // 0x0050(0x0001) (Edit, Config)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	int                                                MaxRepArraySize;                                          // 0x0054(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                MaxRepArrayMemory;                                        // 0x0058(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

}


//Class Engine.PhysicsSettings
//0x00B0 (0x0100 - 0x0050)
class UPhysicsSettings : public UDeveloperSettings
{
public:
	float                                              DefaultGravityZ;                                          // 0x0050(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              DefaultTerminalVelocity;                                  // 0x0054(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              DefaultFluidFriction;                                     // 0x0058(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                SimulateScratchMemorySize;                                // 0x005C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                RagdollAggregateThreshold;                                // 0x0060(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              TriangleMeshTriangleMinAreaThreshold;                     // 0x0064(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bEnableComplexForSim : 1;                                 // 0x0068(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0069(0x0001)
	unsigned char                                      bEnableComplexForSimOnDedicatedServer : 1;                // 0x0069(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x006A(0x0001)
	unsigned char                                      bEnablePCM : 1;                                           // 0x006A(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x006B(0x0001)
	unsigned char                                      bEnableStabilization : 1;                                 // 0x006B(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03 : 8;                                        // 0x006C(0x0001)
	unsigned char                                      bWarnMissingLocks : 1;                                    // 0x006C(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData04 : 8;                                        // 0x006D(0x0001)
	unsigned char                                      bEnable2DPhysics : 1;                                     // 0x006D(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	TEnumAsByte<ESettingsLockedAxis>                   LockedAxis;                                               // 0x006E(0x0001) (ZeroConstructor, Config, Deprecated, IsPlainOldData)
	TEnumAsByte<ESettingsDOF>                          DefaultDegreesOfFreedom;                                  // 0x006F(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              BounceThresholdVelocity;                                  // 0x0070(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	TEnumAsByte<EFrictionCombineMode>                  FrictionCombineMode;                                      // 0x0074(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	TEnumAsByte<EFrictionCombineMode>                  RestitutionCombineMode;                                   // 0x0075(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x0076(0x0002) MISSED OFFSET
	float                                              MaxAngularVelocity;                                       // 0x0078(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxDepenetrationVelocity;                                 // 0x007C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              ContactOffsetMultiplier;                                  // 0x0080(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MinContactOffset;                                         // 0x0084(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxContactOffset;                                         // 0x0088(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bSimulateSkeletalMeshOnDedicatedServer : 1;               // 0x008C(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	TEnumAsByte<ECollisionTraceFlag>                   DefaultShapeComplexity;                                   // 0x008D(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bDefaultHasComplexCollision : 1;                          // 0x008E(0x0001) (ZeroConstructor, Config, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData06 : 8;                                        // 0x008F(0x0001)
	unsigned char                                      bSuppressFaceRemapTable : 1;                              // 0x008F(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData07 : 8;                                        // 0x0090(0x0001)
	unsigned char                                      bSupportUVFromHitResults : 1;                             // 0x0090(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData08 : 8;                                        // 0x0091(0x0001)
	unsigned char                                      bDisableActiveActors : 1;                                 // 0x0091(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData09 : 8;                                        // 0x0092(0x0001)
	unsigned char                                      bDisableCCD : 1;                                          // 0x0092(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData10[0x1];                                       // 0x0093(0x0001) MISSED OFFSET
	float                                              MaxPhysicsDeltaTime;                                      // 0x0094(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bSubstepping : 1;                                         // 0x0098(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData11[0x3];                                       // 0x0099(0x0003) MISSED OFFSET
	float                                              MaxSubstepDeltaTime;                                      // 0x009C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                MaxSubsteps;                                              // 0x00A0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              SyncSceneSmoothingFactor;                                 // 0x00A4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              InitialAverageFrameRate;                                  // 0x00A8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxPhysicsDeltaTimeOnDedicatedServer;                     // 0x00AC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bSubsteppingOnDedicatedServer : 1;                        // 0x00B0(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData12[0x3];                                       // 0x00B1(0x0003) MISSED OFFSET
	float                                              MaxSubstepDeltaTimeOnDedicatedServer;                     // 0x00B4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                MaxSubstepsOnDedicatedServer;                             // 0x00B8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              SyncSceneSmoothingFactorOnDedicatedServer;                // 0x00BC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              InitialAverageFrameRateOnDedicatedServer;                 // 0x00C0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData13[0x4];                                       // 0x00C4(0x0004) MISSED OFFSET
	TArray<struct FPhysicalSurfaceName>                PhysicalSurfaces;                                         // 0x00C8(0x0010) (Edit, ZeroConstructor, Config)
	struct FBroadphaseSettings                         DefaultBroadphaseSettings;                                // 0x00D8(0x0028) (Edit, Config)

}


//Class Engine.RendererSettings
//0x0088 (0x00D8 - 0x0050)
class URendererSettings : public UDeveloperSettings
{
public:
	unsigned char                                      bMobileHDR : 1;                                           // 0x0050(0x0001) (Edit, Config)
	unsigned char                                      bMobileDisableVertexFog : 1;                              // 0x0050(0x0001) (Edit, Config)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	int                                                MaxMobileCascades;                                        // 0x0054(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	TEnumAsByte<EMobileMSAASampleCount>                MobileMSAASampleCount;                                    // 0x0058(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	unsigned char                                      bDiscardUnusedQualityLevels : 1;                          // 0x005C(0x0001) (Edit, Config)
	unsigned char                                      bOcclusionCulling : 1;                                    // 0x005C(0x0001) (Edit, Config)
	unsigned char                                      UnknownData02[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	float                                              MinScreenRadiusForLights;                                 // 0x0060(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MinScreenRadiusForEarlyZPass;                             // 0x0064(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MinScreenRadiusForCSMdepth;                               // 0x0068(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bPrecomputedVisibilityWarning : 1;                        // 0x006C(0x0001) (Edit, Config)
	unsigned char                                      bTextureStreaming : 1;                                    // 0x006C(0x0001) (Edit, Config)
	unsigned char                                      bUseDXT5NormalMaps : 1;                                   // 0x006C(0x0001) (Edit, Config)
	unsigned char                                      bClearCoatEnableSecondNormal : 1;                         // 0x006C(0x0001) (Edit, Config)
	unsigned char                                      UnknownData03[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
	int                                                ReflectionCaptureResolution;                              // 0x0070(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      ReflectionEnvironmentLightmapMixBasedOnRoughness : 1;     // 0x0074(0x0001) (Edit, Config)
	unsigned char                                      bForwardShading : 1;                                      // 0x0074(0x0001) (Edit, Config)
	unsigned char                                      bVertexFoggingForOpaque : 1;                              // 0x0074(0x0001) (Edit, Config)
	unsigned char                                      bAllowStaticLighting : 1;                                 // 0x0074(0x0001) (Edit, Config)
	unsigned char                                      bUseNormalMapsForStaticLighting : 1;                      // 0x0074(0x0001) (Edit, Config)
	unsigned char                                      bGenerateMeshDistanceFields : 1;                          // 0x0074(0x0001) (Edit, Config)
	unsigned char                                      bEightBitMeshDistanceFields : 1;                          // 0x0074(0x0001) (Edit, Config)
	unsigned char                                      bGenerateLandscapeGIData : 1;                             // 0x0074(0x0001) (Edit, Config)
	unsigned char                                      UnknownData04 : 8;                                        // 0x0075(0x0001)
	unsigned char                                      bCompressMeshDistanceFields : 1;                          // 0x0075(0x0001) (Edit, Config)
	unsigned char                                      UnknownData05[0x2];                                       // 0x0076(0x0002) MISSED OFFSET
	float                                              TessellationAdaptivePixelsPerTriangle;                    // 0x0078(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bSeparateTranslucency : 1;                                // 0x007C(0x0001) (Edit, Config)
	unsigned char                                      UnknownData06[0x3];                                       // 0x007D(0x0003) MISSED OFFSET
	TEnumAsByte<ETranslucentSortPolicy>                TranslucentSortPolicy;                                    // 0x0080(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0081(0x0003) MISSED OFFSET
	struct FVector                                     TranslucentSortAxis;                                      // 0x0084(0x000C) (Edit, ZeroConstructor, Config, IsPlainOldData)
	TEnumAsByte<ECustomDepthStencil>                   CustomDepthStencil;                                       // 0x0090(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0091(0x0003) MISSED OFFSET
	unsigned char                                      bCustomDepthTaaJitter : 1;                                // 0x0094(0x0001) (Edit, Config)
	unsigned char                                      bDefaultFeatureBloom : 1;                                 // 0x0094(0x0001) (Edit, Config)
	unsigned char                                      bDefaultFeatureAmbientOcclusion : 1;                      // 0x0094(0x0001) (Edit, Config)
	unsigned char                                      bDefaultFeatureAmbientOcclusionStaticFraction : 1;        // 0x0094(0x0001) (Edit, Config)
	unsigned char                                      bDefaultFeatureAutoExposure : 1;                          // 0x0094(0x0001) (Edit, Config)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0095(0x0003) MISSED OFFSET
	TEnumAsByte<EAutoExposureMethodUI>                 DefaultFeatureAutoExposure;                               // 0x0098(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0099(0x0003) MISSED OFFSET
	unsigned char                                      bDefaultFeatureMotionBlur : 1;                            // 0x009C(0x0001) (Edit, Config)
	unsigned char                                      bDefaultFeatureLensFlare : 1;                             // 0x009C(0x0001) (Edit, Config)
	unsigned char                                      bTemporalUpsampling : 1;                                  // 0x009C(0x0001) (Edit, Config)
	unsigned char                                      UnknownData11[0x3];                                       // 0x009D(0x0003) MISSED OFFSET
	TEnumAsByte<EAntiAliasingMethod>                   DefaultFeatureAntiAliasing;                               // 0x00A0(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData12[0x3];                                       // 0x00A1(0x0003) MISSED OFFSET
	unsigned char                                      bStencilForLODDither : 1;                                 // 0x00A4(0x0001) (Edit, Config)
	unsigned char                                      UnknownData13[0x3];                                       // 0x00A5(0x0003) MISSED OFFSET
	TEnumAsByte<EEarlyZPass>                           EarlyZPass;                                               // 0x00A8(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData14[0x3];                                       // 0x00A9(0x0003) MISSED OFFSET
	unsigned char                                      bEarlyZPassMovable : 1;                                   // 0x00AC(0x0001) (Edit, Config)
	unsigned char                                      bEarlyZPassOnlyMaterialMasking : 1;                       // 0x00AC(0x0001) (Edit, Config)
	unsigned char                                      bEarlyZPassForceFull : 1;                                 // 0x00AC(0x0001) (Edit, Config)
	unsigned char                                      bDBuffer : 1;                                             // 0x00AC(0x0001) (Edit, Config)
	unsigned char                                      UnknownData15[0x3];                                       // 0x00AD(0x0003) MISSED OFFSET
	TEnumAsByte<EClearSceneOptions>                    ClearSceneMethod;                                         // 0x00B0(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData16[0x3];                                       // 0x00B1(0x0003) MISSED OFFSET
	unsigned char                                      bBasePassOutputsVelocity : 1;                             // 0x00B4(0x0001) (Edit, Config)
	unsigned char                                      bSelectiveBasePassOutputs : 1;                            // 0x00B4(0x0001) (Edit, Config)
	unsigned char                                      bDefaultParticleCutouts : 1;                              // 0x00B4(0x0001) (Edit, Config)
	unsigned char                                      bGlobalClipPlane : 1;                                     // 0x00B4(0x0001) (Edit, Config)
	unsigned char                                      UnknownData17[0x3];                                       // 0x00B5(0x0003) MISSED OFFSET
	TEnumAsByte<EGBufferFormat>                        GBufferFormat;                                            // 0x00B8(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData18[0x3];                                       // 0x00B9(0x0003) MISSED OFFSET
	unsigned char                                      bUseGPUMorphTargets : 1;                                  // 0x00BC(0x0001) (Edit, Config)
	unsigned char                                      bNvidiaAftermathEnabled : 1;                              // 0x00BC(0x0001) (Edit, Config)
	unsigned char                                      bInstancedStereo : 1;                                     // 0x00BC(0x0001) (Edit, Config)
	unsigned char                                      bMultiView : 1;                                           // 0x00BC(0x0001) (Edit, Config)
	unsigned char                                      bMobileMultiView : 1;                                     // 0x00BC(0x0001) (Edit, Config)
	unsigned char                                      bMobileMultiViewDirect : 1;                               // 0x00BC(0x0001) (Edit, Config)
	unsigned char                                      bMonoscopicFarField : 1;                                  // 0x00BC(0x0001) (Edit, Config)
	unsigned char                                      UnknownData19[0x3];                                       // 0x00BD(0x0003) MISSED OFFSET
	float                                              WireframeCullThreshold;                                   // 0x00C0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bSupportStationarySkylight : 1;                           // 0x00C4(0x0001) (Edit, Config)
	unsigned char                                      bSupportLowQualityLightmaps : 1;                          // 0x00C4(0x0001) (Edit, Config)
	unsigned char                                      bSupportPointLightWholeSceneShadows : 1;                  // 0x00C4(0x0001) (Edit, Config)
	unsigned char                                      bSupportAtmosphericFog : 1;                               // 0x00C4(0x0001) (Edit, Config)
	unsigned char                                      bSupportSkinCacheShaders : 1;                             // 0x00C4(0x0001) (Edit, Config)
	unsigned char                                      bMobileEnableStaticAndCSMShadowReceivers : 1;             // 0x00C4(0x0001) (Edit, Config)
	unsigned char                                      bMobileAllowDistanceFieldShadows : 1;                     // 0x00C4(0x0001) (Edit, Config)
	unsigned char                                      bMobileAllowMovableDirectionalLights : 1;                 // 0x00C4(0x0001) (Edit, Config)
	unsigned char                                      UnknownData20[0x3];                                       // 0x00C5(0x0003) MISSED OFFSET
	uint32_t                                           MobileNumDynamicPointLights;                              // 0x00C8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bMobileDynamicPointLightsUseStaticBranch : 1;             // 0x00CC(0x0001) (Edit, Config)
	unsigned char                                      UnknownData21[0x3];                                       // 0x00CD(0x0003) MISSED OFFSET
	float                                              SkinCacheSceneMemoryLimitInMB;                            // 0x00D0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData22[0x4];                                       // 0x00D4(0x0004) MISSED OFFSET

}


//Class Engine.RendererOverrideSettings
//0x0008 (0x0058 - 0x0050)
class URendererOverrideSettings : public UDeveloperSettings
{
public:
	unsigned char                                      bSupportAllShaderPermutations : 1;                        // 0x0050(0x0001) (Edit, Config)
	unsigned char                                      bForceRecomputeTangents : 1;                              // 0x0050(0x0001) (Edit, Config)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET

}


//Class Engine.UserInterfaceSettings
//0x01D0 (0x0220 - 0x0050)
class UUserInterfaceSettings : public UDeveloperSettings
{
public:
	ERenderFocusRule                                   RenderFocusRule;                                          // 0x0050(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	TMap<TEnumAsByte<EMouseCursor>, struct FHardwareCursorReference> HardwareCursors;                                          // 0x0058(0x0050) (Edit, ZeroConstructor, Config)
	TMap<TEnumAsByte<EMouseCursor>, struct FStringClassReference> SoftwareCursors;                                          // 0x00A8(0x0050) (Edit, ZeroConstructor, Config)
	struct FStringClassReference                       DefaultCursor;                                            // 0x00F8(0x0010) (ZeroConstructor, Config, Deprecated)
	struct FStringClassReference                       TextEditBeamCursor;                                       // 0x0108(0x0010) (ZeroConstructor, Config, Deprecated)
	struct FStringClassReference                       CrosshairsCursor;                                         // 0x0118(0x0010) (ZeroConstructor, Config, Deprecated)
	struct FStringClassReference                       HandCursor;                                               // 0x0128(0x0010) (ZeroConstructor, Config, Deprecated)
	struct FStringClassReference                       GrabHandCursor;                                           // 0x0138(0x0010) (ZeroConstructor, Config, Deprecated)
	struct FStringClassReference                       GrabHandClosedCursor;                                     // 0x0148(0x0010) (ZeroConstructor, Config, Deprecated)
	struct FStringClassReference                       SlashedCircleCursor;                                      // 0x0158(0x0010) (ZeroConstructor, Config, Deprecated)
	float                                              ApplicationScale;                                         // 0x0168(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	EUIScalingRule                                     UIScaleRule;                                              // 0x016C(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x016D(0x0003) MISSED OFFSET
	struct FStringClassReference                       CustomScalingRuleClass;                                   // 0x0170(0x0010) (Edit, ZeroConstructor, Config)
	struct FRuntimeFloatCurve                          UIScaleCurve;                                             // 0x0180(0x0078) (Edit, Config)
	unsigned char                                      bLoadWidgetsOnDedicatedServer : 1;                        // 0x01F8(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x01F9(0x0007) MISSED OFFSET
	TArray<class UObject*>                             CursorClasses;                                            // 0x0200(0x0010) (ZeroConstructor, Transient)
	class UObject*                                     CustomScalingRuleClassInstance;                           // 0x0210(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UDPICustomScalingRule*                       CustomScalingRule;                                        // 0x0218(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

}


//Class Engine.DeviceProfileManager
//0x00E0 (0x0120 - 0x0040)
class UDeviceProfileManager : public UObject
{
public:
	TArray<class UObject*>                             Profiles;                                                 // 0x0040(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0xD0];                                      // 0x0050(0x00D0) MISSED OFFSET

}


//Class Engine.DialogueVoice
//0x0018 (0x0058 - 0x0040)
class UDialogueVoice : public UObject
{
public:
	TEnumAsByte<EGrammaticalGender>                    Gender;                                                   // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EGrammaticalNumber>                    Plurality;                                                // 0x0041(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0042(0x0002) MISSED OFFSET
	struct FGuid                                       LocalizationGUID;                                         // 0x0044(0x0010) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

}


//Class Engine.DialogueWave
//0x0048 (0x0088 - 0x0040)
class UDialogueWave : public UObject
{
public:
	unsigned char                                      bMature : 1;                                              // 0x0040(0x0001) (Edit)
	unsigned char                                      bOverride_SubtitleOverride : 1;                           // 0x0040(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	struct FString                                     SpokenText;                                               // 0x0048(0x0010) (Edit, ZeroConstructor)
	struct FString                                     SubtitleOverride;                                         // 0x0058(0x0010) (Edit, ZeroConstructor)
	TArray<struct FDialogueContextMapping>             ContextMappings;                                          // 0x0068(0x0010) (Edit, ZeroConstructor)
	struct FGuid                                       LocalizationGUID;                                         // 0x0078(0x0010) (ZeroConstructor, IsPlainOldData)

}


//Class Engine.Distribution
//0x0008 (0x0048 - 0x0040)
class UDistribution : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET

}


//Class Engine.DistributionFloat
//0x0008 (0x0050 - 0x0048)
class UDistributionFloat : public UDistribution
{
public:
	unsigned char                                      bCanBeBaked : 1;                                          // 0x0048(0x0001) (Edit)
	unsigned char                                      bBakedDataSuccesfully : 1;                                // 0x0048(0x0001)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

}


//Class Engine.DistributionFloatConstant
//0x0008 (0x0058 - 0x0050)
class UDistributionFloatConstant : public UDistributionFloat
{
public:
	float                                              Constant;                                                 // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

}


//Class Engine.DistributionFloatParameterBase
//0x0020 (0x0078 - 0x0058)
class UDistributionFloatParameterBase : public UDistributionFloatConstant
{
public:
	struct FName                                       ParameterName;                                            // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinInput;                                                 // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxInput;                                                 // 0x0064(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinOutput;                                                // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxOutput;                                                // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDistributionParamMode>                ParamMode;                                                // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

}


//Class Engine.DistributionFloatParticleParameter
//0x0000 (0x0078 - 0x0078)
class UDistributionFloatParticleParameter : public UDistributionFloatParameterBase
{
public:

}


//Class Engine.DistributionFloatConstantCurve
//0x0018 (0x0068 - 0x0050)
class UDistributionFloatConstantCurve : public UDistributionFloat
{
public:
	struct FInterpCurveFloat                           ConstantCurve;                                            // 0x0050(0x0018) (Edit, ZeroConstructor)

}


//Class Engine.DistributionFloatUniform
//0x0008 (0x0058 - 0x0050)
class UDistributionFloatUniform : public UDistributionFloat
{
public:
	float                                              Min;                                                      // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Max;                                                      // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.DistributionFloatUniformCurve
//0x0018 (0x0068 - 0x0050)
class UDistributionFloatUniformCurve : public UDistributionFloat
{
public:
	struct FInterpCurveVector2D                        ConstantCurve;                                            // 0x0050(0x0018) (Edit, ZeroConstructor)

}


//Class Engine.DistributionVector
//0x0008 (0x0050 - 0x0048)
class UDistributionVector : public UDistribution
{
public:
	unsigned char                                      bCanBeBaked : 1;                                          // 0x0048(0x0001) (Edit)
	unsigned char                                      bIsDirty : 1;                                             // 0x0048(0x0001)
	unsigned char                                      bBakedDataSuccesfully : 1;                                // 0x0048(0x0001)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

}


//Class Engine.DistributionVectorConstant
//0x0018 (0x0068 - 0x0050)
class UDistributionVectorConstant : public UDistributionVector
{
public:
	struct FVector                                     Constant;                                                 // 0x0050(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bLockAxes : 1;                                            // 0x005C(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	TEnumAsByte<EDistributionVectorLockFlags>          LockedAxes;                                               // 0x0060(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0061(0x0007) MISSED OFFSET

}


//Class Engine.DistributionVectorParameterBase
//0x0040 (0x00A8 - 0x0068)
class UDistributionVectorParameterBase : public UDistributionVectorConstant
{
public:
	struct FName                                       ParameterName;                                            // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     MinInput;                                                 // 0x0070(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     MaxInput;                                                 // 0x007C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     MinOutput;                                                // 0x0088(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     MaxOutput;                                                // 0x0094(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDistributionParamMode>                ParamModes[0x3];                                          // 0x00A0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x00A3(0x0005) MISSED OFFSET

}


//Class Engine.DistributionVectorParticleParameter
//0x0000 (0x00A8 - 0x00A8)
class UDistributionVectorParticleParameter : public UDistributionVectorParameterBase
{
public:

}


//Class Engine.DistributionVectorConstantCurve
//0x0020 (0x0070 - 0x0050)
class UDistributionVectorConstantCurve : public UDistributionVector
{
public:
	struct FInterpCurveVector                          ConstantCurve;                                            // 0x0050(0x0018) (Edit, ZeroConstructor)
	unsigned char                                      bLockAxes : 1;                                            // 0x0068(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	TEnumAsByte<EDistributionVectorLockFlags>          LockedAxes;                                               // 0x006C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x006D(0x0003) MISSED OFFSET

}


//Class Engine.DistributionVectorUniform
//0x0028 (0x0078 - 0x0050)
class UDistributionVectorUniform : public UDistributionVector
{
public:
	struct FVector                                     Max;                                                      // 0x0050(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Min;                                                      // 0x005C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bLockAxes : 1;                                            // 0x0068(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	TEnumAsByte<EDistributionVectorLockFlags>          LockedAxes;                                               // 0x006C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDistributionVectorMirrorFlags>        MirrorFlags[0x3];                                         // 0x006D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseExtremes : 1;                                         // 0x0070(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

}


//Class Engine.DistributionVectorUniformCurve
//0x0028 (0x0078 - 0x0050)
class UDistributionVectorUniformCurve : public UDistributionVector
{
public:
	struct FInterpCurveTwoVectors                      ConstantCurve;                                            // 0x0050(0x0018) (Edit, ZeroConstructor)
	unsigned char                                      bLockAxes1 : 1;                                           // 0x0068(0x0001)
	unsigned char                                      bLockAxes2 : 1;                                           // 0x0068(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	TEnumAsByte<EDistributionVectorLockFlags>          LockedAxes[0x2];                                          // 0x006C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDistributionVectorMirrorFlags>        MirrorFlags[0x3];                                         // 0x006E(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0071(0x0003) MISSED OFFSET
	unsigned char                                      bUseExtremes : 1;                                         // 0x0074(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0075(0x0003) MISSED OFFSET

}


//Class Engine.DPICustomScalingRule
//0x0000 (0x0040 - 0x0040)
class UDPICustomScalingRule : public UObject
{
public:

}


//Class Engine.DynamicBlueprintBinding
//0x0000 (0x0040 - 0x0040)
class UDynamicBlueprintBinding : public UObject
{
public:

}


//Class Engine.ComponentDelegateBinding
//0x0010 (0x0050 - 0x0040)
class UComponentDelegateBinding : public UDynamicBlueprintBinding
{
public:
	TArray<struct FBlueprintComponentDelegateBinding>  ComponentDelegateBindings;                                // 0x0040(0x0010) (ZeroConstructor)

}


//Class Engine.InputDelegateBinding
//0x0000 (0x0040 - 0x0040)
class UInputDelegateBinding : public UDynamicBlueprintBinding
{
public:

}


//Class Engine.InputActionDelegateBinding
//0x0010 (0x0050 - 0x0040)
class UInputActionDelegateBinding : public UInputDelegateBinding
{
public:
	TArray<struct FBlueprintInputActionDelegateBinding> InputActionDelegateBindings;                              // 0x0040(0x0010) (ZeroConstructor)

}


//Class Engine.InputAxisDelegateBinding
//0x0010 (0x0050 - 0x0040)
class UInputAxisDelegateBinding : public UInputDelegateBinding
{
public:
	TArray<struct FBlueprintInputAxisDelegateBinding>  InputAxisDelegateBindings;                                // 0x0040(0x0010) (ZeroConstructor)

}


//Class Engine.InputAxisKeyDelegateBinding
//0x0010 (0x0050 - 0x0040)
class UInputAxisKeyDelegateBinding : public UInputDelegateBinding
{
public:
	TArray<struct FBlueprintInputAxisKeyDelegateBinding> InputAxisKeyDelegateBindings;                             // 0x0040(0x0010) (ZeroConstructor)

}


//Class Engine.InputVectorAxisDelegateBinding
//0x0000 (0x0050 - 0x0050)
class UInputVectorAxisDelegateBinding : public UInputAxisKeyDelegateBinding
{
public:

}


//Class Engine.InputKeyDelegateBinding
//0x0010 (0x0050 - 0x0040)
class UInputKeyDelegateBinding : public UInputDelegateBinding
{
public:
	TArray<struct FBlueprintInputKeyDelegateBinding>   InputKeyDelegateBindings;                                 // 0x0040(0x0010) (ZeroConstructor)

}


//Class Engine.InputTouchDelegateBinding
//0x0010 (0x0050 - 0x0040)
class UInputTouchDelegateBinding : public UInputDelegateBinding
{
public:
	TArray<struct FBlueprintInputTouchDelegateBinding> InputTouchDelegateBindings;                               // 0x0040(0x0010) (ZeroConstructor)

}


//Class Engine.EdGraph
//0x0090 (0x00D0 - 0x0040)
class UEdGraph : public UObject
{
public:
	class UEdGraphSchema*                              Schema;                                                   // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UEdGraphNode*>                        Nodes;                                                    // 0x0048(0x0010) (ZeroConstructor)
	unsigned char                                      bEditable : 1;                                            // 0x0058(0x0001)
	unsigned char                                      bAllowDeletion : 1;                                       // 0x0058(0x0001)
	unsigned char                                      bAllowRenaming : 1;                                       // 0x0058(0x0001)
	unsigned char                                      UnknownData00[0x77];                                      // 0x0059(0x0077) MISSED OFFSET

}


//Class Engine.EdGraphNode_Documentation
//0x0020 (0x00D8 - 0x00B8)
class UEdGraphNode_Documentation : public UEdGraphNode
{
public:
	struct FString                                     Link;                                                     // 0x00B8(0x0010) (ZeroConstructor)
	struct FString                                     Excerpt;                                                  // 0x00C8(0x0010) (ZeroConstructor)

}


//Class Engine.EdGraphSchema
//0x0000 (0x0040 - 0x0040)
class UEdGraphSchema : public UObject
{
public:

}


//Class Engine.ImportantToggleSettingInterface
//0x0000 (0x0040 - 0x0040)
class UImportantToggleSettingInterface : public UInterface
{
public:

}


//Class Engine.EndUserSettings
//0x0010 (0x0050 - 0x0040)
class UEndUserSettings : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	unsigned char                                      bSendAnonymousUsageDataToEpic : 1;                        // 0x0048(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0049(0x0001)
	unsigned char                                      bSendMeanTimeBetweenFailureDataToEpic : 1;                // 0x0049(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02 : 8;                                        // 0x004A(0x0001)
	unsigned char                                      bAllowUserIdInUsageData : 1;                              // 0x004A(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x004B(0x0005) MISSED OFFSET

}


//Class Engine.PendingNetGame
//0x00A0 (0x00E0 - 0x0040)
class UPendingNetGame : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	class UNetDriver*                                  NetDriver;                                                // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	class UDemoNetDriver*                              DemoNetDriver;                                            // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x88];                                      // 0x0058(0x0088) MISSED OFFSET

}


//Class Engine.WorldSubsystem
//0x0000 (0x0048 - 0x0048)
class UWorldSubsystem : public USubsystem
{
public:

}


//Class Engine.GameEngine
//0x0060 (0x0F80 - 0x0F20)
class UGameEngine : public UEngine
{
public:
	class UGameInstance*                               GameInstance;                                             // 0x0F20(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x40];                                      // 0x0F28(0x0040) MISSED OFFSET
	TArray<class UWorld*>                              PendingDestroyWorldList;                                  // 0x0F68(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0F78(0x0008) MISSED OFFSET

}


//Class Engine.EngineHandlerComponentFactory
//0x0000 (0x0040 - 0x0040)
class UEngineHandlerComponentFactory : public UHandlerComponentFactory
{
public:

}


//Class Engine.Exporter
//0x0040 (0x0080 - 0x0040)
class UExporter : public UObject
{
public:
	class UObject*                                     SupportedClass;                                           // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	class UObject*                                     ExportRootScope;                                          // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FString>                             FormatExtension;                                          // 0x0050(0x0010) (ZeroConstructor)
	TArray<struct FString>                             FormatDescription;                                        // 0x0060(0x0010) (ZeroConstructor)
	int                                                PreferredFormatIndex;                                     // 0x0070(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                TextIndent;                                               // 0x0074(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bText : 1;                                                // 0x0078(0x0001)
	unsigned char                                      bSelectedOnly : 1;                                        // 0x0078(0x0001)
	unsigned char                                      bForceFileOperations : 1;                                 // 0x0078(0x0001)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0079(0x0007) MISSED OFFSET

}


//Class Engine.ExtendedReflectionSettings
//0x0080 (0x00C0 - 0x0040)
class UExtendedReflectionSettings : public UObject
{
public:
	float                                              GlobalOverrideIntensity;                                  // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StreamingSectionSize;                                     // 0x0044(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FExtendedReflectionSharedCubemap>    SharedCubemaps;                                           // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<class UTextureCube*>                        ReferencedCubemaps;                                       // 0x0058(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x58];                                      // 0x0068(0x0058) MISSED OFFSET

}


//Class Engine.FoliageBlockingVolumeManager
//0x0028 (0x0068 - 0x0040)
class UFoliageBlockingVolumeManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x0040(0x0028) MISSED OFFSET

}


//Class Engine.FoliageBlockingVolumeContainer
//0x0028 (0x0068 - 0x0040)
class UFoliageBlockingVolumeContainer : public ULevelBlockResourceContainer
{
public:
	TArray<struct FVector2D>                           Points;                                                   // 0x0040(0x0010) (ZeroConstructor)
	TArray<struct FFoliageBlockingVolumeInstance>      Instances;                                                // 0x0050(0x0010) (ZeroConstructor)
	class UFoliageBlockingVolumeManager*               Manager;                                                  // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

}


//Class Engine.FontImportOptions
//0x00B0 (0x00F0 - 0x0040)
class UFontImportOptions : public UObject
{
public:
	struct FFontImportOptionsData                      Data;                                                     // 0x0040(0x00B0) (Edit)

}


//Class Engine.Font
//0x0198 (0x01D8 - 0x0040)
class UFont : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	EFontCacheType                                     FontCacheType;                                            // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	TArray<struct FFontCharacter>                      Characters;                                               // 0x0050(0x0010) (Edit, ZeroConstructor)
	TArray<class UTexture2D*>                          Textures;                                                 // 0x0060(0x0010) (ZeroConstructor)
	int                                                IsRemapped;                                               // 0x0070(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              EmScale;                                                  // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Ascent;                                                   // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Descent;                                                  // 0x007C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Leading;                                                  // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Kerning;                                                  // 0x0084(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FFontImportOptionsData                      ImportOptions;                                            // 0x0088(0x00B0) (Edit)
	int                                                NumCharacters;                                            // 0x0138(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x013C(0x0004) MISSED OFFSET
	TArray<int>                                        MaxCharHeight;                                            // 0x0140(0x0010) (ZeroConstructor, Transient)
	float                                              ScalingFactor;                                            // 0x0150(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                LegacyFontSize;                                           // 0x0154(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       LegacyFontName;                                           // 0x0158(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FCompositeFont                              CompositeFont;                                            // 0x0160(0x0028)
	unsigned char                                      UnknownData03[0x50];                                      // 0x0188(0x0050) MISSED OFFSET

}


//Class Engine.FontFace
//0x0030 (0x0070 - 0x0040)
class UFontFace : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	struct FString                                     SourceFilename;                                           // 0x0048(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	EFontHinting                                       Hinting;                                                  // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EFontLoadingPolicy                                 LoadingPolicy;                                            // 0x0059(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EFontLoadingPolicy                                 LoadingPolicyConsole;                                     // 0x005A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EFontLayoutMethod                                  LayoutMethod;                                             // 0x005B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x005C(0x0014) MISSED OFFSET

}


//Class Engine.GameUserSettings
//0x00E0 (0x0120 - 0x0040)
class UGameUserSettings : public UObject
{
public:
	unsigned char                                      bUseVSync : 1;                                            // 0x0040(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0041(0x0001)
	unsigned char                                      bUseDynamicResolution : 1;                                // 0x0041(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4E];                                      // 0x0042(0x004E) MISSED OFFSET
	uint32_t                                           ResolutionSizeX;                                          // 0x0090(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	uint32_t                                           ResolutionSizeY;                                          // 0x0094(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	uint32_t                                           LastUserConfirmedResolutionSizeX;                         // 0x0098(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	uint32_t                                           LastUserConfirmedResolutionSizeY;                         // 0x009C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                WindowPosX;                                               // 0x00A0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                WindowPosY;                                               // 0x00A4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                FullscreenMode;                                           // 0x00A8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                LastConfirmedFullscreenMode;                              // 0x00AC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                PreferredFullscreenMode;                                  // 0x00B0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	uint32_t                                           Version;                                                  // 0x00B4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                AudioQualityLevel;                                        // 0x00B8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              FrameRateLimit;                                           // 0x00BC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00C0(0x0004) MISSED OFFSET
	int                                                DesiredScreenWidth;                                       // 0x00C4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bUseDesiredScreenHeight : 1;                              // 0x00C8(0x0001) (ZeroConstructor, Config, GlobalConfig, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00C9(0x0003) MISSED OFFSET
	int                                                DesiredScreenHeight;                                      // 0x00CC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              LastRecommendedScreenWidth;                               // 0x00D0(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              LastRecommendedScreenHeight;                              // 0x00D4(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              LastCPUBenchmarkResult;                                   // 0x00D8(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              LastGPUBenchmarkResult;                                   // 0x00DC(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	TArray<float>                                      LastCPUBenchmarkSteps;                                    // 0x00E0(0x0010) (ZeroConstructor, Config)
	TArray<float>                                      LastGPUBenchmarkSteps;                                    // 0x00F0(0x0010) (ZeroConstructor, Config)
	float                                              LastGPUBenchmarkMultiplier;                               // 0x0100(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bUseHDRDisplayOutput : 1;                                 // 0x0104(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0105(0x0003) MISSED OFFSET
	int                                                HDRDisplayOutputNits;                                     // 0x0108(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnGameUserSettingsUINeedsUpdate;                          // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	// Function Engine.GameUserSettings.ValidateSettings
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ValidateSettings();// sub_5F45E0()

	// Function Engine.GameUserSettings.SupportsHDRDisplayOutput
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_SupportsHDRDisplayOutput();// sub_4253540()

	// Function Engine.GameUserSettings.SetVSyncEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVSyncEnabled(unsigned char bEnable);// sub_1D92D10()

	// Function Engine.GameUserSettings.SetVisualEffectQuality
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVisualEffectQuality(int Value);// sub_695C20()

	// Function Engine.GameUserSettings.SetViewDistanceQuality
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetViewDistanceQuality(int Value);// sub_47307B0()

	// Function Engine.GameUserSettings.SetToDefaults
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetToDefaults();// sub_1F92560()

	// Function Engine.GameUserSettings.SetTextureQuality
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTextureQuality(int Value);// sub_41C4710()

	// Function Engine.GameUserSettings.SetShadowQuality
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetShadowQuality(int Value);// sub_4A93130()

	// Function Engine.GameUserSettings.SetScreenResolution
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetScreenResolution(const struct FIntPoint& Resolution);// sub_3F11C50()

	// Function Engine.GameUserSettings.SetResolutionScaleValueEx
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetResolutionScaleValueEx(float NewScaleValue);// sub_179FC10()

	// Function Engine.GameUserSettings.SetResolutionScaleValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetResolutionScaleValue(int NewScaleValue);// sub_CA3570()

	// Function Engine.GameUserSettings.SetResolutionScaleNormalized
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetResolutionScaleNormalized(float NewScaleNormalized);// sub_5786DF0()

	// Function Engine.GameUserSettings.SetPostProcessingQuality
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetPostProcessingQuality(int Value);// sub_5064E90()

	// Function Engine.GameUserSettings.SetOverallScalabilityLevel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetOverallScalabilityLevel(int Value);// sub_1BBE350()

	// Function Engine.GameUserSettings.SetFullscreenMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetFullscreenMode(TEnumAsByte<EWindowMode> InFullscreenMode);// sub_6A7B10()

	// Function Engine.GameUserSettings.SetFrameRateLimit
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetFrameRateLimit(float NewLimit);// sub_623DBE0()

	// Function Engine.GameUserSettings.SetFoliageQuality
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetFoliageQuality(int Value);// sub_44DCC40()

	// Function Engine.GameUserSettings.SetDynamicResolutionEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetDynamicResolutionEnabled(unsigned char bEnable);// sub_618D340()

	// Function Engine.GameUserSettings.SetBenchmarkFallbackValues
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetBenchmarkFallbackValues();// sub_5741230()

	// Function Engine.GameUserSettings.SetAudioQualityLevel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAudioQualityLevel(int QualityLevel);// sub_117B030()

	// Function Engine.GameUserSettings.SetAntiAliasingQuality
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetAntiAliasingQuality(int Value);// sub_50FC4B0()

	// Function Engine.GameUserSettings.SaveSettings
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SaveSettings();// sub_11EACF0()

	// Function Engine.GameUserSettings.RunHardwareBenchmark
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RunHardwareBenchmark(int WorkScale, float CPUMultiplier, float GPUMultiplier);// sub_50B68F0()

	// Function Engine.GameUserSettings.RevertVideoMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_RevertVideoMode();// sub_1BEB420()

	// Function Engine.GameUserSettings.ResetToCurrentSettings
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ResetToCurrentSettings();// sub_4169EE0()

	// Function Engine.GameUserSettings.LoadSettings
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_LoadSettings(unsigned char bForceReload);// sub_1E5ECB0()

	// Function Engine.GameUserSettings.IsVSyncEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsVSyncEnabled();// sub_169A2B0()

	// Function Engine.GameUserSettings.IsVSyncDirty
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsVSyncDirty();// sub_5786DC0()

	// Function Engine.GameUserSettings.IsScreenResolutionDirty
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsScreenResolutionDirty();// sub_44AC6D0()

	// Function Engine.GameUserSettings.IsHDREnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsHDREnabled();// sub_4599BA0()

	// Function Engine.GameUserSettings.IsFullscreenModeDirty
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsFullscreenModeDirty();// sub_5B16E40()

	// Function Engine.GameUserSettings.IsDynamicResolutionEnabled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsDynamicResolutionEnabled();// sub_4017D60()

	// Function Engine.GameUserSettings.IsDynamicResolutionDirty
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsDynamicResolutionDirty();// sub_54B5A90()

	// Function Engine.GameUserSettings.IsDirty
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsDirty();// sub_1A2F070()

	// Function Engine.GameUserSettings.IsConsole4K
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsConsole4K();// sub_FDE220()

	// Function Engine.GameUserSettings.GetVisualEffectQuality
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetVisualEffectQuality();// sub_4528930()

	// Function Engine.GameUserSettings.GetViewDistanceQuality
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetViewDistanceQuality();// sub_4DB9060()

	// Function Engine.GameUserSettings.GetTextureQuality
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetTextureQuality();// sub_44C2A50()

	// Function Engine.GameUserSettings.GetShadowQuality
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetShadowQuality();// sub_40C8910()

	// Function Engine.GameUserSettings.GetScreenResolution
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FIntPoint STATIC_GetScreenResolution();// sub_4431330()

	// Function Engine.GameUserSettings.GetResolutionScaleInformationEx
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetResolutionScaleInformationEx(float* CurrentScaleNormalized, float* CurrentScaleValue, float* MinScaleValue, float* MaxScaleValue);// sub_1522940()

	// Function Engine.GameUserSettings.GetResolutionScaleInformation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetResolutionScaleInformation(float* CurrentScaleNormalized, int* CurrentScaleValue, int* MinScaleValue, int* MaxScaleValue);// sub_492C3D0()

	// Function Engine.GameUserSettings.GetRecommendedResolutionScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetRecommendedResolutionScale();// sub_49C5510()

	// Function Engine.GameUserSettings.GetPreferredFullscreenMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TEnumAsByte<EWindowMode> STATIC_GetPreferredFullscreenMode();// sub_5786D90()

	// Function Engine.GameUserSettings.GetPostProcessingQuality
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetPostProcessingQuality();// sub_13B4490()

	// Function Engine.GameUserSettings.GetOverallScalabilityLevel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetOverallScalabilityLevel();// sub_5F65260()

	// Function Engine.GameUserSettings.GetLastConfirmedScreenResolution
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FIntPoint STATIC_GetLastConfirmedScreenResolution();// sub_156E550()

	// Function Engine.GameUserSettings.GetLastConfirmedFullscreenMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TEnumAsByte<EWindowMode> STATIC_GetLastConfirmedFullscreenMode();// sub_C5C410()

	// Function Engine.GameUserSettings.GetGameUserSettings
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UGameUserSettings* STATIC_GetGameUserSettings();// sub_51F57E0()

	// Function Engine.GameUserSettings.GetFullscreenMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TEnumAsByte<EWindowMode> STATIC_GetFullscreenMode();// sub_5B7420()

	// Function Engine.GameUserSettings.GetFrameRateLimit
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetFrameRateLimit();// sub_12F2650()

	// Function Engine.GameUserSettings.GetFoliageQuality
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetFoliageQuality();// sub_3ED9460()

	// Function Engine.GameUserSettings.GetDesktopResolution
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FIntPoint STATIC_GetDesktopResolution();// sub_5AA26C0()

	// Function Engine.GameUserSettings.GetDefaultWindowPosition
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FIntPoint STATIC_GetDefaultWindowPosition();// sub_85BA50()

	// Function Engine.GameUserSettings.GetDefaultWindowMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static TEnumAsByte<EWindowMode> STATIC_GetDefaultWindowMode();// sub_4865FF0()

	// Function Engine.GameUserSettings.GetDefaultResolutionScale
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetDefaultResolutionScale();// sub_2401EC0()

	// Function Engine.GameUserSettings.GetDefaultResolution
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FIntPoint STATIC_GetDefaultResolution();// sub_5786D50()

	// Function Engine.GameUserSettings.GetCurrentHDRDisplayNits
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetCurrentHDRDisplayNits();// sub_3E2D590()

	// Function Engine.GameUserSettings.GetAudioQualityLevel
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetAudioQualityLevel();// sub_5DF5D80()

	// Function Engine.GameUserSettings.GetAntiAliasingQuality
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetAntiAliasingQuality();// sub_3E46160()

	// Function Engine.GameUserSettings.EnableHDRDisplayOutput
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_EnableHDRDisplayOutput(unsigned char bEnable, int DisplayNits);// sub_1405110()

	// Function Engine.GameUserSettings.ConfirmVideoMode
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ConfirmVideoMode();// sub_4447330()

	// Function Engine.GameUserSettings.ApplySettings
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ApplySettings(unsigned char bCheckForCommandLineOverrides);// sub_1E91420()

	// Function Engine.GameUserSettings.ApplyResolutionSettings
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ApplyResolutionSettings(unsigned char bCheckForCommandLineOverrides);// sub_24666F0()

	// Function Engine.GameUserSettings.ApplyNonResolutionSettings
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ApplyNonResolutionSettings();// sub_76C420()

	// Function Engine.GameUserSettings.ApplyHardwareBenchmarkResults
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ApplyHardwareBenchmarkResults();// sub_4302C90()


}


//Class Engine.HapticFeedbackEffect_Base
//0x0000 (0x0040 - 0x0040)
class UHapticFeedbackEffect_Base : public UObject
{
public:

}


//Class Engine.HapticFeedbackEffect_Buffer
//0x0040 (0x0080 - 0x0040)
class UHapticFeedbackEffect_Buffer : public UHapticFeedbackEffect_Base
{
public:
	TArray<unsigned char>                              Amplitudes;                                               // 0x0040(0x0010) (Edit, ZeroConstructor)
	int                                                SampleRate;                                               // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2C];                                      // 0x0054(0x002C) MISSED OFFSET

}


//Class Engine.HapticFeedbackEffect_Curve
//0x00F0 (0x0130 - 0x0040)
class UHapticFeedbackEffect_Curve : public UHapticFeedbackEffect_Base
{
public:
	struct FHapticFeedbackDetails_Curve                HapticDetails;                                            // 0x0040(0x00F0) (Edit)

}


//Class Engine.HapticFeedbackEffect_SoundWave
//0x0038 (0x0078 - 0x0040)
class UHapticFeedbackEffect_SoundWave : public UHapticFeedbackEffect_Base
{
public:
	class USoundWave*                                  SoundWave;                                                // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x30];                                      // 0x0048(0x0030) MISSED OFFSET

}


//Class Engine.InheritableComponentHandler
//0x0020 (0x0060 - 0x0040)
class UInheritableComponentHandler : public UObject
{
public:
	TArray<struct FComponentOverrideRecord>            Records;                                                  // 0x0040(0x0010) (ZeroConstructor)
	TArray<class UActorComponent*>                     UnnecessaryComponents;                                    // 0x0050(0x0010) (ExportObject, ZeroConstructor, Transient)

}


//Class Engine.InputSettings
//0x0080 (0x00C0 - 0x0040)
class UInputSettings : public UObject
{
public:
	TArray<struct FInputAxisConfigEntry>               AxisConfig;                                               // 0x0040(0x0010) (Edit, EditFixedSize, ZeroConstructor, Config)
	unsigned char                                      bAltEnterTogglesFullscreen : 1;                           // 0x0050(0x0001) (Edit, Config)
	unsigned char                                      bF11TogglesFullscreen : 1;                                // 0x0050(0x0001) (Edit, Config)
	unsigned char                                      bUseMouseForTouch : 1;                                    // 0x0050(0x0001) (Edit, Config)
	unsigned char                                      bEnableMouseSmoothing : 1;                                // 0x0050(0x0001) (Edit, Config)
	unsigned char                                      bEnableFOVScaling : 1;                                    // 0x0050(0x0001) (Edit, Config)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	float                                              FOVScale;                                                 // 0x0054(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              DoubleClickTime;                                          // 0x0058(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bCaptureMouseOnLaunch : 1;                                // 0x005C(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	EMouseCaptureMode                                  DefaultViewportMouseCaptureMode;                          // 0x005D(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bDefaultViewportMouseLock : 1;                            // 0x005E(0x0001) (ZeroConstructor, Config, Deprecated, IsPlainOldData)
	EMouseLockMode                                     DefaultViewportMouseLockMode;                             // 0x005F(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	TArray<struct FInputActionKeyMapping>              ActionMappings;                                           // 0x0060(0x0010) (Edit, ZeroConstructor, Config)
	TArray<struct FInputAxisKeyMapping>                AxisMappings;                                             // 0x0070(0x0010) (Edit, ZeroConstructor, Config)
	unsigned char                                      bAlwaysShowTouchInterface : 1;                            // 0x0080(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0081(0x0001)
	unsigned char                                      bShowConsoleOnFourFingerTap : 1;                          // 0x0081(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0082(0x0006) MISSED OFFSET
	struct FStringAssetReference                       DefaultTouchInterface;                                    // 0x0088(0x0010) (Edit, ZeroConstructor, Config)
	struct FKey                                        ConsoleKey;                                               // 0x0098(0x0018) (Config, Deprecated)
	TArray<struct FKey>                                ConsoleKeys;                                              // 0x00B0(0x0010) (Edit, ZeroConstructor, Config)

}


//Class Engine.InterpCurveEdSetup
//0x0018 (0x0058 - 0x0040)
class UInterpCurveEdSetup : public UObject
{
public:
	TArray<struct FCurveEdTab>                         Tabs;                                                     // 0x0040(0x0010) (ZeroConstructor)
	int                                                ActiveTab;                                                // 0x0050(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

}


//Class Engine.InterpData
//0x0048 (0x0088 - 0x0040)
class UInterpData : public UObject
{
public:
	float                                              InterpLength;                                             // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              PathBuildTime;                                            // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<class UInterpGroup*>                        InterpGroups;                                             // 0x0048(0x0010) (ExportObject, ZeroConstructor)
	class UInterpCurveEdSetup*                         CurveEdSetup;                                             // 0x0058(0x0008) (ExportObject, ZeroConstructor, IsPlainOldData)
	float                                              EdSectionStart;                                           // 0x0060(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              EdSectionEnd;                                             // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bShouldBakeAndPrune : 1;                                  // 0x0068(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
	class UInterpGroupDirector*                        CachedDirectorGroup;                                      // 0x0070(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FName>                               AllEventNames;                                            // 0x0078(0x0010) (ZeroConstructor)

}


//Class Engine.InterpFilter
//0x0010 (0x0050 - 0x0040)
class UInterpFilter : public UObject
{
public:
	struct FString                                     Caption;                                                  // 0x0040(0x0010) (ZeroConstructor)

}


//Class Engine.InterpFilter_Classes
//0x0000 (0x0050 - 0x0050)
class UInterpFilter_Classes : public UInterpFilter
{
public:

}


//Class Engine.InterpFilter_Custom
//0x0000 (0x0050 - 0x0050)
class UInterpFilter_Custom : public UInterpFilter
{
public:

}


//Class Engine.InterpGroup
//0x0028 (0x0068 - 0x0040)
class UInterpGroup : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	TArray<class UInterpTrack*>                        InterpTracks;                                             // 0x0048(0x0010) (ExportObject, ZeroConstructor)
	struct FName                                       GroupName;                                                // 0x0058(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FColor                                      GroupColor;                                               // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bCollapsed : 1;                                           // 0x0064(0x0001)
	unsigned char                                      bVisible : 1;                                             // 0x0064(0x0001) (Transient)
	unsigned char                                      bIsFolder : 1;                                            // 0x0064(0x0001)
	unsigned char                                      bIsParented : 1;                                          // 0x0064(0x0001)
	unsigned char                                      bIsSelected : 1;                                          // 0x0064(0x0001) (Transient)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0065(0x0003) MISSED OFFSET

}


//Class Engine.InterpGroupCamera
//0x0010 (0x0078 - 0x0068)
class UInterpGroupCamera : public UInterpGroup
{
public:
	class UCameraAnim*                                 CameraAnimInst;                                           // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              CompressTolerance;                                        // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

}


//Class Engine.InterpGroupDirector
//0x0000 (0x0068 - 0x0068)
class UInterpGroupDirector : public UInterpGroup
{
public:

}


//Class Engine.InterpGroupInst
//0x0020 (0x0060 - 0x0040)
class UInterpGroupInst : public UObject
{
public:
	class UInterpGroup*                                Group;                                                    // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	class AActor*                                      GroupActor;                                               // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UInterpTrackInst*>                    TrackInst;                                                // 0x0050(0x0010) (ZeroConstructor)

}


//Class Engine.InterpGroupInstCamera
//0x0000 (0x0060 - 0x0060)
class UInterpGroupInstCamera : public UInterpGroupInst
{
public:

}


//Class Engine.InterpGroupInstDirector
//0x0000 (0x0060 - 0x0060)
class UInterpGroupInstDirector : public UInterpGroupInst
{
public:

}


//Class Engine.InterpTrack
//0x0048 (0x0088 - 0x0040)
class UInterpTrack : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0040(0x0010) MISSED OFFSET
	TArray<class UInterpTrack*>                        SubTracks;                                                // 0x0050(0x0010) (ZeroConstructor)
	class UInterpTrackInst*                            TrackInstClass;                                           // 0x0060(0x0008) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETrackActiveCondition>                 ActiveCondition;                                          // 0x0068(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
	struct FString                                     TrackTitle;                                               // 0x0070(0x0010) (ZeroConstructor)
	unsigned char                                      bOnePerGroup : 1;                                         // 0x0080(0x0001)
	unsigned char                                      bDirGroupOnly : 1;                                        // 0x0080(0x0001)
	unsigned char                                      bDisableTrack : 1;                                        // 0x0080(0x0001)
	unsigned char                                      bIsSelected : 1;                                          // 0x0080(0x0001) (Transient)
	unsigned char                                      bIsAnimControlTrack : 1;                                  // 0x0080(0x0001)
	unsigned char                                      bSubTrackOnly : 1;                                        // 0x0080(0x0001)
	unsigned char                                      bVisible : 1;                                             // 0x0080(0x0001) (Transient)
	unsigned char                                      bIsRecording : 1;                                         // 0x0080(0x0001) (Transient)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0081(0x0007) MISSED OFFSET

}


//Class Engine.InterpTrackBoolProp
//0x0018 (0x00A0 - 0x0088)
class UInterpTrackBoolProp : public UInterpTrack
{
public:
	TArray<struct FBoolTrackKey>                       BoolTrack;                                                // 0x0088(0x0010) (ZeroConstructor)
	struct FName                                       PropertyName;                                             // 0x0098(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)

}


//Class Engine.InterpTrackDirector
//0x0018 (0x00A0 - 0x0088)
class UInterpTrackDirector : public UInterpTrack
{
public:
	TArray<struct FDirectorTrackCut>                   CutTrack;                                                 // 0x0088(0x0010) (ZeroConstructor)
	unsigned char                                      bSimulateCameraCutsOnClients : 1;                         // 0x0098(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

}


//Class Engine.InterpTrackEvent
//0x0018 (0x00A0 - 0x0088)
class UInterpTrackEvent : public UInterpTrack
{
public:
	TArray<struct FEventTrackKey>                      EventTrack;                                               // 0x0088(0x0010) (ZeroConstructor)
	unsigned char                                      bFireEventsWhenForwards : 1;                              // 0x0098(0x0001) (Edit)
	unsigned char                                      bFireEventsWhenBackwards : 1;                             // 0x0098(0x0001) (Edit)
	unsigned char                                      bFireEventsWhenJumpingForwards : 1;                       // 0x0098(0x0001) (Edit)
	unsigned char                                      bUseCustomEventName : 1;                                  // 0x0098(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

}


//Class Engine.InterpTrackFloatBase
//0x0020 (0x00A8 - 0x0088)
class UInterpTrackFloatBase : public UInterpTrack
{
public:
	struct FInterpCurveFloat                           FloatTrack;                                               // 0x0088(0x0018) (ZeroConstructor)
	float                                              CurveTension;                                             // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET

}


//Class Engine.InterpTrackAnimControl
//0x0020 (0x00C8 - 0x00A8)
class UInterpTrackAnimControl : public UInterpTrackFloatBase
{
public:
	struct FName                                       SlotName;                                                 // 0x00A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FAnimControlTrackKey>                AnimSeqs;                                                 // 0x00B0(0x0010) (ZeroConstructor)
	unsigned char                                      bSkipAnimNotifiers : 1;                                   // 0x00C0(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00C1(0x0007) MISSED OFFSET

}


//Class Engine.InterpTrackFade
//0x0018 (0x00C0 - 0x00A8)
class UInterpTrackFade : public UInterpTrackFloatBase
{
public:
	unsigned char                                      bPersistFade : 1;                                         // 0x00A8(0x0001) (Edit)
	unsigned char                                      bFadeAudio : 1;                                           // 0x00A8(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00A9(0x0003) MISSED OFFSET
	struct FLinearColor                                FadeColor;                                                // 0x00AC(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET

}


//Class Engine.InterpTrackFloatAnimBPParam
//0x0020 (0x00C8 - 0x00A8)
class UInterpTrackFloatAnimBPParam : public UInterpTrackFloatBase
{
public:
	class UObject*                                     AnimBlueprintClass;                                       // 0x00A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAnimInstance*                               AnimClass;                                                // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ParamName;                                                // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x00C0(0x0008) MISSED OFFSET

}


//Class Engine.InterpTrackFloatMaterialParam
//0x0018 (0x00C0 - 0x00A8)
class UInterpTrackFloatMaterialParam : public UInterpTrackFloatBase
{
public:
	TArray<class UMaterialInterface*>                  TargetMaterials;                                          // 0x00A8(0x0010) (Edit, ZeroConstructor)
	struct FName                                       ParamName;                                                // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.InterpTrackFloatParticleParam
//0x0008 (0x00B0 - 0x00A8)
class UInterpTrackFloatParticleParam : public UInterpTrackFloatBase
{
public:
	struct FName                                       ParamName;                                                // 0x00A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.InterpTrackFloatProp
//0x0008 (0x00B0 - 0x00A8)
class UInterpTrackFloatProp : public UInterpTrackFloatBase
{
public:
	struct FName                                       PropertyName;                                             // 0x00A8(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)

}


//Class Engine.InterpTrackMove
//0x0058 (0x00E0 - 0x0088)
class UInterpTrackMove : public UInterpTrack
{
public:
	struct FInterpCurveVector                          PosTrack;                                                 // 0x0088(0x0018) (ZeroConstructor)
	struct FInterpCurveVector                          EulerTrack;                                               // 0x00A0(0x0018) (ZeroConstructor)
	struct FInterpLookupTrack                          LookupTrack;                                              // 0x00B8(0x0010)
	struct FName                                       LookAtGroupName;                                          // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LinCurveTension;                                          // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AngCurveTension;                                          // 0x00D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseQuatInterpolation : 1;                                // 0x00D8(0x0001) (Edit)
	unsigned char                                      bShowArrowAtKeys : 1;                                     // 0x00D8(0x0001) (Edit)
	unsigned char                                      bDisableMovement : 1;                                     // 0x00D8(0x0001) (Edit)
	unsigned char                                      bShowTranslationOnCurveEd : 1;                            // 0x00D8(0x0001) (Edit)
	unsigned char                                      bShowRotationOnCurveEd : 1;                               // 0x00D8(0x0001) (Edit)
	unsigned char                                      bHide3DTrack : 1;                                         // 0x00D8(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00D9(0x0003) MISSED OFFSET
	TEnumAsByte<EInterpTrackMoveRotMode>               RotMode;                                                  // 0x00DC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00DD(0x0003) MISSED OFFSET

}


//Class Engine.InterpTrackMoveAxis
//0x0018 (0x00C0 - 0x00A8)
class UInterpTrackMoveAxis : public UInterpTrackFloatBase
{
public:
	TEnumAsByte<EInterpMoveAxis>                       MoveAxis;                                                 // 0x00A8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00A9(0x0007) MISSED OFFSET
	struct FInterpLookupTrack                          LookupTrack;                                              // 0x00B0(0x0010)

}


//Class Engine.InterpTrackSlomo
//0x0000 (0x00A8 - 0x00A8)
class UInterpTrackSlomo : public UInterpTrackFloatBase
{
public:

}


//Class Engine.InterpTrackLinearColorBase
//0x0020 (0x00A8 - 0x0088)
class UInterpTrackLinearColorBase : public UInterpTrack
{
public:
	struct FInterpCurveLinearColor                     LinearColorTrack;                                         // 0x0088(0x0018) (ZeroConstructor)
	float                                              CurveTension;                                             // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET

}


//Class Engine.InterpTrackLinearColorProp
//0x0008 (0x00B0 - 0x00A8)
class UInterpTrackLinearColorProp : public UInterpTrackLinearColorBase
{
public:
	struct FName                                       PropertyName;                                             // 0x00A8(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)

}


//Class Engine.InterpTrackParticleReplay
//0x0010 (0x0098 - 0x0088)
class UInterpTrackParticleReplay : public UInterpTrack
{
public:
	TArray<struct FParticleReplayTrackKey>             TrackKeys;                                                // 0x0088(0x0010) (ZeroConstructor)

}


//Class Engine.InterpTrackToggle
//0x0018 (0x00A0 - 0x0088)
class UInterpTrackToggle : public UInterpTrack
{
public:
	TArray<struct FToggleTrackKey>                     ToggleTrack;                                              // 0x0088(0x0010) (ZeroConstructor)
	unsigned char                                      bActivateSystemEachUpdate : 1;                            // 0x0098(0x0001) (Edit)
	unsigned char                                      bActivateWithJustAttachedFlag : 1;                        // 0x0098(0x0001) (Edit)
	unsigned char                                      bFireEventsWhenForwards : 1;                              // 0x0098(0x0001) (Edit)
	unsigned char                                      bFireEventsWhenBackwards : 1;                             // 0x0098(0x0001) (Edit)
	unsigned char                                      bFireEventsWhenJumpingForwards : 1;                       // 0x0098(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

}


//Class Engine.InterpTrackVectorBase
//0x0020 (0x00A8 - 0x0088)
class UInterpTrackVectorBase : public UInterpTrack
{
public:
	struct FInterpCurveVector                          VectorTrack;                                              // 0x0088(0x0018) (ZeroConstructor)
	float                                              CurveTension;                                             // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET

}


//Class Engine.InterpTrackAudioMaster
//0x0000 (0x00A8 - 0x00A8)
class UInterpTrackAudioMaster : public UInterpTrackVectorBase
{
public:

}


//Class Engine.InterpTrackColorProp
//0x0008 (0x00B0 - 0x00A8)
class UInterpTrackColorProp : public UInterpTrackVectorBase
{
public:
	struct FName                                       PropertyName;                                             // 0x00A8(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)

}


//Class Engine.InterpTrackColorScale
//0x0000 (0x00A8 - 0x00A8)
class UInterpTrackColorScale : public UInterpTrackVectorBase
{
public:

}


//Class Engine.InterpTrackSound
//0x0018 (0x00C0 - 0x00A8)
class UInterpTrackSound : public UInterpTrackVectorBase
{
public:
	TArray<struct FSoundTrackKey>                      Sounds;                                                   // 0x00A8(0x0010) (ZeroConstructor)
	unsigned char                                      bPlayOnReverse : 1;                                       // 0x00B8(0x0001) (Edit)
	unsigned char                                      bContinueSoundOnMatineeEnd : 1;                           // 0x00B8(0x0001) (Edit)
	unsigned char                                      bSuppressSubtitles : 1;                                   // 0x00B8(0x0001) (Edit)
	unsigned char                                      bTreatAsDialogue : 1;                                     // 0x00B8(0x0001) (Edit)
	unsigned char                                      bAttach : 1;                                              // 0x00B8(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B9(0x0007) MISSED OFFSET

}


//Class Engine.InterpTrackVectorMaterialParam
//0x0018 (0x00C0 - 0x00A8)
class UInterpTrackVectorMaterialParam : public UInterpTrackVectorBase
{
public:
	TArray<class UMaterialInterface*>                  TargetMaterials;                                          // 0x00A8(0x0010) (Edit, ZeroConstructor)
	struct FName                                       ParamName;                                                // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.InterpTrackVectorProp
//0x0008 (0x00B0 - 0x00A8)
class UInterpTrackVectorProp : public UInterpTrackVectorBase
{
public:
	struct FName                                       PropertyName;                                             // 0x00A8(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)

}


//Class Engine.InterpTrackVisibility
//0x0018 (0x00A0 - 0x0088)
class UInterpTrackVisibility : public UInterpTrack
{
public:
	TArray<struct FVisibilityTrackKey>                 VisibilityTrack;                                          // 0x0088(0x0010) (ZeroConstructor)
	unsigned char                                      bFireEventsWhenForwards : 1;                              // 0x0098(0x0001) (Edit)
	unsigned char                                      bFireEventsWhenBackwards : 1;                             // 0x0098(0x0001) (Edit)
	unsigned char                                      bFireEventsWhenJumpingForwards : 1;                       // 0x0098(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

}


//Class Engine.InterpTrackInst
//0x0000 (0x0040 - 0x0040)
class UInterpTrackInst : public UObject
{
public:

}


//Class Engine.InterpTrackInstAnimControl
//0x0008 (0x0048 - 0x0040)
class UInterpTrackInstAnimControl : public UInterpTrackInst
{
public:
	float                                              LastUpdatePosition;                                       // 0x0040(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

}


//Class Engine.InterpTrackInstAudioMaster
//0x0000 (0x0040 - 0x0040)
class UInterpTrackInstAudioMaster : public UInterpTrackInst
{
public:

}


//Class Engine.InterpTrackInstColorScale
//0x0000 (0x0040 - 0x0040)
class UInterpTrackInstColorScale : public UInterpTrackInst
{
public:

}


//Class Engine.InterpTrackInstDirector
//0x0008 (0x0048 - 0x0040)
class UInterpTrackInstDirector : public UInterpTrackInst
{
public:
	class AActor*                                      OldViewTarget;                                            // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)

}


//Class Engine.InterpTrackInstEvent
//0x0008 (0x0048 - 0x0040)
class UInterpTrackInstEvent : public UInterpTrackInst
{
public:
	float                                              LastUpdatePosition;                                       // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

}


//Class Engine.InterpTrackInstFade
//0x0000 (0x0040 - 0x0040)
class UInterpTrackInstFade : public UInterpTrackInst
{
public:

}


//Class Engine.InterpTrackInstFloatAnimBPParam
//0x0018 (0x0058 - 0x0040)
class UInterpTrackInstFloatAnimBPParam : public UInterpTrackInst
{
public:
	class UAnimInstance*                               AnimScriptInstance;                                       // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              ResetFloat;                                               // 0x0048(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x004C(0x000C) MISSED OFFSET

}


//Class Engine.InterpTrackInstFloatMaterialParam
//0x0038 (0x0078 - 0x0040)
class UInterpTrackInstFloatMaterialParam : public UInterpTrackInst
{
public:
	TArray<class UMaterialInstanceDynamic*>            MaterialInstances;                                        // 0x0040(0x0010) (ZeroConstructor)
	TArray<float>                                      ResetFloats;                                              // 0x0050(0x0010) (ZeroConstructor)
	TArray<struct FPrimitiveMaterialRef>               PrimitiveMaterialRefs;                                    // 0x0060(0x0010) (ZeroConstructor)
	class UInterpTrackFloatMaterialParam*              InstancedTrack;                                           // 0x0070(0x0008) (ZeroConstructor, IsPlainOldData)

}


//Class Engine.InterpTrackInstFloatParticleParam
//0x0008 (0x0048 - 0x0040)
class UInterpTrackInstFloatParticleParam : public UInterpTrackInst
{
public:
	float                                              ResetFloat;                                               // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

}


//Class Engine.InterpTrackInstMove
//0x0018 (0x0058 - 0x0040)
class UInterpTrackInstMove : public UInterpTrackInst
{
public:
	struct FVector                                     ResetLocation;                                            // 0x0040(0x000C) (ZeroConstructor, IsPlainOldData)
	struct FRotator                                    ResetRotation;                                            // 0x004C(0x000C) (ZeroConstructor, IsPlainOldData)

}


//Class Engine.InterpTrackInstParticleReplay
//0x0008 (0x0048 - 0x0040)
class UInterpTrackInstParticleReplay : public UInterpTrackInst
{
public:
	float                                              LastUpdatePosition;                                       // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

}


//Class Engine.InterpTrackInstProperty
//0x0010 (0x0050 - 0x0040)
class UInterpTrackInstProperty : public UInterpTrackInst
{
public:
	class UProperty*                                   InterpProperty;                                           // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	class UObject*                                     PropertyOuterObjectInst;                                  // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)

}


//Class Engine.InterpTrackInstBoolProp
//0x0018 (0x0068 - 0x0050)
class UInterpTrackInstBoolProp : public UInterpTrackInstProperty
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
	class UBoolProperty*                               BoolProperty;                                             // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      ResetBool : 1;                                            // 0x0060(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0061(0x0007) MISSED OFFSET

}


//Class Engine.InterpTrackInstColorProp
//0x0010 (0x0060 - 0x0050)
class UInterpTrackInstColorProp : public UInterpTrackInstProperty
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
	struct FColor                                      ResetColor;                                               // 0x0058(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

}


//Class Engine.InterpTrackInstFloatProp
//0x0010 (0x0060 - 0x0050)
class UInterpTrackInstFloatProp : public UInterpTrackInstProperty
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
	float                                              ResetFloat;                                               // 0x0058(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

}


//Class Engine.InterpTrackInstLinearColorProp
//0x0018 (0x0068 - 0x0050)
class UInterpTrackInstLinearColorProp : public UInterpTrackInstProperty
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
	struct FLinearColor                                ResetColor;                                               // 0x0058(0x0010) (ZeroConstructor, IsPlainOldData)

}


//Class Engine.InterpTrackInstVectorProp
//0x0018 (0x0068 - 0x0050)
class UInterpTrackInstVectorProp : public UInterpTrackInstProperty
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET
	struct FVector                                     ResetVector;                                              // 0x0058(0x000C) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

}


//Class Engine.InterpTrackInstSlomo
//0x0008 (0x0048 - 0x0040)
class UInterpTrackInstSlomo : public UInterpTrackInst
{
public:
	float                                              OldTimeDilation;                                          // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET

}


//Class Engine.InterpTrackInstSound
//0x0010 (0x0050 - 0x0040)
class UInterpTrackInstSound : public UInterpTrackInst
{
public:
	float                                              LastUpdatePosition;                                       // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	class UAudioComponent*                             PlayAudioComp;                                            // 0x0048(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

}


//Class Engine.InterpTrackInstToggle
//0x0010 (0x0050 - 0x0040)
class UInterpTrackInstToggle : public UInterpTrackInst
{
public:
	TEnumAsByte<ETrackToggleAction>                    Action;                                                   // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              LastUpdatePosition;                                       // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bSavedActiveState : 1;                                    // 0x0048(0x0001)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

}


//Class Engine.InterpTrackInstVectorMaterialParam
//0x0038 (0x0078 - 0x0040)
class UInterpTrackInstVectorMaterialParam : public UInterpTrackInst
{
public:
	TArray<class UMaterialInstanceDynamic*>            MaterialInstances;                                        // 0x0040(0x0010) (ZeroConstructor)
	TArray<struct FVector>                             ResetVectors;                                             // 0x0050(0x0010) (ZeroConstructor)
	TArray<struct FPrimitiveMaterialRef>               PrimitiveMaterialRefs;                                    // 0x0060(0x0010) (ZeroConstructor)
	class UInterpTrackVectorMaterialParam*             InstancedTrack;                                           // 0x0070(0x0008) (ZeroConstructor, IsPlainOldData)

}


//Class Engine.InterpTrackInstVisibility
//0x0008 (0x0048 - 0x0040)
class UInterpTrackInstVisibility : public UInterpTrackInst
{
public:
	TEnumAsByte<EVisibilityTrackAction>                Action;                                                   // 0x0040(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              LastUpdatePosition;                                       // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData)

}


//Class Engine.IntSerialization
//0x0028 (0x0068 - 0x0040)
class UIntSerialization : public UObject
{
public:
	uint16_t                                           UnsignedInt16Variable;                                    // 0x0040(0x0002) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0042(0x0002) MISSED OFFSET
	uint32_t                                           UnsignedInt32Variable;                                    // 0x0044(0x0004) (ZeroConstructor, IsPlainOldData)
	uint64_t                                           UnsignedInt64Variable;                                    // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	int8_t                                             SignedInt8Variable;                                       // 0x0050(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0051(0x0001) MISSED OFFSET
	int16_t                                            SignedInt16Variable;                                      // 0x0052(0x0002) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	int64_t                                            SignedInt64Variable;                                      // 0x0058(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnsignedInt8Variable;                                     // 0x0060(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
	int                                                SignedInt32Variable;                                      // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData)

}


//Class Engine.LevelBlockLandscapeContainer
//0x0020 (0x0060 - 0x0040)
class ULevelBlockLandscapeContainer : public ULevelBlockResourceContainer
{
public:
	TArray<class ULandscapeOverrideManager*>           OverrideManagers;                                         // 0x0040(0x0010) (ZeroConstructor)
	TArray<struct FLevelBlockLandscapeData>            Instances;                                                // 0x0050(0x0010) (ZeroConstructor)

}


//Class Engine.LandscapeOverrideManager
//0x0190 (0x01D0 - 0x0040)
class ULandscapeOverrideManager : public UObject
{
public:
	class UWorld*                                      World;                                                    // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TLazyObjectPtr<class ALandscape>                   Landscape;                                                // 0x0048(0x001C) (IsPlainOldData)
	struct FGuid                                       LandscapeGuid;                                            // 0x0064(0x0010) (ZeroConstructor, IsPlainOldData)
	struct FIntRect                                    LandscapeDataRect;                                        // 0x0074(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0084(0x000C) MISSED OFFSET
	struct FLevelBlockLandscapeData                    LandscapeData;                                            // 0x0090(0x0100)
	class UMaterialInterface*                          LandscapeMaterial;                                        // 0x0190(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          LandscapeHoleMaterial;                                    // 0x0198(0x0008) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           BlendLayersMask;                                          // 0x01A0(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                VisibilityLayerIndex;                                     // 0x01A4(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<struct FWeightmapLayerAllocationInfo>       WeightmapLayerAllocations;                                // 0x01A8(0x0010) (ZeroConstructor)
	TArray<struct FLandscapeOverrideInstance>          GeneratedInstances;                                       // 0x01B8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x8];                                       // 0x01C8(0x0008) MISSED OFFSET

}


//Class Engine.Layer
//0x0020 (0x0060 - 0x0040)
class ULayer : public UObject
{
public:
	struct FName                                       LayerName;                                                // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsVisible : 1;                                           // 0x0048(0x0001)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	TArray<struct FLayerActorStats>                    ActorStats;                                               // 0x0050(0x0010) (ZeroConstructor, Transient)

}


//Class Engine.LevelActorContainer
//0x0010 (0x0050 - 0x0040)
class ULevelActorContainer : public UObject
{
public:
	TArray<class AActor*>                              Actors;                                                   // 0x0040(0x0010) (ZeroConstructor, Transient)

}


//Class Engine.DecalResourceContainer
//0x0030 (0x0070 - 0x0040)
class UDecalResourceContainer : public ULevelBlockResourceContainer
{
public:
	TArray<struct FDecalVariant>                       Variants;                                                 // 0x0040(0x0010) (ZeroConstructor)
	TArray<struct FTransform>                          Instances;                                                // 0x0050(0x0010) (ZeroConstructor)
	TArray<struct FLevelBlockInstance>                 LevelBlockInstances;                                      // 0x0060(0x0010) (ZeroConstructor)

}


//Class Engine.GrassVolumeResourceContainer
//0x0010 (0x0050 - 0x0040)
class UGrassVolumeResourceContainer : public ULevelBlockResourceContainer
{
public:
	TArray<struct FGrassVolumeInstance>                Instances;                                                // 0x0040(0x0010) (ZeroConstructor)

}


//Class Engine.LevelBlockSpawnPointContainer
//0x0020 (0x0060 - 0x0040)
class ULevelBlockSpawnPointContainer : public ULevelBlockResourceContainer
{
public:
	TArray<struct FLevelBlockSpawnPointTypes>          LevelBlockTypes;                                          // 0x0040(0x0010) (ZeroConstructor)
	TArray<struct FLevelBlockSpawnPointInstance>       Instances;                                                // 0x0050(0x0010) (ZeroConstructor)

}


//Class Engine.TextureRenderTarget
//0x0008 (0x00D8 - 0x00D0)
class UTextureRenderTarget : public UTexture
{
public:
	float                                              TargetGamma;                                              // 0x00D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00D4(0x0004) MISSED OFFSET

}


//Class Engine.TextureRenderTarget2D
//0x0028 (0x0100 - 0x00D8)
class UTextureRenderTarget2D : public UTextureRenderTarget
{
public:
	int                                                SizeX;                                                    // 0x00D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SizeY;                                                    // 0x00DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ClearColor;                                               // 0x00E0(0x0010) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETextureAddress>                       AddressX;                                                 // 0x00F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETextureAddress>                       AddressY;                                                 // 0x00F1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00F2(0x0002) MISSED OFFSET
	unsigned char                                      bForceLinearGamma : 1;                                    // 0x00F4(0x0001)
	unsigned char                                      bHDR : 1;                                                 // 0x00F4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bGPUSharedFlag : 1;                                       // 0x00F4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bAutoGenerateMips : 1;                                    // 0x00F4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00F5(0x0003) MISSED OFFSET
	TEnumAsByte<EPixelFormat>                          OverrideFormat;                                           // 0x00F8(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x00F9(0x0007) MISSED OFFSET

}


//Class Engine.MinimapManager
//0x0070 (0x00B0 - 0x0040)
class UMinimapManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET
	class UTexture2D*                                  BaseMinimap;                                              // 0x0070(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UTextureRenderTarget2D*                      MinimapRenderTarget;                                      // 0x0078(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FMinimapObjectInstance>              GeneratedObjects;                                         // 0x0080(0x0010) (ZeroConstructor, Transient)
	TArray<struct FMinimapLabelInstance>               GeneratedLabels;                                          // 0x0090(0x0010) (ZeroConstructor, Transient)
	TArray<class UObject*>                             LoadedDatas;                                              // 0x00A0(0x0010) (ZeroConstructor, Transient)

}


//Class Engine.MinimapResourceContainer
//0x0028 (0x0068 - 0x0040)
class UMinimapResourceContainer : public ULevelBlockResourceContainer
{
public:
	TArray<struct FMinimapObjectInstance>              ObjectInstances;                                          // 0x0040(0x0010) (ZeroConstructor)
	TArray<struct FMinimapLabelInstance>               LabelInstances;                                           // 0x0050(0x0010) (ZeroConstructor)
	class UMinimapManager*                             Manager;                                                  // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

}


//Class Engine.NavigationDataContainer
//0x0038 (0x0078 - 0x0040)
class UNavigationDataContainer : public ULevelBlockResourceContainer
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x0040(0x0038) MISSED OFFSET

}


//Class Engine.PointLightContainer
//0x0030 (0x0070 - 0x0040)
class UPointLightContainer : public ULevelBlockResourceContainer
{
public:
	TArray<struct FPointLightVariant>                  Variants;                                                 // 0x0040(0x0010) (ZeroConstructor)
	TArray<struct FTransform>                          Instances;                                                // 0x0050(0x0010) (ZeroConstructor)
	TArray<struct FLevelBlockInstance>                 LevelBlockInstances;                                      // 0x0060(0x0010) (ZeroConstructor)

}


//Class Engine.SplineMeshContainer
//0x0010 (0x0050 - 0x0040)
class USplineMeshContainer : public ULevelBlockResourceContainer
{
public:
	TArray<struct FLevelBlockInstance>                 LevelBlockInstances;                                      // 0x0040(0x0010) (ZeroConstructor)

}


//Class Engine.StaticMeshContainer
//0x0030 (0x0070 - 0x0040)
class UStaticMeshContainer : public ULevelBlockResourceContainer
{
public:
	TArray<struct FStaticMeshVariant>                  Variants;                                                 // 0x0040(0x0010) (ZeroConstructor)
	TArray<struct FStaticMeshInstance>                 Instances;                                                // 0x0050(0x0010) (ZeroConstructor)
	TArray<struct FLevelBlockInstance>                 LevelBlockInstances;                                      // 0x0060(0x0010) (ZeroConstructor)

}


//Class Engine.LevelStreaming
//0x0150 (0x0190 - 0x0040)
class ULevelStreaming : public UObject
{
public:
	struct FName                                       PackageName;                                              // 0x0040(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	TAssetPtr<classUWorld>                             WorldAsset;                                               // 0x0048(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst)
	struct FName                                       PackageNameToLoad;                                        // 0x0068(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               LODPackageNames;                                          // 0x0070(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0080(0x0010) MISSED OFFSET
	struct FTransform                                  LevelTransform;                                           // 0x0090(0x0030) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x00C0(0x0014) MISSED OFFSET
	unsigned char                                      bShouldBeVisibleInEditor : 1;                             // 0x00D4(0x0001)
	unsigned char                                      bLocked : 1;                                              // 0x00D4(0x0001)
	unsigned char                                      bShouldBeLoaded : 1;                                      // 0x00D4(0x0001) (BlueprintVisible)
	unsigned char                                      bShouldBeVisible : 1;                                     // 0x00D4(0x0001) (BlueprintVisible)
	unsigned char                                      UnknownData02 : 8;                                        // 0x00D5(0x0001)
	unsigned char                                      bIsStatic : 1;                                            // 0x00D5(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bShouldBlockOnLoad : 1;                                   // 0x00D5(0x0001) (BlueprintVisible)
	unsigned char                                      UnknownData03[0x2];                                       // 0x00D6(0x0002) MISSED OFFSET
	int                                                LevelLODIndex;                                            // 0x00D8(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET
	unsigned char                                      bDisableDistanceStreaming : 1;                            // 0x00E0(0x0001) (BlueprintVisible, Transient)
	unsigned char                                      bDrawOnLevelStatusMap : 1;                                // 0x00E0(0x0001) (Edit)
	unsigned char                                      UnknownData05[0x3];                                       // 0x00E1(0x0003) MISSED OFFSET
	struct FColor                                      DrawColor;                                                // 0x00E4(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	struct FLinearColor                                LevelColor;                                               // 0x00E8(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<class ALevelStreamingVolume*>               EditorStreamingVolumes;                                   // 0x00F8(0x0010) (Edit, ZeroConstructor)
	float                                              MinTimeBetweenVolumeUnloadRequests;                       // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0xC];                                       // 0x010C(0x000C) MISSED OFFSET
	TArray<struct FString>                             Keywords;                                                 // 0x0118(0x0010) (ZeroConstructor)
	struct FScriptMulticastDelegate                    OnLevelLoaded;                                            // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLevelUnloaded;                                          // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLevelShown;                                             // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLevelHidden;                                            // 0x0158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class ULevel*                                      LoadedLevel;                                              // 0x0168(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ULevel*                                      PendingUnloadLevel;                                       // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x18];                                      // 0x0178(0x0018) MISSED OFFSET

	// Function Engine.LevelStreaming.IsStreamingStatePending
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsStreamingStatePending();// sub_51267D0()

	// Function Engine.LevelStreaming.IsLevelVisible
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsLevelVisible();// sub_45B0E50()

	// Function Engine.LevelStreaming.IsLevelLoaded
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsLevelLoaded();// sub_455DE90()

	// Function Engine.LevelStreaming.GetLevelScriptActor
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class ALevelScriptActor* STATIC_GetLevelScriptActor();// sub_1554E40()

	// Function Engine.LevelStreaming.CreateInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class ULevelStreaming* STATIC_CreateInstance(const struct FString& UniqueInstanceName);// sub_3F11B50()


}


//Class Engine.LevelStreamingAlwaysLoaded
//0x0000 (0x0190 - 0x0190)
class ULevelStreamingAlwaysLoaded : public ULevelStreaming
{
public:

}


//Class Engine.LevelStreamingKismet
//0x0000 (0x0190 - 0x0190)
class ULevelStreamingKismet : public ULevelStreaming
{
public:

	// Function Engine.LevelStreamingKismet.LoadLevelInstance
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class ULevelStreamingKismet* STATIC_LoadLevelInstance(class UObject* WorldContextObject, const struct FString& LevelName, const struct FVector& Location, const struct FRotator& Rotation, unsigned char* bOutSuccess);// sub_4F162C0()


}


//Class Engine.LevelStreamingPersistent
//0x0000 (0x0190 - 0x0190)
class ULevelStreamingPersistent : public ULevelStreaming
{
public:

}


//Class Engine.LightmappedSurfaceCollection
//0x0018 (0x0058 - 0x0040)
class ULightmappedSurfaceCollection : public UObject
{
public:
	class UModel*                                      SourceModel;                                              // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<int>                                        Surfaces;                                                 // 0x0048(0x0010) (Edit, ZeroConstructor)

}


//Class Engine.LightmassPrimitiveSettingsObject
//0x0018 (0x0058 - 0x0040)
class ULightmassPrimitiveSettingsObject : public UObject
{
public:
	struct FLightmassPrimitiveSettings                 LightmassSettings;                                        // 0x0040(0x0018) (Edit)

}


//Class Engine.LocalMessage
//0x0000 (0x0040 - 0x0040)
class ULocalMessage : public UObject
{
public:

}


//Class Engine.EngineMessage
//0x0080 (0x00C0 - 0x0040)
class UEngineMessage : public ULocalMessage
{
public:
	struct FString                                     FailedPlaceMessage;                                       // 0x0040(0x0010) (ZeroConstructor)
	struct FString                                     MaxedOutMessage;                                          // 0x0050(0x0010) (ZeroConstructor)
	struct FString                                     EnteredMessage;                                           // 0x0060(0x0010) (ZeroConstructor)
	struct FString                                     LeftMessage;                                              // 0x0070(0x0010) (ZeroConstructor)
	struct FString                                     GlobalNameChange;                                         // 0x0080(0x0010) (ZeroConstructor)
	struct FString                                     SpecEnteredMessage;                                       // 0x0090(0x0010) (ZeroConstructor)
	struct FString                                     NewPlayerMessage;                                         // 0x00A0(0x0010) (ZeroConstructor)
	struct FString                                     NewSpecMessage;                                           // 0x00B0(0x0010) (ZeroConstructor)

}


//Class Engine.MapBuildDataRegistry
//0x00F8 (0x0138 - 0x0040)
class UMapBuildDataRegistry : public UObject
{
public:
	TEnumAsByte<ELightingBuildQuality>                 LevelLightingQuality;                                     // 0x0040(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF7];                                      // 0x0041(0x00F7) MISSED OFFSET

}


//Class Engine.MaterialExpressionAbs
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionAbs : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionActorPositionWS
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionActorPositionWS : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionAdd
//0x0078 (0x00F0 - 0x0078)
class UMaterialExpressionAdd : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                        // 0x0078(0x0038)
	struct FExpressionInput                            B;                                                        // 0x00B0(0x0038)
	float                                              ConstA;                                                   // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ConstB;                                                   // 0x00EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionAppendVector
//0x0070 (0x00E8 - 0x0078)
class UMaterialExpressionAppendVector : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                        // 0x0078(0x0038)
	struct FExpressionInput                            B;                                                        // 0x00B0(0x0038)

}


//Class Engine.MaterialExpressionArccosine
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionArccosine : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionArccosineFast
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionArccosineFast : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionArcsine
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionArcsine : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionArcsineFast
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionArcsineFast : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionArctangent
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionArctangent : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionArctangent2
//0x0070 (0x00E8 - 0x0078)
class UMaterialExpressionArctangent2 : public UMaterialExpression
{
public:
	struct FExpressionInput                            Y;                                                        // 0x0078(0x0038)
	struct FExpressionInput                            X;                                                        // 0x00B0(0x0038)

}


//Class Engine.MaterialExpressionArctangent2Fast
//0x0070 (0x00E8 - 0x0078)
class UMaterialExpressionArctangent2Fast : public UMaterialExpression
{
public:
	struct FExpressionInput                            Y;                                                        // 0x0078(0x0038)
	struct FExpressionInput                            X;                                                        // 0x00B0(0x0038)

}


//Class Engine.MaterialExpressionArctangentFast
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionArctangentFast : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionAtmosphericFogColor
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionAtmosphericFogColor : public UMaterialExpression
{
public:
	struct FExpressionInput                            WorldPosition;                                            // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionAtmosphericLightColor
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionAtmosphericLightColor : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionAtmosphericLightVector
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionAtmosphericLightVector : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionBlackBody
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionBlackBody : public UMaterialExpression
{
public:
	struct FExpressionInput                            Temp;                                                     // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionBlendMaterialAttributes
//0x00C0 (0x0138 - 0x0078)
class UMaterialExpressionBlendMaterialAttributes : public UMaterialExpression
{
public:
	struct FMaterialAttributesInput                    A;                                                        // 0x0078(0x0040)
	struct FMaterialAttributesInput                    B;                                                        // 0x00B8(0x0040)
	struct FExpressionInput                            ALPHA;                                                    // 0x00F8(0x0038)
	TEnumAsByte<EMaterialAttributeBlend>               PixelAttributeBlendType;                                  // 0x0130(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMaterialAttributeBlend>               VertexAttributeBlendType;                                 // 0x0131(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0132(0x0006) MISSED OFFSET

}


//Class Engine.MaterialExpressionBreakMaterialAttributes
//0x0040 (0x00B8 - 0x0078)
class UMaterialExpressionBreakMaterialAttributes : public UMaterialExpression
{
public:
	struct FMaterialAttributesInput                    MaterialAttributes;                                       // 0x0078(0x0040)

}


//Class Engine.MaterialExpressionBumpOffset
//0x00B8 (0x0130 - 0x0078)
class UMaterialExpressionBumpOffset : public UMaterialExpression
{
public:
	struct FExpressionInput                            Coordinate;                                               // 0x0078(0x0038)
	struct FExpressionInput                            Height;                                                   // 0x00B0(0x0038)
	struct FExpressionInput                            HeightRatioInput;                                         // 0x00E8(0x0038)
	float                                              HeightRatio;                                              // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ReferencePlane;                                           // 0x0124(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           ConstCoordinate;                                          // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x012C(0x0004) MISSED OFFSET

}


//Class Engine.MaterialExpressionCameraPositionWS
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionCameraPositionWS : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionCameraVectorWS
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionCameraVectorWS : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionCeil
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionCeil : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionClamp
//0x00B8 (0x0130 - 0x0078)
class UMaterialExpressionClamp : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)
	struct FExpressionInput                            Min;                                                      // 0x00B0(0x0038)
	struct FExpressionInput                            Max;                                                      // 0x00E8(0x0038)
	TEnumAsByte<EClampMode>                            ClampMode;                                                // 0x0120(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0121(0x0003) MISSED OFFSET
	float                                              MinDefault;                                               // 0x0124(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxDefault;                                               // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x012C(0x0004) MISSED OFFSET

}


//Class Engine.MaterialExpressionCollectionParameter
//0x0020 (0x0098 - 0x0078)
class UMaterialExpressionCollectionParameter : public UMaterialExpression
{
public:
	class UMaterialParameterCollection*                Collection;                                               // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ParameterName;                                            // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGuid                                       ParameterId;                                              // 0x0088(0x0010) (ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionComment
//0x0028 (0x00A0 - 0x0078)
class UMaterialExpressionComment : public UMaterialExpression
{
public:
	int                                                SizeX;                                                    // 0x0078(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                SizeY;                                                    // 0x007C(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     Text;                                                     // 0x0080(0x0010) (Edit, ZeroConstructor)
	struct FLinearColor                                CommentColor;                                             // 0x0090(0x0010) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionComponentMask
//0x0040 (0x00B8 - 0x0078)
class UMaterialExpressionComponentMask : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)
	unsigned char                                      R : 1;                                                    // 0x00B0(0x0001) (Edit)
	unsigned char                                      G : 1;                                                    // 0x00B0(0x0001) (Edit)
	unsigned char                                      B : 1;                                                    // 0x00B0(0x0001) (Edit)
	unsigned char                                      A : 1;                                                    // 0x00B0(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET

}


//Class Engine.MaterialExpressionConstant
//0x0008 (0x0080 - 0x0078)
class UMaterialExpressionConstant : public UMaterialExpression
{
public:
	float                                              R;                                                        // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x007C(0x0004) MISSED OFFSET

}


//Class Engine.MaterialExpressionConstant2Vector
//0x0008 (0x0080 - 0x0078)
class UMaterialExpressionConstant2Vector : public UMaterialExpression
{
public:
	float                                              R;                                                        // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              G;                                                        // 0x007C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionConstant3Vector
//0x0010 (0x0088 - 0x0078)
class UMaterialExpressionConstant3Vector : public UMaterialExpression
{
public:
	struct FLinearColor                                Constant;                                                 // 0x0078(0x0010) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionConstant4Vector
//0x0010 (0x0088 - 0x0078)
class UMaterialExpressionConstant4Vector : public UMaterialExpression
{
public:
	struct FLinearColor                                Constant;                                                 // 0x0078(0x0010) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionConstantBiasScale
//0x0040 (0x00B8 - 0x0078)
class UMaterialExpressionConstantBiasScale : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)
	float                                              Bias;                                                     // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Scale;                                                    // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionCosine
//0x0040 (0x00B8 - 0x0078)
class UMaterialExpressionCosine : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)
	float                                              Period;                                                   // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET

}


//Class Engine.MaterialExpressionCrossProduct
//0x0070 (0x00E8 - 0x0078)
class UMaterialExpressionCrossProduct : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                        // 0x0078(0x0038)
	struct FExpressionInput                            B;                                                        // 0x00B0(0x0038)

}


//Class Engine.MaterialExpressionCustom
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionCustom : public UMaterialExpression
{
public:
	struct FString                                     Code;                                                     // 0x0078(0x0010) (Edit, ZeroConstructor)
	TEnumAsByte<ECustomMaterialOutputType>             OutputType;                                               // 0x0088(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0089(0x0007) MISSED OFFSET
	struct FString                                     Description;                                              // 0x0090(0x0010) (Edit, ZeroConstructor)
	TArray<struct FCustomInput>                        Inputs;                                                   // 0x00A0(0x0010) (Edit, ZeroConstructor)

}


//Class Engine.MaterialExpressionClearCoatNormalCustomOutput
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionClearCoatNormalCustomOutput : public UMaterialExpressionCustomOutput
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionTangentOutput
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionTangentOutput : public UMaterialExpressionCustomOutput
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionVertexInterpolator
//0x0048 (0x00C0 - 0x0078)
class UMaterialExpressionVertexInterpolator : public UMaterialExpressionCustomOutput
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)
	unsigned char                                      UnknownData00[0x10];                                      // 0x00B0(0x0010) MISSED OFFSET

}


//Class Engine.MaterialExpressionDDX
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionDDX : public UMaterialExpression
{
public:
	struct FExpressionInput                            Value;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionDDY
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionDDY : public UMaterialExpression
{
public:
	struct FExpressionInput                            Value;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionDecalDerivative
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionDecalDerivative : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionDecalLifetimeOpacity
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionDecalLifetimeOpacity : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionDecalMipmapLevel
//0x0040 (0x00B8 - 0x0078)
class UMaterialExpressionDecalMipmapLevel : public UMaterialExpression
{
public:
	struct FExpressionInput                            TextureSize;                                              // 0x0078(0x0038)
	float                                              ConstWidth;                                               // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ConstHeight;                                              // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionDepthFade
//0x0078 (0x00F0 - 0x0078)
class UMaterialExpressionDepthFade : public UMaterialExpression
{
public:
	struct FExpressionInput                            InOpacity;                                                // 0x0078(0x0038)
	struct FExpressionInput                            FadeDistance;                                             // 0x00B0(0x0038)
	float                                              OpacityDefault;                                           // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FadeDistanceDefault;                                      // 0x00EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionDepthOfFieldFunction
//0x0040 (0x00B8 - 0x0078)
class UMaterialExpressionDepthOfFieldFunction : public UMaterialExpression
{
public:
	TEnumAsByte<EDepthOfFieldFunctionValue>            FunctionValue;                                            // 0x0078(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0079(0x0007) MISSED OFFSET
	struct FExpressionInput                            Depth;                                                    // 0x0080(0x0038)

}


//Class Engine.MaterialExpressionDeriveNormalZ
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionDeriveNormalZ : public UMaterialExpression
{
public:
	struct FExpressionInput                            InXY;                                                     // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionDesaturation
//0x0080 (0x00F8 - 0x0078)
class UMaterialExpressionDesaturation : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)
	struct FExpressionInput                            Fraction;                                                 // 0x00B0(0x0038)
	struct FLinearColor                                LuminanceFactors;                                         // 0x00E8(0x0010) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionDistance
//0x0070 (0x00E8 - 0x0078)
class UMaterialExpressionDistance : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                        // 0x0078(0x0038)
	struct FExpressionInput                            B;                                                        // 0x00B0(0x0038)

}


//Class Engine.MaterialExpressionDistanceCullFade
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionDistanceCullFade : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionDistanceFieldGradient
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionDistanceFieldGradient : public UMaterialExpression
{
public:
	struct FExpressionInput                            Position;                                                 // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionDistanceToNearestSurface
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionDistanceToNearestSurface : public UMaterialExpression
{
public:
	struct FExpressionInput                            Position;                                                 // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionDivide
//0x0078 (0x00F0 - 0x0078)
class UMaterialExpressionDivide : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                        // 0x0078(0x0038)
	struct FExpressionInput                            B;                                                        // 0x00B0(0x0038)
	float                                              ConstA;                                                   // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ConstB;                                                   // 0x00EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionDotProduct
//0x0070 (0x00E8 - 0x0078)
class UMaterialExpressionDotProduct : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                        // 0x0078(0x0038)
	struct FExpressionInput                            B;                                                        // 0x00B0(0x0038)

}


//Class Engine.MaterialExpressionDynamicParameter
//0x0020 (0x0098 - 0x0078)
class UMaterialExpressionDynamicParameter : public UMaterialExpression
{
public:
	TArray<struct FString>                             ParamNames;                                               // 0x0078(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	struct FLinearColor                                DefaultValue;                                             // 0x0088(0x0010) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionEyeAdaptation
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionEyeAdaptation : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionFeatureLevelSwitch
//0x0118 (0x0190 - 0x0078)
class UMaterialExpressionFeatureLevelSwitch : public UMaterialExpression
{
public:
	struct FExpressionInput                            Default;                                                  // 0x0078(0x0038)
	struct FExpressionInput                            Inputs[0x4];                                              // 0x00B0(0x0038)

}


//Class Engine.MaterialExpressionFloor
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionFloor : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionFmod
//0x0070 (0x00E8 - 0x0078)
class UMaterialExpressionFmod : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                        // 0x0078(0x0038)
	struct FExpressionInput                            B;                                                        // 0x00B0(0x0038)

}


//Class Engine.MaterialExpressionFontSample
//0x0010 (0x0088 - 0x0078)
class UMaterialExpressionFontSample : public UMaterialExpression
{
public:
	class UFont*                                       Font;                                                     // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                FontTexturePage;                                          // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0084(0x0004) MISSED OFFSET

}


//Class Engine.MaterialExpressionFontSampleParameter
//0x0020 (0x00A8 - 0x0088)
class UMaterialExpressionFontSampleParameter : public UMaterialExpressionFontSample
{
public:
	struct FName                                       ParameterName;                                            // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGuid                                       ExpressionGUID;                                           // 0x0090(0x0010) (ZeroConstructor, IsPlainOldData)
	struct FName                                       Group;                                                    // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionFrac
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionFrac : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionFresnel
//0x00B8 (0x0130 - 0x0078)
class UMaterialExpressionFresnel : public UMaterialExpression
{
public:
	struct FExpressionInput                            ExponentIn;                                               // 0x0078(0x0038)
	float                                              Exponent;                                                 // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET
	struct FExpressionInput                            BaseReflectFractionIn;                                    // 0x00B8(0x0038)
	float                                              BaseReflectFraction;                                      // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	struct FExpressionInput                            Normal;                                                   // 0x00F8(0x0038)

}


//Class Engine.MaterialExpressionFunctionInput
//0x00D8 (0x0150 - 0x0078)
class UMaterialExpressionFunctionInput : public UMaterialExpression
{
public:
	struct FExpressionInput                            Preview;                                                  // 0x0078(0x0038)
	struct FString                                     InputName;                                                // 0x00B0(0x0010) (Edit, ZeroConstructor)
	struct FString                                     Description;                                              // 0x00C0(0x0010) (Edit, ZeroConstructor)
	struct FGuid                                       ID;                                                       // 0x00D0(0x0010) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFunctionInputType>                    InputType;                                                // 0x00E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x00E1(0x000F) MISSED OFFSET
	struct FVector4                                    PreviewValue;                                             // 0x00F0(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUsePreviewValueAsDefault : 1;                            // 0x0100(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0101(0x0003) MISSED OFFSET
	int                                                SortPriority;                                             // 0x0104(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bCompilingFunctionPreview : 1;                            // 0x0108(0x0001) (Transient)
	unsigned char                                      UnknownData02[0x47];                                      // 0x0109(0x0047) MISSED OFFSET

}


//Class Engine.MaterialExpressionFunctionOutput
//0x0078 (0x00F0 - 0x0078)
class UMaterialExpressionFunctionOutput : public UMaterialExpression
{
public:
	struct FString                                     OutputName;                                               // 0x0078(0x0010) (Edit, ZeroConstructor)
	struct FString                                     Description;                                              // 0x0088(0x0010) (Edit, ZeroConstructor)
	int                                                SortPriority;                                             // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
	struct FExpressionInput                            A;                                                        // 0x00A0(0x0038)
	unsigned char                                      bLastPreviewed : 1;                                       // 0x00D8(0x0001)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00D9(0x0003) MISSED OFFSET
	struct FGuid                                       ID;                                                       // 0x00DC(0x0010) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00EC(0x0004) MISSED OFFSET

}


//Class Engine.MaterialExpressionGetMaterialAttributes
//0x0050 (0x00C8 - 0x0078)
class UMaterialExpressionGetMaterialAttributes : public UMaterialExpression
{
public:
	struct FMaterialAttributesInput                    MaterialAttributes;                                       // 0x0078(0x0040)
	TArray<struct FGuid>                               AttributeGetTypes;                                        // 0x00B8(0x0010) (Edit, ZeroConstructor)

}


//Class Engine.MaterialExpressionGIReplace
//0x00A8 (0x0120 - 0x0078)
class UMaterialExpressionGIReplace : public UMaterialExpression
{
public:
	struct FExpressionInput                            Default;                                                  // 0x0078(0x0038)
	struct FExpressionInput                            StaticIndirect;                                           // 0x00B0(0x0038)
	struct FExpressionInput                            DynamicIndirect;                                          // 0x00E8(0x0038)

}


//Class Engine.MaterialExpressionIf
//0x0128 (0x01A0 - 0x0078)
class UMaterialExpressionIf : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                        // 0x0078(0x0038)
	struct FExpressionInput                            B;                                                        // 0x00B0(0x0038)
	struct FExpressionInput                            AGreaterThanB;                                            // 0x00E8(0x0038)
	struct FExpressionInput                            AEqualsB;                                                 // 0x0120(0x0038)
	struct FExpressionInput                            ALessThanB;                                               // 0x0158(0x0038)
	float                                              EqualsThreshold;                                          // 0x0190(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ConstB;                                                   // 0x0194(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ConstAEqualsB;                                            // 0x0198(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x019C(0x0004) MISSED OFFSET

}


//Class Engine.MaterialExpressionLightmapUVs
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionLightmapUVs : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionLightmassReplace
//0x0070 (0x00E8 - 0x0078)
class UMaterialExpressionLightmassReplace : public UMaterialExpression
{
public:
	struct FExpressionInput                            RealTime;                                                 // 0x0078(0x0038)
	struct FExpressionInput                            Lightmass;                                                // 0x00B0(0x0038)

}


//Class Engine.MaterialExpressionLightVector
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionLightVector : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionLinearInterpolate
//0x00B8 (0x0130 - 0x0078)
class UMaterialExpressionLinearInterpolate : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                        // 0x0078(0x0038)
	struct FExpressionInput                            B;                                                        // 0x00B0(0x0038)
	struct FExpressionInput                            ALPHA;                                                    // 0x00E8(0x0038)
	float                                              ConstA;                                                   // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ConstB;                                                   // 0x0124(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ConstAlpha;                                               // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x012C(0x0004) MISSED OFFSET

}


//Class Engine.MaterialExpressionLogarithm2
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionLogarithm2 : public UMaterialExpression
{
public:
	struct FExpressionInput                            X;                                                        // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionMakeMaterialAttributes
//0x0578 (0x05F0 - 0x0078)
class UMaterialExpressionMakeMaterialAttributes : public UMaterialExpression
{
public:
	struct FExpressionInput                            BaseColor;                                                // 0x0078(0x0038)
	struct FExpressionInput                            Metallic;                                                 // 0x00B0(0x0038)
	struct FExpressionInput                            Specular;                                                 // 0x00E8(0x0038)
	struct FExpressionInput                            Roughness;                                                // 0x0120(0x0038)
	struct FExpressionInput                            EmissiveColor;                                            // 0x0158(0x0038)
	struct FExpressionInput                            Opacity;                                                  // 0x0190(0x0038)
	struct FExpressionInput                            OpacityMask;                                              // 0x01C8(0x0038)
	struct FExpressionInput                            Normal;                                                   // 0x0200(0x0038)
	struct FExpressionInput                            WorldPositionOffset;                                      // 0x0238(0x0038)
	struct FExpressionInput                            WorldDisplacement;                                        // 0x0270(0x0038)
	struct FExpressionInput                            TessellationMultiplier;                                   // 0x02A8(0x0038)
	struct FExpressionInput                            SubsurfaceColor;                                          // 0x02E0(0x0038)
	struct FExpressionInput                            ClearCoat;                                                // 0x0318(0x0038)
	struct FExpressionInput                            ClearCoatRoughness;                                       // 0x0350(0x0038)
	struct FExpressionInput                            AmbientOcclusion;                                         // 0x0388(0x0038)
	struct FExpressionInput                            Refraction;                                               // 0x03C0(0x0038)
	struct FExpressionInput                            CustomizedUVs[0x8];                                       // 0x03F8(0x0038)
	struct FExpressionInput                            PixelDepthOffset;                                         // 0x05B8(0x0038)

}


//Class Engine.MaterialExpressionMaterialFunctionCall
//0x0028 (0x00A0 - 0x0078)
class UMaterialExpressionMaterialFunctionCall : public UMaterialExpression
{
public:
	class UMaterialFunction*                           MaterialFunction;                                         // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FFunctionExpressionInput>            FunctionInputs;                                           // 0x0080(0x0010) (ZeroConstructor)
	TArray<struct FFunctionExpressionOutput>           FunctionOutputs;                                          // 0x0090(0x0010) (ZeroConstructor)

}


//Class Engine.MaterialExpressionMaterialProxyReplace
//0x0070 (0x00E8 - 0x0078)
class UMaterialExpressionMaterialProxyReplace : public UMaterialExpression
{
public:
	struct FExpressionInput                            RealTime;                                                 // 0x0078(0x0038)
	struct FExpressionInput                            MaterialProxy;                                            // 0x00B0(0x0038)

}


//Class Engine.MaterialExpressionMax
//0x0078 (0x00F0 - 0x0078)
class UMaterialExpressionMax : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                        // 0x0078(0x0038)
	struct FExpressionInput                            B;                                                        // 0x00B0(0x0038)
	float                                              ConstA;                                                   // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ConstB;                                                   // 0x00EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionMin
//0x0078 (0x00F0 - 0x0078)
class UMaterialExpressionMin : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                        // 0x0078(0x0038)
	struct FExpressionInput                            B;                                                        // 0x00B0(0x0038)
	float                                              ConstA;                                                   // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ConstB;                                                   // 0x00EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionMultiply
//0x0078 (0x00F0 - 0x0078)
class UMaterialExpressionMultiply : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                        // 0x0078(0x0038)
	struct FExpressionInput                            B;                                                        // 0x00B0(0x0038)
	float                                              ConstA;                                                   // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ConstB;                                                   // 0x00EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionNoise
//0x0098 (0x0110 - 0x0078)
class UMaterialExpressionNoise : public UMaterialExpression
{
public:
	struct FExpressionInput                            Position;                                                 // 0x0078(0x0038)
	struct FExpressionInput                            FilterWidth;                                              // 0x00B0(0x0038)
	float                                              Scale;                                                    // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Quality;                                                  // 0x00EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ENoiseFunction>                        NoiseFunction;                                            // 0x00F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	unsigned char                                      bTurbulence : 1;                                          // 0x00F4(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00F5(0x0003) MISSED OFFSET
	int                                                Levels;                                                   // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OutputMin;                                                // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OutputMax;                                                // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LevelScale;                                               // 0x0104(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bTiling : 1;                                              // 0x0108(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0109(0x0003) MISSED OFFSET
	uint32_t                                           RepeatSize;                                               // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionNormalize
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionNormalize : public UMaterialExpression
{
public:
	struct FExpressionInput                            VectorInput;                                              // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionObjectBounds
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionObjectBounds : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionObjectOrientation
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionObjectOrientation : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionObjectPositionWS
//0x0008 (0x0080 - 0x0078)
class UMaterialExpressionObjectPositionWS : public UMaterialExpression
{
public:
	TEnumAsByte<EObjectPositionIncludedOffsets>        ObjectPositionShaderOffset;                               // 0x0078(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0079(0x0007) MISSED OFFSET

}


//Class Engine.MaterialExpressionObjectRadius
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionObjectRadius : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionOneMinus
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionOneMinus : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionPanner
//0x00B8 (0x0130 - 0x0078)
class UMaterialExpressionPanner : public UMaterialExpression
{
public:
	struct FExpressionInput                            Coordinate;                                               // 0x0078(0x0038)
	struct FExpressionInput                            Time;                                                     // 0x00B0(0x0038)
	struct FExpressionInput                            Speed;                                                    // 0x00E8(0x0038)
	float                                              SpeedX;                                                   // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SpeedY;                                                   // 0x0124(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           ConstCoordinate;                                          // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bFractionalPart : 1;                                      // 0x012C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x012D(0x0003) MISSED OFFSET

}


//Class Engine.MaterialExpressionParameter
//0x0020 (0x0098 - 0x0078)
class UMaterialExpressionParameter : public UMaterialExpression
{
public:
	struct FName                                       ParameterName;                                            // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGuid                                       ExpressionGUID;                                           // 0x0080(0x0010) (ZeroConstructor, IsPlainOldData)
	struct FName                                       Group;                                                    // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionScalarParameter
//0x0010 (0x00A8 - 0x0098)
class UMaterialExpressionScalarParameter : public UMaterialExpressionParameter
{
public:
	float                                              DefaultValue;                                             // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SliderMin;                                                // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SliderMax;                                                // 0x00A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET

}


//Class Engine.MaterialExpressionStaticBoolParameter
//0x0008 (0x00A0 - 0x0098)
class UMaterialExpressionStaticBoolParameter : public UMaterialExpressionParameter
{
public:
	unsigned char                                      DefaultValue : 1;                                         // 0x0098(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

}


//Class Engine.MaterialExpressionStaticSwitchParameter
//0x0070 (0x0110 - 0x00A0)
class UMaterialExpressionStaticSwitchParameter : public UMaterialExpressionStaticBoolParameter
{
public:
	struct FExpressionInput                            A;                                                        // 0x00A0(0x0038)
	struct FExpressionInput                            B;                                                        // 0x00D8(0x0038)

}


//Class Engine.MaterialExpressionStaticComponentMaskParameter
//0x0040 (0x00D8 - 0x0098)
class UMaterialExpressionStaticComponentMaskParameter : public UMaterialExpressionParameter
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0098(0x0038)
	unsigned char                                      DefaultR : 1;                                             // 0x00D0(0x0001) (Edit)
	unsigned char                                      DefaultG : 1;                                             // 0x00D0(0x0001) (Edit)
	unsigned char                                      DefaultB : 1;                                             // 0x00D0(0x0001) (Edit)
	unsigned char                                      DefaultA : 1;                                             // 0x00D0(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET

}


//Class Engine.MaterialExpressionVectorParameter
//0x0010 (0x00A8 - 0x0098)
class UMaterialExpressionVectorParameter : public UMaterialExpressionParameter
{
public:
	struct FLinearColor                                DefaultValue;                                             // 0x0098(0x0010) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionParticleColor
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionParticleColor : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionParticleDirection
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionParticleDirection : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionParticleMacroUV
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionParticleMacroUV : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionParticleMotionBlurFade
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionParticleMotionBlurFade : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionParticlePositionWS
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionParticlePositionWS : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionParticleRadius
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionParticleRadius : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionParticleRandom
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionParticleRandom : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionParticleRelativeTime
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionParticleRelativeTime : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionParticleSize
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionParticleSize : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionParticleSpeed
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionParticleSpeed : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionPerInstanceCustomData
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionPerInstanceCustomData : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionPerInstanceFadeAmount
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionPerInstanceFadeAmount : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionPerInstanceRandom
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionPerInstanceRandom : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionPixelDepth
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionPixelDepth : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionPixelNormalWS
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionPixelNormalWS : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionPower
//0x0078 (0x00F0 - 0x0078)
class UMaterialExpressionPower : public UMaterialExpression
{
public:
	struct FExpressionInput                            Base;                                                     // 0x0078(0x0038)
	struct FExpressionInput                            Exponent;                                                 // 0x00B0(0x0038)
	float                                              ConstExponent;                                            // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00EC(0x0004) MISSED OFFSET

}


//Class Engine.MaterialExpressionPrecomputedAOMask
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionPrecomputedAOMask : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionPreSkinnedNormal
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionPreSkinnedNormal : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionPreSkinnedPosition
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionPreSkinnedPosition : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionPreviousFrameSwitch
//0x0070 (0x00E8 - 0x0078)
class UMaterialExpressionPreviousFrameSwitch : public UMaterialExpression
{
public:
	struct FExpressionInput                            CurrentFrame;                                             // 0x0078(0x0038)
	struct FExpressionInput                            PreviousFrame;                                            // 0x00B0(0x0038)

}


//Class Engine.MaterialExpressionQualitySwitch
//0x00E0 (0x0158 - 0x0078)
class UMaterialExpressionQualitySwitch : public UMaterialExpression
{
public:
	struct FExpressionInput                            Default;                                                  // 0x0078(0x0038)
	struct FExpressionInput                            Inputs[0x3];                                              // 0x00B0(0x0038)

}


//Class Engine.MaterialExpressionReflectionVectorWS
//0x0040 (0x00B8 - 0x0078)
class UMaterialExpressionReflectionVectorWS : public UMaterialExpression
{
public:
	struct FExpressionInput                            CustomWorldNormal;                                        // 0x0078(0x0038)
	unsigned char                                      bNormalizeCustomWorldNormal : 1;                          // 0x00B0(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET

}


//Class Engine.MaterialExpressionReroute
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionReroute : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionRotateAboutAxis
//0x00E8 (0x0160 - 0x0078)
class UMaterialExpressionRotateAboutAxis : public UMaterialExpression
{
public:
	struct FExpressionInput                            NormalizedRotationAxis;                                   // 0x0078(0x0038)
	struct FExpressionInput                            RotationAngle;                                            // 0x00B0(0x0038)
	struct FExpressionInput                            PivotPoint;                                               // 0x00E8(0x0038)
	struct FExpressionInput                            Position;                                                 // 0x0120(0x0038)
	float                                              Period;                                                   // 0x0158(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x015C(0x0004) MISSED OFFSET

}


//Class Engine.MaterialExpressionRotator
//0x0080 (0x00F8 - 0x0078)
class UMaterialExpressionRotator : public UMaterialExpression
{
public:
	struct FExpressionInput                            Coordinate;                                               // 0x0078(0x0038)
	struct FExpressionInput                            Time;                                                     // 0x00B0(0x0038)
	float                                              CenterX;                                                  // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CenterY;                                                  // 0x00EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Speed;                                                    // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           ConstCoordinate;                                          // 0x00F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionRound
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionRound : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionSaturate
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionSaturate : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionSceneColor
//0x0080 (0x00F8 - 0x0078)
class UMaterialExpressionSceneColor : public UMaterialExpression
{
public:
	TEnumAsByte<EMaterialSceneAttributeInputMode>      InputMode;                                                // 0x0078(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0079(0x0007) MISSED OFFSET
	struct FExpressionInput                            Input;                                                    // 0x0080(0x0038)
	struct FExpressionInput                            OffsetFraction;                                           // 0x00B8(0x0038) (Deprecated)
	struct FVector2D                                   ConstInput;                                               // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionSceneDepth
//0x0080 (0x00F8 - 0x0078)
class UMaterialExpressionSceneDepth : public UMaterialExpression
{
public:
	TEnumAsByte<EMaterialSceneAttributeInputMode>      InputMode;                                                // 0x0078(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0079(0x0007) MISSED OFFSET
	struct FExpressionInput                            Input;                                                    // 0x0080(0x0038)
	struct FExpressionInput                            Coordinates;                                              // 0x00B8(0x0038) (Deprecated)
	struct FVector2D                                   ConstInput;                                               // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionSceneTexelSize
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionSceneTexelSize : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionSceneTexture
//0x0040 (0x00B8 - 0x0078)
class UMaterialExpressionSceneTexture : public UMaterialExpression
{
public:
	struct FExpressionInput                            Coordinates;                                              // 0x0078(0x0038)
	TEnumAsByte<ESceneTextureId>                       SceneTextureId;                                           // 0x00B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bFiltered : 1;                                            // 0x00B1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x00B2(0x0006) MISSED OFFSET

}


//Class Engine.MaterialExpressionScreenPosition
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionScreenPosition : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionSetMaterialAttributes
//0x0020 (0x0098 - 0x0078)
class UMaterialExpressionSetMaterialAttributes : public UMaterialExpression
{
public:
	TArray<struct FExpressionInput>                    Inputs;                                                   // 0x0078(0x0010) (ZeroConstructor)
	TArray<struct FGuid>                               AttributeSetTypes;                                        // 0x0088(0x0010) (Edit, ZeroConstructor)

}


//Class Engine.MaterialExpressionSign
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionSign : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionSine
//0x0040 (0x00B8 - 0x0078)
class UMaterialExpressionSine : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)
	float                                              Period;                                                   // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET

}


//Class Engine.MaterialExpressionSpeedTree
//0x00F0 (0x0168 - 0x0078)
class UMaterialExpressionSpeedTree : public UMaterialExpression
{
public:
	struct FExpressionInput                            GeometryInput;                                            // 0x0078(0x0038)
	struct FExpressionInput                            WindInput;                                                // 0x00B0(0x0038)
	struct FExpressionInput                            LODInput;                                                 // 0x00E8(0x0038)
	struct FExpressionInput                            ExtraBendWS;                                              // 0x0120(0x0038)
	TEnumAsByte<ESpeedTreeGeometryType>                GeometryType;                                             // 0x0158(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESpeedTreeWindType>                    WindType;                                                 // 0x0159(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESpeedTreeLODType>                     LODType;                                                  // 0x015A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x015B(0x0001) MISSED OFFSET
	float                                              BillboardThreshold;                                       // 0x015C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAccurateWindVelocities : 1;                              // 0x0160(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0161(0x0007) MISSED OFFSET

}


//Class Engine.MaterialExpressionSphereMask
//0x00E8 (0x0160 - 0x0078)
class UMaterialExpressionSphereMask : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                        // 0x0078(0x0038)
	struct FExpressionInput                            B;                                                        // 0x00B0(0x0038)
	struct FExpressionInput                            Radius;                                                   // 0x00E8(0x0038)
	struct FExpressionInput                            Hardness;                                                 // 0x0120(0x0038)
	float                                              AttenuationRadius;                                        // 0x0158(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HardnessPercent;                                          // 0x015C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionSphericalParticleOpacity
//0x0040 (0x00B8 - 0x0078)
class UMaterialExpressionSphericalParticleOpacity : public UMaterialExpression
{
public:
	struct FExpressionInput                            Density;                                                  // 0x0078(0x0038)
	float                                              ConstantDensity;                                          // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET

}


//Class Engine.MaterialExpressionSquareRoot
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionSquareRoot : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionStaticBool
//0x0008 (0x0080 - 0x0078)
class UMaterialExpressionStaticBool : public UMaterialExpression
{
public:
	unsigned char                                      Value : 1;                                                // 0x0078(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0079(0x0007) MISSED OFFSET

}


//Class Engine.MaterialExpressionStaticSwitch
//0x00B0 (0x0128 - 0x0078)
class UMaterialExpressionStaticSwitch : public UMaterialExpression
{
public:
	unsigned char                                      DefaultValue : 1;                                         // 0x0078(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0079(0x0007) MISSED OFFSET
	struct FExpressionInput                            A;                                                        // 0x0080(0x0038)
	struct FExpressionInput                            B;                                                        // 0x00B8(0x0038)
	struct FExpressionInput                            Value;                                                    // 0x00F0(0x0038)

}


//Class Engine.MaterialExpressionSubtract
//0x0078 (0x00F0 - 0x0078)
class UMaterialExpressionSubtract : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                        // 0x0078(0x0038)
	struct FExpressionInput                            B;                                                        // 0x00B0(0x0038)
	float                                              ConstA;                                                   // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ConstB;                                                   // 0x00EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionTangent
//0x0040 (0x00B8 - 0x0078)
class UMaterialExpressionTangent : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)
	float                                              Period;                                                   // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET

}


//Class Engine.MaterialExpressionTerrainBlend
//0x0058 (0x00D0 - 0x0078)
class UMaterialExpressionTerrainBlend : public UMaterialExpressionTerrainBlendBase
{
public:
	struct FExpressionInput                            UV;                                                       // 0x0078(0x0038)
	TArray<struct FTerrainLayer>                       Inputs;                                                   // 0x00B0(0x0010) (Edit, ZeroConstructor)
	uint32_t                                           ConstCoordinate;                                          // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x00C4(0x000C) MISSED OFFSET

}


//Class Engine.MaterialExpressionTerrainBlendDesert
//0x0060 (0x00D8 - 0x0078)
class UMaterialExpressionTerrainBlendDesert : public UMaterialExpressionTerrainBlendBase
{
public:
	struct FExpressionInput                            UV;                                                       // 0x0078(0x0038)
	TArray<struct FTerrainLayerDesert>                 Inputs;                                                   // 0x00B0(0x0010) (Edit, ZeroConstructor)
	uint32_t                                           ConstCoordinate;                                          // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x14];                                      // 0x00C4(0x0014) MISSED OFFSET

}


//Class Engine.MaterialExpressionTerrainBlendHeight
//0x0098 (0x0110 - 0x0078)
class UMaterialExpressionTerrainBlendHeight : public UMaterialExpressionTerrainBlendBase
{
public:
	struct FExpressionInput                            UV;                                                       // 0x0078(0x0038)
	struct FExpressionInput                            CameraWeight;                                             // 0x00B0(0x0038)
	TArray<struct FTerrainLayerHeight>                 Inputs;                                                   // 0x00E8(0x0010) (Edit, ZeroConstructor)
	uint32_t                                           ConstCoordinate;                                          // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x14];                                      // 0x00FC(0x0014) MISSED OFFSET

}


//Class Engine.MaterialExpressionTextureBase
//0x0010 (0x0088 - 0x0078)
class UMaterialExpressionTextureBase : public UMaterialExpression
{
public:
	class UTexture*                                    Texture;                                                  // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMaterialSamplerType>                  SamplerType;                                              // 0x0080(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0081(0x0003) MISSED OFFSET
	unsigned char                                      IsDefaultMeshpaintTexture : 1;                            // 0x0084(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0085(0x0003) MISSED OFFSET

}


//Class Engine.MaterialExpressionTextureObject
//0x0000 (0x0088 - 0x0088)
class UMaterialExpressionTextureObject : public UMaterialExpressionTextureBase
{
public:

}


//Class Engine.MaterialExpressionTextureSample
//0x0178 (0x0200 - 0x0088)
class UMaterialExpressionTextureSample : public UMaterialExpressionTextureBase
{
public:
	struct FExpressionInput                            Coordinates;                                              // 0x0088(0x0038)
	struct FExpressionInput                            TextureObject;                                            // 0x00C0(0x0038)
	struct FExpressionInput                            MipValue;                                                 // 0x00F8(0x0038)
	struct FExpressionInput                            CoordinatesDX;                                            // 0x0130(0x0038)
	struct FExpressionInput                            CoordinatesDY;                                            // 0x0168(0x0038)
	struct FExpressionInput                            SampleCondition;                                          // 0x01A0(0x0038)
	TEnumAsByte<ETextureMipValueMode>                  MipValueMode;                                             // 0x01D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESamplerSourceMode>                    SamplerSource;                                            // 0x01D9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x01DA(0x0002) MISSED OFFSET
	uint32_t                                           ConstCoordinate;                                          // 0x01DC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ConstMipValue;                                            // 0x01E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AutomaticViewMipBias : 1;                                 // 0x01E4(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x01E5(0x0003) MISSED OFFSET
	unsigned char                                      bConditional : 1;                                         // 0x01E8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x01E9(0x0003) MISSED OFFSET
	struct FLinearColor                                DefaultValue;                                             // 0x01EC(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x01FC(0x0004) MISSED OFFSET

}


//Class Engine.MaterialExpressionParticleSubUV
//0x0008 (0x0208 - 0x0200)
class UMaterialExpressionParticleSubUV : public UMaterialExpressionTextureSample
{
public:
	unsigned char                                      bBlend : 1;                                               // 0x0200(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0201(0x0007) MISSED OFFSET

}


//Class Engine.MaterialExpressionTextureSampleParameter
//0x0020 (0x0220 - 0x0200)
class UMaterialExpressionTextureSampleParameter : public UMaterialExpressionTextureSample
{
public:
	struct FName                                       ParameterName;                                            // 0x0200(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGuid                                       ExpressionGUID;                                           // 0x0208(0x0010) (ZeroConstructor, IsPlainOldData)
	struct FName                                       Group;                                                    // 0x0218(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionTextureObjectParameter
//0x0000 (0x0220 - 0x0220)
class UMaterialExpressionTextureObjectParameter : public UMaterialExpressionTextureSampleParameter
{
public:

}


//Class Engine.MaterialExpressionTextureSampleParameter2D
//0x0000 (0x0220 - 0x0220)
class UMaterialExpressionTextureSampleParameter2D : public UMaterialExpressionTextureSampleParameter
{
public:

}


//Class Engine.MaterialExpressionAntialiasedTextureMask
//0x0008 (0x0228 - 0x0220)
class UMaterialExpressionAntialiasedTextureMask : public UMaterialExpressionTextureSampleParameter2D
{
public:
	float                                              Threshold;                                                // 0x0220(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETextureColorChannel>                  Channel;                                                  // 0x0224(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0225(0x0003) MISSED OFFSET

}


//Class Engine.MaterialExpressionTextureSampleParameterSubUV
//0x0008 (0x0228 - 0x0220)
class UMaterialExpressionTextureSampleParameterSubUV : public UMaterialExpressionTextureSampleParameter2D
{
public:
	unsigned char                                      bBlend : 1;                                               // 0x0220(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0221(0x0007) MISSED OFFSET

}


//Class Engine.MaterialExpressionTextureSampleParameter2DArray
//0x0000 (0x0220 - 0x0220)
class UMaterialExpressionTextureSampleParameter2DArray : public UMaterialExpressionTextureSampleParameter
{
public:

}


//Class Engine.MaterialExpressionTextureSampleParameterCube
//0x0000 (0x0220 - 0x0220)
class UMaterialExpressionTextureSampleParameterCube : public UMaterialExpressionTextureSampleParameter
{
public:

}


//Class Engine.MaterialExpressionTextureCoordinate
//0x0010 (0x0088 - 0x0078)
class UMaterialExpressionTextureCoordinate : public UMaterialExpression
{
public:
	int                                                CoordinateIndex;                                          // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UTiling;                                                  // 0x007C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VTiling;                                                  // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnMirrorU : 1;                                            // 0x0084(0x0001) (Edit)
	unsigned char                                      UnMirrorV : 1;                                            // 0x0084(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0085(0x0003) MISSED OFFSET

}


//Class Engine.MaterialExpressionTextureProperty
//0x0040 (0x00B8 - 0x0078)
class UMaterialExpressionTextureProperty : public UMaterialExpression
{
public:
	struct FExpressionInput                            TextureObject;                                            // 0x0078(0x0038)
	TEnumAsByte<EMaterialExposedTextureProperty>       Property;                                                 // 0x00B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET

}


//Class Engine.MaterialExpressionTime
//0x0008 (0x0080 - 0x0078)
class UMaterialExpressionTime : public UMaterialExpression
{
public:
	unsigned char                                      bIgnorePause : 1;                                         // 0x0078(0x0001) (Edit)
	unsigned char                                      bOverride_Period : 1;                                     // 0x0078(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	float                                              Period;                                                   // 0x007C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionTransform
//0x0040 (0x00B8 - 0x0078)
class UMaterialExpressionTransform : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)
	TEnumAsByte<EMaterialVectorCoordTransformSource>   TransformSourceType;                                      // 0x00B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMaterialVectorCoordTransform>         TransformType;                                            // 0x00B1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x00B2(0x0006) MISSED OFFSET

}


//Class Engine.MaterialExpressionTransformPosition
//0x0040 (0x00B8 - 0x0078)
class UMaterialExpressionTransformPosition : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)
	TEnumAsByte<EMaterialPositionTransformSource>      TransformSourceType;                                      // 0x00B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMaterialPositionTransformSource>      TransformType;                                            // 0x00B1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x00B2(0x0006) MISSED OFFSET

}


//Class Engine.MaterialExpressionTruncate
//0x0038 (0x00B0 - 0x0078)
class UMaterialExpressionTruncate : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                                    // 0x0078(0x0038)

}


//Class Engine.MaterialExpressionTwoSidedSign
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionTwoSidedSign : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionVectorNoise
//0x0048 (0x00C0 - 0x0078)
class UMaterialExpressionVectorNoise : public UMaterialExpression
{
public:
	struct FExpressionInput                            Position;                                                 // 0x0078(0x0038)
	TEnumAsByte<EVectorNoiseFunction>                  NoiseFunction;                                            // 0x00B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00B1(0x0003) MISSED OFFSET
	int                                                Quality;                                                  // 0x00B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bTiling : 1;                                              // 0x00B8(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00B9(0x0003) MISSED OFFSET
	uint32_t                                           TileSize;                                                 // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.MaterialExpressionVertexColor
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionVertexColor : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionVertexLocalPosition
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionVertexLocalPosition : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionVertexNormalWS
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionVertexNormalWS : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionViewProperty
//0x0008 (0x0080 - 0x0078)
class UMaterialExpressionViewProperty : public UMaterialExpression
{
public:
	TEnumAsByte<EMaterialExposedViewProperty>          Property;                                                 // 0x0078(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0079(0x0007) MISSED OFFSET

}


//Class Engine.MaterialExpressionViewSize
//0x0000 (0x0078 - 0x0078)
class UMaterialExpressionViewSize : public UMaterialExpression
{
public:

}


//Class Engine.MaterialExpressionWorldPosition
//0x0008 (0x0080 - 0x0078)
class UMaterialExpressionWorldPosition : public UMaterialExpression
{
public:
	TEnumAsByte<EWorldPositionIncludedOffsets>         WorldPositionShaderOffset;                                // 0x0078(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0079(0x0007) MISSED OFFSET

}


//Class Engine.MaterialFunction
//0x0040 (0x0080 - 0x0040)
class UMaterialFunction : public UObject
{
public:
	struct FGuid                                       StateId;                                                  // 0x0040(0x0010) (ZeroConstructor, DuplicateTransient, IsPlainOldData)
	struct FString                                     Description;                                              // 0x0050(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      bExposeToLibrary : 1;                                     // 0x0060(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	TArray<class UMaterialExpression*>                 FunctionExpressions;                                      // 0x0068(0x0010) (ZeroConstructor)
	unsigned char                                      bReentrantFlag : 1;                                       // 0x0078(0x0001) (Transient)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0079(0x0007) MISSED OFFSET

}


//Class Engine.Material
//0x0978 (0x0A00 - 0x0088)
class UMaterial : public UMaterialInterface
{
public:
	class UPhysicalMaterial*                           PhysMaterial;                                             // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FColorMaterialInput                         DiffuseColor;                                             // 0x0090(0x0040) (Deprecated)
	struct FColorMaterialInput                         SpecularColor;                                            // 0x00D0(0x0040) (Deprecated)
	struct FColorMaterialInput                         BaseColor;                                                // 0x0110(0x0040)
	struct FScalarMaterialInput                        Metallic;                                                 // 0x0150(0x0040)
	struct FScalarMaterialInput                        Specular;                                                 // 0x0190(0x0040)
	struct FScalarMaterialInput                        Roughness;                                                // 0x01D0(0x0040)
	struct FVectorMaterialInput                        Normal;                                                   // 0x0210(0x0048)
	struct FColorMaterialInput                         EmissiveColor;                                            // 0x0258(0x0040)
	struct FScalarMaterialInput                        Opacity;                                                  // 0x0298(0x0040)
	struct FScalarMaterialInput                        OpacityMask;                                              // 0x02D8(0x0040)
	TEnumAsByte<EMaterialDomain>                       MaterialDomain;                                           // 0x0318(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBlendMode>                            BlendMode;                                                // 0x0319(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDecalBlendMode>                       DecalBlendMode;                                           // 0x031A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMaterialDecalResponse>                MaterialDecalResponse;                                    // 0x031B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EMaterialShadingModel>                 ShadingModel;                                             // 0x031C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x031D(0x0003) MISSED OFFSET
	float                                              OpacityMaskClipValue;                                     // 0x0320(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0324(0x0004) MISSED OFFSET
	struct FVectorMaterialInput                        WorldPositionOffset;                                      // 0x0328(0x0048)
	struct FVectorMaterialInput                        WorldDisplacement;                                        // 0x0370(0x0048)
	struct FScalarMaterialInput                        TessellationMultiplier;                                   // 0x03B8(0x0040)
	struct FColorMaterialInput                         SubsurfaceColor;                                          // 0x03F8(0x0040)
	struct FScalarMaterialInput                        ClearCoat;                                                // 0x0438(0x0040)
	struct FScalarMaterialInput                        ClearCoatRoughness;                                       // 0x0478(0x0040)
	struct FScalarMaterialInput                        AmbientOcclusion;                                         // 0x04B8(0x0040)
	struct FScalarMaterialInput                        Refraction;                                               // 0x04F8(0x0040)
	struct FVector2MaterialInput                       CustomizedUVs[0x8];                                       // 0x0538(0x0048)
	struct FMaterialAttributesInput                    MaterialAttributes;                                       // 0x0778(0x0040)
	struct FScalarMaterialInput                        PixelDepthOffset;                                         // 0x07B8(0x0040)
	unsigned char                                      bPrepassMasked : 1;                                       // 0x07F8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bEnableSeparateTranslucency : 1;                          // 0x07F8(0x0001) (Edit)
	unsigned char                                      bEnableMobileSeparateTranslucency : 1;                    // 0x07F8(0x0001) (Edit)
	unsigned char                                      bEnableResponsiveAA : 1;                                  // 0x07F8(0x0001) (Edit)
	unsigned char                                      bScreenSpaceReflections : 1;                              // 0x07F8(0x0001) (Edit)
	unsigned char                                      TwoSided : 1;                                             // 0x07F8(0x0001) (Edit)
	unsigned char                                      DitheredLODTransition : 1;                                // 0x07F8(0x0001) (Edit)
	unsigned char                                      DitherOpacityMask : 1;                                    // 0x07F8(0x0001) (Edit)
	unsigned char                                      UnknownData02 : 8;                                        // 0x07F9(0x0001)
	unsigned char                                      bAllowNegativeEmissiveColor : 1;                          // 0x07F9(0x0001) (Edit)
	unsigned char                                      bHasMaterialPermutations : 1;                             // 0x07F9(0x0001)
	unsigned char                                      UnknownData03[0x2];                                       // 0x07FA(0x0002) MISSED OFFSET
	int                                                NumCustomizedUVs;                                         // 0x07FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETranslucencyLightingMode>             TranslucencyLightingMode;                                 // 0x0800(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0801(0x0003) MISSED OFFSET
	float                                              TranslucencyDirectionalLightingIntensity;                 // 0x0804(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      AllowTranslucentCustomDepthWrites : 1;                    // 0x0808(0x0001) (Edit)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0809(0x0003) MISSED OFFSET
	float                                              TranslucentShadowDensityScale;                            // 0x080C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TranslucentSelfShadowDensityScale;                        // 0x0810(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TranslucentSelfShadowSecondDensityScale;                  // 0x0814(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TranslucentSelfShadowSecondOpacity;                       // 0x0818(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TranslucentBackscatteringExponent;                        // 0x081C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TranslucentMultipleScatteringExtinction;                  // 0x0820(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TranslucentShadowStartOffset;                             // 0x0830(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bDisableDepthTest : 1;                                    // 0x0834(0x0001) (Edit)
	unsigned char                                      bGenerateSphericalParticleNormals : 1;                    // 0x0834(0x0001) (Edit)
	unsigned char                                      bTangentSpaceNormal : 1;                                  // 0x0834(0x0001) (Edit)
	unsigned char                                      bUseEmissiveForDynamicAreaLighting : 1;                   // 0x0834(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bBlockGI : 1;                                             // 0x0834(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUsedAsSpecialEngineMaterial : 1;                         // 0x0834(0x0001) (DuplicateTransient)
	unsigned char                                      bUsedWithSkeletalMesh : 1;                                // 0x0834(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUsedWithEditorCompositing : 1;                           // 0x0834(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData06 : 8;                                        // 0x0835(0x0001)
	unsigned char                                      bUsedWithParticleSprites : 1;                             // 0x0835(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUsedWithBeamTrails : 1;                                  // 0x0835(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUsedWithMeshParticles : 1;                               // 0x0835(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUsedWithNiagaraSprites : 1;                              // 0x0835(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUsedWithNiagaraRibbons : 1;                              // 0x0835(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUsedWithNiagaraMeshParticles : 1;                        // 0x0835(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUsedWithStaticLighting : 1;                              // 0x0835(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUsedWithMorphTargets : 1;                                // 0x0835(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData07 : 8;                                        // 0x0836(0x0001)
	unsigned char                                      bUsedWithSplineMeshes : 1;                                // 0x0836(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUsedWithInstancedStaticMeshes : 1;                       // 0x0836(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUsedWithInstancedSplineMeshes : 1;                       // 0x0836(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUsedWithInstancedDeferredDecals : 1;                     // 0x0836(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUsesDistortion : 1;                                      // 0x0836(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUsedWithClothing : 1;                                    // 0x0836(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUsedWithUI : 1;                                          // 0x0836(0x0001) (Deprecated)
	unsigned char                                      bAutomaticallySetUsageInEditor : 1;                       // 0x0836(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData08 : 8;                                        // 0x0837(0x0001)
	unsigned char                                      bFullyRough : 1;                                          // 0x0837(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUseFullPrecision : 1;                                    // 0x0837(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUseLightmapDirectionality : 1;                           // 0x0837(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUseHQForwardReflections : 1;                             // 0x0837(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUsePlanarForwardReflections : 1;                         // 0x0837(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bNormalCurvatureToRoughness : 1;                          // 0x0837(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	TEnumAsByte<EMaterialTessellationMode>             D3D11TessellationMode;                                    // 0x0838(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0839(0x0003) MISSED OFFSET
	unsigned char                                      bEnableCrackFreeDisplacement : 1;                         // 0x083C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bEnableAdaptiveTessellation : 1;                          // 0x083C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData10[0x3];                                       // 0x083D(0x0003) MISSED OFFSET
	float                                              MaxDisplacement;                                          // 0x0840(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Wireframe : 1;                                            // 0x0844(0x0001) (Edit)
	unsigned char                                      bOutputVelocityOnBasePass : 1;                            // 0x0844(0x0001) (Edit)
	unsigned char                                      bIsTiledTranslucent : 1;                                  // 0x0844(0x0001) (Edit)
	unsigned char                                      bApplyMaterialClipVolumes : 1;                            // 0x0844(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData11[0x3];                                       // 0x0845(0x0003) MISSED OFFSET
	struct FMaterialClipVolumeTypeMask                 MaterialClipVolumeTypes;                                  // 0x0848(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly)
	TEnumAsByte<EMaterialClipVolumeImportance>         MaterialClipVolumeImportance;                             // 0x084C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x3];                                       // 0x084D(0x0003) MISSED OFFSET
	float                                              MaterialClipVolumeFadeRange;                              // 0x0850(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bMaterialClipVolumesUseDiscardForTranslucent : 1;         // 0x0854(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bIsMaterialClipVolumeWater : 1;                           // 0x0854(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bUseMeshClipping : 1;                                     // 0x0854(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData13[0x3];                                       // 0x0855(0x0003) MISSED OFFSET
	int                                                EditorX;                                                  // 0x0858(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                EditorY;                                                  // 0x085C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                EditorPitch;                                              // 0x0860(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                EditorYaw;                                                // 0x0864(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<class UMaterialExpression*>                 Expressions;                                              // 0x0868(0x0010) (ZeroConstructor)
	TArray<struct FMaterialFunctionInfo>               MaterialFunctionInfos;                                    // 0x0878(0x0010) (ZeroConstructor)
	TArray<struct FMaterialParameterCollectionInfo>    MaterialParameterCollectionInfos;                         // 0x0888(0x0010) (ZeroConstructor)
	unsigned char                                      bCanMaskedBeAssumedOpaque : 1;                            // 0x0898(0x0001)
	unsigned char                                      bIsMasked : 1;                                            // 0x0898(0x0001) (Deprecated)
	unsigned char                                      bIsPreviewMaterial : 1;                                   // 0x0898(0x0001) (Transient, DuplicateTransient)
	unsigned char                                      bUseMaterialAttributes : 1;                               // 0x0898(0x0001) (Edit)
	unsigned char                                      bUseTranslucencyVertexFog : 1;                            // 0x0898(0x0001) (Edit)
	unsigned char                                      bComputeFogPerPixel : 1;                                  // 0x0898(0x0001) (Edit)
	unsigned char                                      bAllowDevelopmentShaderCompile : 1;                       // 0x0898(0x0001) (Transient, DuplicateTransient)
	unsigned char                                      bIsMaterialEditorStatsMaterial : 1;                       // 0x0898(0x0001) (Transient, DuplicateTransient)
	unsigned char                                      UnknownData14[0x3];                                       // 0x0899(0x0003) MISSED OFFSET
	uint32_t                                           UsageFlagWarnings;                                        // 0x089C(0x0004) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData)
	TEnumAsByte<EBlendableLocation>                    BlendableLocation;                                        // 0x08A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x3];                                       // 0x08A1(0x0003) MISSED OFFSET
	int                                                BlendablePriority;                                        // 0x08A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      BlendableOutputAlpha : 1;                                 // 0x08A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERefractionMode>                       RefractionMode;                                           // 0x08A9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x2];                                       // 0x08AA(0x0002) MISSED OFFSET
	float                                              RefractionDepthBias;                                      // 0x08AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FGuid                                       StateId;                                                  // 0x08B0(0x0010) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x130];                                     // 0x08C0(0x0130) MISSED OFFSET
	TArray<class UTexture*>                            ExpressionTextureReferences;                              // 0x09F0(0x0010) (ZeroConstructor, Transient)

}


//Class Engine.MaterialInstanceDynamic
//0x0050 (0x0248 - 0x01F8)
class UMaterialInstanceDynamic : public UMaterialInstance
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x01F8(0x0050) MISSED OFFSET

	// Function Engine.MaterialInstanceDynamic.SetVectorParameterValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetVectorParameterValue(const struct FName& ParameterName, const struct FLinearColor& Value);// sub_3B219C0()

	// Function Engine.MaterialInstanceDynamic.SetTextureParameterValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetTextureParameterValue(const struct FName& ParameterName, class UTexture* Value);// sub_4D04360()

	// Function Engine.MaterialInstanceDynamic.SetScalarParameterValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_SetScalarParameterValue(const struct FName& ParameterName, float Value);// sub_1490F70()

	// Function Engine.MaterialInstanceDynamic.K2_InterpolateMaterialInstanceParams
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_InterpolateMaterialInstanceParams(class UMaterialInstance* SourceA, class UMaterialInstance* SourceB, float ALPHA);// sub_3C8DF50()

	// Function Engine.MaterialInstanceDynamic.K2_GetVectorParameterValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FLinearColor STATIC_K2_GetVectorParameterValue(const struct FName& ParameterName);// sub_62081F0()

	// Function Engine.MaterialInstanceDynamic.K2_GetTextureParameterValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UTexture* STATIC_K2_GetTextureParameterValue(const struct FName& ParameterName);// sub_14DBD70()

	// Function Engine.MaterialInstanceDynamic.K2_GetScalarParameterValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_K2_GetScalarParameterValue(const struct FName& ParameterName);// sub_4353C30()

	// Function Engine.MaterialInstanceDynamic.K2_CopyMaterialInstanceParameters
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_K2_CopyMaterialInstanceParameters(class UMaterialInterface* Source);// sub_483A840()

	// Function Engine.MaterialInstanceDynamic.CopyParameterOverrides
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_CopyParameterOverrides(class UMaterialInstance* MaterialInstance);// sub_14DBCF0()

	// Function Engine.MaterialInstanceDynamic.CopyInterpParameters
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_CopyInterpParameters(class UMaterialInstance* Source);// sub_1EF9420()


}


//Class Engine.MaterialParameterCollection
//0x0040 (0x0080 - 0x0040)
class UMaterialParameterCollection : public UObject
{
public:
	struct FGuid                                       StateId;                                                  // 0x0040(0x0010) (ZeroConstructor, DuplicateTransient, IsPlainOldData)
	TArray<struct FCollectionScalarParameter>          ScalarParameters;                                         // 0x0050(0x0010) (Edit, ZeroConstructor)
	TArray<struct FCollectionVectorParameter>          VectorParameters;                                         // 0x0060(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0070(0x0010) MISSED OFFSET

}


//Class Engine.MaterialParameterCollectionInstance
//0x00C0 (0x0100 - 0x0040)
class UMaterialParameterCollectionInstance : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	class UMaterialParameterCollection*                Collection;                                               // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	class UWorld*                                      World;                                                    // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xA8];                                      // 0x0058(0x00A8) MISSED OFFSET

}


//Class Engine.MatineeInterface
//0x0000 (0x0040 - 0x0040)
class UMatineeInterface : public UInterface
{
public:

}


//Class Engine.MorphTarget
//0x0018 (0x0058 - 0x0040)
class UMorphTarget : public UObject
{
public:
	class USkeletalMesh*                               BaseSkelMesh;                                             // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0048(0x0010) MISSED OFFSET

}


//Class Engine.NavArea_Default
//0x0000 (0x0058 - 0x0058)
class UNavArea_Default : public UNavArea
{
public:

}


//Class Engine.NavArea_LowHeight
//0x0000 (0x0058 - 0x0058)
class UNavArea_LowHeight : public UNavArea
{
public:

}


//Class Engine.NavArea_Null
//0x0000 (0x0058 - 0x0058)
class UNavArea_Null : public UNavArea
{
public:

}


//Class Engine.NavArea_Obstacle
//0x0000 (0x0058 - 0x0058)
class UNavArea_Obstacle : public UNavArea
{
public:

}


//Class Engine.NavAreaMeta
//0x0000 (0x0058 - 0x0058)
class UNavAreaMeta : public UNavArea
{
public:

}


//Class Engine.NavAreaMeta_SwitchByAgent
//0x0080 (0x00D8 - 0x0058)
class UNavAreaMeta_SwitchByAgent : public UNavAreaMeta
{
public:
	class UNavArea*                                    Agent0Area;                                               // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UNavArea*                                    Agent1Area;                                               // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UNavArea*                                    Agent2Area;                                               // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UNavArea*                                    Agent3Area;                                               // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UNavArea*                                    Agent4Area;                                               // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UNavArea*                                    Agent5Area;                                               // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UNavArea*                                    Agent6Area;                                               // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UNavArea*                                    Agent7Area;                                               // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UNavArea*                                    Agent8Area;                                               // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UNavArea*                                    Agent9Area;                                               // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UNavArea*                                    Agent10Area;                                              // 0x00A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UNavArea*                                    Agent11Area;                                              // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UNavArea*                                    Agent12Area;                                              // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UNavArea*                                    Agent13Area;                                              // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UNavArea*                                    Agent14Area;                                              // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UNavArea*                                    Agent15Area;                                              // 0x00D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.NavCollision
//0x00E8 (0x0128 - 0x0040)
class UNavCollision : public UObject
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0040(0x0050) MISSED OFFSET
	TArray<struct FNavCollisionCylinder>               CylinderCollision;                                        // 0x0090(0x0010) (Edit, ZeroConstructor)
	TArray<struct FNavCollisionBox>                    BoxCollision;                                             // 0x00A0(0x0010) (Edit, ZeroConstructor)
	class UNavArea*                                    AreaClass;                                                // 0x00B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsDynamicObstacle : 1;                                   // 0x00B8(0x0001) (Edit, Config)
	unsigned char                                      bGatherConvexGeometry : 1;                                // 0x00B8(0x0001) (Edit, Config)
	unsigned char                                      UnknownData01[0x6F];                                      // 0x00B9(0x006F) MISSED OFFSET

}


//Class Engine.NavEdgeProviderInterface
//0x0000 (0x0040 - 0x0040)
class UNavEdgeProviderInterface : public UInterface
{
public:

}


//Class Engine.NavigationDataChunk
//0x0008 (0x0048 - 0x0040)
class UNavigationDataChunk : public UObject
{
public:
	struct FName                                       NavigationDataName;                                       // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)

}


//Class Engine.RecastNavMeshDataChunk
//0x0010 (0x0058 - 0x0048)
class URecastNavMeshDataChunk : public UNavigationDataChunk
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0048(0x0010) MISSED OFFSET

}


//Class Engine.NavigationPath
//0x00A0 (0x00E0 - 0x0040)
class UNavigationPath : public UObject
{
public:
	struct FScriptMulticastDelegate                    PathUpdatedNotifier;                                      // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FVector>                             PathPoints;                                               // 0x0050(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TEnumAsByte<ENavigationOptionFlag>                 RecalculateOnInvalidation;                                // 0x0060(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7F];                                      // 0x0061(0x007F) MISSED OFFSET

	// Function Engine.NavigationPath.IsValid
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsValid();// sub_E089B0()

	// Function Engine.NavigationPath.IsStringPulled
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsStringPulled();// sub_3E75D0()

	// Function Engine.NavigationPath.IsPartial
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_IsPartial();// sub_E65470()

	// Function Engine.NavigationPath.GetPathLength
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetPathLength();// sub_40605A0()

	// Function Engine.NavigationPath.GetPathCost
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static float STATIC_GetPathCost();// sub_3C6F170()

	// Function Engine.NavigationPath.GetDebugString
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetDebugString();// sub_1431DC0()

	// Function Engine.NavigationPath.EnableRecalculationOnInvalidation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_EnableRecalculationOnInvalidation(TEnumAsByte<ENavigationOptionFlag> DoRecalculation);// sub_4268E50()

	// Function Engine.NavigationPath.EnableDebugDrawing
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_EnableDebugDrawing(unsigned char bShouldDrawDebugData, const struct FLinearColor& PathColor);// sub_4FA0620()


}


//Class Engine.NavigationPathGenerator
//0x0000 (0x0040 - 0x0040)
class UNavigationPathGenerator : public UInterface
{
public:

}


//Class Engine.RecastFilter_UseDefaultArea
//0x0000 (0x0060 - 0x0060)
class URecastFilter_UseDefaultArea : public UNavigationQueryFilter
{
public:

}


//Class Engine.NavLinkTrivial
//0x0000 (0x0068 - 0x0068)
class UNavLinkTrivial : public UNavLinkDefinition
{
public:

}


//Class Engine.NavNodeInterface
//0x0000 (0x0040 - 0x0040)
class UNavNodeInterface : public UInterface
{
public:

}


//Class Engine.NetDriver
//0x0498 (0x04D8 - 0x0040)
class UNetDriver : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET
	struct FString                                     NetConnectionClassName;                                   // 0x0048(0x0010) (ZeroConstructor, Config)
	int                                                MaxDownloadSize;                                          // 0x0058(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bClampListenServerTickRate : 1;                           // 0x005C(0x0001) (Config)
	unsigned char                                      UnknownData01[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	int                                                NetServerMaxTickRate;                                     // 0x0060(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                MaxInternetClientRate;                                    // 0x0064(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                MaxClientRate;                                            // 0x0068(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              ServerTravelPause;                                        // 0x006C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              SpawnPrioritySeconds;                                     // 0x0070(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              RelevantTimeout;                                          // 0x0074(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              KeepAliveTime;                                            // 0x0078(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              InitialConnectTimeout;                                    // 0x007C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              ConnectionTimeout;                                        // 0x0080(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              TimeoutMultiplierForUnoptimizedBuilds;                    // 0x0084(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bNoTimeouts : 1;                                          // 0x0088(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0089(0x0007) MISSED OFFSET
	class UNetConnection*                              ServerConnection;                                         // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UNetConnection*>                      ClientConnections;                                        // 0x0098(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData03[0x28];                                      // 0x00A8(0x0028) MISSED OFFSET
	class UWorld*                                      World;                                                    // 0x00D0(0x0008)
	class UPackage*                                    WorldPackage;                                             // 0x00D8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x20];                                      // 0x00E0(0x0020) MISSED OFFSET
	class UObject*                                     NetConnectionClass;                                       // 0x0100(0x0008) (ZeroConstructor, IsPlainOldData)
	class UProperty*                                   RoleProperty;                                             // 0x0108(0x0008) (ZeroConstructor, IsPlainOldData)
	class UProperty*                                   RemoteRoleProperty;                                       // 0x0110(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       NetDriverName;                                            // 0x0118(0x0008) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0120(0x0008) MISSED OFFSET
	float                                              Time;                                                     // 0x0128(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3AC];                                     // 0x012C(0x03AC) MISSED OFFSET

}


//Class Engine.PackageMapClient
//0x0290 (0x0388 - 0x00F8)
class UPackageMapClient : public UPackageMap
{
public:
	unsigned char                                      UnknownData00[0x290];                                     // 0x00F8(0x0290) MISSED OFFSET

}


//Class Engine.NetConnection
//0x657F0 (0x65850 - 0x0060)
class UNetConnection : public UPlayer
{
public:
	TArray<class UChildConnection*>                    Children;                                                 // 0x0060(0x0010) (ZeroConstructor, Transient)
	class UNetDriver*                                  Driver;                                                   // 0x0070(0x0008) (ZeroConstructor, IsPlainOldData)
	class UPackageMap*                                 PackageMapClass;                                          // 0x0078(0x0008) (ZeroConstructor, IsPlainOldData)
	class UPackageMap*                                 PackageMap;                                               // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UChannel*>                            OpenChannels;                                             // 0x0088(0x0010) (ZeroConstructor)
	TArray<class AActor*>                              SentTemporaries;                                          // 0x0098(0x0010) (ZeroConstructor)
	class AActor*                                      ViewTarget;                                               // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData)
	class AActor*                                      OwningActor;                                              // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                MaxPacket;                                                // 0x00B8(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      InternalAck : 1;                                          // 0x00BC(0x0001)
	unsigned char                                      IgnoreInvalidSubObjects : 1;                              // 0x00BC(0x0001)
	unsigned char                                      UnknownData00[0x8B];                                      // 0x00BD(0x008B) MISSED OFFSET
	TArray<class UChannel*>                            UnackedChannels;                                          // 0x0148(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0158(0x0028) MISSED OFFSET
	struct FUniqueNetIdRepl                            PlayerId;                                                 // 0x0180(0x0018)
	unsigned char                                      UnknownData02[0x68];                                      // 0x0198(0x0068) MISSED OFFSET
	double                                             LastReceiveTime;                                          // 0x0200(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x65538];                                   // 0x0208(0x65538) MISSED OFFSET
	TArray<class UChannel*>                            ChannelsToTick;                                           // 0x65740(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData04[0x100];                                     // 0x65750(0x0100) MISSED OFFSET

}


//Class Engine.DemoNetConnection
//0x0170 (0x659C0 - 0x65850)
class UDemoNetConnection : public UNetConnection
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x65850(0x0020) MISSED OFFSET
	struct FStringClassReference                       OverrideActorChannel;                                     // 0x65870(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData01[0x140];                                     // 0x65880(0x0140) MISSED OFFSET

}


//Class Engine.DemoNetDriver
//0x06D8 (0x0BB0 - 0x04D8)
class UDemoNetDriver : public UNetDriver
{
public:
	unsigned char                                      UnknownData00[0xF8];                                      // 0x04D8(0x00F8) MISSED OFFSET
	TMap<struct FString, struct FRollbackNetStartupActorInfo> RollbackNetStartupActors;                                 // 0x05D0(0x0050) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x3E0];                                     // 0x0620(0x03E0) MISSED OFFSET
	unsigned char                                      bIsLocalReplay : 1;                                       // 0x0A00(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1AF];                                     // 0x0A01(0x01AF) MISSED OFFSET

}


//Class Engine.NodeMappingProviderInterface
//0x0000 (0x0040 - 0x0040)
class UNodeMappingProviderInterface : public UInterface
{
public:

}


//Class Engine.NodeMappingContainer
//0x0070 (0x00B0 - 0x0040)
class UNodeMappingContainer : public UObject
{
public:
	TMap<struct FName, struct FNodeMap>                NodeMapping;                                              // 0x0040(0x0050) (Edit, ZeroConstructor)
	TAssetPtr<classUBlueprint>                         SourceAsset;                                              // 0x0090(0x0020) (Edit)

}


//Class Engine.ObjectLibrary
//0x0130 (0x0170 - 0x0040)
class UObjectLibrary : public UObject
{
public:
	class UObject*                                     ObjectBaseClass;                                          // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bHasBlueprintClasses : 1;                                 // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	TArray<class UObject*>                             Objects;                                                  // 0x0050(0x0010) (Edit, ZeroConstructor)
	TArray<TWeakObjectPtr<class UObject>>              WeakObjects;                                              // 0x0060(0x0010) (ZeroConstructor)
	unsigned char                                      bUseWeakReferences : 1;                                   // 0x0070(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0071(0x0001)
	unsigned char                                      bIsFullyLoaded : 1;                                       // 0x0071(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0xFE];                                      // 0x0072(0x00FE) MISSED OFFSET

}


//Class Engine.ObjectReferencer
//0x0010 (0x0050 - 0x0040)
class UObjectReferencer : public UObject
{
public:
	TArray<class UObject*>                             ReferencedObjects;                                        // 0x0040(0x0010) (Edit, ZeroConstructor)

}


//Class Engine.OnlineBlueprintCallProxyBase
//0x0000 (0x0040 - 0x0040)
class UOnlineBlueprintCallProxyBase : public UObject
{
public:

	// Function Engine.OnlineBlueprintCallProxyBase.Activate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Activate();// sub_44A300()


}


//Class Engine.OnlineEngineInterface
//0x0000 (0x0040 - 0x0040)
class UOnlineEngineInterface : public UObject
{
public:

}


//Class Engine.OnlineSession
//0x0000 (0x0040 - 0x0040)
class UOnlineSession : public UObject
{
public:

}


//Class Engine.ParticleEmitter
//0x0150 (0x0190 - 0x0040)
class UParticleEmitter : public UObject
{
public:
	struct FName                                       EmitterName;                                              // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SubUVDataOffset;                                          // 0x0048(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	TEnumAsByte<EEmitterRenderMode>                    EmitterRenderMode;                                        // 0x004C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	TArray<class UParticleLODLevel*>                   LODLevels;                                                // 0x0050(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      ConvertedModules : 1;                                     // 0x0060(0x0001)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0061(0x0003) MISSED OFFSET
	int                                                PeakActiveParticles;                                      // 0x0064(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                InitialAllocationCount;                                   // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MediumDetailSpawnRateScale;                               // 0x006C(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              QualityLevelSpawnRateScale;                               // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EDetailMode>                           DetailMode;                                               // 0x0074(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0075(0x0003) MISSED OFFSET
	unsigned char                                      bIsSoloing : 1;                                           // 0x0078(0x0001) (Transient)
	unsigned char                                      bCookedOut : 1;                                           // 0x0078(0x0001)
	unsigned char                                      bDisabledLODsKeepEmitterAlive : 1;                        // 0x0078(0x0001) (Edit)
	unsigned char                                      bDisableWhenInsignficant : 1;                             // 0x0078(0x0001) (Edit)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	EParticleSignificanceLevel                         SignificanceLevel;                                        // 0x007C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x007D(0x0003) MISSED OFFSET
	float                                              DepthSliceThickness;                                      // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x10C];                                     // 0x0084(0x010C) MISSED OFFSET

}


//Class Engine.ParticleSpriteEmitter
//0x0000 (0x0190 - 0x0190)
class UParticleSpriteEmitter : public UParticleEmitter
{
public:

}


//Class Engine.ParticleLODLevel
//0x0090 (0x00D0 - 0x0040)
class UParticleLODLevel : public UObject
{
public:
	int                                                Level;                                                    // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnabled : 1;                                             // 0x0044(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	class UParticleModuleRequired*                     RequiredModule;                                           // 0x0048(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UParticleModule*>                     Modules;                                                  // 0x0050(0x0010) (ExportObject, ZeroConstructor)
	class UParticleModuleTypeDataBase*                 TypeDataModule;                                           // 0x0060(0x0008) (ExportObject, ZeroConstructor, IsPlainOldData)
	class UParticleModuleSpawn*                        SpawnModule;                                              // 0x0068(0x0008) (ExportObject, ZeroConstructor, IsPlainOldData)
	class UParticleModuleEventGenerator*               EventGenerator;                                           // 0x0070(0x0008) (ExportObject, ZeroConstructor, IsPlainOldData)
	TArray<class UParticleModuleSpawnBase*>            SpawningModules;                                          // 0x0078(0x0010) (ZeroConstructor, Transient, DuplicateTransient)
	TArray<class UParticleModule*>                     SpawnModules;                                             // 0x0088(0x0010) (ZeroConstructor, Transient, DuplicateTransient)
	TArray<class UParticleModule*>                     UpdateModules;                                            // 0x0098(0x0010) (ZeroConstructor, Transient, DuplicateTransient)
	TArray<class UParticleModuleOrbit*>                OrbitModules;                                             // 0x00A8(0x0010) (ZeroConstructor, Transient, DuplicateTransient)
	TArray<class UParticleModuleEventReceiverBase*>    EventReceiverModules;                                     // 0x00B8(0x0010) (ZeroConstructor, Transient, DuplicateTransient)
	unsigned char                                      ConvertedModules : 1;                                     // 0x00C8(0x0001)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00C9(0x0003) MISSED OFFSET
	int                                                PeakActiveParticles;                                      // 0x00CC(0x0004) (ZeroConstructor, IsPlainOldData)

}


//Class Engine.ParticleModule
//0x0008 (0x0048 - 0x0040)
class UParticleModule : public UObject
{
public:
	unsigned char                                      bSpawnModule : 1;                                         // 0x0040(0x0001)
	unsigned char                                      bUpdateModule : 1;                                        // 0x0040(0x0001)
	unsigned char                                      bFinalUpdateModule : 1;                                   // 0x0040(0x0001)
	unsigned char                                      bUpdateForGPUEmitter : 1;                                 // 0x0040(0x0001)
	unsigned char                                      bCurvesAsColor : 1;                                       // 0x0040(0x0001)
	unsigned char                                      b3DDrawMode : 1;                                          // 0x0040(0x0001) (Edit)
	unsigned char                                      bSupported3DDrawMode : 1;                                 // 0x0040(0x0001)
	unsigned char                                      bEnabled : 1;                                             // 0x0040(0x0001)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0041(0x0001)
	unsigned char                                      bEditable : 1;                                            // 0x0041(0x0001)
	unsigned char                                      LODDuplicate : 1;                                         // 0x0041(0x0001)
	unsigned char                                      bSupportsRandomSeed : 1;                                  // 0x0041(0x0001)
	unsigned char                                      bRequiresLoopingNotification : 1;                         // 0x0041(0x0001)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0042(0x0002) MISSED OFFSET
	unsigned char                                      LODValidity;                                              // 0x0044(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0045(0x0003) MISSED OFFSET

}


//Class Engine.ParticleModuleAccelerationBase
//0x0008 (0x0050 - 0x0048)
class UParticleModuleAccelerationBase : public UParticleModule
{
public:
	unsigned char                                      bAlwaysInWorldSpace : 1;                                  // 0x0048(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleAcceleration
//0x0058 (0x00A8 - 0x0050)
class UParticleModuleAcceleration : public UParticleModuleAccelerationBase
{
public:
	struct FRawDistributionVector                      Acceleration;                                             // 0x0050(0x0050) (Edit)
	unsigned char                                      bApplyOwnerScale : 1;                                     // 0x00A0(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleAccelerationConstant
//0x0010 (0x0060 - 0x0050)
class UParticleModuleAccelerationConstant : public UParticleModuleAccelerationBase
{
public:
	struct FVector                                     Acceleration;                                             // 0x0050(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

}


//Class Engine.ParticleModuleAccelerationDrag
//0x0040 (0x0090 - 0x0050)
class UParticleModuleAccelerationDrag : public UParticleModuleAccelerationBase
{
public:
	class UDistributionFloat*                          DragCoefficient;                                          // 0x0050(0x0008) (ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData)
	struct FRawDistributionFloat                       DragCoefficientRaw;                                       // 0x0058(0x0038) (Edit)

}


//Class Engine.ParticleModuleAccelerationDragScaleOverLife
//0x0040 (0x0090 - 0x0050)
class UParticleModuleAccelerationDragScaleOverLife : public UParticleModuleAccelerationBase
{
public:
	class UDistributionFloat*                          DragScale;                                                // 0x0050(0x0008) (ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData)
	struct FRawDistributionFloat                       DragScaleRaw;                                             // 0x0058(0x0038) (Edit)

}


//Class Engine.ParticleModuleAccelerationOverLifetime
//0x0050 (0x00A0 - 0x0050)
class UParticleModuleAccelerationOverLifetime : public UParticleModuleAccelerationBase
{
public:
	struct FRawDistributionVector                      AccelOverLife;                                            // 0x0050(0x0050) (Edit)

}


//Class Engine.ParticleModuleAttractorBase
//0x0000 (0x0048 - 0x0048)
class UParticleModuleAttractorBase : public UParticleModule
{
public:

}


//Class Engine.ParticleModuleAttractorLine
//0x0088 (0x00D0 - 0x0048)
class UParticleModuleAttractorLine : public UParticleModuleAttractorBase
{
public:
	struct FVector                                     EndPoint0;                                                // 0x0048(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     EndPoint1;                                                // 0x0054(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRawDistributionFloat                       Range;                                                    // 0x0060(0x0038) (Edit)
	struct FRawDistributionFloat                       Strength;                                                 // 0x0098(0x0038) (Edit)

}


//Class Engine.ParticleModuleAttractorParticle
//0x0090 (0x00D8 - 0x0048)
class UParticleModuleAttractorParticle : public UParticleModuleAttractorBase
{
public:
	struct FName                                       EmitterName;                                              // 0x0048(0x0008) (Edit, ExportObject, ZeroConstructor, NoClear, IsPlainOldData)
	struct FRawDistributionFloat                       Range;                                                    // 0x0050(0x0038) (Edit)
	unsigned char                                      bStrengthByDistance : 1;                                  // 0x0088(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0089(0x0007) MISSED OFFSET
	struct FRawDistributionFloat                       Strength;                                                 // 0x0090(0x0038) (Edit)
	unsigned char                                      bAffectBaseVelocity : 1;                                  // 0x00C8(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00C9(0x0003) MISSED OFFSET
	TEnumAsByte<EAttractorParticleSelectionMethod>     SelectionMethod;                                          // 0x00CC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00CD(0x0003) MISSED OFFSET
	unsigned char                                      bRenewSource : 1;                                         // 0x00D0(0x0001) (Edit)
	unsigned char                                      bInheritSourceVel : 1;                                    // 0x00D0(0x0001) (Edit)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00D1(0x0003) MISSED OFFSET
	int                                                LastSelIndex;                                             // 0x00D4(0x0004) (ZeroConstructor, IsPlainOldData)

}


//Class Engine.ParticleModuleAttractorPoint
//0x00C8 (0x0110 - 0x0048)
class UParticleModuleAttractorPoint : public UParticleModuleAttractorBase
{
public:
	struct FRawDistributionVector                      Position;                                                 // 0x0048(0x0050) (Edit)
	struct FRawDistributionFloat                       Range;                                                    // 0x0098(0x0038) (Edit)
	struct FRawDistributionFloat                       Strength;                                                 // 0x00D0(0x0038) (Edit)
	unsigned char                                      StrengthByDistance : 1;                                   // 0x0108(0x0001) (Edit)
	unsigned char                                      bAffectBaseVelocity : 1;                                  // 0x0108(0x0001) (Edit)
	unsigned char                                      bOverrideVelocity : 1;                                    // 0x0108(0x0001) (Edit)
	unsigned char                                      bUseWorldSpacePosition : 1;                               // 0x0108(0x0001) (Edit)
	unsigned char                                      Positive_X : 1;                                           // 0x0108(0x0001) (Edit)
	unsigned char                                      Positive_Y : 1;                                           // 0x0108(0x0001) (Edit)
	unsigned char                                      Positive_Z : 1;                                           // 0x0108(0x0001) (Edit)
	unsigned char                                      Negative_X : 1;                                           // 0x0108(0x0001) (Edit)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0109(0x0001)
	unsigned char                                      Negative_Y : 1;                                           // 0x0109(0x0001) (Edit)
	unsigned char                                      Negative_Z : 1;                                           // 0x0109(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x6];                                       // 0x010A(0x0006) MISSED OFFSET

}


//Class Engine.ParticleModuleAttractorPointGravity
//0x0050 (0x0098 - 0x0048)
class UParticleModuleAttractorPointGravity : public UParticleModuleAttractorBase
{
public:
	struct FVector                                     Position;                                                 // 0x0048(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UDistributionFloat*                          Strength;                                                 // 0x0058(0x0008) (ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData)
	struct FRawDistributionFloat                       StrengthRaw;                                              // 0x0060(0x0038) (Edit, NoClear)

}


//Class Engine.ParticleModuleBeamBase
//0x0000 (0x0048 - 0x0048)
class UParticleModuleBeamBase : public UParticleModule
{
public:

}


//Class Engine.ParticleModuleBeamModifier
//0x00F0 (0x0138 - 0x0048)
class UParticleModuleBeamModifier : public UParticleModuleBeamBase
{
public:
	TEnumAsByte<EBeamModifierType>                     ModifierType;                                             // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	struct FBeamModifierOptions                        PositionOptions;                                          // 0x004C(0x0004) (Edit)
	struct FRawDistributionVector                      Position;                                                 // 0x0050(0x0050) (Edit)
	struct FBeamModifierOptions                        TangentOptions;                                           // 0x00A0(0x0004) (Edit)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	struct FRawDistributionVector                      Tangent;                                                  // 0x00A8(0x0050) (Edit)
	unsigned char                                      bAbsoluteTangent : 1;                                     // 0x00F8(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00F9(0x0003) MISSED OFFSET
	struct FBeamModifierOptions                        StrengthOptions;                                          // 0x00FC(0x0004) (Edit)
	struct FRawDistributionFloat                       Strength;                                                 // 0x0100(0x0038) (Edit)

}


//Class Engine.ParticleModuleBeamNoise
//0x0188 (0x01D0 - 0x0048)
class UParticleModuleBeamNoise : public UParticleModuleBeamBase
{
public:
	unsigned char                                      bLowFreq_Enabled : 1;                                     // 0x0048(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                Frequency;                                                // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Frequency_LowRange;                                       // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	struct FRawDistributionVector                      NoiseRange;                                               // 0x0058(0x0050) (Edit)
	struct FRawDistributionFloat                       NoiseRangeScale;                                          // 0x00A8(0x0038) (Edit)
	unsigned char                                      bNRScaleEmitterTime : 1;                                  // 0x00E0(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x7];                                       // 0x00E1(0x0007) MISSED OFFSET
	struct FRawDistributionVector                      NoiseSpeed;                                               // 0x00E8(0x0050) (Edit)
	unsigned char                                      bSmooth : 1;                                              // 0x0138(0x0001) (Edit)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0139(0x0003) MISSED OFFSET
	float                                              NoiseLockRadius;                                          // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bNoiseLock : 1;                                           // 0x0140(0x0001)
	unsigned char                                      bOscillate : 1;                                           // 0x0140(0x0001) (Edit)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0141(0x0003) MISSED OFFSET
	float                                              NoiseLockTime;                                            // 0x0144(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NoiseTension;                                             // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseNoiseTangents : 1;                                    // 0x014C(0x0001) (Edit)
	unsigned char                                      UnknownData05[0x3];                                       // 0x014D(0x0003) MISSED OFFSET
	struct FRawDistributionFloat                       NoiseTangentStrength;                                     // 0x0150(0x0038) (Edit)
	int                                                NoiseTessellation;                                        // 0x0188(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bTargetNoise : 1;                                         // 0x018C(0x0001) (Edit)
	unsigned char                                      UnknownData06[0x3];                                       // 0x018D(0x0003) MISSED OFFSET
	float                                              FrequencyDistance;                                        // 0x0190(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bApplyNoiseScale : 1;                                     // 0x0194(0x0001) (Edit)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0195(0x0003) MISSED OFFSET
	struct FRawDistributionFloat                       NoiseScale;                                               // 0x0198(0x0038) (Edit)

}


//Class Engine.ParticleModuleBeamSource
//0x0108 (0x0150 - 0x0048)
class UParticleModuleBeamSource : public UParticleModuleBeamBase
{
public:
	TEnumAsByte<EBeam2SourceTargetMethod>              SourceMethod;                                             // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	struct FName                                       SourceName;                                               // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bSourceAbsolute : 1;                                      // 0x0058(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
	struct FRawDistributionVector                      Source;                                                   // 0x0060(0x0050) (Edit)
	unsigned char                                      bLockSource : 1;                                          // 0x00B0(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00B1(0x0003) MISSED OFFSET
	TEnumAsByte<EBeam2SourceTargetTangentMethod>       SourceTangentMethod;                                      // 0x00B4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00B5(0x0003) MISSED OFFSET
	struct FRawDistributionVector                      SourceTangent;                                            // 0x00B8(0x0050) (Edit)
	unsigned char                                      bLockSourceTangent : 1;                                   // 0x0108(0x0001) (Edit)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0109(0x0007) MISSED OFFSET
	struct FRawDistributionFloat                       SourceStrength;                                           // 0x0110(0x0038) (Edit)
	unsigned char                                      bLockSourceStength : 1;                                   // 0x0148(0x0001) (Edit)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0149(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleBeamTarget
//0x0108 (0x0150 - 0x0048)
class UParticleModuleBeamTarget : public UParticleModuleBeamBase
{
public:
	TEnumAsByte<EBeam2SourceTargetMethod>              TargetMethod;                                             // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	struct FName                                       TargetName;                                               // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRawDistributionVector                      Target;                                                   // 0x0058(0x0050) (Edit)
	unsigned char                                      bTargetAbsolute : 1;                                      // 0x00A8(0x0001) (Edit)
	unsigned char                                      bLockTarget : 1;                                          // 0x00A8(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00A9(0x0003) MISSED OFFSET
	TEnumAsByte<EBeam2SourceTargetTangentMethod>       TargetTangentMethod;                                      // 0x00AC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00AD(0x0003) MISSED OFFSET
	struct FRawDistributionVector                      TargetTangent;                                            // 0x00B0(0x0050) (Edit)
	unsigned char                                      bLockTargetTangent : 1;                                   // 0x0100(0x0001) (Edit)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0101(0x0007) MISSED OFFSET
	struct FRawDistributionFloat                       TargetStrength;                                           // 0x0108(0x0038) (Edit)
	unsigned char                                      bLockTargetStength : 1;                                   // 0x0140(0x0001) (Edit)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0141(0x0003) MISSED OFFSET
	float                                              LockRadius;                                               // 0x0144(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0148(0x0008) MISSED OFFSET

}


//Class Engine.ParticleModuleCameraBase
//0x0000 (0x0048 - 0x0048)
class UParticleModuleCameraBase : public UParticleModule
{
public:

}


//Class Engine.ParticleModuleCameraOffset
//0x0040 (0x0088 - 0x0048)
class UParticleModuleCameraOffset : public UParticleModuleCameraBase
{
public:
	struct FRawDistributionFloat                       CameraOffset;                                             // 0x0048(0x0038) (Edit)
	unsigned char                                      bSpawnTimeOnly : 1;                                       // 0x0080(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0081(0x0003) MISSED OFFSET
	TEnumAsByte<EParticleCameraOffsetUpdateMethod>     UpdateMethod;                                             // 0x0084(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0085(0x0003) MISSED OFFSET

}


//Class Engine.ParticleModuleCollisionBase
//0x0000 (0x0048 - 0x0048)
class UParticleModuleCollisionBase : public UParticleModule
{
public:

}


//Class Engine.ParticleModuleCollision
//0x0188 (0x01D0 - 0x0048)
class UParticleModuleCollision : public UParticleModuleCollisionBase
{
public:
	struct FRawDistributionVector                      DampingFactor;                                            // 0x0048(0x0050) (Edit)
	struct FRawDistributionVector                      DampingFactorRotation;                                    // 0x0098(0x0050) (Edit)
	struct FRawDistributionFloat                       MaxCollisions;                                            // 0x00E8(0x0038) (Edit)
	TEnumAsByte<EParticleCollisionComplete>            CollisionCompletionOption;                                // 0x0120(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0121(0x0007) MISSED OFFSET
	TArray<TEnumAsByte<EObjectTypeQuery>>              CollisionTypes;                                           // 0x0128(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0138(0x0008) MISSED OFFSET
	unsigned char                                      bApplyPhysics : 1;                                        // 0x0140(0x0001) (Edit)
	unsigned char                                      bIgnoreTriggerVolumes : 1;                                // 0x0140(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0141(0x0007) MISSED OFFSET
	struct FRawDistributionFloat                       ParticleMass;                                             // 0x0148(0x0038) (Edit)
	float                                              DirScalar;                                                // 0x0180(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bPawnsDoNotDecrementCount : 1;                            // 0x0184(0x0001) (Edit)
	unsigned char                                      bOnlyVerticalNormalsDecrementCount : 1;                   // 0x0184(0x0001) (Edit)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0185(0x0003) MISSED OFFSET
	float                                              VerticalFudgeFactor;                                      // 0x0188(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x018C(0x0004) MISSED OFFSET
	struct FRawDistributionFloat                       DelayAmount;                                              // 0x0190(0x0038) (Edit)
	unsigned char                                      bDropDetail : 1;                                          // 0x01C8(0x0001) (Edit)
	unsigned char                                      bCollideOnlyIfVisible : 1;                                // 0x01C8(0x0001) (Edit)
	unsigned char                                      bIgnoreSourceActor : 1;                                   // 0x01C8(0x0001) (Edit)
	unsigned char                                      UnknownData05[0x3];                                       // 0x01C9(0x0003) MISSED OFFSET
	float                                              MaxCollisionDistance;                                     // 0x01CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.ParticleModuleCollisionGPU
//0x0088 (0x00D0 - 0x0048)
class UParticleModuleCollisionGPU : public UParticleModuleCollisionBase
{
public:
	struct FRawDistributionFloat                       Resilience;                                               // 0x0048(0x0038) (Edit)
	struct FRawDistributionFloat                       ResilienceScaleOverLife;                                  // 0x0080(0x0038) (Edit)
	float                                              Friction;                                                 // 0x00B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RandomSpread;                                             // 0x00BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RandomDistribution;                                       // 0x00C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RadiusScale;                                              // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RadiusBias;                                               // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EParticleCollisionResponse>            Response;                                                 // 0x00CC(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EParticleCollisionMode>                CollisionMode;                                            // 0x00CD(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x00CE(0x0002) MISSED OFFSET

}


//Class Engine.ParticleModuleColorBase
//0x0000 (0x0048 - 0x0048)
class UParticleModuleColorBase : public UParticleModule
{
public:

}


//Class Engine.ParticleModuleColor
//0x0090 (0x00D8 - 0x0048)
class UParticleModuleColor : public UParticleModuleColorBase
{
public:
	struct FRawDistributionVector                      StartColor;                                               // 0x0048(0x0050) (Edit)
	struct FRawDistributionFloat                       StartAlpha;                                               // 0x0098(0x0038) (Edit)
	unsigned char                                      bClampAlpha : 1;                                          // 0x00D0(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleColor_Seeded
//0x0020 (0x00F8 - 0x00D8)
class UParticleModuleColor_Seeded : public UParticleModuleColor
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                           // 0x00D8(0x0020) (Edit)

}


//Class Engine.ParticleModuleColorOverLife
//0x0090 (0x00D8 - 0x0048)
class UParticleModuleColorOverLife : public UParticleModuleColorBase
{
public:
	struct FRawDistributionVector                      ColorOverLife;                                            // 0x0048(0x0050) (Edit)
	struct FRawDistributionFloat                       AlphaOverLife;                                            // 0x0098(0x0038) (Edit)
	unsigned char                                      bClampAlpha : 1;                                          // 0x00D0(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleColorScaleOverLife
//0x0090 (0x00D8 - 0x0048)
class UParticleModuleColorScaleOverLife : public UParticleModuleColorBase
{
public:
	struct FRawDistributionVector                      ColorScaleOverLife;                                       // 0x0048(0x0050) (Edit)
	struct FRawDistributionFloat                       AlphaScaleOverLife;                                       // 0x0098(0x0038) (Edit)
	unsigned char                                      bEmitterTime : 1;                                         // 0x00D0(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleEventBase
//0x0000 (0x0048 - 0x0048)
class UParticleModuleEventBase : public UParticleModule
{
public:

}


//Class Engine.ParticleModuleEventGenerator
//0x0010 (0x0058 - 0x0048)
class UParticleModuleEventGenerator : public UParticleModuleEventBase
{
public:
	TArray<struct FParticleEvent_GenerateInfo>         Events;                                                   // 0x0048(0x0010) (Edit, ExportObject, ZeroConstructor, NoClear)

}


//Class Engine.ParticleModuleEventReceiverBase
//0x0010 (0x0058 - 0x0048)
class UParticleModuleEventReceiverBase : public UParticleModuleEventBase
{
public:
	TEnumAsByte<EParticleEventType>                    EventGeneratorType;                                       // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	struct FName                                       EventName;                                                // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.ParticleModuleEventReceiverKillParticles
//0x0008 (0x0060 - 0x0058)
class UParticleModuleEventReceiverKillParticles : public UParticleModuleEventReceiverBase
{
public:
	unsigned char                                      bStopSpawning : 1;                                        // 0x0058(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0059(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleEventReceiverSpawn
//0x00A8 (0x0100 - 0x0058)
class UParticleModuleEventReceiverSpawn : public UParticleModuleEventReceiverBase
{
public:
	struct FRawDistributionFloat                       SpawnCount;                                               // 0x0058(0x0038) (Edit)
	unsigned char                                      bUseParticleTime : 1;                                     // 0x0090(0x0001) (Edit)
	unsigned char                                      bUsePSysLocation : 1;                                     // 0x0090(0x0001) (Edit)
	unsigned char                                      bInheritVelocity : 1;                                     // 0x0090(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0091(0x0007) MISSED OFFSET
	struct FRawDistributionVector                      InheritVelocityScale;                                     // 0x0098(0x0050) (Edit)
	TArray<class UPhysicalMaterial*>                   PhysicalMaterials;                                        // 0x00E8(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      bBanPhysicalMaterials : 1;                                // 0x00F8(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00F9(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleKillBase
//0x0000 (0x0048 - 0x0048)
class UParticleModuleKillBase : public UParticleModule
{
public:

}


//Class Engine.ParticleModuleKillBox
//0x00A8 (0x00F0 - 0x0048)
class UParticleModuleKillBox : public UParticleModuleKillBase
{
public:
	struct FRawDistributionVector                      LowerLeftCorner;                                          // 0x0048(0x0050) (Edit)
	struct FRawDistributionVector                      UpperRightCorner;                                         // 0x0098(0x0050) (Edit)
	unsigned char                                      bAbsolute : 1;                                            // 0x00E8(0x0001) (Edit)
	unsigned char                                      bKillInside : 1;                                          // 0x00E8(0x0001) (Edit)
	unsigned char                                      bAxisAlignedAndFixedSize : 1;                             // 0x00E8(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00E9(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleKillHeight
//0x0040 (0x0088 - 0x0048)
class UParticleModuleKillHeight : public UParticleModuleKillBase
{
public:
	struct FRawDistributionFloat                       Height;                                                   // 0x0048(0x0038) (Edit)
	unsigned char                                      bAbsolute : 1;                                            // 0x0080(0x0001) (Edit)
	unsigned char                                      bFloor : 1;                                               // 0x0080(0x0001) (Edit)
	unsigned char                                      bApplyPSysScale : 1;                                      // 0x0080(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0081(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleLifetimeBase
//0x0000 (0x0048 - 0x0048)
class UParticleModuleLifetimeBase : public UParticleModule
{
public:

}


//Class Engine.ParticleModuleLifetime
//0x0038 (0x0080 - 0x0048)
class UParticleModuleLifetime : public UParticleModuleLifetimeBase
{
public:
	struct FRawDistributionFloat                       LifeTime;                                                 // 0x0048(0x0038) (Edit)

}


//Class Engine.ParticleModuleLifetime_Seeded
//0x0020 (0x00A0 - 0x0080)
class UParticleModuleLifetime_Seeded : public UParticleModuleLifetime
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                           // 0x0080(0x0020) (Edit)

}


//Class Engine.ParticleModuleLightBase
//0x0000 (0x0048 - 0x0048)
class UParticleModuleLightBase : public UParticleModule
{
public:

}


//Class Engine.ParticleModuleLight
//0x0118 (0x0160 - 0x0048)
class UParticleModuleLight : public UParticleModuleLightBase
{
public:
	unsigned char                                      bUseInverseSquaredFalloff : 1;                            // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00 : 8;                                        // 0x0049(0x0001)
	unsigned char                                      bAffectsTranslucency : 1;                                 // 0x0049(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x004A(0x0001)
	unsigned char                                      bPreviewLightRadius : 1;                                  // 0x004A(0x0001) (Edit, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x004B(0x0001) MISSED OFFSET
	float                                              SpawnFraction;                                            // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRawDistributionVector                      ColorScaleOverLife;                                       // 0x0050(0x0050) (Edit)
	struct FRawDistributionFloat                       BrightnessOverLife;                                       // 0x00A0(0x0038) (Edit)
	struct FRawDistributionFloat                       RadiusScale;                                              // 0x00D8(0x0038) (Edit)
	struct FRawDistributionFloat                       LightExponent;                                            // 0x0110(0x0038) (Edit)
	struct FLightingChannels                           LightingChannels;                                         // 0x0148(0x0003) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData03[0x1];                                       // 0x014B(0x0001) MISSED OFFSET
	float                                              VolumetricScatteringIntensity;                            // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bHighQualityLights : 1;                                   // 0x0150(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04 : 8;                                        // 0x0151(0x0001)
	unsigned char                                      bShadowCastingLights : 1;                                 // 0x0151(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x6];                                       // 0x0152(0x0006) MISSED OFFSET
	class UTextureLightProfile*                        IESTexture;                                               // 0x0158(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

}


//Class Engine.ParticleModuleLight_Seeded
//0x0020 (0x0180 - 0x0160)
class UParticleModuleLight_Seeded : public UParticleModuleLight
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                           // 0x0160(0x0020) (Edit)

}


//Class Engine.ParticleModuleLocationBase
//0x0000 (0x0048 - 0x0048)
class UParticleModuleLocationBase : public UParticleModule
{
public:

}


//Class Engine.ParticleModuleLocation
//0x0058 (0x00A0 - 0x0048)
class UParticleModuleLocation : public UParticleModuleLocationBase
{
public:
	struct FRawDistributionVector                      StartLocation;                                            // 0x0048(0x0050) (Edit)
	float                                              DistributeOverNPoints;                                    // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DistributeThreshold;                                      // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.ParticleModuleLocation_Seeded
//0x0020 (0x00C0 - 0x00A0)
class UParticleModuleLocation_Seeded : public UParticleModuleLocation
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                           // 0x00A0(0x0020) (Edit)

}


//Class Engine.ParticleModuleLocationWorldOffset
//0x0000 (0x00A0 - 0x00A0)
class UParticleModuleLocationWorldOffset : public UParticleModuleLocation
{
public:

}


//Class Engine.ParticleModuleLocationWorldOffset_Seeded
//0x0020 (0x00C0 - 0x00A0)
class UParticleModuleLocationWorldOffset_Seeded : public UParticleModuleLocationWorldOffset
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                           // 0x00A0(0x0020) (Edit)

}


//Class Engine.ParticleModuleLocationBoneSocket
//0x0040 (0x0088 - 0x0048)
class UParticleModuleLocationBoneSocket : public UParticleModuleLocationBase
{
public:
	TEnumAsByte<ELocationBoneSocketSource>             SourceType;                                               // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	struct FVector                                     UniversalOffset;                                          // 0x004C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FLocationBoneSocketInfo>             SourceLocations;                                          // 0x0058(0x0010) (Edit, ZeroConstructor)
	TEnumAsByte<ELocationBoneSocketSelectionMethod>    SelectionMethod;                                          // 0x0068(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	unsigned char                                      bUpdatePositionEachFrame : 1;                             // 0x006C(0x0001) (Edit)
	unsigned char                                      bOrientMeshEmitters : 1;                                  // 0x006C(0x0001) (Edit)
	unsigned char                                      bInheritBoneVelocity : 1;                                 // 0x006C(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
	float                                              InheritVelocityScale;                                     // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	struct FName                                       SkelMeshActorParamName;                                   // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                NumPreSelectedIndices;                                    // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0084(0x0004) MISSED OFFSET

}


//Class Engine.ParticleModuleLocationDirect
//0x0140 (0x0188 - 0x0048)
class UParticleModuleLocationDirect : public UParticleModuleLocationBase
{
public:
	struct FRawDistributionVector                      Location;                                                 // 0x0048(0x0050) (Edit)
	struct FRawDistributionVector                      LocationOffset;                                           // 0x0098(0x0050) (Edit)
	struct FRawDistributionVector                      ScaleFactor;                                              // 0x00E8(0x0050) (Edit)
	struct FRawDistributionVector                      Direction;                                                // 0x0138(0x0050) (Edit)

}


//Class Engine.ParticleModuleLocationEmitter
//0x0020 (0x0068 - 0x0048)
class UParticleModuleLocationEmitter : public UParticleModuleLocationBase
{
public:
	struct FName                                       EmitterName;                                              // 0x0048(0x0008) (Edit, ExportObject, ZeroConstructor, NoClear, IsPlainOldData)
	TEnumAsByte<ELocationEmitterSelectionMethod>       SelectionMethod;                                          // 0x0050(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	unsigned char                                      InheritSourceVelocity : 1;                                // 0x0054(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	float                                              InheritSourceVelocityScale;                               // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bInheritSourceRotation : 1;                               // 0x005C(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	float                                              InheritSourceRotationScale;                               // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

}


//Class Engine.ParticleModuleLocationEmitterDirect
//0x0008 (0x0050 - 0x0048)
class UParticleModuleLocationEmitterDirect : public UParticleModuleLocationBase
{
public:
	struct FName                                       EmitterName;                                              // 0x0048(0x0008) (Edit, ExportObject, ZeroConstructor, NoClear, IsPlainOldData)

}


//Class Engine.ParticleModuleLocationPrimitiveBase
//0x0090 (0x00D8 - 0x0048)
class UParticleModuleLocationPrimitiveBase : public UParticleModuleLocationBase
{
public:
	unsigned char                                      Positive_X : 1;                                           // 0x0048(0x0001) (Edit)
	unsigned char                                      Positive_Y : 1;                                           // 0x0048(0x0001) (Edit)
	unsigned char                                      Positive_Z : 1;                                           // 0x0048(0x0001) (Edit)
	unsigned char                                      Negative_X : 1;                                           // 0x0048(0x0001) (Edit)
	unsigned char                                      Negative_Y : 1;                                           // 0x0048(0x0001) (Edit)
	unsigned char                                      Negative_Z : 1;                                           // 0x0048(0x0001) (Edit)
	unsigned char                                      SurfaceOnly : 1;                                          // 0x0048(0x0001) (Edit)
	unsigned char                                      Velocity : 1;                                             // 0x0048(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	struct FRawDistributionFloat                       VelocityScale;                                            // 0x0050(0x0038) (Edit)
	struct FRawDistributionVector                      StartLocation;                                            // 0x0088(0x0050) (Edit)

}


//Class Engine.ParticleModuleLocationPrimitiveCylinder
//0x0080 (0x0158 - 0x00D8)
class UParticleModuleLocationPrimitiveCylinder : public UParticleModuleLocationPrimitiveBase
{
public:
	unsigned char                                      RadialVelocity : 1;                                       // 0x00D8(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D9(0x0007) MISSED OFFSET
	struct FRawDistributionFloat                       StartRadius;                                              // 0x00E0(0x0038) (Edit)
	struct FRawDistributionFloat                       StartHeight;                                              // 0x0118(0x0038) (Edit)
	TEnumAsByte<ECylinderHeightAxis>                   HeightAxis;                                               // 0x0150(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0151(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleLocationPrimitiveCylinder_Seeded
//0x0020 (0x0178 - 0x0158)
class UParticleModuleLocationPrimitiveCylinder_Seeded : public UParticleModuleLocationPrimitiveCylinder
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                           // 0x0158(0x0020) (Edit)

}


//Class Engine.ParticleModuleLocationPrimitiveSphere
//0x0038 (0x0110 - 0x00D8)
class UParticleModuleLocationPrimitiveSphere : public UParticleModuleLocationPrimitiveBase
{
public:
	struct FRawDistributionFloat                       StartRadius;                                              // 0x00D8(0x0038) (Edit)

}


//Class Engine.ParticleModuleLocationPrimitiveSphere_Seeded
//0x0020 (0x0130 - 0x0110)
class UParticleModuleLocationPrimitiveSphere_Seeded : public UParticleModuleLocationPrimitiveSphere
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                           // 0x0110(0x0020) (Edit)

}


//Class Engine.ParticleModuleLocationPrimitiveTriangle
//0x00F8 (0x0140 - 0x0048)
class UParticleModuleLocationPrimitiveTriangle : public UParticleModuleLocationBase
{
public:
	struct FRawDistributionVector                      StartOffset;                                              // 0x0048(0x0050) (Edit)
	struct FRawDistributionFloat                       Height;                                                   // 0x0098(0x0038) (Edit)
	struct FRawDistributionFloat                       Angle;                                                    // 0x00D0(0x0038) (Edit)
	struct FRawDistributionFloat                       Thickness;                                                // 0x0108(0x0038) (Edit)

}


//Class Engine.ParticleModuleLocationSkelVertSurface
//0x0060 (0x00A8 - 0x0048)
class UParticleModuleLocationSkelVertSurface : public UParticleModuleLocationBase
{
public:
	TEnumAsByte<ELocationSkelVertSurfaceSource>        SourceType;                                               // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	struct FVector                                     UniversalOffset;                                          // 0x004C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUpdatePositionEachFrame : 1;                             // 0x0058(0x0001) (Edit)
	unsigned char                                      bOrientMeshEmitters : 1;                                  // 0x0058(0x0001) (Edit)
	unsigned char                                      bInheritBoneVelocity : 1;                                 // 0x0058(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	float                                              InheritVelocityScale;                                     // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       SkelMeshActorParamName;                                   // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               ValidAssociatedBones;                                     // 0x0068(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      bEnforceNormalCheck : 1;                                  // 0x0078(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	struct FVector                                     NormalToCompare;                                          // 0x007C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NormalCheckToleranceDegrees;                              // 0x0088(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NormalCheckTolerance;                                     // 0x008C(0x0004) (ZeroConstructor, IsPlainOldData)
	TArray<int>                                        ValidMaterialIndices;                                     // 0x0090(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      bInheritVertexColor : 1;                                  // 0x00A0(0x0001) (Edit)
	unsigned char                                      bInheritUV : 1;                                           // 0x00A0(0x0001) (Edit)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00A1(0x0003) MISSED OFFSET
	uint32_t                                           InheritUVChannel;                                         // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.ParticleModulePivotOffset
//0x0008 (0x0050 - 0x0048)
class UParticleModulePivotOffset : public UParticleModuleLocationBase
{
public:
	struct FVector2D                                   PivotOffset;                                              // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.ParticleModuleSourceMovement
//0x0050 (0x0098 - 0x0048)
class UParticleModuleSourceMovement : public UParticleModuleLocationBase
{
public:
	struct FRawDistributionVector                      SourceMovementScale;                                      // 0x0048(0x0050) (Edit)

}


//Class Engine.ParticleModuleMaterialBase
//0x0000 (0x0048 - 0x0048)
class UParticleModuleMaterialBase : public UParticleModule
{
public:

}


//Class Engine.ParticleModuleMeshMaterial
//0x0010 (0x0058 - 0x0048)
class UParticleModuleMeshMaterial : public UParticleModuleMaterialBase
{
public:
	TArray<class UMaterialInterface*>                  MeshMaterials;                                            // 0x0048(0x0010) (Edit, ZeroConstructor)

}


//Class Engine.ParticleModuleOrbitBase
//0x0008 (0x0050 - 0x0048)
class UParticleModuleOrbitBase : public UParticleModule
{
public:
	unsigned char                                      bUseEmitterTime : 1;                                      // 0x0048(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleOrbit
//0x0110 (0x0160 - 0x0050)
class UParticleModuleOrbit : public UParticleModuleOrbitBase
{
public:
	TEnumAsByte<EOrbitChainMode>                       ChainMode;                                                // 0x0050(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	struct FRawDistributionVector                      OffsetAmount;                                             // 0x0058(0x0050) (Edit)
	struct FOrbitOptions                               OffsetOptions;                                            // 0x00A8(0x0004) (Edit)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
	struct FRawDistributionVector                      RotationAmount;                                           // 0x00B0(0x0050) (Edit)
	struct FOrbitOptions                               RotationOptions;                                          // 0x0100(0x0004) (Edit)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	struct FRawDistributionVector                      RotationRateAmount;                                       // 0x0108(0x0050) (Edit)
	struct FOrbitOptions                               RotationRateOptions;                                      // 0x0158(0x0004) (Edit)
	unsigned char                                      UnknownData03[0x4];                                       // 0x015C(0x0004) MISSED OFFSET

}


//Class Engine.ParticleModuleOrientationBase
//0x0000 (0x0048 - 0x0048)
class UParticleModuleOrientationBase : public UParticleModule
{
public:

}


//Class Engine.ParticleModuleOrientationAxisLock
//0x0008 (0x0050 - 0x0048)
class UParticleModuleOrientationAxisLock : public UParticleModuleOrientationBase
{
public:
	TEnumAsByte<EParticleAxisLock>                     LockAxisFlags;                                            // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleParameterBase
//0x0000 (0x0048 - 0x0048)
class UParticleModuleParameterBase : public UParticleModule
{
public:

}


//Class Engine.ParticleModuleParameterDynamic
//0x0018 (0x0060 - 0x0048)
class UParticleModuleParameterDynamic : public UParticleModuleParameterBase
{
public:
	TArray<struct FEmitterDynamicParameter>            DynamicParams;                                            // 0x0048(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	int                                                UpdateFlags;                                              // 0x0058(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUsesVelocity : 1;                                        // 0x005C(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x005D(0x0003) MISSED OFFSET

}


//Class Engine.ParticleModuleParameterDynamic_Seeded
//0x0020 (0x0080 - 0x0060)
class UParticleModuleParameterDynamic_Seeded : public UParticleModuleParameterDynamic
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                           // 0x0060(0x0020) (Edit)

}


//Class Engine.SubUVAnimation
//0x0038 (0x0078 - 0x0040)
class USubUVAnimation : public UObject
{
public:
	class UTexture2D*                                  SubUVTexture;                                             // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SubImages_Horizontal;                                     // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SubImages_Vertical;                                       // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESubUVBoundingVertexCount>             BoundingMode;                                             // 0x0050(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EOpacitySourceMode>                    OpacitySourceMode;                                        // 0x0051(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0052(0x0002) MISSED OFFSET
	float                                              AlphaThreshold;                                           // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0058(0x0020) MISSED OFFSET

}


//Class Engine.ParticleModuleRequired
//0x0168 (0x01B0 - 0x0048)
class UParticleModuleRequired : public UParticleModule
{
public:
	class UMaterialInterface*                          Material;                                                 // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          MaterialTiled;                                            // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0058(0x0008) MISSED OFFSET
	struct FVector4                                    TiledTranslucentMultipliers;                              // 0x0060(0x0010) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     EmitterOrigin;                                            // 0x0070(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    EmitterRotation;                                          // 0x007C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EParticleScreenAlignment>              ScreenAlignment;                                          // 0x0088(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0089(0x0003) MISSED OFFSET
	float                                              MinFacingCameraBlendDistance;                             // 0x008C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxFacingCameraBlendDistance;                             // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinimalScreenSize;                                        // 0x0094(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseLocalSpace : 1;                                       // 0x0098(0x0001) (Edit)
	unsigned char                                      bKillOnDeactivate : 1;                                    // 0x0098(0x0001) (Edit)
	unsigned char                                      bKillOnCompleted : 1;                                     // 0x0098(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0099(0x0003) MISSED OFFSET
	TEnumAsByte<EParticleSortMode>                     SortMode;                                                 // 0x009C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x009D(0x0003) MISSED OFFSET
	unsigned char                                      bUseLegacyEmitterTime : 1;                                // 0x00A0(0x0001) (Edit)
	unsigned char                                      bRemoveHMDRoll : 1;                                       // 0x00A0(0x0001) (Edit)
	unsigned char                                      UnknownData04[0x3];                                       // 0x00A1(0x0003) MISSED OFFSET
	float                                              EmitterDuration;                                          // 0x00A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EmitterDurationLow;                                       // 0x00A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEmitterDurationUseRange : 1;                             // 0x00AC(0x0001) (Edit)
	unsigned char                                      bDurationRecalcEachLoop : 1;                              // 0x00AC(0x0001) (Edit)
	unsigned char                                      UnknownData05[0x3];                                       // 0x00AD(0x0003) MISSED OFFSET
	int                                                EmitterLoops;                                             // 0x00B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x00B4(0x0004) MISSED OFFSET
	struct FRawDistributionFloat                       SpawnRate;                                                // 0x00B8(0x0038)
	TEnumAsByte<EParticleBurstMethod>                  ParticleBurstMethod;                                      // 0x00F0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x00F1(0x0007) MISSED OFFSET
	TArray<struct FParticleBurst>                      BurstList;                                                // 0x00F8(0x0010) (ExportObject, ZeroConstructor, NoClear)
	float                                              EmitterDelay;                                             // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EmitterDelayLow;                                          // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEmitterDelayUseRange : 1;                                // 0x0110(0x0001) (Edit)
	unsigned char                                      bDelayFirstLoopOnly : 1;                                  // 0x0110(0x0001) (Edit)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0111(0x0003) MISSED OFFSET
	TEnumAsByte<EParticleSubUVInterpMethod>            InterpolationMethod;                                      // 0x0114(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x0115(0x0003) MISSED OFFSET
	int                                                SubImages_Horizontal;                                     // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SubImages_Vertical;                                       // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bScaleUV : 1;                                             // 0x0120(0x0001) (Edit)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0121(0x0003) MISSED OFFSET
	float                                              RandomImageTime;                                          // 0x0124(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                RandomImageChanges;                                       // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bOverrideSystemMacroUV : 1;                               // 0x012C(0x0001) (Edit)
	unsigned char                                      UnknownData11[0x3];                                       // 0x012D(0x0003) MISSED OFFSET
	struct FVector                                     MacroUVPosition;                                          // 0x0130(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MacroUVRadius;                                            // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseMaxDrawCount : 1;                                     // 0x0140(0x0001) (Edit)
	unsigned char                                      UnknownData12[0x3];                                       // 0x0141(0x0003) MISSED OFFSET
	int                                                MaxDrawCount;                                             // 0x0144(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EParticleUVFlipMode                                UVFlippingMode;                                           // 0x0148(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x7];                                       // 0x0149(0x0007) MISSED OFFSET
	class UTexture2D*                                  CutoutTexture;                                            // 0x0150(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ESubUVBoundingVertexCount>             BoundingMode;                                             // 0x0158(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EOpacitySourceMode>                    OpacitySourceMode;                                        // 0x0159(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x2];                                       // 0x015A(0x0002) MISSED OFFSET
	float                                              AlphaThreshold;                                           // 0x015C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEmitterNormalsMode>                   EmitterNormalsMode;                                       // 0x0160(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x3];                                       // 0x0161(0x0003) MISSED OFFSET
	struct FVector                                     NormalsSphereCenter;                                      // 0x0164(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     NormalsCylinderDirection;                                 // 0x0170(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bOrbitModuleAffectsVelocityAlignment : 1;                 // 0x017C(0x0001) (Edit)
	unsigned char                                      UnknownData16[0x3];                                       // 0x017D(0x0003) MISSED OFFSET
	TArray<struct FName>                               NamedMaterialOverrides;                                   // 0x0180(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData17[0x20];                                      // 0x0190(0x0020) MISSED OFFSET

}


//Class Engine.ParticleModuleRotationBase
//0x0000 (0x0048 - 0x0048)
class UParticleModuleRotationBase : public UParticleModule
{
public:

}


//Class Engine.ParticleModuleMeshRotation
//0x0058 (0x00A0 - 0x0048)
class UParticleModuleMeshRotation : public UParticleModuleRotationBase
{
public:
	struct FRawDistributionVector                      StartRotation;                                            // 0x0048(0x0050) (Edit)
	unsigned char                                      bInheritParent : 1;                                       // 0x0098(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleMeshRotation_Seeded
//0x0020 (0x00C0 - 0x00A0)
class UParticleModuleMeshRotation_Seeded : public UParticleModuleMeshRotation
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                           // 0x00A0(0x0020) (Edit)

}


//Class Engine.ParticleModuleRotation
//0x0038 (0x0080 - 0x0048)
class UParticleModuleRotation : public UParticleModuleRotationBase
{
public:
	struct FRawDistributionFloat                       StartRotation;                                            // 0x0048(0x0038) (Edit)

}


//Class Engine.ParticleModuleRotation_Seeded
//0x0020 (0x00A0 - 0x0080)
class UParticleModuleRotation_Seeded : public UParticleModuleRotation
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                           // 0x0080(0x0020) (Edit)

}


//Class Engine.ParticleModuleRotationOverLifetime
//0x0040 (0x0088 - 0x0048)
class UParticleModuleRotationOverLifetime : public UParticleModuleRotationBase
{
public:
	struct FRawDistributionFloat                       RotationOverLife;                                         // 0x0048(0x0038) (Edit)
	unsigned char                                      Scale : 1;                                                // 0x0080(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0081(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleRotationRateBase
//0x0000 (0x0048 - 0x0048)
class UParticleModuleRotationRateBase : public UParticleModule
{
public:

}


//Class Engine.ParticleModuleMeshRotationRate
//0x0050 (0x0098 - 0x0048)
class UParticleModuleMeshRotationRate : public UParticleModuleRotationRateBase
{
public:
	struct FRawDistributionVector                      StartRotationRate;                                        // 0x0048(0x0050) (Edit)

}


//Class Engine.ParticleModuleMeshRotationRate_Seeded
//0x0020 (0x00B8 - 0x0098)
class UParticleModuleMeshRotationRate_Seeded : public UParticleModuleMeshRotationRate
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                           // 0x0098(0x0020) (Edit)

}


//Class Engine.ParticleModuleMeshRotationRateMultiplyLife
//0x0050 (0x0098 - 0x0048)
class UParticleModuleMeshRotationRateMultiplyLife : public UParticleModuleRotationRateBase
{
public:
	struct FRawDistributionVector                      LifeMultiplier;                                           // 0x0048(0x0050) (Edit)

}


//Class Engine.ParticleModuleMeshRotationRateOverLife
//0x0058 (0x00A0 - 0x0048)
class UParticleModuleMeshRotationRateOverLife : public UParticleModuleRotationRateBase
{
public:
	struct FRawDistributionVector                      RotRate;                                                  // 0x0048(0x0050) (Edit)
	unsigned char                                      bScaleRotRate : 1;                                        // 0x0098(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleRotationRate
//0x0038 (0x0080 - 0x0048)
class UParticleModuleRotationRate : public UParticleModuleRotationRateBase
{
public:
	struct FRawDistributionFloat                       StartRotationRate;                                        // 0x0048(0x0038) (Edit)

}


//Class Engine.ParticleModuleRotationRate_Seeded
//0x0020 (0x00A0 - 0x0080)
class UParticleModuleRotationRate_Seeded : public UParticleModuleRotationRate
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                           // 0x0080(0x0020) (Edit)

}


//Class Engine.ParticleModuleRotationRateMultiplyLife
//0x0038 (0x0080 - 0x0048)
class UParticleModuleRotationRateMultiplyLife : public UParticleModuleRotationRateBase
{
public:
	struct FRawDistributionFloat                       LifeMultiplier;                                           // 0x0048(0x0038) (Edit)

}


//Class Engine.ParticleModuleSizeBase
//0x0000 (0x0048 - 0x0048)
class UParticleModuleSizeBase : public UParticleModule
{
public:

}


//Class Engine.ParticleModuleSize
//0x0050 (0x0098 - 0x0048)
class UParticleModuleSize : public UParticleModuleSizeBase
{
public:
	struct FRawDistributionVector                      StartSize;                                                // 0x0048(0x0050) (Edit)

}


//Class Engine.ParticleModuleSize_Seeded
//0x0020 (0x00B8 - 0x0098)
class UParticleModuleSize_Seeded : public UParticleModuleSize
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                           // 0x0098(0x0020) (Edit)

}


//Class Engine.ParticleModuleSizeMultiplyLife
//0x0058 (0x00A0 - 0x0048)
class UParticleModuleSizeMultiplyLife : public UParticleModuleSizeBase
{
public:
	struct FRawDistributionVector                      LifeMultiplier;                                           // 0x0048(0x0050) (Edit)
	unsigned char                                      MultiplyX : 1;                                            // 0x0098(0x0001) (Edit)
	unsigned char                                      MultiplyY : 1;                                            // 0x0098(0x0001) (Edit)
	unsigned char                                      MultiplyZ : 1;                                            // 0x0098(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleSizeScale
//0x0058 (0x00A0 - 0x0048)
class UParticleModuleSizeScale : public UParticleModuleSizeBase
{
public:
	struct FRawDistributionVector                      SizeScale;                                                // 0x0048(0x0050) (Edit)
	unsigned char                                      EnableX : 1;                                              // 0x0098(0x0001) (Edit)
	unsigned char                                      EnableY : 1;                                              // 0x0098(0x0001) (Edit)
	unsigned char                                      EnableZ : 1;                                              // 0x0098(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleSizeScaleBySpeed
//0x0010 (0x0058 - 0x0048)
class UParticleModuleSizeScaleBySpeed : public UParticleModuleSizeBase
{
public:
	struct FVector2D                                   SpeedScale;                                               // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   MaxScale;                                                 // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.ParticleModuleSpawnBase
//0x0008 (0x0050 - 0x0048)
class UParticleModuleSpawnBase : public UParticleModule
{
public:
	unsigned char                                      bProcessSpawnRate : 1;                                    // 0x0048(0x0001) (Edit)
	unsigned char                                      bProcessBurstList : 1;                                    // 0x0048(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleSpawn
//0x00C8 (0x0118 - 0x0050)
class UParticleModuleSpawn : public UParticleModuleSpawnBase
{
public:
	struct FRawDistributionFloat                       Rate;                                                     // 0x0050(0x0038) (Edit)
	struct FRawDistributionFloat                       RateScale;                                                // 0x0088(0x0038) (Edit)
	TEnumAsByte<EParticleBurstMethod>                  ParticleBurstMethod;                                      // 0x00C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00C1(0x0007) MISSED OFFSET
	TArray<struct FParticleBurst>                      BurstList;                                                // 0x00C8(0x0010) (Edit, ExportObject, ZeroConstructor, NoClear)
	struct FRawDistributionFloat                       BurstScale;                                               // 0x00D8(0x0038) (Edit)
	unsigned char                                      bApplyGlobalSpawnRateScale : 1;                           // 0x0110(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0111(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleSpawnPerUnit
//0x0050 (0x00A0 - 0x0050)
class UParticleModuleSpawnPerUnit : public UParticleModuleSpawnBase
{
public:
	float                                              UnitScalar;                                               // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	struct FRawDistributionFloat                       SpawnPerUnit;                                             // 0x0058(0x0038) (Edit)
	unsigned char                                      bIgnoreSpawnRateWhenMoving : 1;                           // 0x0090(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0091(0x0003) MISSED OFFSET
	float                                              MovementTolerance;                                        // 0x0094(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxFrameDistance;                                         // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIgnoreMovementAlongX : 1;                                // 0x009C(0x0001) (Edit)
	unsigned char                                      bIgnoreMovementAlongY : 1;                                // 0x009C(0x0001) (Edit)
	unsigned char                                      bIgnoreMovementAlongZ : 1;                                // 0x009C(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x009D(0x0003) MISSED OFFSET

}


//Class Engine.ParticleModuleSubUVBase
//0x0000 (0x0048 - 0x0048)
class UParticleModuleSubUVBase : public UParticleModule
{
public:

}


//Class Engine.ParticleModuleSubUV
//0x0048 (0x0090 - 0x0048)
class UParticleModuleSubUV : public UParticleModuleSubUVBase
{
public:
	class USubUVAnimation*                             Animation;                                                // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FRawDistributionFloat                       SubImageIndex;                                            // 0x0050(0x0038) (Edit)
	unsigned char                                      bUseRealTime : 1;                                         // 0x0088(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0089(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleSubUVMovie
//0x0048 (0x00D8 - 0x0090)
class UParticleModuleSubUVMovie : public UParticleModuleSubUV
{
public:
	unsigned char                                      bUseEmitterTime : 1;                                      // 0x0090(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0091(0x0007) MISSED OFFSET
	struct FRawDistributionFloat                       FrameRate;                                                // 0x0098(0x0038) (Edit)
	int                                                StartingFrame;                                            // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00D4(0x0004) MISSED OFFSET

}


//Class Engine.ParticleModuleTrailBase
//0x0000 (0x0048 - 0x0048)
class UParticleModuleTrailBase : public UParticleModule
{
public:

}


//Class Engine.ParticleModuleTrailSource
//0x0068 (0x00B0 - 0x0048)
class UParticleModuleTrailSource : public UParticleModuleTrailBase
{
public:
	TEnumAsByte<ETrail2SourceMethod>                   SourceMethod;                                             // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	struct FName                                       SourceName;                                               // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRawDistributionFloat                       SourceStrength;                                           // 0x0058(0x0038) (Edit)
	unsigned char                                      bLockSourceStength : 1;                                   // 0x0090(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0091(0x0003) MISSED OFFSET
	int                                                SourceOffsetCount;                                        // 0x0094(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FVector>                             SourceOffsetDefaults;                                     // 0x0098(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TEnumAsByte<EParticleSourceSelectionMethod>        SelectionMethod;                                          // 0x00A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00A9(0x0003) MISSED OFFSET
	unsigned char                                      bInheritRotation : 1;                                     // 0x00AC(0x0001) (Edit)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00AD(0x0003) MISSED OFFSET

}


//Class Engine.ParticleModuleTypeDataBase
//0x0000 (0x0048 - 0x0048)
class UParticleModuleTypeDataBase : public UParticleModule
{
public:

}


//Class Engine.ParticleModuleTypeDataAnimTrail
//0x0018 (0x0060 - 0x0048)
class UParticleModuleTypeDataAnimTrail : public UParticleModuleTypeDataBase
{
public:
	unsigned char                                      bDeadTrailsOnDeactivate : 1;                              // 0x0048(0x0001) (Edit)
	unsigned char                                      bEnablePreviousTangentRecalculation : 1;                  // 0x0048(0x0001) (Edit)
	unsigned char                                      bTangentRecalculationEveryFrame : 1;                      // 0x0048(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	float                                              TilingDistance;                                           // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DistanceTessellationStepSize;                             // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TangentTessellationStepSize;                              // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WidthTessellationStepSize;                                // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET

}


//Class Engine.ParticleModuleTypeDataBeam2
//0x0138 (0x0180 - 0x0048)
class UParticleModuleTypeDataBeam2 : public UParticleModuleTypeDataBase
{
public:
	TEnumAsByte<EBeam2Method>                          BeamMethod;                                               // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                TextureTile;                                              // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TextureTileDistance;                                      // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Sheets;                                                   // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxBeamCount;                                             // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Speed;                                                    // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                InterpolationPoints;                                      // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAlwaysOn : 1;                                            // 0x0064(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	int                                                UpVectorStepSize;                                         // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	struct FName                                       BranchParentName;                                         // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRawDistributionFloat                       Distance;                                                 // 0x0078(0x0038) (Edit)
	TEnumAsByte<EBeamTaperMethod>                      TaperMethod;                                              // 0x00B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET
	struct FRawDistributionFloat                       TaperFactor;                                              // 0x00B8(0x0038) (Edit)
	struct FRawDistributionFloat                       TaperScale;                                               // 0x00F0(0x0038) (Edit)
	unsigned char                                      RenderGeometry : 1;                                       // 0x0128(0x0001) (Edit)
	unsigned char                                      RenderDirectLine : 1;                                     // 0x0128(0x0001) (Edit)
	unsigned char                                      RenderLines : 1;                                          // 0x0128(0x0001) (Edit)
	unsigned char                                      RenderTessellation : 1;                                   // 0x0128(0x0001) (Edit)
	unsigned char                                      UnknownData04[0x57];                                      // 0x0129(0x0057) MISSED OFFSET

}


//Class Engine.ParticleModuleTypeDataGpu
//0x0438 (0x0480 - 0x0048)
class UParticleModuleTypeDataGpu : public UParticleModuleTypeDataBase
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0048(0x0008) MISSED OFFSET
	struct FGPUSpriteEmitterInfo                       EmitterInfo;                                              // 0x0050(0x02C0)
	struct FGPUSpriteResourceData                      ResourceData;                                             // 0x0310(0x0160)
	float                                              CameraMotionBlurAmount;                                   // 0x0470(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bClearExistingParticlesOnInit : 1;                        // 0x0474(0x0001) (Edit)
	unsigned char                                      UnknownData01[0xB];                                       // 0x0475(0x000B) MISSED OFFSET

}


//Class Engine.ParticleModuleTypeDataMesh
//0x0088 (0x00D0 - 0x0048)
class UParticleModuleTypeDataMesh : public UParticleModuleTypeDataBase
{
public:
	class UStaticMesh*                                 Mesh;                                                     // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      CastShadows : 1;                                          // 0x0050(0x0001)
	unsigned char                                      DoCollisions : 1;                                         // 0x0050(0x0001)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	TEnumAsByte<EMeshScreenAlignment>                  MeshAlignment;                                            // 0x0054(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	unsigned char                                      bOverrideMaterial : 1;                                    // 0x0058(0x0001) (Edit)
	unsigned char                                      bOverrideDefaultMotionBlurSettings : 1;                   // 0x0058(0x0001) (Edit)
	unsigned char                                      bEnableMotionBlur : 1;                                    // 0x0058(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	float                                              Pitch;                                                    // 0x005C(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              Roll;                                                     // 0x0060(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              Yaw;                                                      // 0x0064(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	struct FRawDistributionVector                      RollPitchYawRange;                                        // 0x0068(0x0050) (Edit)
	unsigned char                                      UnknownData03[0x8];                                       // 0x00B8(0x0008) MISSED OFFSET
	TEnumAsByte<EParticleAxisLock>                     AxisLockOption;                                           // 0x00C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x00C1(0x0003) MISSED OFFSET
	unsigned char                                      bCameraFacing : 1;                                        // 0x00C4(0x0001) (Edit)
	unsigned char                                      UnknownData05[0x3];                                       // 0x00C5(0x0003) MISSED OFFSET
	TEnumAsByte<EMeshCameraFacingUpAxis>               CameraFacingUpAxisOption;                                 // 0x00C8(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	TEnumAsByte<EMeshCameraFacingOptions>              CameraFacingOption;                                       // 0x00C9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x00CA(0x0002) MISSED OFFSET
	unsigned char                                      bApplyParticleRotationAsSpin : 1;                         // 0x00CC(0x0001) (Edit)
	unsigned char                                      bFaceCameraDirectionRatherThanPosition : 1;               // 0x00CC(0x0001) (Edit)
	unsigned char                                      bCollisionsConsiderPartilceSize : 1;                      // 0x00CC(0x0001) (Edit)
	unsigned char                                      UnknownData07[0x3];                                       // 0x00CD(0x0003) MISSED OFFSET

}


//Class Engine.ParticleModuleTypeDataRibbon
//0x0030 (0x0078 - 0x0048)
class UParticleModuleTypeDataRibbon : public UParticleModuleTypeDataBase
{
public:
	int                                                MaxTessellationBetweenParticles;                          // 0x0048(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                SheetsPerTrail;                                           // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxTrailCount;                                            // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxParticleInTrailCount;                                  // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bDeadTrailsOnDeactivate : 1;                              // 0x0058(0x0001) (Edit)
	unsigned char                                      bDeadTrailsOnSourceLoss : 1;                              // 0x0058(0x0001) (Edit)
	unsigned char                                      bClipSourceSegement : 1;                                  // 0x0058(0x0001) (Edit)
	unsigned char                                      bEnablePreviousTangentRecalculation : 1;                  // 0x0058(0x0001) (Edit)
	unsigned char                                      bTangentRecalculationEveryFrame : 1;                      // 0x0058(0x0001) (Edit)
	unsigned char                                      bSpawnInitialParticle : 1;                                // 0x0058(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	TEnumAsByte<ETrailsRenderAxisOption>               RenderAxis;                                               // 0x005C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x005D(0x0003) MISSED OFFSET
	float                                              TangentSpawningScalar;                                    // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRenderGeometry : 1;                                      // 0x0064(0x0001) (Edit)
	unsigned char                                      bRenderSpawnPoints : 1;                                   // 0x0064(0x0001) (Edit)
	unsigned char                                      bRenderTangents : 1;                                      // 0x0064(0x0001) (Edit)
	unsigned char                                      bRenderTessellation : 1;                                  // 0x0064(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	float                                              TilingDistance;                                           // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DistanceTessellationStepSize;                             // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnableTangentDiffInterpScale : 1;                        // 0x0070(0x0001) (Edit)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0071(0x0003) MISSED OFFSET
	float                                              TangentTessellationScalar;                                // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.ParticleModuleVectorFieldBase
//0x0000 (0x0048 - 0x0048)
class UParticleModuleVectorFieldBase : public UParticleModule
{
public:

}


//Class Engine.ParticleModuleVectorFieldGlobal
//0x0010 (0x0058 - 0x0048)
class UParticleModuleVectorFieldGlobal : public UParticleModuleVectorFieldBase
{
public:
	unsigned char                                      bOverrideGlobalVectorFieldTightness : 1;                  // 0x0048(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	float                                              GlobalVectorFieldScale;                                   // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GlobalVectorFieldTightness;                               // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

}


//Class Engine.ParticleModuleVectorFieldLocal
//0x0038 (0x0080 - 0x0048)
class UParticleModuleVectorFieldLocal : public UParticleModuleVectorFieldBase
{
public:
	class UVectorField*                                VectorField;                                              // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RelativeTranslation;                                      // 0x0050(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RelativeRotation;                                         // 0x005C(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RelativeScale3D;                                          // 0x0068(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Intensity;                                                // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Tightness;                                                // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIgnoreComponentTransform : 1;                            // 0x007C(0x0001) (Edit)
	unsigned char                                      bTileX : 1;                                               // 0x007C(0x0001) (Edit)
	unsigned char                                      bTileY : 1;                                               // 0x007C(0x0001) (Edit)
	unsigned char                                      bTileZ : 1;                                               // 0x007C(0x0001) (Edit)
	unsigned char                                      bUseFixDT : 1;                                            // 0x007C(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x007D(0x0003) MISSED OFFSET

}


//Class Engine.ParticleModuleVectorFieldRotation
//0x0018 (0x0060 - 0x0048)
class UParticleModuleVectorFieldRotation : public UParticleModuleVectorFieldBase
{
public:
	struct FVector                                     MinInitialRotation;                                       // 0x0048(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     MaxInitialRotation;                                       // 0x0054(0x000C) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.ParticleModuleVectorFieldRotationRate
//0x0010 (0x0058 - 0x0048)
class UParticleModuleVectorFieldRotationRate : public UParticleModuleVectorFieldBase
{
public:
	struct FVector                                     RotationRate;                                             // 0x0048(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

}


//Class Engine.ParticleModuleVectorFieldScale
//0x0040 (0x0088 - 0x0048)
class UParticleModuleVectorFieldScale : public UParticleModuleVectorFieldBase
{
public:
	class UDistributionFloat*                          VectorFieldScale;                                         // 0x0048(0x0008) (ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData)
	struct FRawDistributionFloat                       VectorFieldScaleRaw;                                      // 0x0050(0x0038) (Edit)

}


//Class Engine.ParticleModuleVectorFieldScaleOverLife
//0x0040 (0x0088 - 0x0048)
class UParticleModuleVectorFieldScaleOverLife : public UParticleModuleVectorFieldBase
{
public:
	class UDistributionFloat*                          VectorFieldScaleOverLife;                                 // 0x0048(0x0008) (ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData)
	struct FRawDistributionFloat                       VectorFieldScaleOverLifeRaw;                              // 0x0050(0x0038) (Edit)

}


//Class Engine.ParticleModuleVelocityBase
//0x0008 (0x0050 - 0x0048)
class UParticleModuleVelocityBase : public UParticleModule
{
public:
	unsigned char                                      bInWorldSpace : 1;                                        // 0x0048(0x0001) (Edit)
	unsigned char                                      bApplyOwnerScale : 1;                                     // 0x0048(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleVelocity
//0x0088 (0x00D8 - 0x0050)
class UParticleModuleVelocity : public UParticleModuleVelocityBase
{
public:
	struct FRawDistributionVector                      StartVelocity;                                            // 0x0050(0x0050) (Edit)
	struct FRawDistributionFloat                       StartVelocityRadial;                                      // 0x00A0(0x0038) (Edit)

}


//Class Engine.ParticleModuleVelocity_Seeded
//0x0020 (0x00F8 - 0x00D8)
class UParticleModuleVelocity_Seeded : public UParticleModuleVelocity
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                           // 0x00D8(0x0020) (Edit)

}


//Class Engine.ParticleModuleVelocityCone
//0x0080 (0x00D0 - 0x0050)
class UParticleModuleVelocityCone : public UParticleModuleVelocityBase
{
public:
	struct FRawDistributionFloat                       Angle;                                                    // 0x0050(0x0038) (Edit)
	struct FRawDistributionFloat                       Velocity;                                                 // 0x0088(0x0038) (Edit)
	struct FVector                                     Direction;                                                // 0x00C0(0x000C) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET

}


//Class Engine.ParticleModuleVelocityInheritParent
//0x0050 (0x00A0 - 0x0050)
class UParticleModuleVelocityInheritParent : public UParticleModuleVelocityBase
{
public:
	struct FRawDistributionVector                      Scale;                                                    // 0x0050(0x0050) (Edit)

}


//Class Engine.ParticleModuleVelocityOverLifetime
//0x0058 (0x00A8 - 0x0050)
class UParticleModuleVelocityOverLifetime : public UParticleModuleVelocityBase
{
public:
	struct FRawDistributionVector                      VelOverLife;                                              // 0x0050(0x0050) (Edit)
	unsigned char                                      Absolute : 1;                                             // 0x00A0(0x0001) (Edit, ExportObject)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET

}


//Class Engine.ParticleModuleEventSendToGame
//0x0000 (0x0040 - 0x0040)
class UParticleModuleEventSendToGame : public UObject
{
public:

}


//Class Engine.ParticleSystemReplay
//0x0018 (0x0058 - 0x0040)
class UParticleSystemReplay : public UObject
{
public:
	int                                                ClipIDNumber;                                             // 0x0040(0x0004) (Edit, ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x14];                                      // 0x0044(0x0014) MISSED OFFSET

}


//Class Engine.DemoPendingNetGame
//0x0000 (0x00E0 - 0x00E0)
class UDemoPendingNetGame : public UPendingNetGame
{
public:

}


//Class Engine.PhysicalMaterial
//0x0058 (0x0098 - 0x0040)
class UPhysicalMaterial : public UObject
{
public:
	float                                              Friction;                                                 // 0x0040(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFrictionCombineMode>                  FrictionCombineMode;                                      // 0x0044(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bOverrideFrictionCombineMode : 1;                         // 0x0045(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0046(0x0002) MISSED OFFSET
	float                                              Restitution;                                              // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EFrictionCombineMode>                  RestitutionCombineMode;                                   // 0x004C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bOverrideRestitutionCombineMode : 1;                      // 0x004D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x004E(0x0002) MISSED OFFSET
	float                                              Density;                                                  // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RaiseMassToPower;                                         // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DestructibleDamageThresholdScale;                         // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	class UPhysicalMaterialPropertyBase*               PhysicalMaterialProperty;                                 // 0x0060(0x0008) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EPhysicalSurface>                      SurfaceType;                                              // 0x0068(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	float                                              TireFrictionScale;                                        // 0x006C(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	TArray<struct FTireFrictionScalePair>              TireFrictionScales;                                       // 0x0070(0x0010) (Edit, ZeroConstructor, EditConst)
	unsigned char                                      UnknownData04[0x18];                                      // 0x0080(0x0018) MISSED OFFSET

}


//Class Engine.PhysicalMaterialPropertyBase
//0x0000 (0x0040 - 0x0040)
class UPhysicalMaterialPropertyBase : public UObject
{
public:

}


//Class Engine.PhysicsCollisionHandler
//0x0018 (0x0058 - 0x0040)
class UPhysicsCollisionHandler : public UObject
{
public:
	float                                              ImpactThreshold;                                          // 0x0040(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ImpactReFireDelay;                                        // 0x0044(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  DefaultImpactSound;                                       // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastImpactSoundTime;                                      // 0x0050(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

}


//Class Engine.PhysicsConstraintTemplate
//0x0310 (0x0350 - 0x0040)
class UPhysicsConstraintTemplate : public UObject
{
public:
	struct FConstraintInstance                         DefaultInstance;                                          // 0x0040(0x01F0) (Edit)
	TArray<struct FPhysicsConstraintProfileHandle>     ProfileHandles;                                           // 0x0230(0x0010) (ZeroConstructor)
	struct FConstraintProfileProperties                DefaultProfile;                                           // 0x0240(0x0104) (Transient)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0344(0x000C) MISSED OFFSET

}


//Class Engine.PhysicsSerializer
//0x00A8 (0x00E8 - 0x0040)
class UPhysicsSerializer : public UObject
{
public:
	unsigned char                                      UnknownData00[0xA8];                                      // 0x0040(0x00A8) MISSED OFFSET

}


//Class Engine.PlatformInterfaceBase
//0x0010 (0x0050 - 0x0040)
class UPlatformInterfaceBase : public UObject
{
public:
	TArray<struct FDelegateArray>                      AllDelegates;                                             // 0x0040(0x0010) (ZeroConstructor)

}


//Class Engine.CloudStorageBase
//0x0018 (0x0068 - 0x0050)
class UCloudStorageBase : public UPlatformInterfaceBase
{
public:
	TArray<struct FString>                             LocalCloudFiles;                                          // 0x0050(0x0010) (ZeroConstructor)
	unsigned char                                      bSuppressDelegateCalls : 1;                               // 0x0060(0x0001)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0061(0x0007) MISSED OFFSET

}


//Class Engine.InGameAdManager
//0x0028 (0x0078 - 0x0050)
class UInGameAdManager : public UPlatformInterfaceBase
{
public:
	unsigned char                                      bShouldPauseWhileAdOpen : 1;                              // 0x0050(0x0001)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	TArray<struct FScriptDelegate>                     ClickedBannerDelegates;                                   // 0x0058(0x0010) (ZeroConstructor)
	TArray<struct FScriptDelegate>                     ClosedAdDelegates;                                        // 0x0068(0x0010) (ZeroConstructor)

}


//Class Engine.MicroTransactionBase
//0x0030 (0x0080 - 0x0050)
class UMicroTransactionBase : public UPlatformInterfaceBase
{
public:
	TArray<struct FPurchaseInfo>                       AvailableProducts;                                        // 0x0050(0x0010) (ZeroConstructor)
	struct FString                                     LastError;                                                // 0x0060(0x0010) (ZeroConstructor)
	struct FString                                     LastErrorSolution;                                        // 0x0070(0x0010) (ZeroConstructor)

}


//Class Engine.TwitterIntegrationBase
//0x0000 (0x0050 - 0x0050)
class UTwitterIntegrationBase : public UPlatformInterfaceBase
{
public:

	// Function Engine.TwitterIntegrationBase.TwitterRequest
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_TwitterRequest(const struct FString& URL, TArray<struct FString> ParamKeysAndValues, TEnumAsByte<ETwitterRequestMethod> RequestMethod, int AccountIndex);// sub_4528960()

	// Function Engine.TwitterIntegrationBase.ShowTweetUI
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_ShowTweetUI(const struct FString& InitialMessage, const struct FString& URL, const struct FString& Picture);// sub_3230B0()

	// Function Engine.TwitterIntegrationBase.Init
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_Init();// sub_C9E010()

	// Function Engine.TwitterIntegrationBase.GetNumAccounts
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetNumAccounts();// sub_541B280()

	// Function Engine.TwitterIntegrationBase.GetAccountName
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetAccountName(int AccountIndex);// sub_21A1E90()

	// Function Engine.TwitterIntegrationBase.CanShowTweetUI
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_CanShowTweetUI();// sub_1A2F070()

	// Function Engine.TwitterIntegrationBase.AuthorizeAccounts
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static unsigned char STATIC_AuthorizeAccounts();// sub_18C1DB0()


}


//Class Engine.PlatformInterfaceWebResponse
//0x0088 (0x00C8 - 0x0040)
class UPlatformInterfaceWebResponse : public UObject
{
public:
	struct FString                                     OriginalURL;                                              // 0x0040(0x0010) (ZeroConstructor)
	int                                                ResponseCode;                                             // 0x0050(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                Tag;                                                      // 0x0054(0x0004) (ZeroConstructor, IsPlainOldData)
	struct FString                                     StringResponse;                                           // 0x0058(0x0010) (ZeroConstructor)
	TArray<unsigned char>                              BinaryResponse;                                           // 0x0068(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0078(0x0050) MISSED OFFSET

	// Function Engine.PlatformInterfaceWebResponse.GetNumHeaders
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static int STATIC_GetNumHeaders();// sub_1F609A0()

	// Function Engine.PlatformInterfaceWebResponse.GetHeaderValue
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FString STATIC_GetHeaderValue(const struct FString& HeaderName);// sub_1C7E2A0()

	// Function Engine.PlatformInterfaceWebResponse.GetHeader
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetHeader(int HeaderIndex, struct FString* Header, struct FString* Value);// sub_4A79220()


}


//Class Engine.ChildConnection
//0x0008 (0x65858 - 0x65850)
class UChildConnection : public UNetConnection
{
public:
	class UNetConnection*                              Parent;                                                   // 0x65850(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

}


//Class Engine.Polys
//0x0010 (0x0050 - 0x0040)
class UPolys : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0040(0x0010) MISSED OFFSET

}


//Class Engine.ReplayCustomEventManager
//0x0010 (0x0050 - 0x0040)
class UReplayCustomEventManager : public UObject
{
public:
	TArray<struct FCustomEventData>                    PendingCustomEvents;                                      // 0x0040(0x0010) (ZeroConstructor)

}


//Class Engine.ReporterBase
//0x0008 (0x0048 - 0x0040)
class UReporterBase : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0040(0x0008) MISSED OFFSET

}


//Class Engine.ReporterGraph
//0x0078 (0x00C0 - 0x0048)
class UReporterGraph : public UReporterBase
{
public:
	unsigned char                                      UnknownData00[0x78];                                      // 0x0048(0x0078) MISSED OFFSET

}


//Class Engine.ReverbEffect
//0x0030 (0x0070 - 0x0040)
class UReverbEffect : public UObject
{
public:
	float                                              Density;                                                  // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Diffusion;                                                // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Gain;                                                     // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GainHF;                                                   // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DecayTime;                                                // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DecayHFRatio;                                             // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ReflectionsGain;                                          // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ReflectionsDelay;                                         // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LateGain;                                                 // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LateDelay;                                                // 0x0064(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AirAbsorptionGainHF;                                      // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RoomRolloffFactor;                                        // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.Rig
//0x0020 (0x0060 - 0x0040)
class URig : public UObject
{
public:
	TArray<struct FTransformBase>                      TransformBases;                                           // 0x0040(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	TArray<struct FNode>                               Nodes;                                                    // 0x0050(0x0010) (Edit, EditFixedSize, ZeroConstructor)

}


//Class Engine.SaveGame
//0x0000 (0x0040 - 0x0040)
class USaveGame : public UObject
{
public:

}


//Class Engine.SimpleConstructionScript
//0x0090 (0x00D0 - 0x0040)
class USimpleConstructionScript : public UObject
{
public:
	TArray<class USCS_Node*>                           RootNodes;                                                // 0x0040(0x0010) (ZeroConstructor)
	TArray<class USCS_Node*>                           AllNodes;                                                 // 0x0050(0x0010) (ZeroConstructor)
	class USCS_Node*                                   DefaultSceneRootNode;                                     // 0x0060(0x0008) (ZeroConstructor, IsPlainOldData)
	class USCS_Node*                                   RootNode;                                                 // 0x0068(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	TArray<class USCS_Node*>                           ActorComponentNodes;                                      // 0x0070(0x0010) (ZeroConstructor, Deprecated)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0080(0x0050) MISSED OFFSET

}


//Class Engine.SCS_Node
//0x0120 (0x0160 - 0x0040)
class USCS_Node : public UObject
{
public:
	class UObject*                                     ComponentClass;                                           // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	class UActorComponent*                             ComponentTemplate;                                        // 0x0048(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FBlueprintCookedComponentInstancingData     CookedComponentInstancingData;                            // 0x0050(0x0050)
	struct FName                                       VariableName;                                             // 0x00A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FName                                       AttachToName;                                             // 0x00A8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       ParentComponentOrVariableName;                            // 0x00B0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       ParentComponentOwnerClassName;                            // 0x00B8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsParentComponentNative : 1;                             // 0x00C0(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00C1(0x0007) MISSED OFFSET
	TArray<class USCS_Node*>                           ChildNodes;                                               // 0x00C8(0x0010) (ZeroConstructor)
	class USCS_Node*                                   LODParentNode;                                            // 0x00D8(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<struct FBPVariableMetaDataEntry>            MetaDataArray;                                            // 0x00E0(0x0010) (Edit, ZeroConstructor)
	struct FGuid                                       VariableGuid;                                             // 0x00F0(0x0010) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsFalseRoot : 1;                                         // 0x0100(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0101(0x0001)
	unsigned char                                      bIsNative : 1;                                            // 0x0101(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0102(0x0006) MISSED OFFSET
	struct FName                                       NativeComponentName;                                      // 0x0108(0x0008) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      bVariableNameAutoGenerated : 1;                           // 0x0110(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0111(0x0007) MISSED OFFSET
	struct FName                                       InternalVariableName;                                     // 0x0118(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x40];                                      // 0x0120(0x0040) MISSED OFFSET

}


//Class Engine.Selection
//0x0068 (0x00A8 - 0x0040)
class USelection : public UObject
{
public:
	unsigned char                                      UnknownData00[0x68];                                      // 0x0040(0x0068) MISSED OFFSET

}


//Class Engine.DestructibleMesh
//0x00A8 (0x03B0 - 0x0308)
class UDestructibleMesh : public USkeletalMesh
{
public:
	struct FDestructibleParameters                     DefaultDestructibleParameters;                            // 0x0308(0x0088) (Edit)
	TArray<struct FFractureEffect>                     FractureEffects;                                          // 0x0390(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x03A0(0x0010) MISSED OFFSET

}


//Class Engine.SkeletalMeshReductionSettings
//0x0018 (0x0058 - 0x0040)
class USkeletalMeshReductionSettings : public UObject
{
public:
	TArray<struct FSkeletalMeshLODGroupSettings>       Settings;                                                 // 0x0040(0x0010) (ZeroConstructor, Config, GlobalConfig)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET

}


//Class Engine.SkeletalMeshSocket
//0x0038 (0x0078 - 0x0040)
class USkeletalMeshSocket : public UObject
{
public:
	struct FName                                       SocketName;                                               // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	struct FName                                       BoneName;                                                 // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	struct FVector                                     RelativeLocation;                                         // 0x0050(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RelativeRotation;                                         // 0x005C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RelativeScale;                                            // 0x0068(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bForceAlwaysAnimated : 1;                                 // 0x0074(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0075(0x0003) MISSED OFFSET

	// Function Engine.SkeletalMeshSocket.InitializeSocketFromLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_InitializeSocketFromLocation(class USkeletalMeshComponent* SkelComp, const struct FVector& WorldLocation, const struct FVector& WorldNormal);// sub_3DB7190()

	// Function Engine.SkeletalMeshSocket.GetSocketLocation
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static struct FVector STATIC_GetSocketLocation(class USkeletalMeshComponent* SkelComp);// sub_1C01BE0()


}


//Class Engine.SlateBrushAsset
//0x0090 (0x00D0 - 0x0040)
class USlateBrushAsset : public UObject
{
public:
	struct FSlateBrush                                 Brush;                                                    // 0x0040(0x0090) (Edit)

}


//Class Engine.SlateTextureAtlasInterface
//0x0000 (0x0040 - 0x0040)
class USlateTextureAtlasInterface : public UInterface
{
public:

}


//Class Engine.SoundConcurrency
//0x0010 (0x0050 - 0x0040)
class USoundConcurrency : public UObject
{
public:
	struct FSoundConcurrencySettings                   Concurrency;                                              // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)

}


//Class Engine.SoundEffectPreset
//0x0018 (0x0058 - 0x0040)
class USoundEffectPreset : public UObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0040(0x0018) MISSED OFFSET

}


//Class Engine.SoundEffectSubmixPreset
//0x0000 (0x0058 - 0x0058)
class USoundEffectSubmixPreset : public USoundEffectPreset
{
public:

}


//Class Engine.SoundSubmix
//0x0028 (0x0068 - 0x0040)
class USoundSubmix : public UObject
{
public:
	TArray<class USoundSubmix*>                        ChildSubmixes;                                            // 0x0040(0x0010) (Edit, ZeroConstructor)
	class USoundSubmix*                                ParentSubmix;                                             // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class USoundEffectSubmixPreset*>            SubmixEffectChain;                                        // 0x0058(0x0010) (Edit, ZeroConstructor)

}


//Class Engine.DialogueSoundWaveProxy
//0x0020 (0x00D8 - 0x00B8)
class UDialogueSoundWaveProxy : public USoundBase
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x00B8(0x0020) MISSED OFFSET

}


//Class Engine.SoundNode
//0x0010 (0x0050 - 0x0040)
class USoundNode : public UObject
{
public:
	TArray<class USoundNode*>                          ChildNodes;                                               // 0x0040(0x0010) (ZeroConstructor)

}


//Class Engine.SoundCue
//0x0158 (0x0210 - 0x00B8)
class USoundCue : public USoundBase
{
public:
	unsigned char                                      bOverrideAttenuation : 1;                                 // 0x00B8(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00B9(0x0007) MISSED OFFSET
	class USoundNode*                                  FirstNode;                                                // 0x00C0(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              VolumeMultiplier;                                         // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchMultiplier;                                          // 0x00CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FSoundAttenuationSettings                   AttenuationOverrides;                                     // 0x00D0(0x0130) (Edit)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0200(0x0010) MISSED OFFSET

}


//Class Engine.SoundGroups
//0x0060 (0x00A0 - 0x0040)
class USoundGroups : public UObject
{
public:
	TArray<struct FSoundGroup>                         SoundGroupProfiles;                                       // 0x0040(0x0010) (ZeroConstructor, Config)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0050(0x0050) MISSED OFFSET

}


//Class Engine.SoundWaveProcedural
//0x0088 (0x0320 - 0x0298)
class USoundWaveProcedural : public USoundWave
{
public:
	unsigned char                                      UnknownData00[0x88];                                      // 0x0298(0x0088) MISSED OFFSET

}


//Class Engine.SoundClass
//0x0058 (0x0098 - 0x0040)
class USoundClass : public UObject
{
public:
	struct FSoundClassProperties                       Properties;                                               // 0x0040(0x002C) (Edit)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	TArray<class USoundClass*>                         ChildClasses;                                             // 0x0070(0x0010) (Edit, ZeroConstructor)
	TArray<struct FPassiveSoundMixModifier>            PassiveSoundMixModifiers;                                 // 0x0080(0x0010) (Edit, ZeroConstructor)
	class USoundClass*                                 ParentClass;                                              // 0x0090(0x0008) (ZeroConstructor, IsPlainOldData)

}


//Class Engine.SoundEffectSourcePreset
//0x0000 (0x0058 - 0x0058)
class USoundEffectSourcePreset : public USoundEffectPreset
{
public:

}


//Class Engine.SoundEffectSourcePresetChain
//0x0018 (0x0058 - 0x0040)
class USoundEffectSourcePresetChain : public UObject
{
public:
	TArray<struct FSourceEffectChainEntry>             Chain;                                                    // 0x0040(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      bPlayEffectChainTails : 1;                                // 0x0050(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0051(0x0007) MISSED OFFSET

}


//Class Engine.SoundMix
//0x0060 (0x00A0 - 0x0040)
class USoundMix : public UObject
{
public:
	unsigned char                                      bApplyEQ : 1;                                             // 0x0040(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              EQPriority;                                               // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FAudioEQEffect                              EQSettings;                                               // 0x0048(0x0038) (Edit)
	TArray<struct FSoundClassAdjuster>                 SoundClassEffects;                                        // 0x0080(0x0010) (Edit, ZeroConstructor)
	float                                              InitialDelay;                                             // 0x0090(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FadeInTime;                                               // 0x0094(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Duration;                                                 // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FadeOutTime;                                              // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.SoundNodeAssetReferencer
//0x0000 (0x0050 - 0x0050)
class USoundNodeAssetReferencer : public USoundNode
{
public:

}


//Class Engine.SoundNodeWavePlayer
//0x0030 (0x0080 - 0x0050)
class USoundNodeWavePlayer : public USoundNodeAssetReferencer
{
public:
	TAssetPtr<classUSoundWave>                         SoundWaveAssetPtr;                                        // 0x0050(0x0020) (Edit)
	class USoundWave*                                  SoundWave;                                                // 0x0070(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bLooping : 1;                                             // 0x0078(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0079(0x0007) MISSED OFFSET

}


//Class Engine.SoundNodeAttenuation
//0x0140 (0x0190 - 0x0050)
class USoundNodeAttenuation : public USoundNode
{
public:
	class USoundAttenuation*                           AttenuationSettings;                                      // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FSoundAttenuationSettings                   AttenuationOverrides;                                     // 0x0058(0x0130) (Edit)
	unsigned char                                      bOverrideAttenuation : 1;                                 // 0x0188(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0189(0x0007) MISSED OFFSET

}


//Class Engine.SoundNodeBranch
//0x0008 (0x0058 - 0x0050)
class USoundNodeBranch : public USoundNode
{
public:
	struct FName                                       BoolParameterName;                                        // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.SoundNodeConcatenator
//0x0010 (0x0060 - 0x0050)
class USoundNodeConcatenator : public USoundNode
{
public:
	TArray<float>                                      InputVolume;                                              // 0x0050(0x0010) (Edit, EditFixedSize, ZeroConstructor)

}


//Class Engine.SoundNodeDelay
//0x0008 (0x0058 - 0x0050)
class USoundNodeDelay : public USoundNode
{
public:
	float                                              DelayMin;                                                 // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DelayMax;                                                 // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.SoundNodeDialoguePlayer
//0x0028 (0x0078 - 0x0050)
class USoundNodeDialoguePlayer : public USoundNode
{
public:
	struct FDialogueWaveParameter                      DialogueWaveParameter;                                    // 0x0050(0x0020) (Edit)
	unsigned char                                      bLooping : 1;                                             // 0x0070(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

}


//Class Engine.SoundNodeDistanceCrossFade
//0x0010 (0x0060 - 0x0050)
class USoundNodeDistanceCrossFade : public USoundNode
{
public:
	TArray<struct FDistanceDatum>                      CrossFadeInput;                                           // 0x0050(0x0010) (Edit, ExportObject, EditFixedSize, ZeroConstructor)

}


//Class Engine.SoundNodeParamCrossFade
//0x0008 (0x0068 - 0x0060)
class USoundNodeParamCrossFade : public USoundNodeDistanceCrossFade
{
public:
	struct FName                                       ParamName;                                                // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.SoundNodeDoppler
//0x0008 (0x0058 - 0x0050)
class USoundNodeDoppler : public USoundNode
{
public:
	float                                              DopplerIntensity;                                         // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET

}


//Class Engine.SoundNodeEnveloper
//0x0128 (0x0178 - 0x0050)
class USoundNodeEnveloper : public USoundNode
{
public:
	float                                              LoopStart;                                                // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LoopEnd;                                                  // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DurationAfterLoop;                                        // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                LoopCount;                                                // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bLoopIndefinitely : 1;                                    // 0x0060(0x0001) (Edit)
	unsigned char                                      bLoop : 1;                                                // 0x0060(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	class UDistributionFloatConstantCurve*             VolumeInterpCurve;                                        // 0x0068(0x0008) (ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData)
	class UDistributionFloatConstantCurve*             PitchInterpCurve;                                         // 0x0070(0x0008) (ExportObject, ZeroConstructor, InstancedReference, Deprecated, IsPlainOldData)
	struct FRuntimeFloatCurve                          VolumeCurve;                                              // 0x0078(0x0078) (Edit)
	struct FRuntimeFloatCurve                          PitchCurve;                                               // 0x00F0(0x0078) (Edit)
	float                                              PitchMin;                                                 // 0x0168(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchMax;                                                 // 0x016C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMin;                                                // 0x0170(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMax;                                                // 0x0174(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.SoundNodeGroupControl
//0x0010 (0x0060 - 0x0050)
class USoundNodeGroupControl : public USoundNode
{
public:
	TArray<int>                                        GroupSizes;                                               // 0x0050(0x0010) (Edit, EditFixedSize, ZeroConstructor)

}


//Class Engine.SoundNodeLooping
//0x0008 (0x0058 - 0x0050)
class USoundNodeLooping : public USoundNode
{
public:
	int                                                LoopCount;                                                // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bLoopIndefinitely : 1;                                    // 0x0054(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0055(0x0003) MISSED OFFSET

}


//Class Engine.SoundNodeMature
//0x0000 (0x0050 - 0x0050)
class USoundNodeMature : public USoundNode
{
public:

}


//Class Engine.SoundNodeMixer
//0x0010 (0x0060 - 0x0050)
class USoundNodeMixer : public USoundNode
{
public:
	TArray<float>                                      InputVolume;                                              // 0x0050(0x0010) (Edit, ExportObject, EditFixedSize, ZeroConstructor)

}


//Class Engine.SoundNodeModulator
//0x0010 (0x0060 - 0x0050)
class USoundNodeModulator : public USoundNode
{
public:
	float                                              PitchMin;                                                 // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchMax;                                                 // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMin;                                                // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VolumeMax;                                                // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.SoundNodeModulatorContinuous
//0x0040 (0x0090 - 0x0050)
class USoundNodeModulatorContinuous : public USoundNode
{
public:
	struct FModulatorContinuousParams                  PitchModulationParams;                                    // 0x0050(0x0020) (Edit)
	struct FModulatorContinuousParams                  VolumeModulationParams;                                   // 0x0070(0x0020) (Edit)

}


//Class Engine.SoundNodeOscillator
//0x0028 (0x0078 - 0x0050)
class USoundNodeOscillator : public USoundNode
{
public:
	unsigned char                                      bModulateVolume : 1;                                      // 0x0050(0x0001) (Edit)
	unsigned char                                      bModulatePitch : 1;                                       // 0x0050(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0051(0x0003) MISSED OFFSET
	float                                              AmplitudeMin;                                             // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AmplitudeMax;                                             // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FrequencyMin;                                             // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FrequencyMax;                                             // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OffsetMin;                                                // 0x0064(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OffsetMax;                                                // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CenterMin;                                                // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CenterMax;                                                // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

}


//Class Engine.SoundNodeQualityLevel
//0x0000 (0x0050 - 0x0050)
class USoundNodeQualityLevel : public USoundNode
{
public:

}


//Class Engine.SoundNodeRandom
//0x0030 (0x0080 - 0x0050)
class USoundNodeRandom : public USoundNode
{
public:
	TArray<float>                                      Weights;                                                  // 0x0050(0x0010) (Edit, EditFixedSize, ZeroConstructor)
	int                                                PreselectAtLevelLoad;                                     // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRandomizeWithoutReplacement : 1;                         // 0x0064(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	TArray<unsigned char>                              HasBeenUsed;                                              // 0x0068(0x0010) (ZeroConstructor, Transient)
	int                                                NumRandomUsed;                                            // 0x0078(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x007C(0x0004) MISSED OFFSET

}


//Class Engine.SoundNodeSoundClass
//0x0008 (0x0058 - 0x0050)
class USoundNodeSoundClass : public USoundNode
{
public:
	class USoundClass*                                 SoundClassOverride;                                       // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.SoundNodeSwitch
//0x0008 (0x0058 - 0x0050)
class USoundNodeSwitch : public USoundNode
{
public:
	struct FName                                       IntParameterName;                                         // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.SoundNodeWaveParam
//0x0008 (0x0058 - 0x0050)
class USoundNodeWaveParam : public USoundNode
{
public:
	struct FName                                       WaveParameterName;                                        // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.StaticMeshSocket
//0x0040 (0x0080 - 0x0040)
class UStaticMeshSocket : public UObject
{
public:
	struct FName                                       SocketName;                                               // 0x0040(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RelativeLocation;                                         // 0x0048(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    RelativeRotation;                                         // 0x0054(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RelativeScale;                                            // 0x0060(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	struct FString                                     Tag;                                                      // 0x0070(0x0010) (Edit, BlueprintVisible, ZeroConstructor)

}


//Class Engine.StringTable
//0x0018 (0x0058 - 0x0040)
class UStringTable : public UObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0040(0x0018) MISSED OFFSET

}


//Class Engine.SubsurfaceProfile
//0x0028 (0x0068 - 0x0040)
class USubsurfaceProfile : public UObject
{
public:
	struct FSubsurfaceProfileStruct                    Settings;                                                 // 0x0040(0x0024) (Edit)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

}


//Class Engine.TextPropertyTestObject
//0x0048 (0x0088 - 0x0040)
class UTextPropertyTestObject : public UObject
{
public:
	struct FText                                       DefaultedText;                                            // 0x0040(0x0018)
	struct FText                                       UndefaultedText;                                          // 0x0058(0x0018)
	struct FText                                       TransientText;                                            // 0x0070(0x0018)

}


//Class Engine.LightMapTexture2D
//0x0008 (0x0118 - 0x0110)
class ULightMapTexture2D : public UTexture2D
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0110(0x0008) MISSED OFFSET

}


//Class Engine.ShadowMapTexture2D
//0x0008 (0x0118 - 0x0110)
class UShadowMapTexture2D : public UTexture2D
{
public:
	TEnumAsByte<EShadowMapFlags>                       ShadowmapFlags;                                           // 0x0110(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0111(0x0007) MISSED OFFSET

}


//Class Engine.Texture2DArray
//0x0000 (0x0110 - 0x0110)
class UTexture2DArray : public UTexture2D
{
public:

}


//Class Engine.TextureLightProfile
//0x0008 (0x0118 - 0x0110)
class UTextureLightProfile : public UTexture2D
{
public:
	float                                              Brightness;                                               // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TextureMultiplier;                                        // 0x0114(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)

}


//Class Engine.Texture2DDynamic
//0x0018 (0x00E8 - 0x00D0)
class UTexture2DDynamic : public UTexture
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00D0(0x0008) MISSED OFFSET
	TEnumAsByte<EPixelFormat>                          Format;                                                   // 0x00D8(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x00D9(0x000F) MISSED OFFSET

}


//Class Engine.CanvasRenderTarget2D
//0x0020 (0x0120 - 0x0100)
class UCanvasRenderTarget2D : public UTextureRenderTarget2D
{
public:
	struct FScriptMulticastDelegate                    OnCanvasRenderTargetUpdate;                               // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TWeakObjectPtr<class UWorld>                       World;                                                    // 0x0110(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      bShouldClearRenderTargetOnReceiveUpdate : 1;              // 0x0118(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0119(0x0007) MISSED OFFSET

	// Function Engine.CanvasRenderTarget2D.UpdateResource
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_UpdateResource();// sub_44A300()

	// Function Engine.CanvasRenderTarget2D.ReceiveUpdate
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_ReceiveUpdate(class UCanvas* Canvas, int Width, int Height);// sub_5C67A0()

	// Function Engine.CanvasRenderTarget2D.GetSize
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static void STATIC_GetSize(int* Width, int* Height);// sub_418610()

	// Function Engine.CanvasRenderTarget2D.CreateCanvasRenderTarget2D
	// (BlueprintCosmetic, Net, NetRequest, Exec, Static, MulticastDelegate, Private, Protected, Delegate, HasOutParms, NetClient, DLLImport, BlueprintCallable)
	static class UCanvasRenderTarget2D* STATIC_CreateCanvasRenderTarget2D(class UObject* WorldContextObject, class UCanvasRenderTarget2D* CanvasRenderTarget2DClass, int Width, int Height);// sub_4496E30()


}


//Class Engine.TextureRenderTargetCube
//0x0020 (0x00F8 - 0x00D8)
class UTextureRenderTargetCube : public UTextureRenderTarget
{
public:
	int                                                SizeX;                                                    // 0x00D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ClearColor;                                               // 0x00DC(0x0010) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EPixelFormat>                          OverrideFormat;                                           // 0x00EC(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00ED(0x0003) MISSED OFFSET
	unsigned char                                      bHDR : 1;                                                 // 0x00F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bForceLinearGamma : 1;                                    // 0x00F0(0x0001)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00F1(0x0007) MISSED OFFSET

}


//Class Engine.TextureLODSettings
//0x0010 (0x0050 - 0x0040)
class UTextureLODSettings : public UObject
{
public:
	TArray<struct FTextureLODGroup>                    TextureLODGroups;                                         // 0x0040(0x0010) (Edit, ZeroConstructor, Config)

}


//Class Engine.DeviceProfile
//0x0090 (0x00E0 - 0x0050)
class UDeviceProfile : public UTextureLODSettings
{
public:
	struct FString                                     DeviceType;                                               // 0x0050(0x0010) (Edit, ZeroConstructor, Config, EditConst)
	struct FString                                     BaseProfileName;                                          // 0x0060(0x0010) (Edit, ZeroConstructor, Config)
	class UObject*                                     Parent;                                                   // 0x0070(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0078(0x0018) MISSED OFFSET
	TArray<struct FString>                             CVars;                                                    // 0x0090(0x0010) (Edit, ZeroConstructor, Config)
	unsigned char                                      UnknownData01[0x40];                                      // 0x00A0(0x0040) MISSED OFFSET

}


//Class Engine.ThumbnailInfo
//0x0000 (0x0040 - 0x0040)
class UThumbnailInfo : public UObject
{
public:

}


//Class Engine.UserDefinedStruct
//0x0010 (0x0138 - 0x0128)
class UUserDefinedStruct : public UScriptStruct
{
public:
	struct FGuid                                       Guid;                                                     // 0x0128(0x0010) (ZeroConstructor, IsPlainOldData)

}


//Class Engine.TimelineTemplate
//0x0070 (0x00B0 - 0x0040)
class UTimelineTemplate : public UObject
{
public:
	float                                              TimelineLength;                                           // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ETimelineLengthMode>                   LengthMode;                                               // 0x0044(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	unsigned char                                      bAutoPlay : 1;                                            // 0x0048(0x0001) (Edit)
	unsigned char                                      bLoop : 1;                                                // 0x0048(0x0001) (Edit)
	unsigned char                                      bReplicated : 1;                                          // 0x0048(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bValidatedAsWired : 1;                                    // 0x0048(0x0001)
	unsigned char                                      bIgnoreTimeDilation : 1;                                  // 0x0048(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	TArray<struct FTTEventTrack>                       EventTracks;                                              // 0x0050(0x0010) (ZeroConstructor)
	TArray<struct FTTFloatTrack>                       FloatTracks;                                              // 0x0060(0x0010) (ZeroConstructor)
	TArray<struct FTTVectorTrack>                      VectorTracks;                                             // 0x0070(0x0010) (ZeroConstructor)
	TArray<struct FTTLinearColorTrack>                 LinearColorTracks;                                        // 0x0080(0x0010) (ZeroConstructor)
	TArray<struct FBPVariableMetaDataEntry>            MetaDataArray;                                            // 0x0090(0x0010) (Edit, ZeroConstructor)
	struct FGuid                                       TimelineGuid;                                             // 0x00A0(0x0010) (ZeroConstructor, DuplicateTransient, IsPlainOldData)

}


//Class Engine.TouchInterface
//0x0030 (0x0070 - 0x0040)
class UTouchInterface : public UObject
{
public:
	TArray<struct FTouchInputControl>                  Controls;                                                 // 0x0040(0x0010) (Edit, ZeroConstructor)
	float                                              ActiveOpacity;                                            // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InactiveOpacity;                                          // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TimeUntilDeactive;                                        // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TimeUntilReset;                                           // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ActivationDelay;                                          // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bPreventRecenter : 1;                                     // 0x0064(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
	float                                              StartupDelay;                                             // 0x0068(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x006C(0x0004) MISSED OFFSET

}


//Class Engine.UserDefinedEnum
//0x0050 (0x00D8 - 0x0088)
class UUserDefinedEnum : public UEnum
{
public:
	TMap<struct FName, struct FText>                   DisplayNameMap;                                           // 0x0088(0x0050) (ZeroConstructor)

}


//Class Engine.VectorField
//0x0020 (0x0060 - 0x0040)
class UVectorField : public UObject
{
public:
	struct FBox                                        Bounds;                                                   // 0x0040(0x001C) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Intensity;                                                // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.VectorFieldAnimated
//0x0040 (0x00A0 - 0x0060)
class UVectorFieldAnimated : public UVectorField
{
public:
	class UTexture2D*                                  Texture;                                                  // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EVectorFieldConstructionOp>            ConstructionOp;                                           // 0x0068(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	int                                                VolumeSizeX;                                              // 0x006C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                VolumeSizeY;                                              // 0x0070(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                VolumeSizeZ;                                              // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SubImagesX;                                               // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                SubImagesY;                                               // 0x007C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                FrameCount;                                               // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FramesPerSecond;                                          // 0x0084(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bLoop : 1;                                                // 0x0088(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0089(0x0007) MISSED OFFSET
	class UVectorFieldStatic*                          NoiseField;                                               // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NoiseScale;                                               // 0x0098(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NoiseMax;                                                 // 0x009C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

}


//Class Engine.VectorFieldStatic
//0x0090 (0x00F0 - 0x0060)
class UVectorFieldStatic : public UVectorField
{
public:
	int                                                SizeX;                                                    // 0x0060(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                SizeY;                                                    // 0x0064(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                SizeZ;                                                    // 0x0068(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x84];                                      // 0x006C(0x0084) MISSED OFFSET

}


//Class Engine.VisualLoggerAutomationTests
//0x0000 (0x0040 - 0x0040)
class UVisualLoggerAutomationTests : public UObject
{
public:

}


//Class Engine.VisualLoggerDebugSnapshotInterface
//0x0000 (0x0040 - 0x0040)
class UVisualLoggerDebugSnapshotInterface : public UInterface
{
public:

}


//Class Engine.WorldComposition
//0x0068 (0x00A8 - 0x0040)
class UWorldComposition : public UObject
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x0040(0x0038) MISSED OFFSET
	TArray<class ULevelStreaming*>                     TilesStreaming;                                           // 0x0078(0x0010) (ZeroConstructor, Transient)
	double                                             TilesStreamingTimeThreshold;                              // 0x0088(0x0008) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      bLoadAllTilesDuringCinematic : 1;                         // 0x0090(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01 : 8;                                        // 0x0091(0x0001)
	unsigned char                                      bRebaseOriginIn3DSpace : 1;                               // 0x0091(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0092(0x0002) MISSED OFFSET
	float                                              RebaseOriginDistance;                                     // 0x0094(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	TArray<struct FString>                             IgnoreStreamingPrefix;                                    // 0x0098(0x0010) (ZeroConstructor, Config)

}


